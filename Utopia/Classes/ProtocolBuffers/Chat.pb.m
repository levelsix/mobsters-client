// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Chat.pb.h"
// @@protoc_insertion_point(imports)

@implementation ChatRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ChatRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL GroupChatScopeIsValidValue(GroupChatScope value) {
  switch (value) {
    case GroupChatScopeClan:
    case GroupChatScopeGlobal:
      return YES;
    default:
      return NO;
  }
}
BOOL ChatTypeIsValidValue(ChatType value) {
  switch (value) {
    case ChatTypeGlobalChat:
    case ChatTypePrivateChat:
      return YES;
    default:
      return NO;
  }
}
BOOL TranslateLanguagesIsValidValue(TranslateLanguages value) {
  switch (value) {
    case TranslateLanguagesArabic:
    case TranslateLanguagesEnglish:
    case TranslateLanguagesFrench:
    case TranslateLanguagesGerman:
    case TranslateLanguagesSpanish:
    case TranslateLanguagesRussian:
    case TranslateLanguagesNoTranslation:
      return YES;
    default:
      return NO;
  }
}
@interface PrivateChatPostProto ()
@property (strong) NSString* privateChatPostUuid;
@property (strong) MinimumUserProtoWithLevel* poster;
@property (strong) MinimumUserProtoWithLevel* recipient;
@property int64_t timeOfPost;
@property (strong) NSString* content;
@property (strong) TranslatedTextProto* translatedContent;
@end

@implementation PrivateChatPostProto

- (BOOL) hasPrivateChatPostUuid {
  return !!hasPrivateChatPostUuid_;
}
- (void) setHasPrivateChatPostUuid:(BOOL) value_ {
  hasPrivateChatPostUuid_ = !!value_;
}
@synthesize privateChatPostUuid;
- (BOOL) hasPoster {
  return !!hasPoster_;
}
- (void) setHasPoster:(BOOL) value_ {
  hasPoster_ = !!value_;
}
@synthesize poster;
- (BOOL) hasRecipient {
  return !!hasRecipient_;
}
- (void) setHasRecipient:(BOOL) value_ {
  hasRecipient_ = !!value_;
}
@synthesize recipient;
- (BOOL) hasTimeOfPost {
  return !!hasTimeOfPost_;
}
- (void) setHasTimeOfPost:(BOOL) value_ {
  hasTimeOfPost_ = !!value_;
}
@synthesize timeOfPost;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
- (BOOL) hasTranslatedContent {
  return !!hasTranslatedContent_;
}
- (void) setHasTranslatedContent:(BOOL) value_ {
  hasTranslatedContent_ = !!value_;
}
@synthesize translatedContent;
- (id) init {
  if ((self = [super init])) {
    self.privateChatPostUuid = @"";
    self.poster = [MinimumUserProtoWithLevel defaultInstance];
    self.recipient = [MinimumUserProtoWithLevel defaultInstance];
    self.timeOfPost = 0L;
    self.content = @"";
    self.translatedContent = [TranslatedTextProto defaultInstance];
  }
  return self;
}
static PrivateChatPostProto* defaultPrivateChatPostProtoInstance = nil;
+ (void) initialize {
  if (self == [PrivateChatPostProto class]) {
    defaultPrivateChatPostProtoInstance = [[PrivateChatPostProto alloc] init];
  }
}
+ (PrivateChatPostProto*) defaultInstance {
  return defaultPrivateChatPostProtoInstance;
}
- (PrivateChatPostProto*) defaultInstance {
  return defaultPrivateChatPostProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPrivateChatPostUuid) {
    [output writeString:1 value:self.privateChatPostUuid];
  }
  if (self.hasPoster) {
    [output writeMessage:2 value:self.poster];
  }
  if (self.hasRecipient) {
    [output writeMessage:3 value:self.recipient];
  }
  if (self.hasTimeOfPost) {
    [output writeInt64:4 value:self.timeOfPost];
  }
  if (self.hasContent) {
    [output writeString:5 value:self.content];
  }
  if (self.hasTranslatedContent) {
    [output writeMessage:6 value:self.translatedContent];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPrivateChatPostUuid) {
    size_ += computeStringSize(1, self.privateChatPostUuid);
  }
  if (self.hasPoster) {
    size_ += computeMessageSize(2, self.poster);
  }
  if (self.hasRecipient) {
    size_ += computeMessageSize(3, self.recipient);
  }
  if (self.hasTimeOfPost) {
    size_ += computeInt64Size(4, self.timeOfPost);
  }
  if (self.hasContent) {
    size_ += computeStringSize(5, self.content);
  }
  if (self.hasTranslatedContent) {
    size_ += computeMessageSize(6, self.translatedContent);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PrivateChatPostProto*) parseFromData:(NSData*) data {
  return (PrivateChatPostProto*)[[[PrivateChatPostProto builder] mergeFromData:data] build];
}
+ (PrivateChatPostProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrivateChatPostProto*)[[[PrivateChatPostProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PrivateChatPostProto*) parseFromInputStream:(NSInputStream*) input {
  return (PrivateChatPostProto*)[[[PrivateChatPostProto builder] mergeFromInputStream:input] build];
}
+ (PrivateChatPostProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrivateChatPostProto*)[[[PrivateChatPostProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PrivateChatPostProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PrivateChatPostProto*)[[[PrivateChatPostProto builder] mergeFromCodedInputStream:input] build];
}
+ (PrivateChatPostProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrivateChatPostProto*)[[[PrivateChatPostProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PrivateChatPostProto_Builder*) builder {
  return [[PrivateChatPostProto_Builder alloc] init];
}
+ (PrivateChatPostProto_Builder*) builderWithPrototype:(PrivateChatPostProto*) prototype {
  return [[PrivateChatPostProto builder] mergeFrom:prototype];
}
- (PrivateChatPostProto_Builder*) builder {
  return [PrivateChatPostProto builder];
}
- (PrivateChatPostProto_Builder*) toBuilder {
  return [PrivateChatPostProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPrivateChatPostUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"privateChatPostUuid", self.privateChatPostUuid];
  }
  if (self.hasPoster) {
    [output appendFormat:@"%@%@ {\n", indent, @"poster"];
    [self.poster writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasRecipient) {
    [output appendFormat:@"%@%@ {\n", indent, @"recipient"];
    [self.recipient writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTimeOfPost) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timeOfPost", [NSNumber numberWithLongLong:self.timeOfPost]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasTranslatedContent) {
    [output appendFormat:@"%@%@ {\n", indent, @"translatedContent"];
    [self.translatedContent writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PrivateChatPostProto class]]) {
    return NO;
  }
  PrivateChatPostProto *otherMessage = other;
  return
      self.hasPrivateChatPostUuid == otherMessage.hasPrivateChatPostUuid &&
      (!self.hasPrivateChatPostUuid || [self.privateChatPostUuid isEqual:otherMessage.privateChatPostUuid]) &&
      self.hasPoster == otherMessage.hasPoster &&
      (!self.hasPoster || [self.poster isEqual:otherMessage.poster]) &&
      self.hasRecipient == otherMessage.hasRecipient &&
      (!self.hasRecipient || [self.recipient isEqual:otherMessage.recipient]) &&
      self.hasTimeOfPost == otherMessage.hasTimeOfPost &&
      (!self.hasTimeOfPost || self.timeOfPost == otherMessage.timeOfPost) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasTranslatedContent == otherMessage.hasTranslatedContent &&
      (!self.hasTranslatedContent || [self.translatedContent isEqual:otherMessage.translatedContent]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPrivateChatPostUuid) {
    hashCode = hashCode * 31 + [self.privateChatPostUuid hash];
  }
  if (self.hasPoster) {
    hashCode = hashCode * 31 + [self.poster hash];
  }
  if (self.hasRecipient) {
    hashCode = hashCode * 31 + [self.recipient hash];
  }
  if (self.hasTimeOfPost) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.timeOfPost] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasTranslatedContent) {
    hashCode = hashCode * 31 + [self.translatedContent hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PrivateChatPostProto_Builder()
@property (strong) PrivateChatPostProto* result;
@end

@implementation PrivateChatPostProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PrivateChatPostProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PrivateChatPostProto_Builder*) clear {
  self.result = [[PrivateChatPostProto alloc] init];
  return self;
}
- (PrivateChatPostProto_Builder*) clone {
  return [PrivateChatPostProto builderWithPrototype:result];
}
- (PrivateChatPostProto*) defaultInstance {
  return [PrivateChatPostProto defaultInstance];
}
- (PrivateChatPostProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PrivateChatPostProto*) buildPartial {
  PrivateChatPostProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PrivateChatPostProto_Builder*) mergeFrom:(PrivateChatPostProto*) other {
  if (other == [PrivateChatPostProto defaultInstance]) {
    return self;
  }
  if (other.hasPrivateChatPostUuid) {
    [self setPrivateChatPostUuid:other.privateChatPostUuid];
  }
  if (other.hasPoster) {
    [self mergePoster:other.poster];
  }
  if (other.hasRecipient) {
    [self mergeRecipient:other.recipient];
  }
  if (other.hasTimeOfPost) {
    [self setTimeOfPost:other.timeOfPost];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasTranslatedContent) {
    [self mergeTranslatedContent:other.translatedContent];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PrivateChatPostProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PrivateChatPostProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPrivateChatPostUuid:[input readString]];
        break;
      }
      case 18: {
        MinimumUserProtoWithLevel_Builder* subBuilder = [MinimumUserProtoWithLevel builder];
        if (self.hasPoster) {
          [subBuilder mergeFrom:self.poster];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPoster:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        MinimumUserProtoWithLevel_Builder* subBuilder = [MinimumUserProtoWithLevel builder];
        if (self.hasRecipient) {
          [subBuilder mergeFrom:self.recipient];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRecipient:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setTimeOfPost:[input readInt64]];
        break;
      }
      case 42: {
        [self setContent:[input readString]];
        break;
      }
      case 50: {
        TranslatedTextProto_Builder* subBuilder = [TranslatedTextProto builder];
        if (self.hasTranslatedContent) {
          [subBuilder mergeFrom:self.translatedContent];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTranslatedContent:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPrivateChatPostUuid {
  return result.hasPrivateChatPostUuid;
}
- (NSString*) privateChatPostUuid {
  return result.privateChatPostUuid;
}
- (PrivateChatPostProto_Builder*) setPrivateChatPostUuid:(NSString*) value {
  result.hasPrivateChatPostUuid = YES;
  result.privateChatPostUuid = value;
  return self;
}
- (PrivateChatPostProto_Builder*) clearPrivateChatPostUuid {
  result.hasPrivateChatPostUuid = NO;
  result.privateChatPostUuid = @"";
  return self;
}
- (BOOL) hasPoster {
  return result.hasPoster;
}
- (MinimumUserProtoWithLevel*) poster {
  return result.poster;
}
- (PrivateChatPostProto_Builder*) setPoster:(MinimumUserProtoWithLevel*) value {
  result.hasPoster = YES;
  result.poster = value;
  return self;
}
- (PrivateChatPostProto_Builder*) setPoster_Builder:(MinimumUserProtoWithLevel_Builder*) builderForValue {
  return [self setPoster:[builderForValue build]];
}
- (PrivateChatPostProto_Builder*) mergePoster:(MinimumUserProtoWithLevel*) value {
  if (result.hasPoster &&
      result.poster != [MinimumUserProtoWithLevel defaultInstance]) {
    result.poster =
      [[[MinimumUserProtoWithLevel builderWithPrototype:result.poster] mergeFrom:value] buildPartial];
  } else {
    result.poster = value;
  }
  result.hasPoster = YES;
  return self;
}
- (PrivateChatPostProto_Builder*) clearPoster {
  result.hasPoster = NO;
  result.poster = [MinimumUserProtoWithLevel defaultInstance];
  return self;
}
- (BOOL) hasRecipient {
  return result.hasRecipient;
}
- (MinimumUserProtoWithLevel*) recipient {
  return result.recipient;
}
- (PrivateChatPostProto_Builder*) setRecipient:(MinimumUserProtoWithLevel*) value {
  result.hasRecipient = YES;
  result.recipient = value;
  return self;
}
- (PrivateChatPostProto_Builder*) setRecipient_Builder:(MinimumUserProtoWithLevel_Builder*) builderForValue {
  return [self setRecipient:[builderForValue build]];
}
- (PrivateChatPostProto_Builder*) mergeRecipient:(MinimumUserProtoWithLevel*) value {
  if (result.hasRecipient &&
      result.recipient != [MinimumUserProtoWithLevel defaultInstance]) {
    result.recipient =
      [[[MinimumUserProtoWithLevel builderWithPrototype:result.recipient] mergeFrom:value] buildPartial];
  } else {
    result.recipient = value;
  }
  result.hasRecipient = YES;
  return self;
}
- (PrivateChatPostProto_Builder*) clearRecipient {
  result.hasRecipient = NO;
  result.recipient = [MinimumUserProtoWithLevel defaultInstance];
  return self;
}
- (BOOL) hasTimeOfPost {
  return result.hasTimeOfPost;
}
- (int64_t) timeOfPost {
  return result.timeOfPost;
}
- (PrivateChatPostProto_Builder*) setTimeOfPost:(int64_t) value {
  result.hasTimeOfPost = YES;
  result.timeOfPost = value;
  return self;
}
- (PrivateChatPostProto_Builder*) clearTimeOfPost {
  result.hasTimeOfPost = NO;
  result.timeOfPost = 0L;
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (PrivateChatPostProto_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (PrivateChatPostProto_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasTranslatedContent {
  return result.hasTranslatedContent;
}
- (TranslatedTextProto*) translatedContent {
  return result.translatedContent;
}
- (PrivateChatPostProto_Builder*) setTranslatedContent:(TranslatedTextProto*) value {
  result.hasTranslatedContent = YES;
  result.translatedContent = value;
  return self;
}
- (PrivateChatPostProto_Builder*) setTranslatedContent_Builder:(TranslatedTextProto_Builder*) builderForValue {
  return [self setTranslatedContent:[builderForValue build]];
}
- (PrivateChatPostProto_Builder*) mergeTranslatedContent:(TranslatedTextProto*) value {
  if (result.hasTranslatedContent &&
      result.translatedContent != [TranslatedTextProto defaultInstance]) {
    result.translatedContent =
      [[[TranslatedTextProto builderWithPrototype:result.translatedContent] mergeFrom:value] buildPartial];
  } else {
    result.translatedContent = value;
  }
  result.hasTranslatedContent = YES;
  return self;
}
- (PrivateChatPostProto_Builder*) clearTranslatedContent {
  result.hasTranslatedContent = NO;
  result.translatedContent = [TranslatedTextProto defaultInstance];
  return self;
}
@end

@interface ColorProto ()
@property int32_t red;
@property int32_t green;
@property int32_t blue;
@end

@implementation ColorProto

- (BOOL) hasRed {
  return !!hasRed_;
}
- (void) setHasRed:(BOOL) value_ {
  hasRed_ = !!value_;
}
@synthesize red;
- (BOOL) hasGreen {
  return !!hasGreen_;
}
- (void) setHasGreen:(BOOL) value_ {
  hasGreen_ = !!value_;
}
@synthesize green;
- (BOOL) hasBlue {
  return !!hasBlue_;
}
- (void) setHasBlue:(BOOL) value_ {
  hasBlue_ = !!value_;
}
@synthesize blue;
- (id) init {
  if ((self = [super init])) {
    self.red = 0;
    self.green = 0;
    self.blue = 0;
  }
  return self;
}
static ColorProto* defaultColorProtoInstance = nil;
+ (void) initialize {
  if (self == [ColorProto class]) {
    defaultColorProtoInstance = [[ColorProto alloc] init];
  }
}
+ (ColorProto*) defaultInstance {
  return defaultColorProtoInstance;
}
- (ColorProto*) defaultInstance {
  return defaultColorProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRed) {
    [output writeInt32:1 value:self.red];
  }
  if (self.hasGreen) {
    [output writeInt32:2 value:self.green];
  }
  if (self.hasBlue) {
    [output writeInt32:3 value:self.blue];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRed) {
    size_ += computeInt32Size(1, self.red);
  }
  if (self.hasGreen) {
    size_ += computeInt32Size(2, self.green);
  }
  if (self.hasBlue) {
    size_ += computeInt32Size(3, self.blue);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ColorProto*) parseFromData:(NSData*) data {
  return (ColorProto*)[[[ColorProto builder] mergeFromData:data] build];
}
+ (ColorProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ColorProto*)[[[ColorProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ColorProto*) parseFromInputStream:(NSInputStream*) input {
  return (ColorProto*)[[[ColorProto builder] mergeFromInputStream:input] build];
}
+ (ColorProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ColorProto*)[[[ColorProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ColorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ColorProto*)[[[ColorProto builder] mergeFromCodedInputStream:input] build];
}
+ (ColorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ColorProto*)[[[ColorProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ColorProto_Builder*) builder {
  return [[ColorProto_Builder alloc] init];
}
+ (ColorProto_Builder*) builderWithPrototype:(ColorProto*) prototype {
  return [[ColorProto builder] mergeFrom:prototype];
}
- (ColorProto_Builder*) builder {
  return [ColorProto builder];
}
- (ColorProto_Builder*) toBuilder {
  return [ColorProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRed) {
    [output appendFormat:@"%@%@: %@\n", indent, @"red", [NSNumber numberWithInteger:self.red]];
  }
  if (self.hasGreen) {
    [output appendFormat:@"%@%@: %@\n", indent, @"green", [NSNumber numberWithInteger:self.green]];
  }
  if (self.hasBlue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"blue", [NSNumber numberWithInteger:self.blue]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ColorProto class]]) {
    return NO;
  }
  ColorProto *otherMessage = other;
  return
      self.hasRed == otherMessage.hasRed &&
      (!self.hasRed || self.red == otherMessage.red) &&
      self.hasGreen == otherMessage.hasGreen &&
      (!self.hasGreen || self.green == otherMessage.green) &&
      self.hasBlue == otherMessage.hasBlue &&
      (!self.hasBlue || self.blue == otherMessage.blue) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasRed) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.red] hash];
  }
  if (self.hasGreen) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.green] hash];
  }
  if (self.hasBlue) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.blue] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ColorProto_Builder()
@property (strong) ColorProto* result;
@end

@implementation ColorProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ColorProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ColorProto_Builder*) clear {
  self.result = [[ColorProto alloc] init];
  return self;
}
- (ColorProto_Builder*) clone {
  return [ColorProto builderWithPrototype:result];
}
- (ColorProto*) defaultInstance {
  return [ColorProto defaultInstance];
}
- (ColorProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ColorProto*) buildPartial {
  ColorProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ColorProto_Builder*) mergeFrom:(ColorProto*) other {
  if (other == [ColorProto defaultInstance]) {
    return self;
  }
  if (other.hasRed) {
    [self setRed:other.red];
  }
  if (other.hasGreen) {
    [self setGreen:other.green];
  }
  if (other.hasBlue) {
    [self setBlue:other.blue];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ColorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ColorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRed:[input readInt32]];
        break;
      }
      case 16: {
        [self setGreen:[input readInt32]];
        break;
      }
      case 24: {
        [self setBlue:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasRed {
  return result.hasRed;
}
- (int32_t) red {
  return result.red;
}
- (ColorProto_Builder*) setRed:(int32_t) value {
  result.hasRed = YES;
  result.red = value;
  return self;
}
- (ColorProto_Builder*) clearRed {
  result.hasRed = NO;
  result.red = 0;
  return self;
}
- (BOOL) hasGreen {
  return result.hasGreen;
}
- (int32_t) green {
  return result.green;
}
- (ColorProto_Builder*) setGreen:(int32_t) value {
  result.hasGreen = YES;
  result.green = value;
  return self;
}
- (ColorProto_Builder*) clearGreen {
  result.hasGreen = NO;
  result.green = 0;
  return self;
}
- (BOOL) hasBlue {
  return result.hasBlue;
}
- (int32_t) blue {
  return result.blue;
}
- (ColorProto_Builder*) setBlue:(int32_t) value {
  result.hasBlue = YES;
  result.blue = value;
  return self;
}
- (ColorProto_Builder*) clearBlue {
  result.hasBlue = NO;
  result.blue = 0;
  return self;
}
@end

@interface GroupChatMessageProto ()
@property (strong) MinimumUserProtoWithLevel* sender;
@property int64_t timeOfChat;
@property TranslateLanguages contentLanguage;
@property (strong) NSString* content;
@property (strong) NSMutableArray * mutableTranslatedContentList;
@property BOOL isAdmin;
@property (strong) NSString* chatUuid;
@end

@implementation GroupChatMessageProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasTimeOfChat {
  return !!hasTimeOfChat_;
}
- (void) setHasTimeOfChat:(BOOL) value_ {
  hasTimeOfChat_ = !!value_;
}
@synthesize timeOfChat;
- (BOOL) hasContentLanguage {
  return !!hasContentLanguage_;
}
- (void) setHasContentLanguage:(BOOL) value_ {
  hasContentLanguage_ = !!value_;
}
@synthesize contentLanguage;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
@synthesize mutableTranslatedContentList;
@dynamic translatedContentList;
- (BOOL) hasIsAdmin {
  return !!hasIsAdmin_;
}
- (void) setHasIsAdmin:(BOOL) value_ {
  hasIsAdmin_ = !!value_;
}
- (BOOL) isAdmin {
  return !!isAdmin_;
}
- (void) setIsAdmin:(BOOL) value_ {
  isAdmin_ = !!value_;
}
- (BOOL) hasChatUuid {
  return !!hasChatUuid_;
}
- (void) setHasChatUuid:(BOOL) value_ {
  hasChatUuid_ = !!value_;
}
@synthesize chatUuid;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithLevel defaultInstance];
    self.timeOfChat = 0L;
    self.contentLanguage = TranslateLanguagesArabic;
    self.content = @"";
    self.isAdmin = NO;
    self.chatUuid = @"";
  }
  return self;
}
static GroupChatMessageProto* defaultGroupChatMessageProtoInstance = nil;
+ (void) initialize {
  if (self == [GroupChatMessageProto class]) {
    defaultGroupChatMessageProtoInstance = [[GroupChatMessageProto alloc] init];
  }
}
+ (GroupChatMessageProto*) defaultInstance {
  return defaultGroupChatMessageProtoInstance;
}
- (GroupChatMessageProto*) defaultInstance {
  return defaultGroupChatMessageProtoInstance;
}
- (NSArray *)translatedContentList {
  return mutableTranslatedContentList;
}
- (TranslatedTextProto*)translatedContentAtIndex:(NSUInteger)index {
  return [mutableTranslatedContentList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasTimeOfChat) {
    [output writeInt64:2 value:self.timeOfChat];
  }
  if (self.hasContent) {
    [output writeString:3 value:self.content];
  }
  [self.translatedContentList enumerateObjectsUsingBlock:^(TranslatedTextProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  if (self.hasIsAdmin) {
    [output writeBool:5 value:self.isAdmin];
  }
  if (self.hasChatUuid) {
    [output writeString:6 value:self.chatUuid];
  }
  if (self.hasContentLanguage) {
    [output writeEnum:7 value:self.contentLanguage];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasTimeOfChat) {
    size_ += computeInt64Size(2, self.timeOfChat);
  }
  if (self.hasContent) {
    size_ += computeStringSize(3, self.content);
  }
  [self.translatedContentList enumerateObjectsUsingBlock:^(TranslatedTextProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  if (self.hasIsAdmin) {
    size_ += computeBoolSize(5, self.isAdmin);
  }
  if (self.hasChatUuid) {
    size_ += computeStringSize(6, self.chatUuid);
  }
  if (self.hasContentLanguage) {
    size_ += computeEnumSize(7, self.contentLanguage);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GroupChatMessageProto*) parseFromData:(NSData*) data {
  return (GroupChatMessageProto*)[[[GroupChatMessageProto builder] mergeFromData:data] build];
}
+ (GroupChatMessageProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GroupChatMessageProto*)[[[GroupChatMessageProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GroupChatMessageProto*) parseFromInputStream:(NSInputStream*) input {
  return (GroupChatMessageProto*)[[[GroupChatMessageProto builder] mergeFromInputStream:input] build];
}
+ (GroupChatMessageProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GroupChatMessageProto*)[[[GroupChatMessageProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GroupChatMessageProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GroupChatMessageProto*)[[[GroupChatMessageProto builder] mergeFromCodedInputStream:input] build];
}
+ (GroupChatMessageProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GroupChatMessageProto*)[[[GroupChatMessageProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GroupChatMessageProto_Builder*) builder {
  return [[GroupChatMessageProto_Builder alloc] init];
}
+ (GroupChatMessageProto_Builder*) builderWithPrototype:(GroupChatMessageProto*) prototype {
  return [[GroupChatMessageProto builder] mergeFrom:prototype];
}
- (GroupChatMessageProto_Builder*) builder {
  return [GroupChatMessageProto builder];
}
- (GroupChatMessageProto_Builder*) toBuilder {
  return [GroupChatMessageProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTimeOfChat) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timeOfChat", [NSNumber numberWithLongLong:self.timeOfChat]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  [self.translatedContentList enumerateObjectsUsingBlock:^(TranslatedTextProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"translatedContent"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasIsAdmin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isAdmin", [NSNumber numberWithBool:self.isAdmin]];
  }
  if (self.hasChatUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"chatUuid", self.chatUuid];
  }
  if (self.hasContentLanguage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"contentLanguage", [NSNumber numberWithInteger:self.contentLanguage]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GroupChatMessageProto class]]) {
    return NO;
  }
  GroupChatMessageProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasTimeOfChat == otherMessage.hasTimeOfChat &&
      (!self.hasTimeOfChat || self.timeOfChat == otherMessage.timeOfChat) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      [self.translatedContentList isEqualToArray:otherMessage.translatedContentList] &&
      self.hasIsAdmin == otherMessage.hasIsAdmin &&
      (!self.hasIsAdmin || self.isAdmin == otherMessage.isAdmin) &&
      self.hasChatUuid == otherMessage.hasChatUuid &&
      (!self.hasChatUuid || [self.chatUuid isEqual:otherMessage.chatUuid]) &&
      self.hasContentLanguage == otherMessage.hasContentLanguage &&
      (!self.hasContentLanguage || self.contentLanguage == otherMessage.contentLanguage) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasTimeOfChat) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.timeOfChat] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  [self.translatedContentList enumerateObjectsUsingBlock:^(TranslatedTextProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasIsAdmin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isAdmin] hash];
  }
  if (self.hasChatUuid) {
    hashCode = hashCode * 31 + [self.chatUuid hash];
  }
  if (self.hasContentLanguage) {
    hashCode = hashCode * 31 + self.contentLanguage;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GroupChatMessageProto_Builder()
@property (strong) GroupChatMessageProto* result;
@end

@implementation GroupChatMessageProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[GroupChatMessageProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GroupChatMessageProto_Builder*) clear {
  self.result = [[GroupChatMessageProto alloc] init];
  return self;
}
- (GroupChatMessageProto_Builder*) clone {
  return [GroupChatMessageProto builderWithPrototype:result];
}
- (GroupChatMessageProto*) defaultInstance {
  return [GroupChatMessageProto defaultInstance];
}
- (GroupChatMessageProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GroupChatMessageProto*) buildPartial {
  GroupChatMessageProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (GroupChatMessageProto_Builder*) mergeFrom:(GroupChatMessageProto*) other {
  if (other == [GroupChatMessageProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasTimeOfChat) {
    [self setTimeOfChat:other.timeOfChat];
  }
  if (other.hasContentLanguage) {
    [self setContentLanguage:other.contentLanguage];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.mutableTranslatedContentList.count > 0) {
    if (result.mutableTranslatedContentList == nil) {
      result.mutableTranslatedContentList = [[NSMutableArray alloc] initWithArray:other.mutableTranslatedContentList];
    } else {
      [result.mutableTranslatedContentList addObjectsFromArray:other.mutableTranslatedContentList];
    }
  }
  if (other.hasIsAdmin) {
    [self setIsAdmin:other.isAdmin];
  }
  if (other.hasChatUuid) {
    [self setChatUuid:other.chatUuid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GroupChatMessageProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GroupChatMessageProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithLevel_Builder* subBuilder = [MinimumUserProtoWithLevel builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setTimeOfChat:[input readInt64]];
        break;
      }
      case 26: {
        [self setContent:[input readString]];
        break;
      }
      case 34: {
        TranslatedTextProto_Builder* subBuilder = [TranslatedTextProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTranslatedContent:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setIsAdmin:[input readBool]];
        break;
      }
      case 50: {
        [self setChatUuid:[input readString]];
        break;
      }
      case 56: {
        TranslateLanguages value = (TranslateLanguages)[input readEnum];
        if (TranslateLanguagesIsValidValue(value)) {
          [self setContentLanguage:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithLevel*) sender {
  return result.sender;
}
- (GroupChatMessageProto_Builder*) setSender:(MinimumUserProtoWithLevel*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (GroupChatMessageProto_Builder*) setSender_Builder:(MinimumUserProtoWithLevel_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (GroupChatMessageProto_Builder*) mergeSender:(MinimumUserProtoWithLevel*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithLevel defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithLevel builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (GroupChatMessageProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithLevel defaultInstance];
  return self;
}
- (BOOL) hasTimeOfChat {
  return result.hasTimeOfChat;
}
- (int64_t) timeOfChat {
  return result.timeOfChat;
}
- (GroupChatMessageProto_Builder*) setTimeOfChat:(int64_t) value {
  result.hasTimeOfChat = YES;
  result.timeOfChat = value;
  return self;
}
- (GroupChatMessageProto_Builder*) clearTimeOfChat {
  result.hasTimeOfChat = NO;
  result.timeOfChat = 0L;
  return self;
}
- (BOOL) hasContentLanguage {
  return result.hasContentLanguage;
}
- (TranslateLanguages) contentLanguage {
  return result.contentLanguage;
}
- (GroupChatMessageProto_Builder*) setContentLanguage:(TranslateLanguages) value {
  result.hasContentLanguage = YES;
  result.contentLanguage = value;
  return self;
}
- (GroupChatMessageProto_Builder*) clearContentLanguageList {
  result.hasContentLanguage = NO;
  result.contentLanguage = TranslateLanguagesArabic;
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (GroupChatMessageProto_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (GroupChatMessageProto_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (NSMutableArray *)translatedContentList {
  return result.mutableTranslatedContentList;
}
- (TranslatedTextProto*)translatedContentAtIndex:(NSUInteger)index {
  return [result translatedContentAtIndex:index];
}
- (GroupChatMessageProto_Builder *)addTranslatedContent:(TranslatedTextProto*)value {
  if (result.mutableTranslatedContentList == nil) {
    result.mutableTranslatedContentList = [[NSMutableArray alloc]init];
  }
  [result.mutableTranslatedContentList addObject:value];
  return self;
}
- (GroupChatMessageProto_Builder *)addAllTranslatedContent:(NSArray *)array {
  if (result.mutableTranslatedContentList == nil) {
    result.mutableTranslatedContentList = [NSMutableArray array];
  }
  [result.mutableTranslatedContentList addObjectsFromArray:array];
  return self;
}
- (GroupChatMessageProto_Builder *)clearTranslatedContent {
  result.mutableTranslatedContentList = nil;
  return self;
}
- (BOOL) hasIsAdmin {
  return result.hasIsAdmin;
}
- (BOOL) isAdmin {
  return result.isAdmin;
}
- (GroupChatMessageProto_Builder*) setIsAdmin:(BOOL) value {
  result.hasIsAdmin = YES;
  result.isAdmin = value;
  return self;
}
- (GroupChatMessageProto_Builder*) clearIsAdmin {
  result.hasIsAdmin = NO;
  result.isAdmin = NO;
  return self;
}
- (BOOL) hasChatUuid {
  return result.hasChatUuid;
}
- (NSString*) chatUuid {
  return result.chatUuid;
}
- (GroupChatMessageProto_Builder*) setChatUuid:(NSString*) value {
  result.hasChatUuid = YES;
  result.chatUuid = value;
  return self;
}
- (GroupChatMessageProto_Builder*) clearChatUuid {
  result.hasChatUuid = NO;
  result.chatUuid = @"";
  return self;
}
@end

@interface TranslatedTextProto ()
@property TranslateLanguages language;
@property (strong) NSString* text;
@end

@implementation TranslatedTextProto

- (BOOL) hasLanguage {
  return !!hasLanguage_;
}
- (void) setHasLanguage:(BOOL) value_ {
  hasLanguage_ = !!value_;
}
@synthesize language;
- (BOOL) hasText {
  return !!hasText_;
}
- (void) setHasText:(BOOL) value_ {
  hasText_ = !!value_;
}
@synthesize text;
- (id) init {
  if ((self = [super init])) {
    self.language = TranslateLanguagesArabic;
    self.text = @"";
  }
  return self;
}
static TranslatedTextProto* defaultTranslatedTextProtoInstance = nil;
+ (void) initialize {
  if (self == [TranslatedTextProto class]) {
    defaultTranslatedTextProtoInstance = [[TranslatedTextProto alloc] init];
  }
}
+ (TranslatedTextProto*) defaultInstance {
  return defaultTranslatedTextProtoInstance;
}
- (TranslatedTextProto*) defaultInstance {
  return defaultTranslatedTextProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLanguage) {
    [output writeEnum:1 value:self.language];
  }
  if (self.hasText) {
    [output writeString:2 value:self.text];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLanguage) {
    size_ += computeEnumSize(1, self.language);
  }
  if (self.hasText) {
    size_ += computeStringSize(2, self.text);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TranslatedTextProto*) parseFromData:(NSData*) data {
  return (TranslatedTextProto*)[[[TranslatedTextProto builder] mergeFromData:data] build];
}
+ (TranslatedTextProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TranslatedTextProto*)[[[TranslatedTextProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TranslatedTextProto*) parseFromInputStream:(NSInputStream*) input {
  return (TranslatedTextProto*)[[[TranslatedTextProto builder] mergeFromInputStream:input] build];
}
+ (TranslatedTextProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TranslatedTextProto*)[[[TranslatedTextProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TranslatedTextProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TranslatedTextProto*)[[[TranslatedTextProto builder] mergeFromCodedInputStream:input] build];
}
+ (TranslatedTextProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TranslatedTextProto*)[[[TranslatedTextProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TranslatedTextProto_Builder*) builder {
  return [[TranslatedTextProto_Builder alloc] init];
}
+ (TranslatedTextProto_Builder*) builderWithPrototype:(TranslatedTextProto*) prototype {
  return [[TranslatedTextProto builder] mergeFrom:prototype];
}
- (TranslatedTextProto_Builder*) builder {
  return [TranslatedTextProto builder];
}
- (TranslatedTextProto_Builder*) toBuilder {
  return [TranslatedTextProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLanguage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"language", [NSNumber numberWithInteger:self.language]];
  }
  if (self.hasText) {
    [output appendFormat:@"%@%@: %@\n", indent, @"text", self.text];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TranslatedTextProto class]]) {
    return NO;
  }
  TranslatedTextProto *otherMessage = other;
  return
      self.hasLanguage == otherMessage.hasLanguage &&
      (!self.hasLanguage || self.language == otherMessage.language) &&
      self.hasText == otherMessage.hasText &&
      (!self.hasText || [self.text isEqual:otherMessage.text]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasLanguage) {
    hashCode = hashCode * 31 + self.language;
  }
  if (self.hasText) {
    hashCode = hashCode * 31 + [self.text hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TranslatedTextProto_Builder()
@property (strong) TranslatedTextProto* result;
@end

@implementation TranslatedTextProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[TranslatedTextProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (TranslatedTextProto_Builder*) clear {
  self.result = [[TranslatedTextProto alloc] init];
  return self;
}
- (TranslatedTextProto_Builder*) clone {
  return [TranslatedTextProto builderWithPrototype:result];
}
- (TranslatedTextProto*) defaultInstance {
  return [TranslatedTextProto defaultInstance];
}
- (TranslatedTextProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TranslatedTextProto*) buildPartial {
  TranslatedTextProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (TranslatedTextProto_Builder*) mergeFrom:(TranslatedTextProto*) other {
  if (other == [TranslatedTextProto defaultInstance]) {
    return self;
  }
  if (other.hasLanguage) {
    [self setLanguage:other.language];
  }
  if (other.hasText) {
    [self setText:other.text];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TranslatedTextProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TranslatedTextProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        TranslateLanguages value = (TranslateLanguages)[input readEnum];
        if (TranslateLanguagesIsValidValue(value)) {
          [self setLanguage:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setText:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasLanguage {
  return result.hasLanguage;
}
- (TranslateLanguages) language {
  return result.language;
}
- (TranslatedTextProto_Builder*) setLanguage:(TranslateLanguages) value {
  result.hasLanguage = YES;
  result.language = value;
  return self;
}
- (TranslatedTextProto_Builder*) clearLanguageList {
  result.hasLanguage = NO;
  result.language = TranslateLanguagesArabic;
  return self;
}
- (BOOL) hasText {
  return result.hasText;
}
- (NSString*) text {
  return result.text;
}
- (TranslatedTextProto_Builder*) setText:(NSString*) value {
  result.hasText = YES;
  result.text = value;
  return self;
}
- (TranslatedTextProto_Builder*) clearText {
  result.hasText = NO;
  result.text = @"";
  return self;
}
@end

@interface DefaultLanguagesProto ()
@property TranslateLanguages globalDefaultLanguage;
@property (strong) NSMutableArray * mutablePrivateDefaultLanguageList;
@property BOOL globalTranslateOn;
@end

@implementation DefaultLanguagesProto

- (BOOL) hasGlobalDefaultLanguage {
  return !!hasGlobalDefaultLanguage_;
}
- (void) setHasGlobalDefaultLanguage:(BOOL) value_ {
  hasGlobalDefaultLanguage_ = !!value_;
}
@synthesize globalDefaultLanguage;
@synthesize mutablePrivateDefaultLanguageList;
@dynamic privateDefaultLanguageList;
- (BOOL) hasGlobalTranslateOn {
  return !!hasGlobalTranslateOn_;
}
- (void) setHasGlobalTranslateOn:(BOOL) value_ {
  hasGlobalTranslateOn_ = !!value_;
}
- (BOOL) globalTranslateOn {
  return !!globalTranslateOn_;
}
- (void) setGlobalTranslateOn:(BOOL) value_ {
  globalTranslateOn_ = !!value_;
}
- (id) init {
  if ((self = [super init])) {
    self.globalDefaultLanguage = TranslateLanguagesArabic;
    self.globalTranslateOn = NO;
  }
  return self;
}
static DefaultLanguagesProto* defaultDefaultLanguagesProtoInstance = nil;
+ (void) initialize {
  if (self == [DefaultLanguagesProto class]) {
    defaultDefaultLanguagesProtoInstance = [[DefaultLanguagesProto alloc] init];
  }
}
+ (DefaultLanguagesProto*) defaultInstance {
  return defaultDefaultLanguagesProtoInstance;
}
- (DefaultLanguagesProto*) defaultInstance {
  return defaultDefaultLanguagesProtoInstance;
}
- (NSArray *)privateDefaultLanguageList {
  return mutablePrivateDefaultLanguageList;
}
- (PrivateChatDefaultLanguageProto*)privateDefaultLanguageAtIndex:(NSUInteger)index {
  return [mutablePrivateDefaultLanguageList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGlobalDefaultLanguage) {
    [output writeEnum:1 value:self.globalDefaultLanguage];
  }
  [self.privateDefaultLanguageList enumerateObjectsUsingBlock:^(PrivateChatDefaultLanguageProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasGlobalTranslateOn) {
    [output writeBool:3 value:self.globalTranslateOn];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGlobalDefaultLanguage) {
    size_ += computeEnumSize(1, self.globalDefaultLanguage);
  }
  [self.privateDefaultLanguageList enumerateObjectsUsingBlock:^(PrivateChatDefaultLanguageProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasGlobalTranslateOn) {
    size_ += computeBoolSize(3, self.globalTranslateOn);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (DefaultLanguagesProto*) parseFromData:(NSData*) data {
  return (DefaultLanguagesProto*)[[[DefaultLanguagesProto builder] mergeFromData:data] build];
}
+ (DefaultLanguagesProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DefaultLanguagesProto*)[[[DefaultLanguagesProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DefaultLanguagesProto*) parseFromInputStream:(NSInputStream*) input {
  return (DefaultLanguagesProto*)[[[DefaultLanguagesProto builder] mergeFromInputStream:input] build];
}
+ (DefaultLanguagesProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DefaultLanguagesProto*)[[[DefaultLanguagesProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DefaultLanguagesProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DefaultLanguagesProto*)[[[DefaultLanguagesProto builder] mergeFromCodedInputStream:input] build];
}
+ (DefaultLanguagesProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DefaultLanguagesProto*)[[[DefaultLanguagesProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DefaultLanguagesProto_Builder*) builder {
  return [[DefaultLanguagesProto_Builder alloc] init];
}
+ (DefaultLanguagesProto_Builder*) builderWithPrototype:(DefaultLanguagesProto*) prototype {
  return [[DefaultLanguagesProto builder] mergeFrom:prototype];
}
- (DefaultLanguagesProto_Builder*) builder {
  return [DefaultLanguagesProto builder];
}
- (DefaultLanguagesProto_Builder*) toBuilder {
  return [DefaultLanguagesProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGlobalDefaultLanguage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"globalDefaultLanguage", [NSNumber numberWithInteger:self.globalDefaultLanguage]];
  }
  [self.privateDefaultLanguageList enumerateObjectsUsingBlock:^(PrivateChatDefaultLanguageProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"privateDefaultLanguage"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasGlobalTranslateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"globalTranslateOn", [NSNumber numberWithBool:self.globalTranslateOn]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[DefaultLanguagesProto class]]) {
    return NO;
  }
  DefaultLanguagesProto *otherMessage = other;
  return
      self.hasGlobalDefaultLanguage == otherMessage.hasGlobalDefaultLanguage &&
      (!self.hasGlobalDefaultLanguage || self.globalDefaultLanguage == otherMessage.globalDefaultLanguage) &&
      [self.privateDefaultLanguageList isEqualToArray:otherMessage.privateDefaultLanguageList] &&
      self.hasGlobalTranslateOn == otherMessage.hasGlobalTranslateOn &&
      (!self.hasGlobalTranslateOn || self.globalTranslateOn == otherMessage.globalTranslateOn) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGlobalDefaultLanguage) {
    hashCode = hashCode * 31 + self.globalDefaultLanguage;
  }
  [self.privateDefaultLanguageList enumerateObjectsUsingBlock:^(PrivateChatDefaultLanguageProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasGlobalTranslateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.globalTranslateOn] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface DefaultLanguagesProto_Builder()
@property (strong) DefaultLanguagesProto* result;
@end

@implementation DefaultLanguagesProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[DefaultLanguagesProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (DefaultLanguagesProto_Builder*) clear {
  self.result = [[DefaultLanguagesProto alloc] init];
  return self;
}
- (DefaultLanguagesProto_Builder*) clone {
  return [DefaultLanguagesProto builderWithPrototype:result];
}
- (DefaultLanguagesProto*) defaultInstance {
  return [DefaultLanguagesProto defaultInstance];
}
- (DefaultLanguagesProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DefaultLanguagesProto*) buildPartial {
  DefaultLanguagesProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (DefaultLanguagesProto_Builder*) mergeFrom:(DefaultLanguagesProto*) other {
  if (other == [DefaultLanguagesProto defaultInstance]) {
    return self;
  }
  if (other.hasGlobalDefaultLanguage) {
    [self setGlobalDefaultLanguage:other.globalDefaultLanguage];
  }
  if (other.mutablePrivateDefaultLanguageList.count > 0) {
    if (result.mutablePrivateDefaultLanguageList == nil) {
      result.mutablePrivateDefaultLanguageList = [[NSMutableArray alloc] initWithArray:other.mutablePrivateDefaultLanguageList];
    } else {
      [result.mutablePrivateDefaultLanguageList addObjectsFromArray:other.mutablePrivateDefaultLanguageList];
    }
  }
  if (other.hasGlobalTranslateOn) {
    [self setGlobalTranslateOn:other.globalTranslateOn];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DefaultLanguagesProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DefaultLanguagesProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        TranslateLanguages value = (TranslateLanguages)[input readEnum];
        if (TranslateLanguagesIsValidValue(value)) {
          [self setGlobalDefaultLanguage:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        PrivateChatDefaultLanguageProto_Builder* subBuilder = [PrivateChatDefaultLanguageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPrivateDefaultLanguage:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setGlobalTranslateOn:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasGlobalDefaultLanguage {
  return result.hasGlobalDefaultLanguage;
}
- (TranslateLanguages) globalDefaultLanguage {
  return result.globalDefaultLanguage;
}
- (DefaultLanguagesProto_Builder*) setGlobalDefaultLanguage:(TranslateLanguages) value {
  result.hasGlobalDefaultLanguage = YES;
  result.globalDefaultLanguage = value;
  return self;
}
- (DefaultLanguagesProto_Builder*) clearGlobalDefaultLanguageList {
  result.hasGlobalDefaultLanguage = NO;
  result.globalDefaultLanguage = TranslateLanguagesArabic;
  return self;
}
- (NSMutableArray *)privateDefaultLanguageList {
  return result.mutablePrivateDefaultLanguageList;
}
- (PrivateChatDefaultLanguageProto*)privateDefaultLanguageAtIndex:(NSUInteger)index {
  return [result privateDefaultLanguageAtIndex:index];
}
- (DefaultLanguagesProto_Builder *)addPrivateDefaultLanguage:(PrivateChatDefaultLanguageProto*)value {
  if (result.mutablePrivateDefaultLanguageList == nil) {
    result.mutablePrivateDefaultLanguageList = [[NSMutableArray alloc]init];
  }
  [result.mutablePrivateDefaultLanguageList addObject:value];
  return self;
}
- (DefaultLanguagesProto_Builder *)addAllPrivateDefaultLanguage:(NSArray *)array {
  if (result.mutablePrivateDefaultLanguageList == nil) {
    result.mutablePrivateDefaultLanguageList = [NSMutableArray array];
  }
  [result.mutablePrivateDefaultLanguageList addObjectsFromArray:array];
  return self;
}
- (DefaultLanguagesProto_Builder *)clearPrivateDefaultLanguage {
  result.mutablePrivateDefaultLanguageList = nil;
  return self;
}
- (BOOL) hasGlobalTranslateOn {
  return result.hasGlobalTranslateOn;
}
- (BOOL) globalTranslateOn {
  return result.globalTranslateOn;
}
- (DefaultLanguagesProto_Builder*) setGlobalTranslateOn:(BOOL) value {
  result.hasGlobalTranslateOn = YES;
  result.globalTranslateOn = value;
  return self;
}
- (DefaultLanguagesProto_Builder*) clearGlobalTranslateOn {
  result.hasGlobalTranslateOn = NO;
  result.globalTranslateOn = NO;
  return self;
}
@end

@interface PrivateChatDefaultLanguageProto ()
@property (strong) NSString* recipientUserId;
@property (strong) NSString* senderUserId;
@property TranslateLanguages defaultLanguage;
@property BOOL translateOn;
@end

@implementation PrivateChatDefaultLanguageProto

- (BOOL) hasRecipientUserId {
  return !!hasRecipientUserId_;
}
- (void) setHasRecipientUserId:(BOOL) value_ {
  hasRecipientUserId_ = !!value_;
}
@synthesize recipientUserId;
- (BOOL) hasSenderUserId {
  return !!hasSenderUserId_;
}
- (void) setHasSenderUserId:(BOOL) value_ {
  hasSenderUserId_ = !!value_;
}
@synthesize senderUserId;
- (BOOL) hasDefaultLanguage {
  return !!hasDefaultLanguage_;
}
- (void) setHasDefaultLanguage:(BOOL) value_ {
  hasDefaultLanguage_ = !!value_;
}
@synthesize defaultLanguage;
- (BOOL) hasTranslateOn {
  return !!hasTranslateOn_;
}
- (void) setHasTranslateOn:(BOOL) value_ {
  hasTranslateOn_ = !!value_;
}
- (BOOL) translateOn {
  return !!translateOn_;
}
- (void) setTranslateOn:(BOOL) value_ {
  translateOn_ = !!value_;
}
- (id) init {
  if ((self = [super init])) {
    self.recipientUserId = @"";
    self.senderUserId = @"";
    self.defaultLanguage = TranslateLanguagesArabic;
    self.translateOn = NO;
  }
  return self;
}
static PrivateChatDefaultLanguageProto* defaultPrivateChatDefaultLanguageProtoInstance = nil;
+ (void) initialize {
  if (self == [PrivateChatDefaultLanguageProto class]) {
    defaultPrivateChatDefaultLanguageProtoInstance = [[PrivateChatDefaultLanguageProto alloc] init];
  }
}
+ (PrivateChatDefaultLanguageProto*) defaultInstance {
  return defaultPrivateChatDefaultLanguageProtoInstance;
}
- (PrivateChatDefaultLanguageProto*) defaultInstance {
  return defaultPrivateChatDefaultLanguageProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRecipientUserId) {
    [output writeString:1 value:self.recipientUserId];
  }
  if (self.hasSenderUserId) {
    [output writeString:2 value:self.senderUserId];
  }
  if (self.hasDefaultLanguage) {
    [output writeEnum:3 value:self.defaultLanguage];
  }
  if (self.hasTranslateOn) {
    [output writeBool:4 value:self.translateOn];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRecipientUserId) {
    size_ += computeStringSize(1, self.recipientUserId);
  }
  if (self.hasSenderUserId) {
    size_ += computeStringSize(2, self.senderUserId);
  }
  if (self.hasDefaultLanguage) {
    size_ += computeEnumSize(3, self.defaultLanguage);
  }
  if (self.hasTranslateOn) {
    size_ += computeBoolSize(4, self.translateOn);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PrivateChatDefaultLanguageProto*) parseFromData:(NSData*) data {
  return (PrivateChatDefaultLanguageProto*)[[[PrivateChatDefaultLanguageProto builder] mergeFromData:data] build];
}
+ (PrivateChatDefaultLanguageProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrivateChatDefaultLanguageProto*)[[[PrivateChatDefaultLanguageProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PrivateChatDefaultLanguageProto*) parseFromInputStream:(NSInputStream*) input {
  return (PrivateChatDefaultLanguageProto*)[[[PrivateChatDefaultLanguageProto builder] mergeFromInputStream:input] build];
}
+ (PrivateChatDefaultLanguageProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrivateChatDefaultLanguageProto*)[[[PrivateChatDefaultLanguageProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PrivateChatDefaultLanguageProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PrivateChatDefaultLanguageProto*)[[[PrivateChatDefaultLanguageProto builder] mergeFromCodedInputStream:input] build];
}
+ (PrivateChatDefaultLanguageProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrivateChatDefaultLanguageProto*)[[[PrivateChatDefaultLanguageProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PrivateChatDefaultLanguageProto_Builder*) builder {
  return [[PrivateChatDefaultLanguageProto_Builder alloc] init];
}
+ (PrivateChatDefaultLanguageProto_Builder*) builderWithPrototype:(PrivateChatDefaultLanguageProto*) prototype {
  return [[PrivateChatDefaultLanguageProto builder] mergeFrom:prototype];
}
- (PrivateChatDefaultLanguageProto_Builder*) builder {
  return [PrivateChatDefaultLanguageProto builder];
}
- (PrivateChatDefaultLanguageProto_Builder*) toBuilder {
  return [PrivateChatDefaultLanguageProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRecipientUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"recipientUserId", self.recipientUserId];
  }
  if (self.hasSenderUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderUserId", self.senderUserId];
  }
  if (self.hasDefaultLanguage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defaultLanguage", [NSNumber numberWithInteger:self.defaultLanguage]];
  }
  if (self.hasTranslateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"translateOn", [NSNumber numberWithBool:self.translateOn]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PrivateChatDefaultLanguageProto class]]) {
    return NO;
  }
  PrivateChatDefaultLanguageProto *otherMessage = other;
  return
      self.hasRecipientUserId == otherMessage.hasRecipientUserId &&
      (!self.hasRecipientUserId || [self.recipientUserId isEqual:otherMessage.recipientUserId]) &&
      self.hasSenderUserId == otherMessage.hasSenderUserId &&
      (!self.hasSenderUserId || [self.senderUserId isEqual:otherMessage.senderUserId]) &&
      self.hasDefaultLanguage == otherMessage.hasDefaultLanguage &&
      (!self.hasDefaultLanguage || self.defaultLanguage == otherMessage.defaultLanguage) &&
      self.hasTranslateOn == otherMessage.hasTranslateOn &&
      (!self.hasTranslateOn || self.translateOn == otherMessage.translateOn) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasRecipientUserId) {
    hashCode = hashCode * 31 + [self.recipientUserId hash];
  }
  if (self.hasSenderUserId) {
    hashCode = hashCode * 31 + [self.senderUserId hash];
  }
  if (self.hasDefaultLanguage) {
    hashCode = hashCode * 31 + self.defaultLanguage;
  }
  if (self.hasTranslateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.translateOn] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PrivateChatDefaultLanguageProto_Builder()
@property (strong) PrivateChatDefaultLanguageProto* result;
@end

@implementation PrivateChatDefaultLanguageProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PrivateChatDefaultLanguageProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PrivateChatDefaultLanguageProto_Builder*) clear {
  self.result = [[PrivateChatDefaultLanguageProto alloc] init];
  return self;
}
- (PrivateChatDefaultLanguageProto_Builder*) clone {
  return [PrivateChatDefaultLanguageProto builderWithPrototype:result];
}
- (PrivateChatDefaultLanguageProto*) defaultInstance {
  return [PrivateChatDefaultLanguageProto defaultInstance];
}
- (PrivateChatDefaultLanguageProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PrivateChatDefaultLanguageProto*) buildPartial {
  PrivateChatDefaultLanguageProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PrivateChatDefaultLanguageProto_Builder*) mergeFrom:(PrivateChatDefaultLanguageProto*) other {
  if (other == [PrivateChatDefaultLanguageProto defaultInstance]) {
    return self;
  }
  if (other.hasRecipientUserId) {
    [self setRecipientUserId:other.recipientUserId];
  }
  if (other.hasSenderUserId) {
    [self setSenderUserId:other.senderUserId];
  }
  if (other.hasDefaultLanguage) {
    [self setDefaultLanguage:other.defaultLanguage];
  }
  if (other.hasTranslateOn) {
    [self setTranslateOn:other.translateOn];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PrivateChatDefaultLanguageProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PrivateChatDefaultLanguageProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setRecipientUserId:[input readString]];
        break;
      }
      case 18: {
        [self setSenderUserId:[input readString]];
        break;
      }
      case 24: {
        TranslateLanguages value = (TranslateLanguages)[input readEnum];
        if (TranslateLanguagesIsValidValue(value)) {
          [self setDefaultLanguage:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        [self setTranslateOn:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasRecipientUserId {
  return result.hasRecipientUserId;
}
- (NSString*) recipientUserId {
  return result.recipientUserId;
}
- (PrivateChatDefaultLanguageProto_Builder*) setRecipientUserId:(NSString*) value {
  result.hasRecipientUserId = YES;
  result.recipientUserId = value;
  return self;
}
- (PrivateChatDefaultLanguageProto_Builder*) clearRecipientUserId {
  result.hasRecipientUserId = NO;
  result.recipientUserId = @"";
  return self;
}
- (BOOL) hasSenderUserId {
  return result.hasSenderUserId;
}
- (NSString*) senderUserId {
  return result.senderUserId;
}
- (PrivateChatDefaultLanguageProto_Builder*) setSenderUserId:(NSString*) value {
  result.hasSenderUserId = YES;
  result.senderUserId = value;
  return self;
}
- (PrivateChatDefaultLanguageProto_Builder*) clearSenderUserId {
  result.hasSenderUserId = NO;
  result.senderUserId = @"";
  return self;
}
- (BOOL) hasDefaultLanguage {
  return result.hasDefaultLanguage;
}
- (TranslateLanguages) defaultLanguage {
  return result.defaultLanguage;
}
- (PrivateChatDefaultLanguageProto_Builder*) setDefaultLanguage:(TranslateLanguages) value {
  result.hasDefaultLanguage = YES;
  result.defaultLanguage = value;
  return self;
}
- (PrivateChatDefaultLanguageProto_Builder*) clearDefaultLanguageList {
  result.hasDefaultLanguage = NO;
  result.defaultLanguage = TranslateLanguagesArabic;
  return self;
}
- (BOOL) hasTranslateOn {
  return result.hasTranslateOn;
}
- (BOOL) translateOn {
  return result.translateOn;
}
- (PrivateChatDefaultLanguageProto_Builder*) setTranslateOn:(BOOL) value {
  result.hasTranslateOn = YES;
  result.translateOn = value;
  return self;
}
- (PrivateChatDefaultLanguageProto_Builder*) clearTranslateOn {
  result.hasTranslateOn = NO;
  result.translateOn = NO;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
