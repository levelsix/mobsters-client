// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventStartup.pb.h"
// @@protoc_insertion_point(imports)

@implementation EventStartupRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventStartupRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [AchievementStuffRoot registerAllExtensions:registry];
    [BattleRoot registerAllExtensions:registry];
    [BattleItemRoot registerAllExtensions:registry];
    [BoosterPackStuffRoot registerAllExtensions:registry];
    [ChatRoot registerAllExtensions:registry];
    [CityRoot registerAllExtensions:registry];
    [ClanRoot registerAllExtensions:registry];
    [InAppPurchaseRoot registerAllExtensions:registry];
    [ItemRoot registerAllExtensions:registry];
    [MiniEventRoot registerAllExtensions:registry];
    [MiniJobConfigRoot registerAllExtensions:registry];
    [MonsterStuffRoot registerAllExtensions:registry];
    [QuestRoot registerAllExtensions:registry];
    [SalesRoot registerAllExtensions:registry];
    [ResearchRoot registerAllExtensions:registry];
    [SharedEnumConfigRoot registerAllExtensions:registry];
    [StaticDataRoot registerAllExtensions:registry];
    [StructureRoot registerAllExtensions:registry];
    [RewardRoot registerAllExtensions:registry];
    [TaskRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface StartupRequestProto ()
@property (strong) NSString* udid;
@property Float32 versionNum;
@property (strong) NSString* apsalarId;
@property (strong) NSString* macAddress;
@property (strong) NSString* advertiserId;
@property BOOL isForceTutorial;
@property (strong) NSString* fbId;
@property BOOL isFreshRestart;
@property (strong) StartupRequestProto_VersionNumberProto* versionNumberProto;
@end

@implementation StartupRequestProto

- (BOOL) hasUdid {
  return !!hasUdid_;
}
- (void) setHasUdid:(BOOL) value_ {
  hasUdid_ = !!value_;
}
@synthesize udid;
- (BOOL) hasVersionNum {
  return !!hasVersionNum_;
}
- (void) setHasVersionNum:(BOOL) value_ {
  hasVersionNum_ = !!value_;
}
@synthesize versionNum;
- (BOOL) hasApsalarId {
  return !!hasApsalarId_;
}
- (void) setHasApsalarId:(BOOL) value_ {
  hasApsalarId_ = !!value_;
}
@synthesize apsalarId;
- (BOOL) hasMacAddress {
  return !!hasMacAddress_;
}
- (void) setHasMacAddress:(BOOL) value_ {
  hasMacAddress_ = !!value_;
}
@synthesize macAddress;
- (BOOL) hasAdvertiserId {
  return !!hasAdvertiserId_;
}
- (void) setHasAdvertiserId:(BOOL) value_ {
  hasAdvertiserId_ = !!value_;
}
@synthesize advertiserId;
- (BOOL) hasIsForceTutorial {
  return !!hasIsForceTutorial_;
}
- (void) setHasIsForceTutorial:(BOOL) value_ {
  hasIsForceTutorial_ = !!value_;
}
- (BOOL) isForceTutorial {
  return !!isForceTutorial_;
}
- (void) setIsForceTutorial:(BOOL) value_ {
  isForceTutorial_ = !!value_;
}
- (BOOL) hasFbId {
  return !!hasFbId_;
}
- (void) setHasFbId:(BOOL) value_ {
  hasFbId_ = !!value_;
}
@synthesize fbId;
- (BOOL) hasIsFreshRestart {
  return !!hasIsFreshRestart_;
}
- (void) setHasIsFreshRestart:(BOOL) value_ {
  hasIsFreshRestart_ = !!value_;
}
- (BOOL) isFreshRestart {
  return !!isFreshRestart_;
}
- (void) setIsFreshRestart:(BOOL) value_ {
  isFreshRestart_ = !!value_;
}
- (BOOL) hasVersionNumberProto {
  return !!hasVersionNumberProto_;
}
- (void) setHasVersionNumberProto:(BOOL) value_ {
  hasVersionNumberProto_ = !!value_;
}
@synthesize versionNumberProto;
- (id) init {
  if ((self = [super init])) {
    self.udid = @"";
    self.versionNum = 0;
    self.apsalarId = @"";
    self.macAddress = @"";
    self.advertiserId = @"";
    self.isForceTutorial = NO;
    self.fbId = @"";
    self.isFreshRestart = NO;
    self.versionNumberProto = [StartupRequestProto_VersionNumberProto defaultInstance];
  }
  return self;
}
static StartupRequestProto* defaultStartupRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [StartupRequestProto class]) {
    defaultStartupRequestProtoInstance = [[StartupRequestProto alloc] init];
  }
}
+ (StartupRequestProto*) defaultInstance {
  return defaultStartupRequestProtoInstance;
}
- (StartupRequestProto*) defaultInstance {
  return defaultStartupRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUdid) {
    [output writeString:1 value:self.udid];
  }
  if (self.hasVersionNum) {
    [output writeFloat:2 value:self.versionNum];
  }
  if (self.hasApsalarId) {
    [output writeString:3 value:self.apsalarId];
  }
  if (self.hasMacAddress) {
    [output writeString:4 value:self.macAddress];
  }
  if (self.hasAdvertiserId) {
    [output writeString:5 value:self.advertiserId];
  }
  if (self.hasIsForceTutorial) {
    [output writeBool:6 value:self.isForceTutorial];
  }
  if (self.hasFbId) {
    [output writeString:7 value:self.fbId];
  }
  if (self.hasIsFreshRestart) {
    [output writeBool:8 value:self.isFreshRestart];
  }
  if (self.hasVersionNumberProto) {
    [output writeMessage:9 value:self.versionNumberProto];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUdid) {
    size_ += computeStringSize(1, self.udid);
  }
  if (self.hasVersionNum) {
    size_ += computeFloatSize(2, self.versionNum);
  }
  if (self.hasApsalarId) {
    size_ += computeStringSize(3, self.apsalarId);
  }
  if (self.hasMacAddress) {
    size_ += computeStringSize(4, self.macAddress);
  }
  if (self.hasAdvertiserId) {
    size_ += computeStringSize(5, self.advertiserId);
  }
  if (self.hasIsForceTutorial) {
    size_ += computeBoolSize(6, self.isForceTutorial);
  }
  if (self.hasFbId) {
    size_ += computeStringSize(7, self.fbId);
  }
  if (self.hasIsFreshRestart) {
    size_ += computeBoolSize(8, self.isFreshRestart);
  }
  if (self.hasVersionNumberProto) {
    size_ += computeMessageSize(9, self.versionNumberProto);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupRequestProto*) parseFromData:(NSData*) data {
  return (StartupRequestProto*)[[[StartupRequestProto builder] mergeFromData:data] build];
}
+ (StartupRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupRequestProto*)[[[StartupRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (StartupRequestProto*)[[[StartupRequestProto builder] mergeFromInputStream:input] build];
}
+ (StartupRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupRequestProto*)[[[StartupRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupRequestProto*)[[[StartupRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (StartupRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupRequestProto*)[[[StartupRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupRequestProto_Builder*) builder {
  return [[StartupRequestProto_Builder alloc] init];
}
+ (StartupRequestProto_Builder*) builderWithPrototype:(StartupRequestProto*) prototype {
  return [[StartupRequestProto builder] mergeFrom:prototype];
}
- (StartupRequestProto_Builder*) builder {
  return [StartupRequestProto builder];
}
- (StartupRequestProto_Builder*) toBuilder {
  return [StartupRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUdid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"udid", self.udid];
  }
  if (self.hasVersionNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"versionNum", [NSNumber numberWithFloat:self.versionNum]];
  }
  if (self.hasApsalarId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"apsalarId", self.apsalarId];
  }
  if (self.hasMacAddress) {
    [output appendFormat:@"%@%@: %@\n", indent, @"macAddress", self.macAddress];
  }
  if (self.hasAdvertiserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"advertiserId", self.advertiserId];
  }
  if (self.hasIsForceTutorial) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isForceTutorial", [NSNumber numberWithBool:self.isForceTutorial]];
  }
  if (self.hasFbId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fbId", self.fbId];
  }
  if (self.hasIsFreshRestart) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isFreshRestart", [NSNumber numberWithBool:self.isFreshRestart]];
  }
  if (self.hasVersionNumberProto) {
    [output appendFormat:@"%@%@ {\n", indent, @"versionNumberProto"];
    [self.versionNumberProto writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupRequestProto class]]) {
    return NO;
  }
  StartupRequestProto *otherMessage = other;
  return
      self.hasUdid == otherMessage.hasUdid &&
      (!self.hasUdid || [self.udid isEqual:otherMessage.udid]) &&
      self.hasVersionNum == otherMessage.hasVersionNum &&
      (!self.hasVersionNum || self.versionNum == otherMessage.versionNum) &&
      self.hasApsalarId == otherMessage.hasApsalarId &&
      (!self.hasApsalarId || [self.apsalarId isEqual:otherMessage.apsalarId]) &&
      self.hasMacAddress == otherMessage.hasMacAddress &&
      (!self.hasMacAddress || [self.macAddress isEqual:otherMessage.macAddress]) &&
      self.hasAdvertiserId == otherMessage.hasAdvertiserId &&
      (!self.hasAdvertiserId || [self.advertiserId isEqual:otherMessage.advertiserId]) &&
      self.hasIsForceTutorial == otherMessage.hasIsForceTutorial &&
      (!self.hasIsForceTutorial || self.isForceTutorial == otherMessage.isForceTutorial) &&
      self.hasFbId == otherMessage.hasFbId &&
      (!self.hasFbId || [self.fbId isEqual:otherMessage.fbId]) &&
      self.hasIsFreshRestart == otherMessage.hasIsFreshRestart &&
      (!self.hasIsFreshRestart || self.isFreshRestart == otherMessage.isFreshRestart) &&
      self.hasVersionNumberProto == otherMessage.hasVersionNumberProto &&
      (!self.hasVersionNumberProto || [self.versionNumberProto isEqual:otherMessage.versionNumberProto]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUdid) {
    hashCode = hashCode * 31 + [self.udid hash];
  }
  if (self.hasVersionNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.versionNum] hash];
  }
  if (self.hasApsalarId) {
    hashCode = hashCode * 31 + [self.apsalarId hash];
  }
  if (self.hasMacAddress) {
    hashCode = hashCode * 31 + [self.macAddress hash];
  }
  if (self.hasAdvertiserId) {
    hashCode = hashCode * 31 + [self.advertiserId hash];
  }
  if (self.hasIsForceTutorial) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isForceTutorial] hash];
  }
  if (self.hasFbId) {
    hashCode = hashCode * 31 + [self.fbId hash];
  }
  if (self.hasIsFreshRestart) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isFreshRestart] hash];
  }
  if (self.hasVersionNumberProto) {
    hashCode = hashCode * 31 + [self.versionNumberProto hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupRequestProto_VersionNumberProto ()
@property int32_t superNum;
@property int32_t majorNum;
@property int32_t minorNum;
@end

@implementation StartupRequestProto_VersionNumberProto

- (BOOL) hasSuperNum {
  return !!hasSuperNum_;
}
- (void) setHasSuperNum:(BOOL) value_ {
  hasSuperNum_ = !!value_;
}
@synthesize superNum;
- (BOOL) hasMajorNum {
  return !!hasMajorNum_;
}
- (void) setHasMajorNum:(BOOL) value_ {
  hasMajorNum_ = !!value_;
}
@synthesize majorNum;
- (BOOL) hasMinorNum {
  return !!hasMinorNum_;
}
- (void) setHasMinorNum:(BOOL) value_ {
  hasMinorNum_ = !!value_;
}
@synthesize minorNum;
- (id) init {
  if ((self = [super init])) {
    self.superNum = 0;
    self.majorNum = 0;
    self.minorNum = 0;
  }
  return self;
}
static StartupRequestProto_VersionNumberProto* defaultStartupRequestProto_VersionNumberProtoInstance = nil;
+ (void) initialize {
  if (self == [StartupRequestProto_VersionNumberProto class]) {
    defaultStartupRequestProto_VersionNumberProtoInstance = [[StartupRequestProto_VersionNumberProto alloc] init];
  }
}
+ (StartupRequestProto_VersionNumberProto*) defaultInstance {
  return defaultStartupRequestProto_VersionNumberProtoInstance;
}
- (StartupRequestProto_VersionNumberProto*) defaultInstance {
  return defaultStartupRequestProto_VersionNumberProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSuperNum) {
    [output writeInt32:1 value:self.superNum];
  }
  if (self.hasMajorNum) {
    [output writeInt32:2 value:self.majorNum];
  }
  if (self.hasMinorNum) {
    [output writeInt32:3 value:self.minorNum];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSuperNum) {
    size_ += computeInt32Size(1, self.superNum);
  }
  if (self.hasMajorNum) {
    size_ += computeInt32Size(2, self.majorNum);
  }
  if (self.hasMinorNum) {
    size_ += computeInt32Size(3, self.minorNum);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupRequestProto_VersionNumberProto*) parseFromData:(NSData*) data {
  return (StartupRequestProto_VersionNumberProto*)[[[StartupRequestProto_VersionNumberProto builder] mergeFromData:data] build];
}
+ (StartupRequestProto_VersionNumberProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupRequestProto_VersionNumberProto*)[[[StartupRequestProto_VersionNumberProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupRequestProto_VersionNumberProto*) parseFromInputStream:(NSInputStream*) input {
  return (StartupRequestProto_VersionNumberProto*)[[[StartupRequestProto_VersionNumberProto builder] mergeFromInputStream:input] build];
}
+ (StartupRequestProto_VersionNumberProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupRequestProto_VersionNumberProto*)[[[StartupRequestProto_VersionNumberProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupRequestProto_VersionNumberProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupRequestProto_VersionNumberProto*)[[[StartupRequestProto_VersionNumberProto builder] mergeFromCodedInputStream:input] build];
}
+ (StartupRequestProto_VersionNumberProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupRequestProto_VersionNumberProto*)[[[StartupRequestProto_VersionNumberProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupRequestProto_VersionNumberProto_Builder*) builder {
  return [[StartupRequestProto_VersionNumberProto_Builder alloc] init];
}
+ (StartupRequestProto_VersionNumberProto_Builder*) builderWithPrototype:(StartupRequestProto_VersionNumberProto*) prototype {
  return [[StartupRequestProto_VersionNumberProto builder] mergeFrom:prototype];
}
- (StartupRequestProto_VersionNumberProto_Builder*) builder {
  return [StartupRequestProto_VersionNumberProto builder];
}
- (StartupRequestProto_VersionNumberProto_Builder*) toBuilder {
  return [StartupRequestProto_VersionNumberProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSuperNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"superNum", [NSNumber numberWithInteger:self.superNum]];
  }
  if (self.hasMajorNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"majorNum", [NSNumber numberWithInteger:self.majorNum]];
  }
  if (self.hasMinorNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"minorNum", [NSNumber numberWithInteger:self.minorNum]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupRequestProto_VersionNumberProto class]]) {
    return NO;
  }
  StartupRequestProto_VersionNumberProto *otherMessage = other;
  return
      self.hasSuperNum == otherMessage.hasSuperNum &&
      (!self.hasSuperNum || self.superNum == otherMessage.superNum) &&
      self.hasMajorNum == otherMessage.hasMajorNum &&
      (!self.hasMajorNum || self.majorNum == otherMessage.majorNum) &&
      self.hasMinorNum == otherMessage.hasMinorNum &&
      (!self.hasMinorNum || self.minorNum == otherMessage.minorNum) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSuperNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.superNum] hash];
  }
  if (self.hasMajorNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.majorNum] hash];
  }
  if (self.hasMinorNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.minorNum] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupRequestProto_VersionNumberProto_Builder()
@property (strong) StartupRequestProto_VersionNumberProto* result;
@end

@implementation StartupRequestProto_VersionNumberProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupRequestProto_VersionNumberProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupRequestProto_VersionNumberProto_Builder*) clear {
  self.result = [[StartupRequestProto_VersionNumberProto alloc] init];
  return self;
}
- (StartupRequestProto_VersionNumberProto_Builder*) clone {
  return [StartupRequestProto_VersionNumberProto builderWithPrototype:result];
}
- (StartupRequestProto_VersionNumberProto*) defaultInstance {
  return [StartupRequestProto_VersionNumberProto defaultInstance];
}
- (StartupRequestProto_VersionNumberProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupRequestProto_VersionNumberProto*) buildPartial {
  StartupRequestProto_VersionNumberProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupRequestProto_VersionNumberProto_Builder*) mergeFrom:(StartupRequestProto_VersionNumberProto*) other {
  if (other == [StartupRequestProto_VersionNumberProto defaultInstance]) {
    return self;
  }
  if (other.hasSuperNum) {
    [self setSuperNum:other.superNum];
  }
  if (other.hasMajorNum) {
    [self setMajorNum:other.majorNum];
  }
  if (other.hasMinorNum) {
    [self setMinorNum:other.minorNum];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupRequestProto_VersionNumberProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupRequestProto_VersionNumberProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSuperNum:[input readInt32]];
        break;
      }
      case 16: {
        [self setMajorNum:[input readInt32]];
        break;
      }
      case 24: {
        [self setMinorNum:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSuperNum {
  return result.hasSuperNum;
}
- (int32_t) superNum {
  return result.superNum;
}
- (StartupRequestProto_VersionNumberProto_Builder*) setSuperNum:(int32_t) value {
  result.hasSuperNum = YES;
  result.superNum = value;
  return self;
}
- (StartupRequestProto_VersionNumberProto_Builder*) clearSuperNum {
  result.hasSuperNum = NO;
  result.superNum = 0;
  return self;
}
- (BOOL) hasMajorNum {
  return result.hasMajorNum;
}
- (int32_t) majorNum {
  return result.majorNum;
}
- (StartupRequestProto_VersionNumberProto_Builder*) setMajorNum:(int32_t) value {
  result.hasMajorNum = YES;
  result.majorNum = value;
  return self;
}
- (StartupRequestProto_VersionNumberProto_Builder*) clearMajorNum {
  result.hasMajorNum = NO;
  result.majorNum = 0;
  return self;
}
- (BOOL) hasMinorNum {
  return result.hasMinorNum;
}
- (int32_t) minorNum {
  return result.minorNum;
}
- (StartupRequestProto_VersionNumberProto_Builder*) setMinorNum:(int32_t) value {
  result.hasMinorNum = YES;
  result.minorNum = value;
  return self;
}
- (StartupRequestProto_VersionNumberProto_Builder*) clearMinorNum {
  result.hasMinorNum = NO;
  result.minorNum = 0;
  return self;
}
@end

@interface StartupRequestProto_Builder()
@property (strong) StartupRequestProto* result;
@end

@implementation StartupRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupRequestProto_Builder*) clear {
  self.result = [[StartupRequestProto alloc] init];
  return self;
}
- (StartupRequestProto_Builder*) clone {
  return [StartupRequestProto builderWithPrototype:result];
}
- (StartupRequestProto*) defaultInstance {
  return [StartupRequestProto defaultInstance];
}
- (StartupRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupRequestProto*) buildPartial {
  StartupRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupRequestProto_Builder*) mergeFrom:(StartupRequestProto*) other {
  if (other == [StartupRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasUdid) {
    [self setUdid:other.udid];
  }
  if (other.hasVersionNum) {
    [self setVersionNum:other.versionNum];
  }
  if (other.hasApsalarId) {
    [self setApsalarId:other.apsalarId];
  }
  if (other.hasMacAddress) {
    [self setMacAddress:other.macAddress];
  }
  if (other.hasAdvertiserId) {
    [self setAdvertiserId:other.advertiserId];
  }
  if (other.hasIsForceTutorial) {
    [self setIsForceTutorial:other.isForceTutorial];
  }
  if (other.hasFbId) {
    [self setFbId:other.fbId];
  }
  if (other.hasIsFreshRestart) {
    [self setIsFreshRestart:other.isFreshRestart];
  }
  if (other.hasVersionNumberProto) {
    [self mergeVersionNumberProto:other.versionNumberProto];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUdid:[input readString]];
        break;
      }
      case 21: {
        [self setVersionNum:[input readFloat]];
        break;
      }
      case 26: {
        [self setApsalarId:[input readString]];
        break;
      }
      case 34: {
        [self setMacAddress:[input readString]];
        break;
      }
      case 42: {
        [self setAdvertiserId:[input readString]];
        break;
      }
      case 48: {
        [self setIsForceTutorial:[input readBool]];
        break;
      }
      case 58: {
        [self setFbId:[input readString]];
        break;
      }
      case 64: {
        [self setIsFreshRestart:[input readBool]];
        break;
      }
      case 74: {
        StartupRequestProto_VersionNumberProto_Builder* subBuilder = [StartupRequestProto_VersionNumberProto builder];
        if (self.hasVersionNumberProto) {
          [subBuilder mergeFrom:self.versionNumberProto];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setVersionNumberProto:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUdid {
  return result.hasUdid;
}
- (NSString*) udid {
  return result.udid;
}
- (StartupRequestProto_Builder*) setUdid:(NSString*) value {
  result.hasUdid = YES;
  result.udid = value;
  return self;
}
- (StartupRequestProto_Builder*) clearUdid {
  result.hasUdid = NO;
  result.udid = @"";
  return self;
}
- (BOOL) hasVersionNum {
  return result.hasVersionNum;
}
- (Float32) versionNum {
  return result.versionNum;
}
- (StartupRequestProto_Builder*) setVersionNum:(Float32) value {
  result.hasVersionNum = YES;
  result.versionNum = value;
  return self;
}
- (StartupRequestProto_Builder*) clearVersionNum {
  result.hasVersionNum = NO;
  result.versionNum = 0;
  return self;
}
- (BOOL) hasApsalarId {
  return result.hasApsalarId;
}
- (NSString*) apsalarId {
  return result.apsalarId;
}
- (StartupRequestProto_Builder*) setApsalarId:(NSString*) value {
  result.hasApsalarId = YES;
  result.apsalarId = value;
  return self;
}
- (StartupRequestProto_Builder*) clearApsalarId {
  result.hasApsalarId = NO;
  result.apsalarId = @"";
  return self;
}
- (BOOL) hasMacAddress {
  return result.hasMacAddress;
}
- (NSString*) macAddress {
  return result.macAddress;
}
- (StartupRequestProto_Builder*) setMacAddress:(NSString*) value {
  result.hasMacAddress = YES;
  result.macAddress = value;
  return self;
}
- (StartupRequestProto_Builder*) clearMacAddress {
  result.hasMacAddress = NO;
  result.macAddress = @"";
  return self;
}
- (BOOL) hasAdvertiserId {
  return result.hasAdvertiserId;
}
- (NSString*) advertiserId {
  return result.advertiserId;
}
- (StartupRequestProto_Builder*) setAdvertiserId:(NSString*) value {
  result.hasAdvertiserId = YES;
  result.advertiserId = value;
  return self;
}
- (StartupRequestProto_Builder*) clearAdvertiserId {
  result.hasAdvertiserId = NO;
  result.advertiserId = @"";
  return self;
}
- (BOOL) hasIsForceTutorial {
  return result.hasIsForceTutorial;
}
- (BOOL) isForceTutorial {
  return result.isForceTutorial;
}
- (StartupRequestProto_Builder*) setIsForceTutorial:(BOOL) value {
  result.hasIsForceTutorial = YES;
  result.isForceTutorial = value;
  return self;
}
- (StartupRequestProto_Builder*) clearIsForceTutorial {
  result.hasIsForceTutorial = NO;
  result.isForceTutorial = NO;
  return self;
}
- (BOOL) hasFbId {
  return result.hasFbId;
}
- (NSString*) fbId {
  return result.fbId;
}
- (StartupRequestProto_Builder*) setFbId:(NSString*) value {
  result.hasFbId = YES;
  result.fbId = value;
  return self;
}
- (StartupRequestProto_Builder*) clearFbId {
  result.hasFbId = NO;
  result.fbId = @"";
  return self;
}
- (BOOL) hasIsFreshRestart {
  return result.hasIsFreshRestart;
}
- (BOOL) isFreshRestart {
  return result.isFreshRestart;
}
- (StartupRequestProto_Builder*) setIsFreshRestart:(BOOL) value {
  result.hasIsFreshRestart = YES;
  result.isFreshRestart = value;
  return self;
}
- (StartupRequestProto_Builder*) clearIsFreshRestart {
  result.hasIsFreshRestart = NO;
  result.isFreshRestart = NO;
  return self;
}
- (BOOL) hasVersionNumberProto {
  return result.hasVersionNumberProto;
}
- (StartupRequestProto_VersionNumberProto*) versionNumberProto {
  return result.versionNumberProto;
}
- (StartupRequestProto_Builder*) setVersionNumberProto:(StartupRequestProto_VersionNumberProto*) value {
  result.hasVersionNumberProto = YES;
  result.versionNumberProto = value;
  return self;
}
- (StartupRequestProto_Builder*) setVersionNumberProto_Builder:(StartupRequestProto_VersionNumberProto_Builder*) builderForValue {
  return [self setVersionNumberProto:[builderForValue build]];
}
- (StartupRequestProto_Builder*) mergeVersionNumberProto:(StartupRequestProto_VersionNumberProto*) value {
  if (result.hasVersionNumberProto &&
      result.versionNumberProto != [StartupRequestProto_VersionNumberProto defaultInstance]) {
    result.versionNumberProto =
      [[[StartupRequestProto_VersionNumberProto builderWithPrototype:result.versionNumberProto] mergeFrom:value] buildPartial];
  } else {
    result.versionNumberProto = value;
  }
  result.hasVersionNumberProto = YES;
  return self;
}
- (StartupRequestProto_Builder*) clearVersionNumberProto {
  result.hasVersionNumberProto = NO;
  result.versionNumberProto = [StartupRequestProto_VersionNumberProto defaultInstance];
  return self;
}
@end

@interface StartupResponseProto ()
@property int64_t serverTimeMillis;
@property (strong) FullUserProto* sender;
@property StartupResponseProto_StartupStatus startupStatus;
@property StartupResponseProto_UpdateStatus updateStatus;
@property (strong) StartupResponseProto_StartupConstants* startupConstants;
@property (strong) StartupResponseProto_TutorialConstants* tutorialConstants;
@property (strong) NSMutableArray * mutableUserQuestsList;
@property (strong) PBAppendableArray * mutableRedeemedQuestIdsList;
@property (strong) NSMutableArray * mutableUserClanInfoList;
@property (strong) PBAppendableArray * mutableCompletedTaskIdsList;
@property (strong) NSMutableArray * mutableCompletedTasksList;
@property (strong) NSString* appStoreUrl;
@property (strong) NSString* reviewPageUrl;
@property (strong) NSString* reviewPageConfirmationMessage;
@property BOOL playerHasBoughtInAppPurchase;
@property (strong) NSMutableArray * mutableAttackNotificationsList;
@property (strong) NSMutableArray * mutableReferralNotificationsList;
@property (strong) NSMutableArray * mutableNoticesToPlayersList;
@property (strong) NSMutableArray * mutableGlobalChatsList;
@property (strong) NSMutableArray * mutableClanChatsList;
@property (strong) NSMutableArray * mutablePcppList;
@property (strong) NSMutableArray * mutableUsersMonstersList;
@property (strong) NSMutableArray * mutableMonstersHealingList;
@property (strong) UserEnhancementProto* enhancements;
@property (strong) UserMonsterEvolutionProto* evolution;
@property (strong) NSMutableArray * mutableRareBoosterPurchasesList;
@property (strong) NSString* kabamNaid;
@property (strong) NSMutableArray * mutableInvitesToMeForSlotsList;
@property (strong) NSMutableArray * mutableInvitesFromMeForSlotsList;
@property (strong) StaticDataProto* staticDataStuffProto;
@property (strong) PBAppendableArray * mutableTaskIdForCurrentCityBossList;
@property (strong) NSMutableArray * mutableUserEventsList;
@property (strong) PersistentClanEventClanInfoProto* curRaidClanInfo;
@property (strong) NSMutableArray * mutableCurRaidClanUserInfoList;
@property (strong) NSMutableArray * mutableRaidStageHistoryList;
@property (strong) NSMutableArray * mutableRecentNbattlesList;
@property (strong) MinimumUserTaskProto* curTask;
@property (strong) NSMutableArray * mutableCurTaskStagesList;
@property (strong) NSMutableArray * mutableUserAchievementsList;
@property (strong) NSMutableArray * mutableUserMiniJobProtosList;
@property (strong) NSMutableArray * mutableUserItemsList;
@property (strong) NSMutableArray * mutableClanHelpingsList;
@property (strong) NSMutableArray * mutableClanInvitesList;
@property (strong) ClanDataProto* clanData;
@property (strong) NSMutableArray * mutableItemsInUseList;
@property (strong) NSMutableArray * mutableGiftsList;
@property (strong) NSMutableArray * mutableUserPvpBoardObstaclesList;
@property (strong) NSMutableArray * mutableBattleItemQueueList;
@property (strong) NSMutableArray * mutableBattleItemList;
@property (strong) NSMutableArray * mutableUserResearchsList;
@property (strong) NSMutableArray * mutableSalesPackagesList;
@property (strong) UserMiniEventProto* userMiniEvent;
@property (strong) DefaultLanguagesProto* userDefaultLanguages;
@property (strong) NSMutableArray * mutableUserClanGiftsList;
@end

@implementation StartupResponseProto

- (BOOL) hasServerTimeMillis {
  return !!hasServerTimeMillis_;
}
- (void) setHasServerTimeMillis:(BOOL) value_ {
  hasServerTimeMillis_ = !!value_;
}
@synthesize serverTimeMillis;
- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStartupStatus {
  return !!hasStartupStatus_;
}
- (void) setHasStartupStatus:(BOOL) value_ {
  hasStartupStatus_ = !!value_;
}
@synthesize startupStatus;
- (BOOL) hasUpdateStatus {
  return !!hasUpdateStatus_;
}
- (void) setHasUpdateStatus:(BOOL) value_ {
  hasUpdateStatus_ = !!value_;
}
@synthesize updateStatus;
- (BOOL) hasStartupConstants {
  return !!hasStartupConstants_;
}
- (void) setHasStartupConstants:(BOOL) value_ {
  hasStartupConstants_ = !!value_;
}
@synthesize startupConstants;
- (BOOL) hasTutorialConstants {
  return !!hasTutorialConstants_;
}
- (void) setHasTutorialConstants:(BOOL) value_ {
  hasTutorialConstants_ = !!value_;
}
@synthesize tutorialConstants;
@synthesize mutableUserQuestsList;
@dynamic userQuestsList;
@synthesize mutableRedeemedQuestIdsList;
@dynamic redeemedQuestIdsList;
@synthesize mutableUserClanInfoList;
@dynamic userClanInfoList;
@synthesize mutableCompletedTaskIdsList;
@dynamic completedTaskIdsList;
@synthesize mutableCompletedTasksList;
@dynamic completedTasksList;
- (BOOL) hasAppStoreUrl {
  return !!hasAppStoreUrl_;
}
- (void) setHasAppStoreUrl:(BOOL) value_ {
  hasAppStoreUrl_ = !!value_;
}
@synthesize appStoreUrl;
- (BOOL) hasReviewPageUrl {
  return !!hasReviewPageUrl_;
}
- (void) setHasReviewPageUrl:(BOOL) value_ {
  hasReviewPageUrl_ = !!value_;
}
@synthesize reviewPageUrl;
- (BOOL) hasReviewPageConfirmationMessage {
  return !!hasReviewPageConfirmationMessage_;
}
- (void) setHasReviewPageConfirmationMessage:(BOOL) value_ {
  hasReviewPageConfirmationMessage_ = !!value_;
}
@synthesize reviewPageConfirmationMessage;
- (BOOL) hasPlayerHasBoughtInAppPurchase {
  return !!hasPlayerHasBoughtInAppPurchase_;
}
- (void) setHasPlayerHasBoughtInAppPurchase:(BOOL) value_ {
  hasPlayerHasBoughtInAppPurchase_ = !!value_;
}
- (BOOL) playerHasBoughtInAppPurchase {
  return !!playerHasBoughtInAppPurchase_;
}
- (void) setPlayerHasBoughtInAppPurchase:(BOOL) value_ {
  playerHasBoughtInAppPurchase_ = !!value_;
}
@synthesize mutableAttackNotificationsList;
@dynamic attackNotificationsList;
@synthesize mutableReferralNotificationsList;
@dynamic referralNotificationsList;
@synthesize mutableNoticesToPlayersList;
@dynamic noticesToPlayersList;
@synthesize mutableGlobalChatsList;
@dynamic globalChatsList;
@synthesize mutableClanChatsList;
@dynamic clanChatsList;
@synthesize mutablePcppList;
@dynamic pcppList;
@synthesize mutableUsersMonstersList;
@dynamic usersMonstersList;
@synthesize mutableMonstersHealingList;
@dynamic monstersHealingList;
- (BOOL) hasEnhancements {
  return !!hasEnhancements_;
}
- (void) setHasEnhancements:(BOOL) value_ {
  hasEnhancements_ = !!value_;
}
@synthesize enhancements;
- (BOOL) hasEvolution {
  return !!hasEvolution_;
}
- (void) setHasEvolution:(BOOL) value_ {
  hasEvolution_ = !!value_;
}
@synthesize evolution;
@synthesize mutableRareBoosterPurchasesList;
@dynamic rareBoosterPurchasesList;
- (BOOL) hasKabamNaid {
  return !!hasKabamNaid_;
}
- (void) setHasKabamNaid:(BOOL) value_ {
  hasKabamNaid_ = !!value_;
}
@synthesize kabamNaid;
@synthesize mutableInvitesToMeForSlotsList;
@dynamic invitesToMeForSlotsList;
@synthesize mutableInvitesFromMeForSlotsList;
@dynamic invitesFromMeForSlotsList;
- (BOOL) hasStaticDataStuffProto {
  return !!hasStaticDataStuffProto_;
}
- (void) setHasStaticDataStuffProto:(BOOL) value_ {
  hasStaticDataStuffProto_ = !!value_;
}
@synthesize staticDataStuffProto;
@synthesize mutableTaskIdForCurrentCityBossList;
@dynamic taskIdForCurrentCityBossList;
@synthesize mutableUserEventsList;
@dynamic userEventsList;
- (BOOL) hasCurRaidClanInfo {
  return !!hasCurRaidClanInfo_;
}
- (void) setHasCurRaidClanInfo:(BOOL) value_ {
  hasCurRaidClanInfo_ = !!value_;
}
@synthesize curRaidClanInfo;
@synthesize mutableCurRaidClanUserInfoList;
@dynamic curRaidClanUserInfoList;
@synthesize mutableRaidStageHistoryList;
@dynamic raidStageHistoryList;
@synthesize mutableRecentNbattlesList;
@dynamic recentNbattlesList;
- (BOOL) hasCurTask {
  return !!hasCurTask_;
}
- (void) setHasCurTask:(BOOL) value_ {
  hasCurTask_ = !!value_;
}
@synthesize curTask;
@synthesize mutableCurTaskStagesList;
@dynamic curTaskStagesList;
@synthesize mutableUserAchievementsList;
@dynamic userAchievementsList;
@synthesize mutableUserMiniJobProtosList;
@dynamic userMiniJobProtosList;
@synthesize mutableUserItemsList;
@dynamic userItemsList;
@synthesize mutableClanHelpingsList;
@dynamic clanHelpingsList;
@synthesize mutableClanInvitesList;
@dynamic clanInvitesList;
- (BOOL) hasClanData {
  return !!hasClanData_;
}
- (void) setHasClanData:(BOOL) value_ {
  hasClanData_ = !!value_;
}
@synthesize clanData;
@synthesize mutableItemsInUseList;
@dynamic itemsInUseList;
@synthesize mutableGiftsList;
@dynamic giftsList;
@synthesize mutableUserPvpBoardObstaclesList;
@dynamic userPvpBoardObstaclesList;
@synthesize mutableBattleItemQueueList;
@dynamic battleItemQueueList;
@synthesize mutableBattleItemList;
@dynamic battleItemList;
@synthesize mutableUserResearchsList;
@dynamic userResearchsList;
@synthesize mutableSalesPackagesList;
@dynamic salesPackagesList;
- (BOOL) hasUserMiniEvent {
  return !!hasUserMiniEvent_;
}
- (void) setHasUserMiniEvent:(BOOL) value_ {
  hasUserMiniEvent_ = !!value_;
}
@synthesize userMiniEvent;
- (BOOL) hasUserDefaultLanguages {
  return !!hasUserDefaultLanguages_;
}
- (void) setHasUserDefaultLanguages:(BOOL) value_ {
  hasUserDefaultLanguages_ = !!value_;
}
@synthesize userDefaultLanguages;
@synthesize mutableUserClanGiftsList;
@dynamic userClanGiftsList;
- (id) init {
  if ((self = [super init])) {
    self.serverTimeMillis = 0L;
    self.sender = [FullUserProto defaultInstance];
    self.startupStatus = StartupResponseProto_StartupStatusUserInDb;
    self.updateStatus = StartupResponseProto_UpdateStatusNoUpdate;
    self.startupConstants = [StartupResponseProto_StartupConstants defaultInstance];
    self.tutorialConstants = [StartupResponseProto_TutorialConstants defaultInstance];
    self.appStoreUrl = @"";
    self.reviewPageUrl = @"";
    self.reviewPageConfirmationMessage = @"";
    self.playerHasBoughtInAppPurchase = NO;
    self.enhancements = [UserEnhancementProto defaultInstance];
    self.evolution = [UserMonsterEvolutionProto defaultInstance];
    self.kabamNaid = @"";
    self.staticDataStuffProto = [StaticDataProto defaultInstance];
    self.curRaidClanInfo = [PersistentClanEventClanInfoProto defaultInstance];
    self.curTask = [MinimumUserTaskProto defaultInstance];
    self.clanData = [ClanDataProto defaultInstance];
    self.userMiniEvent = [UserMiniEventProto defaultInstance];
    self.userDefaultLanguages = [DefaultLanguagesProto defaultInstance];
  }
  return self;
}
static StartupResponseProto* defaultStartupResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto class]) {
    defaultStartupResponseProtoInstance = [[StartupResponseProto alloc] init];
  }
}
+ (StartupResponseProto*) defaultInstance {
  return defaultStartupResponseProtoInstance;
}
- (StartupResponseProto*) defaultInstance {
  return defaultStartupResponseProtoInstance;
}
- (NSArray *)userQuestsList {
  return mutableUserQuestsList;
}
- (FullUserQuestProto*)userQuestsAtIndex:(NSUInteger)index {
  return [mutableUserQuestsList objectAtIndex:index];
}
- (PBArray *)redeemedQuestIdsList {
  return mutableRedeemedQuestIdsList;
}
- (int32_t)redeemedQuestIdsAtIndex:(NSUInteger)index {
  return [mutableRedeemedQuestIdsList int32AtIndex:index];
}
- (NSArray *)userClanInfoList {
  return mutableUserClanInfoList;
}
- (FullUserClanProto*)userClanInfoAtIndex:(NSUInteger)index {
  return [mutableUserClanInfoList objectAtIndex:index];
}
- (PBArray *)completedTaskIdsList {
  return mutableCompletedTaskIdsList;
}
- (int32_t)completedTaskIdsAtIndex:(NSUInteger)index {
  return [mutableCompletedTaskIdsList int32AtIndex:index];
}
- (NSArray *)completedTasksList {
  return mutableCompletedTasksList;
}
- (UserTaskCompletedProto*)completedTasksAtIndex:(NSUInteger)index {
  return [mutableCompletedTasksList objectAtIndex:index];
}
- (NSArray *)attackNotificationsList {
  return mutableAttackNotificationsList;
}
- (StartupResponseProto_AttackedNotificationProto*)attackNotificationsAtIndex:(NSUInteger)index {
  return [mutableAttackNotificationsList objectAtIndex:index];
}
- (NSArray *)referralNotificationsList {
  return mutableReferralNotificationsList;
}
- (StartupResponseProto_ReferralNotificationProto*)referralNotificationsAtIndex:(NSUInteger)index {
  return [mutableReferralNotificationsList objectAtIndex:index];
}
- (NSArray *)noticesToPlayersList {
  return mutableNoticesToPlayersList;
}
- (NSString*)noticesToPlayersAtIndex:(NSUInteger)index {
  return [mutableNoticesToPlayersList objectAtIndex:index];
}
- (NSArray *)globalChatsList {
  return mutableGlobalChatsList;
}
- (GroupChatMessageProto*)globalChatsAtIndex:(NSUInteger)index {
  return [mutableGlobalChatsList objectAtIndex:index];
}
- (NSArray *)clanChatsList {
  return mutableClanChatsList;
}
- (GroupChatMessageProto*)clanChatsAtIndex:(NSUInteger)index {
  return [mutableClanChatsList objectAtIndex:index];
}
- (NSArray *)pcppList {
  return mutablePcppList;
}
- (PrivateChatPostProto*)pcppAtIndex:(NSUInteger)index {
  return [mutablePcppList objectAtIndex:index];
}
- (NSArray *)usersMonstersList {
  return mutableUsersMonstersList;
}
- (FullUserMonsterProto*)usersMonstersAtIndex:(NSUInteger)index {
  return [mutableUsersMonstersList objectAtIndex:index];
}
- (NSArray *)monstersHealingList {
  return mutableMonstersHealingList;
}
- (UserMonsterHealingProto*)monstersHealingAtIndex:(NSUInteger)index {
  return [mutableMonstersHealingList objectAtIndex:index];
}
- (NSArray *)rareBoosterPurchasesList {
  return mutableRareBoosterPurchasesList;
}
- (RareBoosterPurchaseProto*)rareBoosterPurchasesAtIndex:(NSUInteger)index {
  return [mutableRareBoosterPurchasesList objectAtIndex:index];
}
- (NSArray *)invitesToMeForSlotsList {
  return mutableInvitesToMeForSlotsList;
}
- (UserFacebookInviteForSlotProto*)invitesToMeForSlotsAtIndex:(NSUInteger)index {
  return [mutableInvitesToMeForSlotsList objectAtIndex:index];
}
- (NSArray *)invitesFromMeForSlotsList {
  return mutableInvitesFromMeForSlotsList;
}
- (UserFacebookInviteForSlotProto*)invitesFromMeForSlotsAtIndex:(NSUInteger)index {
  return [mutableInvitesFromMeForSlotsList objectAtIndex:index];
}
- (PBArray *)taskIdForCurrentCityBossList {
  return mutableTaskIdForCurrentCityBossList;
}
- (int32_t)taskIdForCurrentCityBossAtIndex:(NSUInteger)index {
  return [mutableTaskIdForCurrentCityBossList int32AtIndex:index];
}
- (NSArray *)userEventsList {
  return mutableUserEventsList;
}
- (UserPersistentEventProto*)userEventsAtIndex:(NSUInteger)index {
  return [mutableUserEventsList objectAtIndex:index];
}
- (NSArray *)curRaidClanUserInfoList {
  return mutableCurRaidClanUserInfoList;
}
- (PersistentClanEventUserInfoProto*)curRaidClanUserInfoAtIndex:(NSUInteger)index {
  return [mutableCurRaidClanUserInfoList objectAtIndex:index];
}
- (NSArray *)raidStageHistoryList {
  return mutableRaidStageHistoryList;
}
- (PersistentClanEventRaidStageHistoryProto*)raidStageHistoryAtIndex:(NSUInteger)index {
  return [mutableRaidStageHistoryList objectAtIndex:index];
}
- (NSArray *)recentNbattlesList {
  return mutableRecentNbattlesList;
}
- (PvpHistoryProto*)recentNbattlesAtIndex:(NSUInteger)index {
  return [mutableRecentNbattlesList objectAtIndex:index];
}
- (NSArray *)curTaskStagesList {
  return mutableCurTaskStagesList;
}
- (TaskStageProto*)curTaskStagesAtIndex:(NSUInteger)index {
  return [mutableCurTaskStagesList objectAtIndex:index];
}
- (NSArray *)userAchievementsList {
  return mutableUserAchievementsList;
}
- (UserAchievementProto*)userAchievementsAtIndex:(NSUInteger)index {
  return [mutableUserAchievementsList objectAtIndex:index];
}
- (NSArray *)userMiniJobProtosList {
  return mutableUserMiniJobProtosList;
}
- (UserMiniJobProto*)userMiniJobProtosAtIndex:(NSUInteger)index {
  return [mutableUserMiniJobProtosList objectAtIndex:index];
}
- (NSArray *)userItemsList {
  return mutableUserItemsList;
}
- (UserItemProto*)userItemsAtIndex:(NSUInteger)index {
  return [mutableUserItemsList objectAtIndex:index];
}
- (NSArray *)clanHelpingsList {
  return mutableClanHelpingsList;
}
- (ClanHelpProto*)clanHelpingsAtIndex:(NSUInteger)index {
  return [mutableClanHelpingsList objectAtIndex:index];
}
- (NSArray *)clanInvitesList {
  return mutableClanInvitesList;
}
- (ClanInviteProto*)clanInvitesAtIndex:(NSUInteger)index {
  return [mutableClanInvitesList objectAtIndex:index];
}
- (NSArray *)itemsInUseList {
  return mutableItemsInUseList;
}
- (UserItemUsageProto*)itemsInUseAtIndex:(NSUInteger)index {
  return [mutableItemsInUseList objectAtIndex:index];
}
- (NSArray *)giftsList {
  return mutableGiftsList;
}
- (UserItemSecretGiftProto*)giftsAtIndex:(NSUInteger)index {
  return [mutableGiftsList objectAtIndex:index];
}
- (NSArray *)userPvpBoardObstaclesList {
  return mutableUserPvpBoardObstaclesList;
}
- (UserPvpBoardObstacleProto*)userPvpBoardObstaclesAtIndex:(NSUInteger)index {
  return [mutableUserPvpBoardObstaclesList objectAtIndex:index];
}
- (NSArray *)battleItemQueueList {
  return mutableBattleItemQueueList;
}
- (BattleItemQueueForUserProto*)battleItemQueueAtIndex:(NSUInteger)index {
  return [mutableBattleItemQueueList objectAtIndex:index];
}
- (NSArray *)battleItemList {
  return mutableBattleItemList;
}
- (UserBattleItemProto*)battleItemAtIndex:(NSUInteger)index {
  return [mutableBattleItemList objectAtIndex:index];
}
- (NSArray *)userResearchsList {
  return mutableUserResearchsList;
}
- (UserResearchProto*)userResearchsAtIndex:(NSUInteger)index {
  return [mutableUserResearchsList objectAtIndex:index];
}
- (NSArray *)salesPackagesList {
  return mutableSalesPackagesList;
}
- (SalesPackageProto*)salesPackagesAtIndex:(NSUInteger)index {
  return [mutableSalesPackagesList objectAtIndex:index];
}
- (NSArray *)userClanGiftsList {
  return mutableUserClanGiftsList;
}
- (UserClanGiftProto*)userClanGiftsAtIndex:(NSUInteger)index {
  return [mutableUserClanGiftsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasServerTimeMillis) {
    [output writeInt64:1 value:self.serverTimeMillis];
  }
  if (self.hasSender) {
    [output writeMessage:2 value:self.sender];
  }
  if (self.hasStartupStatus) {
    [output writeEnum:3 value:self.startupStatus];
  }
  if (self.hasUpdateStatus) {
    [output writeEnum:4 value:self.updateStatus];
  }
  if (self.hasStartupConstants) {
    [output writeMessage:5 value:self.startupConstants];
  }
  [self.userQuestsList enumerateObjectsUsingBlock:^(FullUserQuestProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:6 value:element];
  }];
  [self.userClanInfoList enumerateObjectsUsingBlock:^(FullUserClanProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:7 value:element];
  }];
  const NSUInteger completedTaskIdsListCount = self.completedTaskIdsList.count;
  if (completedTaskIdsListCount > 0) {
    const int32_t *values = (const int32_t *)self.completedTaskIdsList.data;
    for (NSUInteger i = 0; i < completedTaskIdsListCount; ++i) {
      [output writeInt32:8 value:values[i]];
    }
  }
  if (self.hasAppStoreUrl) {
    [output writeString:9 value:self.appStoreUrl];
  }
  if (self.hasReviewPageUrl) {
    [output writeString:10 value:self.reviewPageUrl];
  }
  if (self.hasReviewPageConfirmationMessage) {
    [output writeString:11 value:self.reviewPageConfirmationMessage];
  }
  if (self.hasPlayerHasBoughtInAppPurchase) {
    [output writeBool:12 value:self.playerHasBoughtInAppPurchase];
  }
  [self.attackNotificationsList enumerateObjectsUsingBlock:^(StartupResponseProto_AttackedNotificationProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:13 value:element];
  }];
  [self.referralNotificationsList enumerateObjectsUsingBlock:^(StartupResponseProto_ReferralNotificationProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:14 value:element];
  }];
  [self.noticesToPlayersList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:15 value:element];
  }];
  [self.globalChatsList enumerateObjectsUsingBlock:^(GroupChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:16 value:element];
  }];
  [self.clanChatsList enumerateObjectsUsingBlock:^(GroupChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:17 value:element];
  }];
  [self.pcppList enumerateObjectsUsingBlock:^(PrivateChatPostProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:18 value:element];
  }];
  [self.usersMonstersList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:19 value:element];
  }];
  [self.monstersHealingList enumerateObjectsUsingBlock:^(UserMonsterHealingProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:20 value:element];
  }];
  if (self.hasEnhancements) {
    [output writeMessage:21 value:self.enhancements];
  }
  [self.rareBoosterPurchasesList enumerateObjectsUsingBlock:^(RareBoosterPurchaseProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:22 value:element];
  }];
  if (self.hasKabamNaid) {
    [output writeString:23 value:self.kabamNaid];
  }
  [self.invitesToMeForSlotsList enumerateObjectsUsingBlock:^(UserFacebookInviteForSlotProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:24 value:element];
  }];
  [self.invitesFromMeForSlotsList enumerateObjectsUsingBlock:^(UserFacebookInviteForSlotProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:25 value:element];
  }];
  if (self.hasStaticDataStuffProto) {
    [output writeMessage:26 value:self.staticDataStuffProto];
  }
  const NSUInteger redeemedQuestIdsListCount = self.redeemedQuestIdsList.count;
  if (redeemedQuestIdsListCount > 0) {
    const int32_t *values = (const int32_t *)self.redeemedQuestIdsList.data;
    for (NSUInteger i = 0; i < redeemedQuestIdsListCount; ++i) {
      [output writeInt32:27 value:values[i]];
    }
  }
  const NSUInteger taskIdForCurrentCityBossListCount = self.taskIdForCurrentCityBossList.count;
  if (taskIdForCurrentCityBossListCount > 0) {
    const int32_t *values = (const int32_t *)self.taskIdForCurrentCityBossList.data;
    for (NSUInteger i = 0; i < taskIdForCurrentCityBossListCount; ++i) {
      [output writeInt32:28 value:values[i]];
    }
  }
  if (self.hasEvolution) {
    [output writeMessage:29 value:self.evolution];
  }
  [self.userEventsList enumerateObjectsUsingBlock:^(UserPersistentEventProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:30 value:element];
  }];
  if (self.hasCurRaidClanInfo) {
    [output writeMessage:31 value:self.curRaidClanInfo];
  }
  [self.curRaidClanUserInfoList enumerateObjectsUsingBlock:^(PersistentClanEventUserInfoProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:32 value:element];
  }];
  [self.raidStageHistoryList enumerateObjectsUsingBlock:^(PersistentClanEventRaidStageHistoryProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:33 value:element];
  }];
  if (self.hasTutorialConstants) {
    [output writeMessage:34 value:self.tutorialConstants];
  }
  [self.recentNbattlesList enumerateObjectsUsingBlock:^(PvpHistoryProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:35 value:element];
  }];
  if (self.hasCurTask) {
    [output writeMessage:36 value:self.curTask];
  }
  [self.curTaskStagesList enumerateObjectsUsingBlock:^(TaskStageProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:37 value:element];
  }];
  [self.userAchievementsList enumerateObjectsUsingBlock:^(UserAchievementProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:38 value:element];
  }];
  [self.userMiniJobProtosList enumerateObjectsUsingBlock:^(UserMiniJobProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:39 value:element];
  }];
  [self.userItemsList enumerateObjectsUsingBlock:^(UserItemProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:40 value:element];
  }];
  [self.clanHelpingsList enumerateObjectsUsingBlock:^(ClanHelpProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:41 value:element];
  }];
  [self.clanInvitesList enumerateObjectsUsingBlock:^(ClanInviteProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:42 value:element];
  }];
  if (self.hasClanData) {
    [output writeMessage:43 value:self.clanData];
  }
  [self.itemsInUseList enumerateObjectsUsingBlock:^(UserItemUsageProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:44 value:element];
  }];
  [self.giftsList enumerateObjectsUsingBlock:^(UserItemSecretGiftProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:45 value:element];
  }];
  [self.completedTasksList enumerateObjectsUsingBlock:^(UserTaskCompletedProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:46 value:element];
  }];
  [self.userPvpBoardObstaclesList enumerateObjectsUsingBlock:^(UserPvpBoardObstacleProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:47 value:element];
  }];
  [self.battleItemQueueList enumerateObjectsUsingBlock:^(BattleItemQueueForUserProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:48 value:element];
  }];
  [self.battleItemList enumerateObjectsUsingBlock:^(UserBattleItemProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:49 value:element];
  }];
  [self.userResearchsList enumerateObjectsUsingBlock:^(UserResearchProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:50 value:element];
  }];
  [self.salesPackagesList enumerateObjectsUsingBlock:^(SalesPackageProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:51 value:element];
  }];
  if (self.hasUserMiniEvent) {
    [output writeMessage:52 value:self.userMiniEvent];
  }
  if (self.hasUserDefaultLanguages) {
    [output writeMessage:53 value:self.userDefaultLanguages];
  }
  [self.userClanGiftsList enumerateObjectsUsingBlock:^(UserClanGiftProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:500 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasServerTimeMillis) {
    size_ += computeInt64Size(1, self.serverTimeMillis);
  }
  if (self.hasSender) {
    size_ += computeMessageSize(2, self.sender);
  }
  if (self.hasStartupStatus) {
    size_ += computeEnumSize(3, self.startupStatus);
  }
  if (self.hasUpdateStatus) {
    size_ += computeEnumSize(4, self.updateStatus);
  }
  if (self.hasStartupConstants) {
    size_ += computeMessageSize(5, self.startupConstants);
  }
  [self.userQuestsList enumerateObjectsUsingBlock:^(FullUserQuestProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(6, element);
  }];
  [self.userClanInfoList enumerateObjectsUsingBlock:^(FullUserClanProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(7, element);
  }];
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.completedTaskIdsList.count;
    const int32_t *values = (const int32_t *)self.completedTaskIdsList.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasAppStoreUrl) {
    size_ += computeStringSize(9, self.appStoreUrl);
  }
  if (self.hasReviewPageUrl) {
    size_ += computeStringSize(10, self.reviewPageUrl);
  }
  if (self.hasReviewPageConfirmationMessage) {
    size_ += computeStringSize(11, self.reviewPageConfirmationMessage);
  }
  if (self.hasPlayerHasBoughtInAppPurchase) {
    size_ += computeBoolSize(12, self.playerHasBoughtInAppPurchase);
  }
  [self.attackNotificationsList enumerateObjectsUsingBlock:^(StartupResponseProto_AttackedNotificationProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(13, element);
  }];
  [self.referralNotificationsList enumerateObjectsUsingBlock:^(StartupResponseProto_ReferralNotificationProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(14, element);
  }];
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.noticesToPlayersList.count;
    [self.noticesToPlayersList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  [self.globalChatsList enumerateObjectsUsingBlock:^(GroupChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(16, element);
  }];
  [self.clanChatsList enumerateObjectsUsingBlock:^(GroupChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(17, element);
  }];
  [self.pcppList enumerateObjectsUsingBlock:^(PrivateChatPostProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(18, element);
  }];
  [self.usersMonstersList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(19, element);
  }];
  [self.monstersHealingList enumerateObjectsUsingBlock:^(UserMonsterHealingProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(20, element);
  }];
  if (self.hasEnhancements) {
    size_ += computeMessageSize(21, self.enhancements);
  }
  [self.rareBoosterPurchasesList enumerateObjectsUsingBlock:^(RareBoosterPurchaseProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(22, element);
  }];
  if (self.hasKabamNaid) {
    size_ += computeStringSize(23, self.kabamNaid);
  }
  [self.invitesToMeForSlotsList enumerateObjectsUsingBlock:^(UserFacebookInviteForSlotProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(24, element);
  }];
  [self.invitesFromMeForSlotsList enumerateObjectsUsingBlock:^(UserFacebookInviteForSlotProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(25, element);
  }];
  if (self.hasStaticDataStuffProto) {
    size_ += computeMessageSize(26, self.staticDataStuffProto);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.redeemedQuestIdsList.count;
    const int32_t *values = (const int32_t *)self.redeemedQuestIdsList.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(2 * count);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.taskIdForCurrentCityBossList.count;
    const int32_t *values = (const int32_t *)self.taskIdForCurrentCityBossList.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(2 * count);
  }
  if (self.hasEvolution) {
    size_ += computeMessageSize(29, self.evolution);
  }
  [self.userEventsList enumerateObjectsUsingBlock:^(UserPersistentEventProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(30, element);
  }];
  if (self.hasCurRaidClanInfo) {
    size_ += computeMessageSize(31, self.curRaidClanInfo);
  }
  [self.curRaidClanUserInfoList enumerateObjectsUsingBlock:^(PersistentClanEventUserInfoProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(32, element);
  }];
  [self.raidStageHistoryList enumerateObjectsUsingBlock:^(PersistentClanEventRaidStageHistoryProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(33, element);
  }];
  if (self.hasTutorialConstants) {
    size_ += computeMessageSize(34, self.tutorialConstants);
  }
  [self.recentNbattlesList enumerateObjectsUsingBlock:^(PvpHistoryProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(35, element);
  }];
  if (self.hasCurTask) {
    size_ += computeMessageSize(36, self.curTask);
  }
  [self.curTaskStagesList enumerateObjectsUsingBlock:^(TaskStageProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(37, element);
  }];
  [self.userAchievementsList enumerateObjectsUsingBlock:^(UserAchievementProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(38, element);
  }];
  [self.userMiniJobProtosList enumerateObjectsUsingBlock:^(UserMiniJobProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(39, element);
  }];
  [self.userItemsList enumerateObjectsUsingBlock:^(UserItemProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(40, element);
  }];
  [self.clanHelpingsList enumerateObjectsUsingBlock:^(ClanHelpProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(41, element);
  }];
  [self.clanInvitesList enumerateObjectsUsingBlock:^(ClanInviteProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(42, element);
  }];
  if (self.hasClanData) {
    size_ += computeMessageSize(43, self.clanData);
  }
  [self.itemsInUseList enumerateObjectsUsingBlock:^(UserItemUsageProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(44, element);
  }];
  [self.giftsList enumerateObjectsUsingBlock:^(UserItemSecretGiftProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(45, element);
  }];
  [self.completedTasksList enumerateObjectsUsingBlock:^(UserTaskCompletedProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(46, element);
  }];
  [self.userPvpBoardObstaclesList enumerateObjectsUsingBlock:^(UserPvpBoardObstacleProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(47, element);
  }];
  [self.battleItemQueueList enumerateObjectsUsingBlock:^(BattleItemQueueForUserProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(48, element);
  }];
  [self.battleItemList enumerateObjectsUsingBlock:^(UserBattleItemProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(49, element);
  }];
  [self.userResearchsList enumerateObjectsUsingBlock:^(UserResearchProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(50, element);
  }];
  [self.salesPackagesList enumerateObjectsUsingBlock:^(SalesPackageProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(51, element);
  }];
  if (self.hasUserMiniEvent) {
    size_ += computeMessageSize(52, self.userMiniEvent);
  }
  if (self.hasUserDefaultLanguages) {
    size_ += computeMessageSize(53, self.userDefaultLanguages);
  }
  [self.userClanGiftsList enumerateObjectsUsingBlock:^(UserClanGiftProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(500, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto*) parseFromData:(NSData*) data {
  return (StartupResponseProto*)[[[StartupResponseProto builder] mergeFromData:data] build];
}
+ (StartupResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto*)[[[StartupResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto*)[[[StartupResponseProto builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto*)[[[StartupResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto*)[[[StartupResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto*)[[[StartupResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_Builder*) builder {
  return [[StartupResponseProto_Builder alloc] init];
}
+ (StartupResponseProto_Builder*) builderWithPrototype:(StartupResponseProto*) prototype {
  return [[StartupResponseProto builder] mergeFrom:prototype];
}
- (StartupResponseProto_Builder*) builder {
  return [StartupResponseProto builder];
}
- (StartupResponseProto_Builder*) toBuilder {
  return [StartupResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasServerTimeMillis) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverTimeMillis", [NSNumber numberWithLongLong:self.serverTimeMillis]];
  }
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStartupStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startupStatus", [NSNumber numberWithInteger:self.startupStatus]];
  }
  if (self.hasUpdateStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateStatus", [NSNumber numberWithInteger:self.updateStatus]];
  }
  if (self.hasStartupConstants) {
    [output appendFormat:@"%@%@ {\n", indent, @"startupConstants"];
    [self.startupConstants writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.userQuestsList enumerateObjectsUsingBlock:^(FullUserQuestProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userQuests"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.userClanInfoList enumerateObjectsUsingBlock:^(FullUserClanProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userClanInfo"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.completedTaskIdsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"completedTaskIds", obj];
  }];
  if (self.hasAppStoreUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"appStoreUrl", self.appStoreUrl];
  }
  if (self.hasReviewPageUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reviewPageUrl", self.reviewPageUrl];
  }
  if (self.hasReviewPageConfirmationMessage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reviewPageConfirmationMessage", self.reviewPageConfirmationMessage];
  }
  if (self.hasPlayerHasBoughtInAppPurchase) {
    [output appendFormat:@"%@%@: %@\n", indent, @"playerHasBoughtInAppPurchase", [NSNumber numberWithBool:self.playerHasBoughtInAppPurchase]];
  }
  [self.attackNotificationsList enumerateObjectsUsingBlock:^(StartupResponseProto_AttackedNotificationProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attackNotifications"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.referralNotificationsList enumerateObjectsUsingBlock:^(StartupResponseProto_ReferralNotificationProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"referralNotifications"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.noticesToPlayersList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"noticesToPlayers", obj];
  }];
  [self.globalChatsList enumerateObjectsUsingBlock:^(GroupChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"globalChats"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.clanChatsList enumerateObjectsUsingBlock:^(GroupChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanChats"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.pcppList enumerateObjectsUsingBlock:^(PrivateChatPostProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"pcpp"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.usersMonstersList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"usersMonsters"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.monstersHealingList enumerateObjectsUsingBlock:^(UserMonsterHealingProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"monstersHealing"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasEnhancements) {
    [output appendFormat:@"%@%@ {\n", indent, @"enhancements"];
    [self.enhancements writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.rareBoosterPurchasesList enumerateObjectsUsingBlock:^(RareBoosterPurchaseProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"rareBoosterPurchases"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasKabamNaid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"kabamNaid", self.kabamNaid];
  }
  [self.invitesToMeForSlotsList enumerateObjectsUsingBlock:^(UserFacebookInviteForSlotProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"invitesToMeForSlots"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.invitesFromMeForSlotsList enumerateObjectsUsingBlock:^(UserFacebookInviteForSlotProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"invitesFromMeForSlots"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasStaticDataStuffProto) {
    [output appendFormat:@"%@%@ {\n", indent, @"staticDataStuffProto"];
    [self.staticDataStuffProto writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.redeemedQuestIdsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"redeemedQuestIds", obj];
  }];
  [self.taskIdForCurrentCityBossList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskIdForCurrentCityBoss", obj];
  }];
  if (self.hasEvolution) {
    [output appendFormat:@"%@%@ {\n", indent, @"evolution"];
    [self.evolution writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.userEventsList enumerateObjectsUsingBlock:^(UserPersistentEventProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userEvents"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasCurRaidClanInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"curRaidClanInfo"];
    [self.curRaidClanInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.curRaidClanUserInfoList enumerateObjectsUsingBlock:^(PersistentClanEventUserInfoProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"curRaidClanUserInfo"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.raidStageHistoryList enumerateObjectsUsingBlock:^(PersistentClanEventRaidStageHistoryProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"raidStageHistory"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasTutorialConstants) {
    [output appendFormat:@"%@%@ {\n", indent, @"tutorialConstants"];
    [self.tutorialConstants writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.recentNbattlesList enumerateObjectsUsingBlock:^(PvpHistoryProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"recentNbattles"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasCurTask) {
    [output appendFormat:@"%@%@ {\n", indent, @"curTask"];
    [self.curTask writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.curTaskStagesList enumerateObjectsUsingBlock:^(TaskStageProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"curTaskStages"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.userAchievementsList enumerateObjectsUsingBlock:^(UserAchievementProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userAchievements"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.userMiniJobProtosList enumerateObjectsUsingBlock:^(UserMiniJobProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userMiniJobProtos"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.userItemsList enumerateObjectsUsingBlock:^(UserItemProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userItems"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.clanHelpingsList enumerateObjectsUsingBlock:^(ClanHelpProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanHelpings"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.clanInvitesList enumerateObjectsUsingBlock:^(ClanInviteProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanInvites"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasClanData) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanData"];
    [self.clanData writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.itemsInUseList enumerateObjectsUsingBlock:^(UserItemUsageProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"itemsInUse"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.giftsList enumerateObjectsUsingBlock:^(UserItemSecretGiftProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"gifts"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.completedTasksList enumerateObjectsUsingBlock:^(UserTaskCompletedProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"completedTasks"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.userPvpBoardObstaclesList enumerateObjectsUsingBlock:^(UserPvpBoardObstacleProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userPvpBoardObstacles"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.battleItemQueueList enumerateObjectsUsingBlock:^(BattleItemQueueForUserProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"battleItemQueue"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.battleItemList enumerateObjectsUsingBlock:^(UserBattleItemProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"battleItem"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.userResearchsList enumerateObjectsUsingBlock:^(UserResearchProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userResearchs"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.salesPackagesList enumerateObjectsUsingBlock:^(SalesPackageProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"salesPackages"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasUserMiniEvent) {
    [output appendFormat:@"%@%@ {\n", indent, @"userMiniEvent"];
    [self.userMiniEvent writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasUserDefaultLanguages) {
    [output appendFormat:@"%@%@ {\n", indent, @"userDefaultLanguages"];
    [self.userDefaultLanguages writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.userClanGiftsList enumerateObjectsUsingBlock:^(UserClanGiftProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userClanGifts"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto class]]) {
    return NO;
  }
  StartupResponseProto *otherMessage = other;
  return
      self.hasServerTimeMillis == otherMessage.hasServerTimeMillis &&
      (!self.hasServerTimeMillis || self.serverTimeMillis == otherMessage.serverTimeMillis) &&
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStartupStatus == otherMessage.hasStartupStatus &&
      (!self.hasStartupStatus || self.startupStatus == otherMessage.startupStatus) &&
      self.hasUpdateStatus == otherMessage.hasUpdateStatus &&
      (!self.hasUpdateStatus || self.updateStatus == otherMessage.updateStatus) &&
      self.hasStartupConstants == otherMessage.hasStartupConstants &&
      (!self.hasStartupConstants || [self.startupConstants isEqual:otherMessage.startupConstants]) &&
      [self.userQuestsList isEqualToArray:otherMessage.userQuestsList] &&
      [self.userClanInfoList isEqualToArray:otherMessage.userClanInfoList] &&
      [self.completedTaskIdsList isEqualToArray:otherMessage.completedTaskIdsList] &&
      self.hasAppStoreUrl == otherMessage.hasAppStoreUrl &&
      (!self.hasAppStoreUrl || [self.appStoreUrl isEqual:otherMessage.appStoreUrl]) &&
      self.hasReviewPageUrl == otherMessage.hasReviewPageUrl &&
      (!self.hasReviewPageUrl || [self.reviewPageUrl isEqual:otherMessage.reviewPageUrl]) &&
      self.hasReviewPageConfirmationMessage == otherMessage.hasReviewPageConfirmationMessage &&
      (!self.hasReviewPageConfirmationMessage || [self.reviewPageConfirmationMessage isEqual:otherMessage.reviewPageConfirmationMessage]) &&
      self.hasPlayerHasBoughtInAppPurchase == otherMessage.hasPlayerHasBoughtInAppPurchase &&
      (!self.hasPlayerHasBoughtInAppPurchase || self.playerHasBoughtInAppPurchase == otherMessage.playerHasBoughtInAppPurchase) &&
      [self.attackNotificationsList isEqualToArray:otherMessage.attackNotificationsList] &&
      [self.referralNotificationsList isEqualToArray:otherMessage.referralNotificationsList] &&
      [self.noticesToPlayersList isEqualToArray:otherMessage.noticesToPlayersList] &&
      [self.globalChatsList isEqualToArray:otherMessage.globalChatsList] &&
      [self.clanChatsList isEqualToArray:otherMessage.clanChatsList] &&
      [self.pcppList isEqualToArray:otherMessage.pcppList] &&
      [self.usersMonstersList isEqualToArray:otherMessage.usersMonstersList] &&
      [self.monstersHealingList isEqualToArray:otherMessage.monstersHealingList] &&
      self.hasEnhancements == otherMessage.hasEnhancements &&
      (!self.hasEnhancements || [self.enhancements isEqual:otherMessage.enhancements]) &&
      [self.rareBoosterPurchasesList isEqualToArray:otherMessage.rareBoosterPurchasesList] &&
      self.hasKabamNaid == otherMessage.hasKabamNaid &&
      (!self.hasKabamNaid || [self.kabamNaid isEqual:otherMessage.kabamNaid]) &&
      [self.invitesToMeForSlotsList isEqualToArray:otherMessage.invitesToMeForSlotsList] &&
      [self.invitesFromMeForSlotsList isEqualToArray:otherMessage.invitesFromMeForSlotsList] &&
      self.hasStaticDataStuffProto == otherMessage.hasStaticDataStuffProto &&
      (!self.hasStaticDataStuffProto || [self.staticDataStuffProto isEqual:otherMessage.staticDataStuffProto]) &&
      [self.redeemedQuestIdsList isEqualToArray:otherMessage.redeemedQuestIdsList] &&
      [self.taskIdForCurrentCityBossList isEqualToArray:otherMessage.taskIdForCurrentCityBossList] &&
      self.hasEvolution == otherMessage.hasEvolution &&
      (!self.hasEvolution || [self.evolution isEqual:otherMessage.evolution]) &&
      [self.userEventsList isEqualToArray:otherMessage.userEventsList] &&
      self.hasCurRaidClanInfo == otherMessage.hasCurRaidClanInfo &&
      (!self.hasCurRaidClanInfo || [self.curRaidClanInfo isEqual:otherMessage.curRaidClanInfo]) &&
      [self.curRaidClanUserInfoList isEqualToArray:otherMessage.curRaidClanUserInfoList] &&
      [self.raidStageHistoryList isEqualToArray:otherMessage.raidStageHistoryList] &&
      self.hasTutorialConstants == otherMessage.hasTutorialConstants &&
      (!self.hasTutorialConstants || [self.tutorialConstants isEqual:otherMessage.tutorialConstants]) &&
      [self.recentNbattlesList isEqualToArray:otherMessage.recentNbattlesList] &&
      self.hasCurTask == otherMessage.hasCurTask &&
      (!self.hasCurTask || [self.curTask isEqual:otherMessage.curTask]) &&
      [self.curTaskStagesList isEqualToArray:otherMessage.curTaskStagesList] &&
      [self.userAchievementsList isEqualToArray:otherMessage.userAchievementsList] &&
      [self.userMiniJobProtosList isEqualToArray:otherMessage.userMiniJobProtosList] &&
      [self.userItemsList isEqualToArray:otherMessage.userItemsList] &&
      [self.clanHelpingsList isEqualToArray:otherMessage.clanHelpingsList] &&
      [self.clanInvitesList isEqualToArray:otherMessage.clanInvitesList] &&
      self.hasClanData == otherMessage.hasClanData &&
      (!self.hasClanData || [self.clanData isEqual:otherMessage.clanData]) &&
      [self.itemsInUseList isEqualToArray:otherMessage.itemsInUseList] &&
      [self.giftsList isEqualToArray:otherMessage.giftsList] &&
      [self.completedTasksList isEqualToArray:otherMessage.completedTasksList] &&
      [self.userPvpBoardObstaclesList isEqualToArray:otherMessage.userPvpBoardObstaclesList] &&
      [self.battleItemQueueList isEqualToArray:otherMessage.battleItemQueueList] &&
      [self.battleItemList isEqualToArray:otherMessage.battleItemList] &&
      [self.userResearchsList isEqualToArray:otherMessage.userResearchsList] &&
      [self.salesPackagesList isEqualToArray:otherMessage.salesPackagesList] &&
      self.hasUserMiniEvent == otherMessage.hasUserMiniEvent &&
      (!self.hasUserMiniEvent || [self.userMiniEvent isEqual:otherMessage.userMiniEvent]) &&
      self.hasUserDefaultLanguages == otherMessage.hasUserDefaultLanguages &&
      (!self.hasUserDefaultLanguages || [self.userDefaultLanguages isEqual:otherMessage.userDefaultLanguages]) &&
      [self.userClanGiftsList isEqualToArray:otherMessage.userClanGiftsList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasServerTimeMillis) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.serverTimeMillis] hash];
  }
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStartupStatus) {
    hashCode = hashCode * 31 + self.startupStatus;
  }
  if (self.hasUpdateStatus) {
    hashCode = hashCode * 31 + self.updateStatus;
  }
  if (self.hasStartupConstants) {
    hashCode = hashCode * 31 + [self.startupConstants hash];
  }
  [self.userQuestsList enumerateObjectsUsingBlock:^(FullUserQuestProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.userClanInfoList enumerateObjectsUsingBlock:^(FullUserClanProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.completedTaskIdsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  if (self.hasAppStoreUrl) {
    hashCode = hashCode * 31 + [self.appStoreUrl hash];
  }
  if (self.hasReviewPageUrl) {
    hashCode = hashCode * 31 + [self.reviewPageUrl hash];
  }
  if (self.hasReviewPageConfirmationMessage) {
    hashCode = hashCode * 31 + [self.reviewPageConfirmationMessage hash];
  }
  if (self.hasPlayerHasBoughtInAppPurchase) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.playerHasBoughtInAppPurchase] hash];
  }
  [self.attackNotificationsList enumerateObjectsUsingBlock:^(StartupResponseProto_AttackedNotificationProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.referralNotificationsList enumerateObjectsUsingBlock:^(StartupResponseProto_ReferralNotificationProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.noticesToPlayersList enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.globalChatsList enumerateObjectsUsingBlock:^(GroupChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.clanChatsList enumerateObjectsUsingBlock:^(GroupChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.pcppList enumerateObjectsUsingBlock:^(PrivateChatPostProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.usersMonstersList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.monstersHealingList enumerateObjectsUsingBlock:^(UserMonsterHealingProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasEnhancements) {
    hashCode = hashCode * 31 + [self.enhancements hash];
  }
  [self.rareBoosterPurchasesList enumerateObjectsUsingBlock:^(RareBoosterPurchaseProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasKabamNaid) {
    hashCode = hashCode * 31 + [self.kabamNaid hash];
  }
  [self.invitesToMeForSlotsList enumerateObjectsUsingBlock:^(UserFacebookInviteForSlotProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.invitesFromMeForSlotsList enumerateObjectsUsingBlock:^(UserFacebookInviteForSlotProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasStaticDataStuffProto) {
    hashCode = hashCode * 31 + [self.staticDataStuffProto hash];
  }
  [self.redeemedQuestIdsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  [self.taskIdForCurrentCityBossList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  if (self.hasEvolution) {
    hashCode = hashCode * 31 + [self.evolution hash];
  }
  [self.userEventsList enumerateObjectsUsingBlock:^(UserPersistentEventProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasCurRaidClanInfo) {
    hashCode = hashCode * 31 + [self.curRaidClanInfo hash];
  }
  [self.curRaidClanUserInfoList enumerateObjectsUsingBlock:^(PersistentClanEventUserInfoProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.raidStageHistoryList enumerateObjectsUsingBlock:^(PersistentClanEventRaidStageHistoryProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasTutorialConstants) {
    hashCode = hashCode * 31 + [self.tutorialConstants hash];
  }
  [self.recentNbattlesList enumerateObjectsUsingBlock:^(PvpHistoryProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasCurTask) {
    hashCode = hashCode * 31 + [self.curTask hash];
  }
  [self.curTaskStagesList enumerateObjectsUsingBlock:^(TaskStageProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.userAchievementsList enumerateObjectsUsingBlock:^(UserAchievementProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.userMiniJobProtosList enumerateObjectsUsingBlock:^(UserMiniJobProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.userItemsList enumerateObjectsUsingBlock:^(UserItemProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.clanHelpingsList enumerateObjectsUsingBlock:^(ClanHelpProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.clanInvitesList enumerateObjectsUsingBlock:^(ClanInviteProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasClanData) {
    hashCode = hashCode * 31 + [self.clanData hash];
  }
  [self.itemsInUseList enumerateObjectsUsingBlock:^(UserItemUsageProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.giftsList enumerateObjectsUsingBlock:^(UserItemSecretGiftProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.completedTasksList enumerateObjectsUsingBlock:^(UserTaskCompletedProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.userPvpBoardObstaclesList enumerateObjectsUsingBlock:^(UserPvpBoardObstacleProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.battleItemQueueList enumerateObjectsUsingBlock:^(BattleItemQueueForUserProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.battleItemList enumerateObjectsUsingBlock:^(UserBattleItemProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.userResearchsList enumerateObjectsUsingBlock:^(UserResearchProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.salesPackagesList enumerateObjectsUsingBlock:^(SalesPackageProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasUserMiniEvent) {
    hashCode = hashCode * 31 + [self.userMiniEvent hash];
  }
  if (self.hasUserDefaultLanguages) {
    hashCode = hashCode * 31 + [self.userDefaultLanguages hash];
  }
  [self.userClanGiftsList enumerateObjectsUsingBlock:^(UserClanGiftProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL StartupResponseProto_UpdateStatusIsValidValue(StartupResponseProto_UpdateStatus value) {
  switch (value) {
    case StartupResponseProto_UpdateStatusNoUpdate:
    case StartupResponseProto_UpdateStatusMinorUpdate:
    case StartupResponseProto_UpdateStatusMajorUpdate:
      return YES;
    default:
      return NO;
  }
}
BOOL StartupResponseProto_StartupStatusIsValidValue(StartupResponseProto_StartupStatus value) {
  switch (value) {
    case StartupResponseProto_StartupStatusUserInDb:
    case StartupResponseProto_StartupStatusUserNotInDb:
    case StartupResponseProto_StartupStatusServerInMaintenance:
      return YES;
    default:
      return NO;
  }
}
@interface StartupResponseProto_AttackedNotificationProto ()
@property (strong) MinimumUserProto* attacker;
@property int64_t battleCompleteTime;
@property int32_t coinsStolen;
@end

@implementation StartupResponseProto_AttackedNotificationProto

- (BOOL) hasAttacker {
  return !!hasAttacker_;
}
- (void) setHasAttacker:(BOOL) value_ {
  hasAttacker_ = !!value_;
}
@synthesize attacker;
- (BOOL) hasBattleCompleteTime {
  return !!hasBattleCompleteTime_;
}
- (void) setHasBattleCompleteTime:(BOOL) value_ {
  hasBattleCompleteTime_ = !!value_;
}
@synthesize battleCompleteTime;
- (BOOL) hasCoinsStolen {
  return !!hasCoinsStolen_;
}
- (void) setHasCoinsStolen:(BOOL) value_ {
  hasCoinsStolen_ = !!value_;
}
@synthesize coinsStolen;
- (id) init {
  if ((self = [super init])) {
    self.attacker = [MinimumUserProto defaultInstance];
    self.battleCompleteTime = 0L;
    self.coinsStolen = 0;
  }
  return self;
}
static StartupResponseProto_AttackedNotificationProto* defaultStartupResponseProto_AttackedNotificationProtoInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_AttackedNotificationProto class]) {
    defaultStartupResponseProto_AttackedNotificationProtoInstance = [[StartupResponseProto_AttackedNotificationProto alloc] init];
  }
}
+ (StartupResponseProto_AttackedNotificationProto*) defaultInstance {
  return defaultStartupResponseProto_AttackedNotificationProtoInstance;
}
- (StartupResponseProto_AttackedNotificationProto*) defaultInstance {
  return defaultStartupResponseProto_AttackedNotificationProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAttacker) {
    [output writeMessage:1 value:self.attacker];
  }
  if (self.hasBattleCompleteTime) {
    [output writeInt64:2 value:self.battleCompleteTime];
  }
  if (self.hasCoinsStolen) {
    [output writeInt32:3 value:self.coinsStolen];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAttacker) {
    size_ += computeMessageSize(1, self.attacker);
  }
  if (self.hasBattleCompleteTime) {
    size_ += computeInt64Size(2, self.battleCompleteTime);
  }
  if (self.hasCoinsStolen) {
    size_ += computeInt32Size(3, self.coinsStolen);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_AttackedNotificationProto*) parseFromData:(NSData*) data {
  return (StartupResponseProto_AttackedNotificationProto*)[[[StartupResponseProto_AttackedNotificationProto builder] mergeFromData:data] build];
}
+ (StartupResponseProto_AttackedNotificationProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_AttackedNotificationProto*)[[[StartupResponseProto_AttackedNotificationProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_AttackedNotificationProto*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_AttackedNotificationProto*)[[[StartupResponseProto_AttackedNotificationProto builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_AttackedNotificationProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_AttackedNotificationProto*)[[[StartupResponseProto_AttackedNotificationProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_AttackedNotificationProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_AttackedNotificationProto*)[[[StartupResponseProto_AttackedNotificationProto builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_AttackedNotificationProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_AttackedNotificationProto*)[[[StartupResponseProto_AttackedNotificationProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_AttackedNotificationProto_Builder*) builder {
  return [[StartupResponseProto_AttackedNotificationProto_Builder alloc] init];
}
+ (StartupResponseProto_AttackedNotificationProto_Builder*) builderWithPrototype:(StartupResponseProto_AttackedNotificationProto*) prototype {
  return [[StartupResponseProto_AttackedNotificationProto builder] mergeFrom:prototype];
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) builder {
  return [StartupResponseProto_AttackedNotificationProto builder];
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) toBuilder {
  return [StartupResponseProto_AttackedNotificationProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAttacker) {
    [output appendFormat:@"%@%@ {\n", indent, @"attacker"];
    [self.attacker writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasBattleCompleteTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"battleCompleteTime", [NSNumber numberWithLongLong:self.battleCompleteTime]];
  }
  if (self.hasCoinsStolen) {
    [output appendFormat:@"%@%@: %@\n", indent, @"coinsStolen", [NSNumber numberWithInteger:self.coinsStolen]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_AttackedNotificationProto class]]) {
    return NO;
  }
  StartupResponseProto_AttackedNotificationProto *otherMessage = other;
  return
      self.hasAttacker == otherMessage.hasAttacker &&
      (!self.hasAttacker || [self.attacker isEqual:otherMessage.attacker]) &&
      self.hasBattleCompleteTime == otherMessage.hasBattleCompleteTime &&
      (!self.hasBattleCompleteTime || self.battleCompleteTime == otherMessage.battleCompleteTime) &&
      self.hasCoinsStolen == otherMessage.hasCoinsStolen &&
      (!self.hasCoinsStolen || self.coinsStolen == otherMessage.coinsStolen) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAttacker) {
    hashCode = hashCode * 31 + [self.attacker hash];
  }
  if (self.hasBattleCompleteTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.battleCompleteTime] hash];
  }
  if (self.hasCoinsStolen) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.coinsStolen] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_AttackedNotificationProto_Builder()
@property (strong) StartupResponseProto_AttackedNotificationProto* result;
@end

@implementation StartupResponseProto_AttackedNotificationProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_AttackedNotificationProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) clear {
  self.result = [[StartupResponseProto_AttackedNotificationProto alloc] init];
  return self;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) clone {
  return [StartupResponseProto_AttackedNotificationProto builderWithPrototype:result];
}
- (StartupResponseProto_AttackedNotificationProto*) defaultInstance {
  return [StartupResponseProto_AttackedNotificationProto defaultInstance];
}
- (StartupResponseProto_AttackedNotificationProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_AttackedNotificationProto*) buildPartial {
  StartupResponseProto_AttackedNotificationProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) mergeFrom:(StartupResponseProto_AttackedNotificationProto*) other {
  if (other == [StartupResponseProto_AttackedNotificationProto defaultInstance]) {
    return self;
  }
  if (other.hasAttacker) {
    [self mergeAttacker:other.attacker];
  }
  if (other.hasBattleCompleteTime) {
    [self setBattleCompleteTime:other.battleCompleteTime];
  }
  if (other.hasCoinsStolen) {
    [self setCoinsStolen:other.coinsStolen];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasAttacker) {
          [subBuilder mergeFrom:self.attacker];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAttacker:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setBattleCompleteTime:[input readInt64]];
        break;
      }
      case 24: {
        [self setCoinsStolen:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAttacker {
  return result.hasAttacker;
}
- (MinimumUserProto*) attacker {
  return result.attacker;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) setAttacker:(MinimumUserProto*) value {
  result.hasAttacker = YES;
  result.attacker = value;
  return self;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) setAttacker_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setAttacker:[builderForValue build]];
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) mergeAttacker:(MinimumUserProto*) value {
  if (result.hasAttacker &&
      result.attacker != [MinimumUserProto defaultInstance]) {
    result.attacker =
      [[[MinimumUserProto builderWithPrototype:result.attacker] mergeFrom:value] buildPartial];
  } else {
    result.attacker = value;
  }
  result.hasAttacker = YES;
  return self;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) clearAttacker {
  result.hasAttacker = NO;
  result.attacker = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasBattleCompleteTime {
  return result.hasBattleCompleteTime;
}
- (int64_t) battleCompleteTime {
  return result.battleCompleteTime;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) setBattleCompleteTime:(int64_t) value {
  result.hasBattleCompleteTime = YES;
  result.battleCompleteTime = value;
  return self;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) clearBattleCompleteTime {
  result.hasBattleCompleteTime = NO;
  result.battleCompleteTime = 0L;
  return self;
}
- (BOOL) hasCoinsStolen {
  return result.hasCoinsStolen;
}
- (int32_t) coinsStolen {
  return result.coinsStolen;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) setCoinsStolen:(int32_t) value {
  result.hasCoinsStolen = YES;
  result.coinsStolen = value;
  return self;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) clearCoinsStolen {
  result.hasCoinsStolen = NO;
  result.coinsStolen = 0;
  return self;
}
@end

@interface StartupResponseProto_ReferralNotificationProto ()
@property (strong) MinimumUserProto* referred;
@property int64_t recruitTime;
@property int32_t coinsGivenToReferrer;
@end

@implementation StartupResponseProto_ReferralNotificationProto

- (BOOL) hasReferred {
  return !!hasReferred_;
}
- (void) setHasReferred:(BOOL) value_ {
  hasReferred_ = !!value_;
}
@synthesize referred;
- (BOOL) hasRecruitTime {
  return !!hasRecruitTime_;
}
- (void) setHasRecruitTime:(BOOL) value_ {
  hasRecruitTime_ = !!value_;
}
@synthesize recruitTime;
- (BOOL) hasCoinsGivenToReferrer {
  return !!hasCoinsGivenToReferrer_;
}
- (void) setHasCoinsGivenToReferrer:(BOOL) value_ {
  hasCoinsGivenToReferrer_ = !!value_;
}
@synthesize coinsGivenToReferrer;
- (id) init {
  if ((self = [super init])) {
    self.referred = [MinimumUserProto defaultInstance];
    self.recruitTime = 0L;
    self.coinsGivenToReferrer = 0;
  }
  return self;
}
static StartupResponseProto_ReferralNotificationProto* defaultStartupResponseProto_ReferralNotificationProtoInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_ReferralNotificationProto class]) {
    defaultStartupResponseProto_ReferralNotificationProtoInstance = [[StartupResponseProto_ReferralNotificationProto alloc] init];
  }
}
+ (StartupResponseProto_ReferralNotificationProto*) defaultInstance {
  return defaultStartupResponseProto_ReferralNotificationProtoInstance;
}
- (StartupResponseProto_ReferralNotificationProto*) defaultInstance {
  return defaultStartupResponseProto_ReferralNotificationProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasReferred) {
    [output writeMessage:1 value:self.referred];
  }
  if (self.hasRecruitTime) {
    [output writeInt64:2 value:self.recruitTime];
  }
  if (self.hasCoinsGivenToReferrer) {
    [output writeInt32:3 value:self.coinsGivenToReferrer];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasReferred) {
    size_ += computeMessageSize(1, self.referred);
  }
  if (self.hasRecruitTime) {
    size_ += computeInt64Size(2, self.recruitTime);
  }
  if (self.hasCoinsGivenToReferrer) {
    size_ += computeInt32Size(3, self.coinsGivenToReferrer);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_ReferralNotificationProto*) parseFromData:(NSData*) data {
  return (StartupResponseProto_ReferralNotificationProto*)[[[StartupResponseProto_ReferralNotificationProto builder] mergeFromData:data] build];
}
+ (StartupResponseProto_ReferralNotificationProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_ReferralNotificationProto*)[[[StartupResponseProto_ReferralNotificationProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_ReferralNotificationProto*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_ReferralNotificationProto*)[[[StartupResponseProto_ReferralNotificationProto builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_ReferralNotificationProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_ReferralNotificationProto*)[[[StartupResponseProto_ReferralNotificationProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_ReferralNotificationProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_ReferralNotificationProto*)[[[StartupResponseProto_ReferralNotificationProto builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_ReferralNotificationProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_ReferralNotificationProto*)[[[StartupResponseProto_ReferralNotificationProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_ReferralNotificationProto_Builder*) builder {
  return [[StartupResponseProto_ReferralNotificationProto_Builder alloc] init];
}
+ (StartupResponseProto_ReferralNotificationProto_Builder*) builderWithPrototype:(StartupResponseProto_ReferralNotificationProto*) prototype {
  return [[StartupResponseProto_ReferralNotificationProto builder] mergeFrom:prototype];
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) builder {
  return [StartupResponseProto_ReferralNotificationProto builder];
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) toBuilder {
  return [StartupResponseProto_ReferralNotificationProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasReferred) {
    [output appendFormat:@"%@%@ {\n", indent, @"referred"];
    [self.referred writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasRecruitTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"recruitTime", [NSNumber numberWithLongLong:self.recruitTime]];
  }
  if (self.hasCoinsGivenToReferrer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"coinsGivenToReferrer", [NSNumber numberWithInteger:self.coinsGivenToReferrer]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_ReferralNotificationProto class]]) {
    return NO;
  }
  StartupResponseProto_ReferralNotificationProto *otherMessage = other;
  return
      self.hasReferred == otherMessage.hasReferred &&
      (!self.hasReferred || [self.referred isEqual:otherMessage.referred]) &&
      self.hasRecruitTime == otherMessage.hasRecruitTime &&
      (!self.hasRecruitTime || self.recruitTime == otherMessage.recruitTime) &&
      self.hasCoinsGivenToReferrer == otherMessage.hasCoinsGivenToReferrer &&
      (!self.hasCoinsGivenToReferrer || self.coinsGivenToReferrer == otherMessage.coinsGivenToReferrer) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasReferred) {
    hashCode = hashCode * 31 + [self.referred hash];
  }
  if (self.hasRecruitTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.recruitTime] hash];
  }
  if (self.hasCoinsGivenToReferrer) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.coinsGivenToReferrer] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_ReferralNotificationProto_Builder()
@property (strong) StartupResponseProto_ReferralNotificationProto* result;
@end

@implementation StartupResponseProto_ReferralNotificationProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_ReferralNotificationProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) clear {
  self.result = [[StartupResponseProto_ReferralNotificationProto alloc] init];
  return self;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) clone {
  return [StartupResponseProto_ReferralNotificationProto builderWithPrototype:result];
}
- (StartupResponseProto_ReferralNotificationProto*) defaultInstance {
  return [StartupResponseProto_ReferralNotificationProto defaultInstance];
}
- (StartupResponseProto_ReferralNotificationProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_ReferralNotificationProto*) buildPartial {
  StartupResponseProto_ReferralNotificationProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) mergeFrom:(StartupResponseProto_ReferralNotificationProto*) other {
  if (other == [StartupResponseProto_ReferralNotificationProto defaultInstance]) {
    return self;
  }
  if (other.hasReferred) {
    [self mergeReferred:other.referred];
  }
  if (other.hasRecruitTime) {
    [self setRecruitTime:other.recruitTime];
  }
  if (other.hasCoinsGivenToReferrer) {
    [self setCoinsGivenToReferrer:other.coinsGivenToReferrer];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasReferred) {
          [subBuilder mergeFrom:self.referred];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setReferred:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setRecruitTime:[input readInt64]];
        break;
      }
      case 24: {
        [self setCoinsGivenToReferrer:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasReferred {
  return result.hasReferred;
}
- (MinimumUserProto*) referred {
  return result.referred;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) setReferred:(MinimumUserProto*) value {
  result.hasReferred = YES;
  result.referred = value;
  return self;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) setReferred_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setReferred:[builderForValue build]];
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) mergeReferred:(MinimumUserProto*) value {
  if (result.hasReferred &&
      result.referred != [MinimumUserProto defaultInstance]) {
    result.referred =
      [[[MinimumUserProto builderWithPrototype:result.referred] mergeFrom:value] buildPartial];
  } else {
    result.referred = value;
  }
  result.hasReferred = YES;
  return self;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) clearReferred {
  result.hasReferred = NO;
  result.referred = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasRecruitTime {
  return result.hasRecruitTime;
}
- (int64_t) recruitTime {
  return result.recruitTime;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) setRecruitTime:(int64_t) value {
  result.hasRecruitTime = YES;
  result.recruitTime = value;
  return self;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) clearRecruitTime {
  result.hasRecruitTime = NO;
  result.recruitTime = 0L;
  return self;
}
- (BOOL) hasCoinsGivenToReferrer {
  return result.hasCoinsGivenToReferrer;
}
- (int32_t) coinsGivenToReferrer {
  return result.coinsGivenToReferrer;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) setCoinsGivenToReferrer:(int32_t) value {
  result.hasCoinsGivenToReferrer = YES;
  result.coinsGivenToReferrer = value;
  return self;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) clearCoinsGivenToReferrer {
  result.hasCoinsGivenToReferrer = NO;
  result.coinsGivenToReferrer = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants ()
@property (strong) NSMutableArray * mutableInAppPurchasePackagesList;
@property int32_t maxLevelForUser;
@property int32_t maxNumOfSingleStruct;
@property (strong) NSMutableArray * mutableAnimatedSpriteOffsetsList;
@property int32_t minNameLength;
@property int32_t maxNameLength;
@property int32_t maxLengthOfChatString;
@property (strong) StartupResponseProto_StartupConstants_ClanConstants* clanConstants;
@property (strong) StartupResponseProto_StartupConstants_DownloadableNibConstants* downloadableNibConstants;
@property int32_t numHoursBeforeReshowingGoldSale;
@property int32_t levelToShowRateUsPopup;
@property (strong) StartupResponseProto_StartupConstants_TournamentConstants* touramentConstants;
@property int32_t fbConnectRewardDiamonds;
@property (strong) NSString* faqFileName;
@property (strong) MinimumUserProto* adminChatUserProto;
@property int32_t numBeginnerSalesAllowed;
@property (strong) StartupResponseProto_StartupConstants_UserMonsterConstants* userMonsterConstants;
@property (strong) StartupResponseProto_StartupConstants_MonsterConstants* monsterConstants;
@property Float32 minutesPerGem;
@property Float32 gemsPerResource;
@property int32_t pvpRequiredMinLvl;
@property Float32 monsterDmgMultiplier;
@property Float32 continueBattleGemCostMultiplier;
@property Float32 battleRunAwayBasePercent;
@property Float32 battleRunAwayIncrement;
@property BOOL addAllFbFriends;
@property BOOL facebookPopUp;
@property (strong) StartupResponseProto_StartupConstants_MiniTutorialConstants* miniTuts;
@property int32_t maxObstacles;
@property int32_t minutesPerObstacle;
@property (strong) StartupResponseProto_StartupConstants_TaskMapConstants* taskMapConstants;
@property int32_t maxMinutesForFreeSpeedUp;
@property (strong) NSMutableArray * mutableClanHelpConstantsList;
@property (strong) StartupResponseProto_StartupConstants_PvpConstants* pvpConstant;
@property (strong) NSMutableArray * mutableSucpList;
@property (strong) NSMutableArray * mutableRccpList;
@property BOOL displayRarity;
@property int32_t taskIdOfFirstSkill;
@property int32_t minsToResolicitTeamDonation;
@property (strong) NSMutableArray * mutableFileDownloadProtoList;
@property int32_t taskIdForUpgradeTutorial;
@property (strong) StartupResponseProto_StartupConstants_BoosterPackConstantsProto* boosterPackConstantProto;
@end

@implementation StartupResponseProto_StartupConstants

@synthesize mutableInAppPurchasePackagesList;
@dynamic inAppPurchasePackagesList;
- (BOOL) hasMaxLevelForUser {
  return !!hasMaxLevelForUser_;
}
- (void) setHasMaxLevelForUser:(BOOL) value_ {
  hasMaxLevelForUser_ = !!value_;
}
@synthesize maxLevelForUser;
- (BOOL) hasMaxNumOfSingleStruct {
  return !!hasMaxNumOfSingleStruct_;
}
- (void) setHasMaxNumOfSingleStruct:(BOOL) value_ {
  hasMaxNumOfSingleStruct_ = !!value_;
}
@synthesize maxNumOfSingleStruct;
@synthesize mutableAnimatedSpriteOffsetsList;
@dynamic animatedSpriteOffsetsList;
- (BOOL) hasMinNameLength {
  return !!hasMinNameLength_;
}
- (void) setHasMinNameLength:(BOOL) value_ {
  hasMinNameLength_ = !!value_;
}
@synthesize minNameLength;
- (BOOL) hasMaxNameLength {
  return !!hasMaxNameLength_;
}
- (void) setHasMaxNameLength:(BOOL) value_ {
  hasMaxNameLength_ = !!value_;
}
@synthesize maxNameLength;
- (BOOL) hasMaxLengthOfChatString {
  return !!hasMaxLengthOfChatString_;
}
- (void) setHasMaxLengthOfChatString:(BOOL) value_ {
  hasMaxLengthOfChatString_ = !!value_;
}
@synthesize maxLengthOfChatString;
- (BOOL) hasClanConstants {
  return !!hasClanConstants_;
}
- (void) setHasClanConstants:(BOOL) value_ {
  hasClanConstants_ = !!value_;
}
@synthesize clanConstants;
- (BOOL) hasDownloadableNibConstants {
  return !!hasDownloadableNibConstants_;
}
- (void) setHasDownloadableNibConstants:(BOOL) value_ {
  hasDownloadableNibConstants_ = !!value_;
}
@synthesize downloadableNibConstants;
- (BOOL) hasNumHoursBeforeReshowingGoldSale {
  return !!hasNumHoursBeforeReshowingGoldSale_;
}
- (void) setHasNumHoursBeforeReshowingGoldSale:(BOOL) value_ {
  hasNumHoursBeforeReshowingGoldSale_ = !!value_;
}
@synthesize numHoursBeforeReshowingGoldSale;
- (BOOL) hasLevelToShowRateUsPopup {
  return !!hasLevelToShowRateUsPopup_;
}
- (void) setHasLevelToShowRateUsPopup:(BOOL) value_ {
  hasLevelToShowRateUsPopup_ = !!value_;
}
@synthesize levelToShowRateUsPopup;
- (BOOL) hasTouramentConstants {
  return !!hasTouramentConstants_;
}
- (void) setHasTouramentConstants:(BOOL) value_ {
  hasTouramentConstants_ = !!value_;
}
@synthesize touramentConstants;
- (BOOL) hasFbConnectRewardDiamonds {
  return !!hasFbConnectRewardDiamonds_;
}
- (void) setHasFbConnectRewardDiamonds:(BOOL) value_ {
  hasFbConnectRewardDiamonds_ = !!value_;
}
@synthesize fbConnectRewardDiamonds;
- (BOOL) hasFaqFileName {
  return !!hasFaqFileName_;
}
- (void) setHasFaqFileName:(BOOL) value_ {
  hasFaqFileName_ = !!value_;
}
@synthesize faqFileName;
- (BOOL) hasAdminChatUserProto {
  return !!hasAdminChatUserProto_;
}
- (void) setHasAdminChatUserProto:(BOOL) value_ {
  hasAdminChatUserProto_ = !!value_;
}
@synthesize adminChatUserProto;
- (BOOL) hasNumBeginnerSalesAllowed {
  return !!hasNumBeginnerSalesAllowed_;
}
- (void) setHasNumBeginnerSalesAllowed:(BOOL) value_ {
  hasNumBeginnerSalesAllowed_ = !!value_;
}
@synthesize numBeginnerSalesAllowed;
- (BOOL) hasUserMonsterConstants {
  return !!hasUserMonsterConstants_;
}
- (void) setHasUserMonsterConstants:(BOOL) value_ {
  hasUserMonsterConstants_ = !!value_;
}
@synthesize userMonsterConstants;
- (BOOL) hasMonsterConstants {
  return !!hasMonsterConstants_;
}
- (void) setHasMonsterConstants:(BOOL) value_ {
  hasMonsterConstants_ = !!value_;
}
@synthesize monsterConstants;
- (BOOL) hasMinutesPerGem {
  return !!hasMinutesPerGem_;
}
- (void) setHasMinutesPerGem:(BOOL) value_ {
  hasMinutesPerGem_ = !!value_;
}
@synthesize minutesPerGem;
- (BOOL) hasGemsPerResource {
  return !!hasGemsPerResource_;
}
- (void) setHasGemsPerResource:(BOOL) value_ {
  hasGemsPerResource_ = !!value_;
}
@synthesize gemsPerResource;
- (BOOL) hasPvpRequiredMinLvl {
  return !!hasPvpRequiredMinLvl_;
}
- (void) setHasPvpRequiredMinLvl:(BOOL) value_ {
  hasPvpRequiredMinLvl_ = !!value_;
}
@synthesize pvpRequiredMinLvl;
- (BOOL) hasMonsterDmgMultiplier {
  return !!hasMonsterDmgMultiplier_;
}
- (void) setHasMonsterDmgMultiplier:(BOOL) value_ {
  hasMonsterDmgMultiplier_ = !!value_;
}
@synthesize monsterDmgMultiplier;
- (BOOL) hasContinueBattleGemCostMultiplier {
  return !!hasContinueBattleGemCostMultiplier_;
}
- (void) setHasContinueBattleGemCostMultiplier:(BOOL) value_ {
  hasContinueBattleGemCostMultiplier_ = !!value_;
}
@synthesize continueBattleGemCostMultiplier;
- (BOOL) hasBattleRunAwayBasePercent {
  return !!hasBattleRunAwayBasePercent_;
}
- (void) setHasBattleRunAwayBasePercent:(BOOL) value_ {
  hasBattleRunAwayBasePercent_ = !!value_;
}
@synthesize battleRunAwayBasePercent;
- (BOOL) hasBattleRunAwayIncrement {
  return !!hasBattleRunAwayIncrement_;
}
- (void) setHasBattleRunAwayIncrement:(BOOL) value_ {
  hasBattleRunAwayIncrement_ = !!value_;
}
@synthesize battleRunAwayIncrement;
- (BOOL) hasAddAllFbFriends {
  return !!hasAddAllFbFriends_;
}
- (void) setHasAddAllFbFriends:(BOOL) value_ {
  hasAddAllFbFriends_ = !!value_;
}
- (BOOL) addAllFbFriends {
  return !!addAllFbFriends_;
}
- (void) setAddAllFbFriends:(BOOL) value_ {
  addAllFbFriends_ = !!value_;
}
- (BOOL) hasFacebookPopUp {
  return !!hasFacebookPopUp_;
}
- (void) setHasFacebookPopUp:(BOOL) value_ {
  hasFacebookPopUp_ = !!value_;
}
- (BOOL) facebookPopUp {
  return !!facebookPopUp_;
}
- (void) setFacebookPopUp:(BOOL) value_ {
  facebookPopUp_ = !!value_;
}
- (BOOL) hasMiniTuts {
  return !!hasMiniTuts_;
}
- (void) setHasMiniTuts:(BOOL) value_ {
  hasMiniTuts_ = !!value_;
}
@synthesize miniTuts;
- (BOOL) hasMaxObstacles {
  return !!hasMaxObstacles_;
}
- (void) setHasMaxObstacles:(BOOL) value_ {
  hasMaxObstacles_ = !!value_;
}
@synthesize maxObstacles;
- (BOOL) hasMinutesPerObstacle {
  return !!hasMinutesPerObstacle_;
}
- (void) setHasMinutesPerObstacle:(BOOL) value_ {
  hasMinutesPerObstacle_ = !!value_;
}
@synthesize minutesPerObstacle;
- (BOOL) hasTaskMapConstants {
  return !!hasTaskMapConstants_;
}
- (void) setHasTaskMapConstants:(BOOL) value_ {
  hasTaskMapConstants_ = !!value_;
}
@synthesize taskMapConstants;
- (BOOL) hasMaxMinutesForFreeSpeedUp {
  return !!hasMaxMinutesForFreeSpeedUp_;
}
- (void) setHasMaxMinutesForFreeSpeedUp:(BOOL) value_ {
  hasMaxMinutesForFreeSpeedUp_ = !!value_;
}
@synthesize maxMinutesForFreeSpeedUp;
@synthesize mutableClanHelpConstantsList;
@dynamic clanHelpConstantsList;
- (BOOL) hasPvpConstant {
  return !!hasPvpConstant_;
}
- (void) setHasPvpConstant:(BOOL) value_ {
  hasPvpConstant_ = !!value_;
}
@synthesize pvpConstant;
@synthesize mutableSucpList;
@dynamic sucpList;
@synthesize mutableRccpList;
@dynamic rccpList;
- (BOOL) hasDisplayRarity {
  return !!hasDisplayRarity_;
}
- (void) setHasDisplayRarity:(BOOL) value_ {
  hasDisplayRarity_ = !!value_;
}
- (BOOL) displayRarity {
  return !!displayRarity_;
}
- (void) setDisplayRarity:(BOOL) value_ {
  displayRarity_ = !!value_;
}
- (BOOL) hasTaskIdOfFirstSkill {
  return !!hasTaskIdOfFirstSkill_;
}
- (void) setHasTaskIdOfFirstSkill:(BOOL) value_ {
  hasTaskIdOfFirstSkill_ = !!value_;
}
@synthesize taskIdOfFirstSkill;
- (BOOL) hasMinsToResolicitTeamDonation {
  return !!hasMinsToResolicitTeamDonation_;
}
- (void) setHasMinsToResolicitTeamDonation:(BOOL) value_ {
  hasMinsToResolicitTeamDonation_ = !!value_;
}
@synthesize minsToResolicitTeamDonation;
@synthesize mutableFileDownloadProtoList;
@dynamic fileDownloadProtoList;
- (BOOL) hasTaskIdForUpgradeTutorial {
  return !!hasTaskIdForUpgradeTutorial_;
}
- (void) setHasTaskIdForUpgradeTutorial:(BOOL) value_ {
  hasTaskIdForUpgradeTutorial_ = !!value_;
}
@synthesize taskIdForUpgradeTutorial;
- (BOOL) hasBoosterPackConstantProto {
  return !!hasBoosterPackConstantProto_;
}
- (void) setHasBoosterPackConstantProto:(BOOL) value_ {
  hasBoosterPackConstantProto_ = !!value_;
}
@synthesize boosterPackConstantProto;
- (id) init {
  if ((self = [super init])) {
    self.maxLevelForUser = 0;
    self.maxNumOfSingleStruct = 0;
    self.minNameLength = 0;
    self.maxNameLength = 0;
    self.maxLengthOfChatString = 0;
    self.clanConstants = [StartupResponseProto_StartupConstants_ClanConstants defaultInstance];
    self.downloadableNibConstants = [StartupResponseProto_StartupConstants_DownloadableNibConstants defaultInstance];
    self.numHoursBeforeReshowingGoldSale = 0;
    self.levelToShowRateUsPopup = 0;
    self.touramentConstants = [StartupResponseProto_StartupConstants_TournamentConstants defaultInstance];
    self.fbConnectRewardDiamonds = 0;
    self.faqFileName = @"";
    self.adminChatUserProto = [MinimumUserProto defaultInstance];
    self.numBeginnerSalesAllowed = 0;
    self.userMonsterConstants = [StartupResponseProto_StartupConstants_UserMonsterConstants defaultInstance];
    self.monsterConstants = [StartupResponseProto_StartupConstants_MonsterConstants defaultInstance];
    self.minutesPerGem = 0;
    self.gemsPerResource = 0;
    self.pvpRequiredMinLvl = 0;
    self.monsterDmgMultiplier = 0;
    self.continueBattleGemCostMultiplier = 0;
    self.battleRunAwayBasePercent = 0;
    self.battleRunAwayIncrement = 0;
    self.addAllFbFriends = NO;
    self.facebookPopUp = NO;
    self.miniTuts = [StartupResponseProto_StartupConstants_MiniTutorialConstants defaultInstance];
    self.maxObstacles = 0;
    self.minutesPerObstacle = 0;
    self.taskMapConstants = [StartupResponseProto_StartupConstants_TaskMapConstants defaultInstance];
    self.maxMinutesForFreeSpeedUp = 0;
    self.pvpConstant = [StartupResponseProto_StartupConstants_PvpConstants defaultInstance];
    self.displayRarity = NO;
    self.taskIdOfFirstSkill = 0;
    self.minsToResolicitTeamDonation = 0;
    self.taskIdForUpgradeTutorial = 0;
    self.boosterPackConstantProto = [StartupResponseProto_StartupConstants_BoosterPackConstantsProto defaultInstance];
  }
  return self;
}
static StartupResponseProto_StartupConstants* defaultStartupResponseProto_StartupConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants class]) {
    defaultStartupResponseProto_StartupConstantsInstance = [[StartupResponseProto_StartupConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstantsInstance;
}
- (StartupResponseProto_StartupConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstantsInstance;
}
- (NSArray *)inAppPurchasePackagesList {
  return mutableInAppPurchasePackagesList;
}
- (InAppPurchasePackageProto*)inAppPurchasePackagesAtIndex:(NSUInteger)index {
  return [mutableInAppPurchasePackagesList objectAtIndex:index];
}
- (NSArray *)animatedSpriteOffsetsList {
  return mutableAnimatedSpriteOffsetsList;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*)animatedSpriteOffsetsAtIndex:(NSUInteger)index {
  return [mutableAnimatedSpriteOffsetsList objectAtIndex:index];
}
- (NSArray *)clanHelpConstantsList {
  return mutableClanHelpConstantsList;
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants*)clanHelpConstantsAtIndex:(NSUInteger)index {
  return [mutableClanHelpConstantsList objectAtIndex:index];
}
- (NSArray *)sucpList {
  return mutableSucpList;
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto*)sucpAtIndex:(NSUInteger)index {
  return [mutableSucpList objectAtIndex:index];
}
- (NSArray *)rccpList {
  return mutableRccpList;
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*)rccpAtIndex:(NSUInteger)index {
  return [mutableRccpList objectAtIndex:index];
}
- (NSArray *)fileDownloadProtoList {
  return mutableFileDownloadProtoList;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto*)fileDownloadProtoAtIndex:(NSUInteger)index {
  return [mutableFileDownloadProtoList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.inAppPurchasePackagesList enumerateObjectsUsingBlock:^(InAppPurchasePackageProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasMaxLevelForUser) {
    [output writeInt32:2 value:self.maxLevelForUser];
  }
  if (self.hasMaxNumOfSingleStruct) {
    [output writeInt32:3 value:self.maxNumOfSingleStruct];
  }
  [self.animatedSpriteOffsetsList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  if (self.hasMinNameLength) {
    [output writeInt32:5 value:self.minNameLength];
  }
  if (self.hasMaxNameLength) {
    [output writeInt32:6 value:self.maxNameLength];
  }
  if (self.hasMaxLengthOfChatString) {
    [output writeInt32:7 value:self.maxLengthOfChatString];
  }
  if (self.hasClanConstants) {
    [output writeMessage:8 value:self.clanConstants];
  }
  if (self.hasDownloadableNibConstants) {
    [output writeMessage:9 value:self.downloadableNibConstants];
  }
  if (self.hasNumHoursBeforeReshowingGoldSale) {
    [output writeInt32:10 value:self.numHoursBeforeReshowingGoldSale];
  }
  if (self.hasLevelToShowRateUsPopup) {
    [output writeInt32:11 value:self.levelToShowRateUsPopup];
  }
  if (self.hasTouramentConstants) {
    [output writeMessage:12 value:self.touramentConstants];
  }
  if (self.hasFbConnectRewardDiamonds) {
    [output writeInt32:13 value:self.fbConnectRewardDiamonds];
  }
  if (self.hasFaqFileName) {
    [output writeString:14 value:self.faqFileName];
  }
  if (self.hasAdminChatUserProto) {
    [output writeMessage:15 value:self.adminChatUserProto];
  }
  if (self.hasNumBeginnerSalesAllowed) {
    [output writeInt32:16 value:self.numBeginnerSalesAllowed];
  }
  if (self.hasUserMonsterConstants) {
    [output writeMessage:17 value:self.userMonsterConstants];
  }
  if (self.hasMonsterConstants) {
    [output writeMessage:18 value:self.monsterConstants];
  }
  if (self.hasMinutesPerGem) {
    [output writeFloat:19 value:self.minutesPerGem];
  }
  if (self.hasPvpRequiredMinLvl) {
    [output writeInt32:20 value:self.pvpRequiredMinLvl];
  }
  if (self.hasGemsPerResource) {
    [output writeFloat:21 value:self.gemsPerResource];
  }
  if (self.hasContinueBattleGemCostMultiplier) {
    [output writeFloat:22 value:self.continueBattleGemCostMultiplier];
  }
  if (self.hasAddAllFbFriends) {
    [output writeBool:23 value:self.addAllFbFriends];
  }
  if (self.hasMiniTuts) {
    [output writeMessage:24 value:self.miniTuts];
  }
  if (self.hasMaxObstacles) {
    [output writeInt32:25 value:self.maxObstacles];
  }
  if (self.hasMinutesPerObstacle) {
    [output writeInt32:26 value:self.minutesPerObstacle];
  }
  if (self.hasTaskMapConstants) {
    [output writeMessage:27 value:self.taskMapConstants];
  }
  if (self.hasBattleRunAwayBasePercent) {
    [output writeFloat:28 value:self.battleRunAwayBasePercent];
  }
  if (self.hasBattleRunAwayIncrement) {
    [output writeFloat:29 value:self.battleRunAwayIncrement];
  }
  if (self.hasMaxMinutesForFreeSpeedUp) {
    [output writeInt32:30 value:self.maxMinutesForFreeSpeedUp];
  }
  if (self.hasMonsterDmgMultiplier) {
    [output writeFloat:31 value:self.monsterDmgMultiplier];
  }
  [self.clanHelpConstantsList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_ClanHelpConstants *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:32 value:element];
  }];
  if (self.hasPvpConstant) {
    [output writeMessage:33 value:self.pvpConstant];
  }
  [self.sucpList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_SpeedUpConstantProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:34 value:element];
  }];
  [self.rccpList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_ResourceConversionConstantProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:35 value:element];
  }];
  if (self.hasFacebookPopUp) {
    [output writeBool:36 value:self.facebookPopUp];
  }
  if (self.hasDisplayRarity) {
    [output writeBool:37 value:self.displayRarity];
  }
  if (self.hasTaskIdOfFirstSkill) {
    [output writeInt32:38 value:self.taskIdOfFirstSkill];
  }
  if (self.hasMinsToResolicitTeamDonation) {
    [output writeInt32:39 value:self.minsToResolicitTeamDonation];
  }
  [self.fileDownloadProtoList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_FileDownloadConstantProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:40 value:element];
  }];
  if (self.hasTaskIdForUpgradeTutorial) {
    [output writeInt32:41 value:self.taskIdForUpgradeTutorial];
  }
  if (self.hasBoosterPackConstantProto) {
    [output writeMessage:500 value:self.boosterPackConstantProto];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.inAppPurchasePackagesList enumerateObjectsUsingBlock:^(InAppPurchasePackageProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasMaxLevelForUser) {
    size_ += computeInt32Size(2, self.maxLevelForUser);
  }
  if (self.hasMaxNumOfSingleStruct) {
    size_ += computeInt32Size(3, self.maxNumOfSingleStruct);
  }
  [self.animatedSpriteOffsetsList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  if (self.hasMinNameLength) {
    size_ += computeInt32Size(5, self.minNameLength);
  }
  if (self.hasMaxNameLength) {
    size_ += computeInt32Size(6, self.maxNameLength);
  }
  if (self.hasMaxLengthOfChatString) {
    size_ += computeInt32Size(7, self.maxLengthOfChatString);
  }
  if (self.hasClanConstants) {
    size_ += computeMessageSize(8, self.clanConstants);
  }
  if (self.hasDownloadableNibConstants) {
    size_ += computeMessageSize(9, self.downloadableNibConstants);
  }
  if (self.hasNumHoursBeforeReshowingGoldSale) {
    size_ += computeInt32Size(10, self.numHoursBeforeReshowingGoldSale);
  }
  if (self.hasLevelToShowRateUsPopup) {
    size_ += computeInt32Size(11, self.levelToShowRateUsPopup);
  }
  if (self.hasTouramentConstants) {
    size_ += computeMessageSize(12, self.touramentConstants);
  }
  if (self.hasFbConnectRewardDiamonds) {
    size_ += computeInt32Size(13, self.fbConnectRewardDiamonds);
  }
  if (self.hasFaqFileName) {
    size_ += computeStringSize(14, self.faqFileName);
  }
  if (self.hasAdminChatUserProto) {
    size_ += computeMessageSize(15, self.adminChatUserProto);
  }
  if (self.hasNumBeginnerSalesAllowed) {
    size_ += computeInt32Size(16, self.numBeginnerSalesAllowed);
  }
  if (self.hasUserMonsterConstants) {
    size_ += computeMessageSize(17, self.userMonsterConstants);
  }
  if (self.hasMonsterConstants) {
    size_ += computeMessageSize(18, self.monsterConstants);
  }
  if (self.hasMinutesPerGem) {
    size_ += computeFloatSize(19, self.minutesPerGem);
  }
  if (self.hasPvpRequiredMinLvl) {
    size_ += computeInt32Size(20, self.pvpRequiredMinLvl);
  }
  if (self.hasGemsPerResource) {
    size_ += computeFloatSize(21, self.gemsPerResource);
  }
  if (self.hasContinueBattleGemCostMultiplier) {
    size_ += computeFloatSize(22, self.continueBattleGemCostMultiplier);
  }
  if (self.hasAddAllFbFriends) {
    size_ += computeBoolSize(23, self.addAllFbFriends);
  }
  if (self.hasMiniTuts) {
    size_ += computeMessageSize(24, self.miniTuts);
  }
  if (self.hasMaxObstacles) {
    size_ += computeInt32Size(25, self.maxObstacles);
  }
  if (self.hasMinutesPerObstacle) {
    size_ += computeInt32Size(26, self.minutesPerObstacle);
  }
  if (self.hasTaskMapConstants) {
    size_ += computeMessageSize(27, self.taskMapConstants);
  }
  if (self.hasBattleRunAwayBasePercent) {
    size_ += computeFloatSize(28, self.battleRunAwayBasePercent);
  }
  if (self.hasBattleRunAwayIncrement) {
    size_ += computeFloatSize(29, self.battleRunAwayIncrement);
  }
  if (self.hasMaxMinutesForFreeSpeedUp) {
    size_ += computeInt32Size(30, self.maxMinutesForFreeSpeedUp);
  }
  if (self.hasMonsterDmgMultiplier) {
    size_ += computeFloatSize(31, self.monsterDmgMultiplier);
  }
  [self.clanHelpConstantsList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_ClanHelpConstants *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(32, element);
  }];
  if (self.hasPvpConstant) {
    size_ += computeMessageSize(33, self.pvpConstant);
  }
  [self.sucpList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_SpeedUpConstantProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(34, element);
  }];
  [self.rccpList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_ResourceConversionConstantProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(35, element);
  }];
  if (self.hasFacebookPopUp) {
    size_ += computeBoolSize(36, self.facebookPopUp);
  }
  if (self.hasDisplayRarity) {
    size_ += computeBoolSize(37, self.displayRarity);
  }
  if (self.hasTaskIdOfFirstSkill) {
    size_ += computeInt32Size(38, self.taskIdOfFirstSkill);
  }
  if (self.hasMinsToResolicitTeamDonation) {
    size_ += computeInt32Size(39, self.minsToResolicitTeamDonation);
  }
  [self.fileDownloadProtoList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_FileDownloadConstantProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(40, element);
  }];
  if (self.hasTaskIdForUpgradeTutorial) {
    size_ += computeInt32Size(41, self.taskIdForUpgradeTutorial);
  }
  if (self.hasBoosterPackConstantProto) {
    size_ += computeMessageSize(500, self.boosterPackConstantProto);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_StartupConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants*)[[[StartupResponseProto_StartupConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants*)[[[StartupResponseProto_StartupConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants*)[[[StartupResponseProto_StartupConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants*)[[[StartupResponseProto_StartupConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants*)[[[StartupResponseProto_StartupConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants*)[[[StartupResponseProto_StartupConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_Builder*) builder {
  return [[StartupResponseProto_StartupConstants_Builder alloc] init];
}
+ (StartupResponseProto_StartupConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants*) prototype {
  return [[StartupResponseProto_StartupConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants builder];
}
- (StartupResponseProto_StartupConstants_Builder*) toBuilder {
  return [StartupResponseProto_StartupConstants builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.inAppPurchasePackagesList enumerateObjectsUsingBlock:^(InAppPurchasePackageProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"inAppPurchasePackages"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasMaxLevelForUser) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxLevelForUser", [NSNumber numberWithInteger:self.maxLevelForUser]];
  }
  if (self.hasMaxNumOfSingleStruct) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxNumOfSingleStruct", [NSNumber numberWithInteger:self.maxNumOfSingleStruct]];
  }
  [self.animatedSpriteOffsetsList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"animatedSpriteOffsets"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasMinNameLength) {
    [output appendFormat:@"%@%@: %@\n", indent, @"minNameLength", [NSNumber numberWithInteger:self.minNameLength]];
  }
  if (self.hasMaxNameLength) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxNameLength", [NSNumber numberWithInteger:self.maxNameLength]];
  }
  if (self.hasMaxLengthOfChatString) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxLengthOfChatString", [NSNumber numberWithInteger:self.maxLengthOfChatString]];
  }
  if (self.hasClanConstants) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanConstants"];
    [self.clanConstants writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasDownloadableNibConstants) {
    [output appendFormat:@"%@%@ {\n", indent, @"downloadableNibConstants"];
    [self.downloadableNibConstants writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasNumHoursBeforeReshowingGoldSale) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numHoursBeforeReshowingGoldSale", [NSNumber numberWithInteger:self.numHoursBeforeReshowingGoldSale]];
  }
  if (self.hasLevelToShowRateUsPopup) {
    [output appendFormat:@"%@%@: %@\n", indent, @"levelToShowRateUsPopup", [NSNumber numberWithInteger:self.levelToShowRateUsPopup]];
  }
  if (self.hasTouramentConstants) {
    [output appendFormat:@"%@%@ {\n", indent, @"touramentConstants"];
    [self.touramentConstants writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasFbConnectRewardDiamonds) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fbConnectRewardDiamonds", [NSNumber numberWithInteger:self.fbConnectRewardDiamonds]];
  }
  if (self.hasFaqFileName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"faqFileName", self.faqFileName];
  }
  if (self.hasAdminChatUserProto) {
    [output appendFormat:@"%@%@ {\n", indent, @"adminChatUserProto"];
    [self.adminChatUserProto writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasNumBeginnerSalesAllowed) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numBeginnerSalesAllowed", [NSNumber numberWithInteger:self.numBeginnerSalesAllowed]];
  }
  if (self.hasUserMonsterConstants) {
    [output appendFormat:@"%@%@ {\n", indent, @"userMonsterConstants"];
    [self.userMonsterConstants writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMonsterConstants) {
    [output appendFormat:@"%@%@ {\n", indent, @"monsterConstants"];
    [self.monsterConstants writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMinutesPerGem) {
    [output appendFormat:@"%@%@: %@\n", indent, @"minutesPerGem", [NSNumber numberWithFloat:self.minutesPerGem]];
  }
  if (self.hasPvpRequiredMinLvl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pvpRequiredMinLvl", [NSNumber numberWithInteger:self.pvpRequiredMinLvl]];
  }
  if (self.hasGemsPerResource) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gemsPerResource", [NSNumber numberWithFloat:self.gemsPerResource]];
  }
  if (self.hasContinueBattleGemCostMultiplier) {
    [output appendFormat:@"%@%@: %@\n", indent, @"continueBattleGemCostMultiplier", [NSNumber numberWithFloat:self.continueBattleGemCostMultiplier]];
  }
  if (self.hasAddAllFbFriends) {
    [output appendFormat:@"%@%@: %@\n", indent, @"addAllFbFriends", [NSNumber numberWithBool:self.addAllFbFriends]];
  }
  if (self.hasMiniTuts) {
    [output appendFormat:@"%@%@ {\n", indent, @"miniTuts"];
    [self.miniTuts writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMaxObstacles) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxObstacles", [NSNumber numberWithInteger:self.maxObstacles]];
  }
  if (self.hasMinutesPerObstacle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"minutesPerObstacle", [NSNumber numberWithInteger:self.minutesPerObstacle]];
  }
  if (self.hasTaskMapConstants) {
    [output appendFormat:@"%@%@ {\n", indent, @"taskMapConstants"];
    [self.taskMapConstants writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasBattleRunAwayBasePercent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"battleRunAwayBasePercent", [NSNumber numberWithFloat:self.battleRunAwayBasePercent]];
  }
  if (self.hasBattleRunAwayIncrement) {
    [output appendFormat:@"%@%@: %@\n", indent, @"battleRunAwayIncrement", [NSNumber numberWithFloat:self.battleRunAwayIncrement]];
  }
  if (self.hasMaxMinutesForFreeSpeedUp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxMinutesForFreeSpeedUp", [NSNumber numberWithInteger:self.maxMinutesForFreeSpeedUp]];
  }
  if (self.hasMonsterDmgMultiplier) {
    [output appendFormat:@"%@%@: %@\n", indent, @"monsterDmgMultiplier", [NSNumber numberWithFloat:self.monsterDmgMultiplier]];
  }
  [self.clanHelpConstantsList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_ClanHelpConstants *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanHelpConstants"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasPvpConstant) {
    [output appendFormat:@"%@%@ {\n", indent, @"pvpConstant"];
    [self.pvpConstant writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.sucpList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_SpeedUpConstantProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"sucp"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.rccpList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_ResourceConversionConstantProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"rccp"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasFacebookPopUp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"facebookPopUp", [NSNumber numberWithBool:self.facebookPopUp]];
  }
  if (self.hasDisplayRarity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"displayRarity", [NSNumber numberWithBool:self.displayRarity]];
  }
  if (self.hasTaskIdOfFirstSkill) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskIdOfFirstSkill", [NSNumber numberWithInteger:self.taskIdOfFirstSkill]];
  }
  if (self.hasMinsToResolicitTeamDonation) {
    [output appendFormat:@"%@%@: %@\n", indent, @"minsToResolicitTeamDonation", [NSNumber numberWithInteger:self.minsToResolicitTeamDonation]];
  }
  [self.fileDownloadProtoList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_FileDownloadConstantProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"fileDownloadProto"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasTaskIdForUpgradeTutorial) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskIdForUpgradeTutorial", [NSNumber numberWithInteger:self.taskIdForUpgradeTutorial]];
  }
  if (self.hasBoosterPackConstantProto) {
    [output appendFormat:@"%@%@ {\n", indent, @"boosterPackConstantProto"];
    [self.boosterPackConstantProto writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_StartupConstants class]]) {
    return NO;
  }
  StartupResponseProto_StartupConstants *otherMessage = other;
  return
      [self.inAppPurchasePackagesList isEqualToArray:otherMessage.inAppPurchasePackagesList] &&
      self.hasMaxLevelForUser == otherMessage.hasMaxLevelForUser &&
      (!self.hasMaxLevelForUser || self.maxLevelForUser == otherMessage.maxLevelForUser) &&
      self.hasMaxNumOfSingleStruct == otherMessage.hasMaxNumOfSingleStruct &&
      (!self.hasMaxNumOfSingleStruct || self.maxNumOfSingleStruct == otherMessage.maxNumOfSingleStruct) &&
      [self.animatedSpriteOffsetsList isEqualToArray:otherMessage.animatedSpriteOffsetsList] &&
      self.hasMinNameLength == otherMessage.hasMinNameLength &&
      (!self.hasMinNameLength || self.minNameLength == otherMessage.minNameLength) &&
      self.hasMaxNameLength == otherMessage.hasMaxNameLength &&
      (!self.hasMaxNameLength || self.maxNameLength == otherMessage.maxNameLength) &&
      self.hasMaxLengthOfChatString == otherMessage.hasMaxLengthOfChatString &&
      (!self.hasMaxLengthOfChatString || self.maxLengthOfChatString == otherMessage.maxLengthOfChatString) &&
      self.hasClanConstants == otherMessage.hasClanConstants &&
      (!self.hasClanConstants || [self.clanConstants isEqual:otherMessage.clanConstants]) &&
      self.hasDownloadableNibConstants == otherMessage.hasDownloadableNibConstants &&
      (!self.hasDownloadableNibConstants || [self.downloadableNibConstants isEqual:otherMessage.downloadableNibConstants]) &&
      self.hasNumHoursBeforeReshowingGoldSale == otherMessage.hasNumHoursBeforeReshowingGoldSale &&
      (!self.hasNumHoursBeforeReshowingGoldSale || self.numHoursBeforeReshowingGoldSale == otherMessage.numHoursBeforeReshowingGoldSale) &&
      self.hasLevelToShowRateUsPopup == otherMessage.hasLevelToShowRateUsPopup &&
      (!self.hasLevelToShowRateUsPopup || self.levelToShowRateUsPopup == otherMessage.levelToShowRateUsPopup) &&
      self.hasTouramentConstants == otherMessage.hasTouramentConstants &&
      (!self.hasTouramentConstants || [self.touramentConstants isEqual:otherMessage.touramentConstants]) &&
      self.hasFbConnectRewardDiamonds == otherMessage.hasFbConnectRewardDiamonds &&
      (!self.hasFbConnectRewardDiamonds || self.fbConnectRewardDiamonds == otherMessage.fbConnectRewardDiamonds) &&
      self.hasFaqFileName == otherMessage.hasFaqFileName &&
      (!self.hasFaqFileName || [self.faqFileName isEqual:otherMessage.faqFileName]) &&
      self.hasAdminChatUserProto == otherMessage.hasAdminChatUserProto &&
      (!self.hasAdminChatUserProto || [self.adminChatUserProto isEqual:otherMessage.adminChatUserProto]) &&
      self.hasNumBeginnerSalesAllowed == otherMessage.hasNumBeginnerSalesAllowed &&
      (!self.hasNumBeginnerSalesAllowed || self.numBeginnerSalesAllowed == otherMessage.numBeginnerSalesAllowed) &&
      self.hasUserMonsterConstants == otherMessage.hasUserMonsterConstants &&
      (!self.hasUserMonsterConstants || [self.userMonsterConstants isEqual:otherMessage.userMonsterConstants]) &&
      self.hasMonsterConstants == otherMessage.hasMonsterConstants &&
      (!self.hasMonsterConstants || [self.monsterConstants isEqual:otherMessage.monsterConstants]) &&
      self.hasMinutesPerGem == otherMessage.hasMinutesPerGem &&
      (!self.hasMinutesPerGem || self.minutesPerGem == otherMessage.minutesPerGem) &&
      self.hasPvpRequiredMinLvl == otherMessage.hasPvpRequiredMinLvl &&
      (!self.hasPvpRequiredMinLvl || self.pvpRequiredMinLvl == otherMessage.pvpRequiredMinLvl) &&
      self.hasGemsPerResource == otherMessage.hasGemsPerResource &&
      (!self.hasGemsPerResource || self.gemsPerResource == otherMessage.gemsPerResource) &&
      self.hasContinueBattleGemCostMultiplier == otherMessage.hasContinueBattleGemCostMultiplier &&
      (!self.hasContinueBattleGemCostMultiplier || self.continueBattleGemCostMultiplier == otherMessage.continueBattleGemCostMultiplier) &&
      self.hasAddAllFbFriends == otherMessage.hasAddAllFbFriends &&
      (!self.hasAddAllFbFriends || self.addAllFbFriends == otherMessage.addAllFbFriends) &&
      self.hasMiniTuts == otherMessage.hasMiniTuts &&
      (!self.hasMiniTuts || [self.miniTuts isEqual:otherMessage.miniTuts]) &&
      self.hasMaxObstacles == otherMessage.hasMaxObstacles &&
      (!self.hasMaxObstacles || self.maxObstacles == otherMessage.maxObstacles) &&
      self.hasMinutesPerObstacle == otherMessage.hasMinutesPerObstacle &&
      (!self.hasMinutesPerObstacle || self.minutesPerObstacle == otherMessage.minutesPerObstacle) &&
      self.hasTaskMapConstants == otherMessage.hasTaskMapConstants &&
      (!self.hasTaskMapConstants || [self.taskMapConstants isEqual:otherMessage.taskMapConstants]) &&
      self.hasBattleRunAwayBasePercent == otherMessage.hasBattleRunAwayBasePercent &&
      (!self.hasBattleRunAwayBasePercent || self.battleRunAwayBasePercent == otherMessage.battleRunAwayBasePercent) &&
      self.hasBattleRunAwayIncrement == otherMessage.hasBattleRunAwayIncrement &&
      (!self.hasBattleRunAwayIncrement || self.battleRunAwayIncrement == otherMessage.battleRunAwayIncrement) &&
      self.hasMaxMinutesForFreeSpeedUp == otherMessage.hasMaxMinutesForFreeSpeedUp &&
      (!self.hasMaxMinutesForFreeSpeedUp || self.maxMinutesForFreeSpeedUp == otherMessage.maxMinutesForFreeSpeedUp) &&
      self.hasMonsterDmgMultiplier == otherMessage.hasMonsterDmgMultiplier &&
      (!self.hasMonsterDmgMultiplier || self.monsterDmgMultiplier == otherMessage.monsterDmgMultiplier) &&
      [self.clanHelpConstantsList isEqualToArray:otherMessage.clanHelpConstantsList] &&
      self.hasPvpConstant == otherMessage.hasPvpConstant &&
      (!self.hasPvpConstant || [self.pvpConstant isEqual:otherMessage.pvpConstant]) &&
      [self.sucpList isEqualToArray:otherMessage.sucpList] &&
      [self.rccpList isEqualToArray:otherMessage.rccpList] &&
      self.hasFacebookPopUp == otherMessage.hasFacebookPopUp &&
      (!self.hasFacebookPopUp || self.facebookPopUp == otherMessage.facebookPopUp) &&
      self.hasDisplayRarity == otherMessage.hasDisplayRarity &&
      (!self.hasDisplayRarity || self.displayRarity == otherMessage.displayRarity) &&
      self.hasTaskIdOfFirstSkill == otherMessage.hasTaskIdOfFirstSkill &&
      (!self.hasTaskIdOfFirstSkill || self.taskIdOfFirstSkill == otherMessage.taskIdOfFirstSkill) &&
      self.hasMinsToResolicitTeamDonation == otherMessage.hasMinsToResolicitTeamDonation &&
      (!self.hasMinsToResolicitTeamDonation || self.minsToResolicitTeamDonation == otherMessage.minsToResolicitTeamDonation) &&
      [self.fileDownloadProtoList isEqualToArray:otherMessage.fileDownloadProtoList] &&
      self.hasTaskIdForUpgradeTutorial == otherMessage.hasTaskIdForUpgradeTutorial &&
      (!self.hasTaskIdForUpgradeTutorial || self.taskIdForUpgradeTutorial == otherMessage.taskIdForUpgradeTutorial) &&
      self.hasBoosterPackConstantProto == otherMessage.hasBoosterPackConstantProto &&
      (!self.hasBoosterPackConstantProto || [self.boosterPackConstantProto isEqual:otherMessage.boosterPackConstantProto]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.inAppPurchasePackagesList enumerateObjectsUsingBlock:^(InAppPurchasePackageProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasMaxLevelForUser) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxLevelForUser] hash];
  }
  if (self.hasMaxNumOfSingleStruct) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxNumOfSingleStruct] hash];
  }
  [self.animatedSpriteOffsetsList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasMinNameLength) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.minNameLength] hash];
  }
  if (self.hasMaxNameLength) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxNameLength] hash];
  }
  if (self.hasMaxLengthOfChatString) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxLengthOfChatString] hash];
  }
  if (self.hasClanConstants) {
    hashCode = hashCode * 31 + [self.clanConstants hash];
  }
  if (self.hasDownloadableNibConstants) {
    hashCode = hashCode * 31 + [self.downloadableNibConstants hash];
  }
  if (self.hasNumHoursBeforeReshowingGoldSale) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numHoursBeforeReshowingGoldSale] hash];
  }
  if (self.hasLevelToShowRateUsPopup) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.levelToShowRateUsPopup] hash];
  }
  if (self.hasTouramentConstants) {
    hashCode = hashCode * 31 + [self.touramentConstants hash];
  }
  if (self.hasFbConnectRewardDiamonds) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.fbConnectRewardDiamonds] hash];
  }
  if (self.hasFaqFileName) {
    hashCode = hashCode * 31 + [self.faqFileName hash];
  }
  if (self.hasAdminChatUserProto) {
    hashCode = hashCode * 31 + [self.adminChatUserProto hash];
  }
  if (self.hasNumBeginnerSalesAllowed) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numBeginnerSalesAllowed] hash];
  }
  if (self.hasUserMonsterConstants) {
    hashCode = hashCode * 31 + [self.userMonsterConstants hash];
  }
  if (self.hasMonsterConstants) {
    hashCode = hashCode * 31 + [self.monsterConstants hash];
  }
  if (self.hasMinutesPerGem) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.minutesPerGem] hash];
  }
  if (self.hasPvpRequiredMinLvl) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pvpRequiredMinLvl] hash];
  }
  if (self.hasGemsPerResource) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.gemsPerResource] hash];
  }
  if (self.hasContinueBattleGemCostMultiplier) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.continueBattleGemCostMultiplier] hash];
  }
  if (self.hasAddAllFbFriends) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.addAllFbFriends] hash];
  }
  if (self.hasMiniTuts) {
    hashCode = hashCode * 31 + [self.miniTuts hash];
  }
  if (self.hasMaxObstacles) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxObstacles] hash];
  }
  if (self.hasMinutesPerObstacle) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.minutesPerObstacle] hash];
  }
  if (self.hasTaskMapConstants) {
    hashCode = hashCode * 31 + [self.taskMapConstants hash];
  }
  if (self.hasBattleRunAwayBasePercent) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.battleRunAwayBasePercent] hash];
  }
  if (self.hasBattleRunAwayIncrement) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.battleRunAwayIncrement] hash];
  }
  if (self.hasMaxMinutesForFreeSpeedUp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxMinutesForFreeSpeedUp] hash];
  }
  if (self.hasMonsterDmgMultiplier) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.monsterDmgMultiplier] hash];
  }
  [self.clanHelpConstantsList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_ClanHelpConstants *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasPvpConstant) {
    hashCode = hashCode * 31 + [self.pvpConstant hash];
  }
  [self.sucpList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_SpeedUpConstantProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.rccpList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_ResourceConversionConstantProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasFacebookPopUp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.facebookPopUp] hash];
  }
  if (self.hasDisplayRarity) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.displayRarity] hash];
  }
  if (self.hasTaskIdOfFirstSkill) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskIdOfFirstSkill] hash];
  }
  if (self.hasMinsToResolicitTeamDonation) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.minsToResolicitTeamDonation] hash];
  }
  [self.fileDownloadProtoList enumerateObjectsUsingBlock:^(StartupResponseProto_StartupConstants_FileDownloadConstantProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasTaskIdForUpgradeTutorial) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskIdForUpgradeTutorial] hash];
  }
  if (self.hasBoosterPackConstantProto) {
    hashCode = hashCode * 31 + [self.boosterPackConstantProto hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto ()
@property (strong) NSString* imageName;
@property (strong) CoordinateProto* offSet;
@end

@implementation StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto

- (BOOL) hasImageName {
  return !!hasImageName_;
}
- (void) setHasImageName:(BOOL) value_ {
  hasImageName_ = !!value_;
}
@synthesize imageName;
- (BOOL) hasOffSet {
  return !!hasOffSet_;
}
- (void) setHasOffSet:(BOOL) value_ {
  hasOffSet_ = !!value_;
}
@synthesize offSet;
- (id) init {
  if ((self = [super init])) {
    self.imageName = @"";
    self.offSet = [CoordinateProto defaultInstance];
  }
  return self;
}
static StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto* defaultStartupResponseProto_StartupConstants_AnimatedSpriteOffsetProtoInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto class]) {
    defaultStartupResponseProto_StartupConstants_AnimatedSpriteOffsetProtoInstance = [[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_AnimatedSpriteOffsetProtoInstance;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_AnimatedSpriteOffsetProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasImageName) {
    [output writeString:1 value:self.imageName];
  }
  if (self.hasOffSet) {
    [output writeMessage:2 value:self.offSet];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasImageName) {
    size_ += computeStringSize(1, self.imageName);
  }
  if (self.hasOffSet) {
    size_ += computeMessageSize(2, self.offSet);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*)[[[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*)[[[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*)[[[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*)[[[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*)[[[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*)[[[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) builder {
  return [[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder alloc] init];
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) prototype {
  return [[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) builder {
  return [StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder];
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) toBuilder {
  return [StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasImageName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imageName", self.imageName];
  }
  if (self.hasOffSet) {
    [output appendFormat:@"%@%@ {\n", indent, @"offSet"];
    [self.offSet writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto class]]) {
    return NO;
  }
  StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto *otherMessage = other;
  return
      self.hasImageName == otherMessage.hasImageName &&
      (!self.hasImageName || [self.imageName isEqual:otherMessage.imageName]) &&
      self.hasOffSet == otherMessage.hasOffSet &&
      (!self.hasOffSet || [self.offSet isEqual:otherMessage.offSet]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasImageName) {
    hashCode = hashCode * 31 + [self.imageName hash];
  }
  if (self.hasOffSet) {
    hashCode = hashCode * 31 + [self.offSet hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder()
@property (strong) StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto* result;
@end

@implementation StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) clear {
  self.result = [[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto alloc] init];
  return self;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) clone {
  return [StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) defaultInstance {
  return [StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto defaultInstance];
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) buildPartial {
  StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) other {
  if (other == [StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto defaultInstance]) {
    return self;
  }
  if (other.hasImageName) {
    [self setImageName:other.imageName];
  }
  if (other.hasOffSet) {
    [self mergeOffSet:other.offSet];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setImageName:[input readString]];
        break;
      }
      case 18: {
        CoordinateProto_Builder* subBuilder = [CoordinateProto builder];
        if (self.hasOffSet) {
          [subBuilder mergeFrom:self.offSet];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOffSet:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasImageName {
  return result.hasImageName;
}
- (NSString*) imageName {
  return result.imageName;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) setImageName:(NSString*) value {
  result.hasImageName = YES;
  result.imageName = value;
  return self;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) clearImageName {
  result.hasImageName = NO;
  result.imageName = @"";
  return self;
}
- (BOOL) hasOffSet {
  return result.hasOffSet;
}
- (CoordinateProto*) offSet {
  return result.offSet;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) setOffSet:(CoordinateProto*) value {
  result.hasOffSet = YES;
  result.offSet = value;
  return self;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) setOffSet_Builder:(CoordinateProto_Builder*) builderForValue {
  return [self setOffSet:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) mergeOffSet:(CoordinateProto*) value {
  if (result.hasOffSet &&
      result.offSet != [CoordinateProto defaultInstance]) {
    result.offSet =
      [[[CoordinateProto builderWithPrototype:result.offSet] mergeFrom:value] buildPartial];
  } else {
    result.offSet = value;
  }
  result.hasOffSet = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) clearOffSet {
  result.hasOffSet = NO;
  result.offSet = [CoordinateProto defaultInstance];
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_ClanConstants ()
@property int32_t coinPriceToCreateClan;
@property int32_t maxCharLengthForClanName;
@property int32_t maxCharLengthForClanDescription;
@property int32_t maxCharLengthForClanTag;
@property int32_t maxClanSize;
@property (strong) PBAppendableArray * mutableAchievementIdsForClanRewardsList;
@end

@implementation StartupResponseProto_StartupConstants_ClanConstants

- (BOOL) hasCoinPriceToCreateClan {
  return !!hasCoinPriceToCreateClan_;
}
- (void) setHasCoinPriceToCreateClan:(BOOL) value_ {
  hasCoinPriceToCreateClan_ = !!value_;
}
@synthesize coinPriceToCreateClan;
- (BOOL) hasMaxCharLengthForClanName {
  return !!hasMaxCharLengthForClanName_;
}
- (void) setHasMaxCharLengthForClanName:(BOOL) value_ {
  hasMaxCharLengthForClanName_ = !!value_;
}
@synthesize maxCharLengthForClanName;
- (BOOL) hasMaxCharLengthForClanDescription {
  return !!hasMaxCharLengthForClanDescription_;
}
- (void) setHasMaxCharLengthForClanDescription:(BOOL) value_ {
  hasMaxCharLengthForClanDescription_ = !!value_;
}
@synthesize maxCharLengthForClanDescription;
- (BOOL) hasMaxCharLengthForClanTag {
  return !!hasMaxCharLengthForClanTag_;
}
- (void) setHasMaxCharLengthForClanTag:(BOOL) value_ {
  hasMaxCharLengthForClanTag_ = !!value_;
}
@synthesize maxCharLengthForClanTag;
- (BOOL) hasMaxClanSize {
  return !!hasMaxClanSize_;
}
- (void) setHasMaxClanSize:(BOOL) value_ {
  hasMaxClanSize_ = !!value_;
}
@synthesize maxClanSize;
@synthesize mutableAchievementIdsForClanRewardsList;
@dynamic achievementIdsForClanRewardsList;
- (id) init {
  if ((self = [super init])) {
    self.coinPriceToCreateClan = 0;
    self.maxCharLengthForClanName = 0;
    self.maxCharLengthForClanDescription = 0;
    self.maxCharLengthForClanTag = 0;
    self.maxClanSize = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants_ClanConstants* defaultStartupResponseProto_StartupConstants_ClanConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_ClanConstants class]) {
    defaultStartupResponseProto_StartupConstants_ClanConstantsInstance = [[StartupResponseProto_StartupConstants_ClanConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_ClanConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_ClanConstantsInstance;
}
- (StartupResponseProto_StartupConstants_ClanConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_ClanConstantsInstance;
}
- (PBArray *)achievementIdsForClanRewardsList {
  return mutableAchievementIdsForClanRewardsList;
}
- (int32_t)achievementIdsForClanRewardsAtIndex:(NSUInteger)index {
  return [mutableAchievementIdsForClanRewardsList int32AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCoinPriceToCreateClan) {
    [output writeInt32:1 value:self.coinPriceToCreateClan];
  }
  if (self.hasMaxCharLengthForClanName) {
    [output writeInt32:2 value:self.maxCharLengthForClanName];
  }
  if (self.hasMaxCharLengthForClanDescription) {
    [output writeInt32:3 value:self.maxCharLengthForClanDescription];
  }
  if (self.hasMaxCharLengthForClanTag) {
    [output writeInt32:4 value:self.maxCharLengthForClanTag];
  }
  if (self.hasMaxClanSize) {
    [output writeInt32:5 value:self.maxClanSize];
  }
  const NSUInteger achievementIdsForClanRewardsListCount = self.achievementIdsForClanRewardsList.count;
  if (achievementIdsForClanRewardsListCount > 0) {
    const int32_t *values = (const int32_t *)self.achievementIdsForClanRewardsList.data;
    for (NSUInteger i = 0; i < achievementIdsForClanRewardsListCount; ++i) {
      [output writeInt32:6 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCoinPriceToCreateClan) {
    size_ += computeInt32Size(1, self.coinPriceToCreateClan);
  }
  if (self.hasMaxCharLengthForClanName) {
    size_ += computeInt32Size(2, self.maxCharLengthForClanName);
  }
  if (self.hasMaxCharLengthForClanDescription) {
    size_ += computeInt32Size(3, self.maxCharLengthForClanDescription);
  }
  if (self.hasMaxCharLengthForClanTag) {
    size_ += computeInt32Size(4, self.maxCharLengthForClanTag);
  }
  if (self.hasMaxClanSize) {
    size_ += computeInt32Size(5, self.maxClanSize);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.achievementIdsForClanRewardsList.count;
    const int32_t *values = (const int32_t *)self.achievementIdsForClanRewardsList.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_StartupConstants_ClanConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_ClanConstants*)[[[StartupResponseProto_StartupConstants_ClanConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_ClanConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_ClanConstants*)[[[StartupResponseProto_StartupConstants_ClanConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_ClanConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_ClanConstants*)[[[StartupResponseProto_StartupConstants_ClanConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_ClanConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_ClanConstants*)[[[StartupResponseProto_StartupConstants_ClanConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_ClanConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_ClanConstants*)[[[StartupResponseProto_StartupConstants_ClanConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_ClanConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_ClanConstants*)[[[StartupResponseProto_StartupConstants_ClanConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_ClanConstants_Builder*) builder {
  return [[StartupResponseProto_StartupConstants_ClanConstants_Builder alloc] init];
}
+ (StartupResponseProto_StartupConstants_ClanConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_ClanConstants*) prototype {
  return [[StartupResponseProto_StartupConstants_ClanConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants_ClanConstants builder];
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) toBuilder {
  return [StartupResponseProto_StartupConstants_ClanConstants builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCoinPriceToCreateClan) {
    [output appendFormat:@"%@%@: %@\n", indent, @"coinPriceToCreateClan", [NSNumber numberWithInteger:self.coinPriceToCreateClan]];
  }
  if (self.hasMaxCharLengthForClanName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxCharLengthForClanName", [NSNumber numberWithInteger:self.maxCharLengthForClanName]];
  }
  if (self.hasMaxCharLengthForClanDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxCharLengthForClanDescription", [NSNumber numberWithInteger:self.maxCharLengthForClanDescription]];
  }
  if (self.hasMaxCharLengthForClanTag) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxCharLengthForClanTag", [NSNumber numberWithInteger:self.maxCharLengthForClanTag]];
  }
  if (self.hasMaxClanSize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxClanSize", [NSNumber numberWithInteger:self.maxClanSize]];
  }
  [self.achievementIdsForClanRewardsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"achievementIdsForClanRewards", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_StartupConstants_ClanConstants class]]) {
    return NO;
  }
  StartupResponseProto_StartupConstants_ClanConstants *otherMessage = other;
  return
      self.hasCoinPriceToCreateClan == otherMessage.hasCoinPriceToCreateClan &&
      (!self.hasCoinPriceToCreateClan || self.coinPriceToCreateClan == otherMessage.coinPriceToCreateClan) &&
      self.hasMaxCharLengthForClanName == otherMessage.hasMaxCharLengthForClanName &&
      (!self.hasMaxCharLengthForClanName || self.maxCharLengthForClanName == otherMessage.maxCharLengthForClanName) &&
      self.hasMaxCharLengthForClanDescription == otherMessage.hasMaxCharLengthForClanDescription &&
      (!self.hasMaxCharLengthForClanDescription || self.maxCharLengthForClanDescription == otherMessage.maxCharLengthForClanDescription) &&
      self.hasMaxCharLengthForClanTag == otherMessage.hasMaxCharLengthForClanTag &&
      (!self.hasMaxCharLengthForClanTag || self.maxCharLengthForClanTag == otherMessage.maxCharLengthForClanTag) &&
      self.hasMaxClanSize == otherMessage.hasMaxClanSize &&
      (!self.hasMaxClanSize || self.maxClanSize == otherMessage.maxClanSize) &&
      [self.achievementIdsForClanRewardsList isEqualToArray:otherMessage.achievementIdsForClanRewardsList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCoinPriceToCreateClan) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.coinPriceToCreateClan] hash];
  }
  if (self.hasMaxCharLengthForClanName) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxCharLengthForClanName] hash];
  }
  if (self.hasMaxCharLengthForClanDescription) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxCharLengthForClanDescription] hash];
  }
  if (self.hasMaxCharLengthForClanTag) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxCharLengthForClanTag] hash];
  }
  if (self.hasMaxClanSize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxClanSize] hash];
  }
  [self.achievementIdsForClanRewardsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_StartupConstants_ClanConstants_Builder()
@property (strong) StartupResponseProto_StartupConstants_ClanConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_ClanConstants_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_StartupConstants_ClanConstants alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) clear {
  self.result = [[StartupResponseProto_StartupConstants_ClanConstants alloc] init];
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants_ClanConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_ClanConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants_ClanConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants_ClanConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_ClanConstants*) buildPartial {
  StartupResponseProto_StartupConstants_ClanConstants* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_ClanConstants*) other {
  if (other == [StartupResponseProto_StartupConstants_ClanConstants defaultInstance]) {
    return self;
  }
  if (other.hasCoinPriceToCreateClan) {
    [self setCoinPriceToCreateClan:other.coinPriceToCreateClan];
  }
  if (other.hasMaxCharLengthForClanName) {
    [self setMaxCharLengthForClanName:other.maxCharLengthForClanName];
  }
  if (other.hasMaxCharLengthForClanDescription) {
    [self setMaxCharLengthForClanDescription:other.maxCharLengthForClanDescription];
  }
  if (other.hasMaxCharLengthForClanTag) {
    [self setMaxCharLengthForClanTag:other.maxCharLengthForClanTag];
  }
  if (other.hasMaxClanSize) {
    [self setMaxClanSize:other.maxClanSize];
  }
  if (other.mutableAchievementIdsForClanRewardsList.count > 0) {
    if (result.mutableAchievementIdsForClanRewardsList == nil) {
      result.mutableAchievementIdsForClanRewardsList = [other.mutableAchievementIdsForClanRewardsList copy];
    } else {
      [result.mutableAchievementIdsForClanRewardsList appendArray:other.mutableAchievementIdsForClanRewardsList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCoinPriceToCreateClan:[input readInt32]];
        break;
      }
      case 16: {
        [self setMaxCharLengthForClanName:[input readInt32]];
        break;
      }
      case 24: {
        [self setMaxCharLengthForClanDescription:[input readInt32]];
        break;
      }
      case 32: {
        [self setMaxCharLengthForClanTag:[input readInt32]];
        break;
      }
      case 40: {
        [self setMaxClanSize:[input readInt32]];
        break;
      }
      case 48: {
        [self addAchievementIdsForClanRewards:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCoinPriceToCreateClan {
  return result.hasCoinPriceToCreateClan;
}
- (int32_t) coinPriceToCreateClan {
  return result.coinPriceToCreateClan;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) setCoinPriceToCreateClan:(int32_t) value {
  result.hasCoinPriceToCreateClan = YES;
  result.coinPriceToCreateClan = value;
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) clearCoinPriceToCreateClan {
  result.hasCoinPriceToCreateClan = NO;
  result.coinPriceToCreateClan = 0;
  return self;
}
- (BOOL) hasMaxCharLengthForClanName {
  return result.hasMaxCharLengthForClanName;
}
- (int32_t) maxCharLengthForClanName {
  return result.maxCharLengthForClanName;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) setMaxCharLengthForClanName:(int32_t) value {
  result.hasMaxCharLengthForClanName = YES;
  result.maxCharLengthForClanName = value;
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) clearMaxCharLengthForClanName {
  result.hasMaxCharLengthForClanName = NO;
  result.maxCharLengthForClanName = 0;
  return self;
}
- (BOOL) hasMaxCharLengthForClanDescription {
  return result.hasMaxCharLengthForClanDescription;
}
- (int32_t) maxCharLengthForClanDescription {
  return result.maxCharLengthForClanDescription;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) setMaxCharLengthForClanDescription:(int32_t) value {
  result.hasMaxCharLengthForClanDescription = YES;
  result.maxCharLengthForClanDescription = value;
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) clearMaxCharLengthForClanDescription {
  result.hasMaxCharLengthForClanDescription = NO;
  result.maxCharLengthForClanDescription = 0;
  return self;
}
- (BOOL) hasMaxCharLengthForClanTag {
  return result.hasMaxCharLengthForClanTag;
}
- (int32_t) maxCharLengthForClanTag {
  return result.maxCharLengthForClanTag;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) setMaxCharLengthForClanTag:(int32_t) value {
  result.hasMaxCharLengthForClanTag = YES;
  result.maxCharLengthForClanTag = value;
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) clearMaxCharLengthForClanTag {
  result.hasMaxCharLengthForClanTag = NO;
  result.maxCharLengthForClanTag = 0;
  return self;
}
- (BOOL) hasMaxClanSize {
  return result.hasMaxClanSize;
}
- (int32_t) maxClanSize {
  return result.maxClanSize;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) setMaxClanSize:(int32_t) value {
  result.hasMaxClanSize = YES;
  result.maxClanSize = value;
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) clearMaxClanSize {
  result.hasMaxClanSize = NO;
  result.maxClanSize = 0;
  return self;
}
- (PBAppendableArray *)achievementIdsForClanRewardsList {
  return result.mutableAchievementIdsForClanRewardsList;
}
- (int32_t)achievementIdsForClanRewardsAtIndex:(NSUInteger)index {
  return [result achievementIdsForClanRewardsAtIndex:index];
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder *)addAchievementIdsForClanRewards:(int32_t)value {
  if (result.mutableAchievementIdsForClanRewardsList == nil) {
    result.mutableAchievementIdsForClanRewardsList = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [result.mutableAchievementIdsForClanRewardsList addInt32:value];
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder *)addAllAchievementIdsForClanRewards:(NSArray *)array {
  if (result.mutableAchievementIdsForClanRewardsList == nil) {
    result.mutableAchievementIdsForClanRewardsList = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [result.mutableAchievementIdsForClanRewardsList appendArray:[PBArray arrayWithArray:array valueType:PBArrayValueTypeInt32]];
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder *)setAchievementIdsForClanRewardsValues:(const int32_t *)values count:(NSUInteger)count {
  result.mutableAchievementIdsForClanRewardsList = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder *)clearAchievementIdsForClanRewards {
  result.mutableAchievementIdsForClanRewardsList = nil;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_DownloadableNibConstants ()
@property (strong) NSString* mapNibName;
@property (strong) NSString* expansionNibName;
@property (strong) NSString* goldShoppeNibName;
@end

@implementation StartupResponseProto_StartupConstants_DownloadableNibConstants

- (BOOL) hasMapNibName {
  return !!hasMapNibName_;
}
- (void) setHasMapNibName:(BOOL) value_ {
  hasMapNibName_ = !!value_;
}
@synthesize mapNibName;
- (BOOL) hasExpansionNibName {
  return !!hasExpansionNibName_;
}
- (void) setHasExpansionNibName:(BOOL) value_ {
  hasExpansionNibName_ = !!value_;
}
@synthesize expansionNibName;
- (BOOL) hasGoldShoppeNibName {
  return !!hasGoldShoppeNibName_;
}
- (void) setHasGoldShoppeNibName:(BOOL) value_ {
  hasGoldShoppeNibName_ = !!value_;
}
@synthesize goldShoppeNibName;
- (id) init {
  if ((self = [super init])) {
    self.mapNibName = @"";
    self.expansionNibName = @"";
    self.goldShoppeNibName = @"";
  }
  return self;
}
static StartupResponseProto_StartupConstants_DownloadableNibConstants* defaultStartupResponseProto_StartupConstants_DownloadableNibConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_DownloadableNibConstants class]) {
    defaultStartupResponseProto_StartupConstants_DownloadableNibConstantsInstance = [[StartupResponseProto_StartupConstants_DownloadableNibConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_DownloadableNibConstantsInstance;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_DownloadableNibConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMapNibName) {
    [output writeString:1 value:self.mapNibName];
  }
  if (self.hasExpansionNibName) {
    [output writeString:2 value:self.expansionNibName];
  }
  if (self.hasGoldShoppeNibName) {
    [output writeString:3 value:self.goldShoppeNibName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMapNibName) {
    size_ += computeStringSize(1, self.mapNibName);
  }
  if (self.hasExpansionNibName) {
    size_ += computeStringSize(2, self.expansionNibName);
  }
  if (self.hasGoldShoppeNibName) {
    size_ += computeStringSize(3, self.goldShoppeNibName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_DownloadableNibConstants*)[[[StartupResponseProto_StartupConstants_DownloadableNibConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_DownloadableNibConstants*)[[[StartupResponseProto_StartupConstants_DownloadableNibConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_DownloadableNibConstants*)[[[StartupResponseProto_StartupConstants_DownloadableNibConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_DownloadableNibConstants*)[[[StartupResponseProto_StartupConstants_DownloadableNibConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_DownloadableNibConstants*)[[[StartupResponseProto_StartupConstants_DownloadableNibConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_DownloadableNibConstants*)[[[StartupResponseProto_StartupConstants_DownloadableNibConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) builder {
  return [[StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder alloc] init];
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_DownloadableNibConstants*) prototype {
  return [[StartupResponseProto_StartupConstants_DownloadableNibConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants_DownloadableNibConstants builder];
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) toBuilder {
  return [StartupResponseProto_StartupConstants_DownloadableNibConstants builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMapNibName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mapNibName", self.mapNibName];
  }
  if (self.hasExpansionNibName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"expansionNibName", self.expansionNibName];
  }
  if (self.hasGoldShoppeNibName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"goldShoppeNibName", self.goldShoppeNibName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_StartupConstants_DownloadableNibConstants class]]) {
    return NO;
  }
  StartupResponseProto_StartupConstants_DownloadableNibConstants *otherMessage = other;
  return
      self.hasMapNibName == otherMessage.hasMapNibName &&
      (!self.hasMapNibName || [self.mapNibName isEqual:otherMessage.mapNibName]) &&
      self.hasExpansionNibName == otherMessage.hasExpansionNibName &&
      (!self.hasExpansionNibName || [self.expansionNibName isEqual:otherMessage.expansionNibName]) &&
      self.hasGoldShoppeNibName == otherMessage.hasGoldShoppeNibName &&
      (!self.hasGoldShoppeNibName || [self.goldShoppeNibName isEqual:otherMessage.goldShoppeNibName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMapNibName) {
    hashCode = hashCode * 31 + [self.mapNibName hash];
  }
  if (self.hasExpansionNibName) {
    hashCode = hashCode * 31 + [self.expansionNibName hash];
  }
  if (self.hasGoldShoppeNibName) {
    hashCode = hashCode * 31 + [self.goldShoppeNibName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder()
@property (strong) StartupResponseProto_StartupConstants_DownloadableNibConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_StartupConstants_DownloadableNibConstants alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) clear {
  self.result = [[StartupResponseProto_StartupConstants_DownloadableNibConstants alloc] init];
  return self;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants_DownloadableNibConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants_DownloadableNibConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants*) buildPartial {
  StartupResponseProto_StartupConstants_DownloadableNibConstants* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_DownloadableNibConstants*) other {
  if (other == [StartupResponseProto_StartupConstants_DownloadableNibConstants defaultInstance]) {
    return self;
  }
  if (other.hasMapNibName) {
    [self setMapNibName:other.mapNibName];
  }
  if (other.hasExpansionNibName) {
    [self setExpansionNibName:other.expansionNibName];
  }
  if (other.hasGoldShoppeNibName) {
    [self setGoldShoppeNibName:other.goldShoppeNibName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMapNibName:[input readString]];
        break;
      }
      case 18: {
        [self setExpansionNibName:[input readString]];
        break;
      }
      case 26: {
        [self setGoldShoppeNibName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMapNibName {
  return result.hasMapNibName;
}
- (NSString*) mapNibName {
  return result.mapNibName;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) setMapNibName:(NSString*) value {
  result.hasMapNibName = YES;
  result.mapNibName = value;
  return self;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) clearMapNibName {
  result.hasMapNibName = NO;
  result.mapNibName = @"";
  return self;
}
- (BOOL) hasExpansionNibName {
  return result.hasExpansionNibName;
}
- (NSString*) expansionNibName {
  return result.expansionNibName;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) setExpansionNibName:(NSString*) value {
  result.hasExpansionNibName = YES;
  result.expansionNibName = value;
  return self;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) clearExpansionNibName {
  result.hasExpansionNibName = NO;
  result.expansionNibName = @"";
  return self;
}
- (BOOL) hasGoldShoppeNibName {
  return result.hasGoldShoppeNibName;
}
- (NSString*) goldShoppeNibName {
  return result.goldShoppeNibName;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) setGoldShoppeNibName:(NSString*) value {
  result.hasGoldShoppeNibName = YES;
  result.goldShoppeNibName = value;
  return self;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) clearGoldShoppeNibName {
  result.hasGoldShoppeNibName = NO;
  result.goldShoppeNibName = @"";
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_TournamentConstants ()
@property int32_t winsWeight;
@property int32_t lossesWeight;
@property int32_t fleesWeight;
@property int32_t numHoursToShowAfterEventEnd;
@end

@implementation StartupResponseProto_StartupConstants_TournamentConstants

- (BOOL) hasWinsWeight {
  return !!hasWinsWeight_;
}
- (void) setHasWinsWeight:(BOOL) value_ {
  hasWinsWeight_ = !!value_;
}
@synthesize winsWeight;
- (BOOL) hasLossesWeight {
  return !!hasLossesWeight_;
}
- (void) setHasLossesWeight:(BOOL) value_ {
  hasLossesWeight_ = !!value_;
}
@synthesize lossesWeight;
- (BOOL) hasFleesWeight {
  return !!hasFleesWeight_;
}
- (void) setHasFleesWeight:(BOOL) value_ {
  hasFleesWeight_ = !!value_;
}
@synthesize fleesWeight;
- (BOOL) hasNumHoursToShowAfterEventEnd {
  return !!hasNumHoursToShowAfterEventEnd_;
}
- (void) setHasNumHoursToShowAfterEventEnd:(BOOL) value_ {
  hasNumHoursToShowAfterEventEnd_ = !!value_;
}
@synthesize numHoursToShowAfterEventEnd;
- (id) init {
  if ((self = [super init])) {
    self.winsWeight = 0;
    self.lossesWeight = 0;
    self.fleesWeight = 0;
    self.numHoursToShowAfterEventEnd = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants_TournamentConstants* defaultStartupResponseProto_StartupConstants_TournamentConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_TournamentConstants class]) {
    defaultStartupResponseProto_StartupConstants_TournamentConstantsInstance = [[StartupResponseProto_StartupConstants_TournamentConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_TournamentConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_TournamentConstantsInstance;
}
- (StartupResponseProto_StartupConstants_TournamentConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_TournamentConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasWinsWeight) {
    [output writeInt32:1 value:self.winsWeight];
  }
  if (self.hasLossesWeight) {
    [output writeInt32:2 value:self.lossesWeight];
  }
  if (self.hasFleesWeight) {
    [output writeInt32:3 value:self.fleesWeight];
  }
  if (self.hasNumHoursToShowAfterEventEnd) {
    [output writeInt32:4 value:self.numHoursToShowAfterEventEnd];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasWinsWeight) {
    size_ += computeInt32Size(1, self.winsWeight);
  }
  if (self.hasLossesWeight) {
    size_ += computeInt32Size(2, self.lossesWeight);
  }
  if (self.hasFleesWeight) {
    size_ += computeInt32Size(3, self.fleesWeight);
  }
  if (self.hasNumHoursToShowAfterEventEnd) {
    size_ += computeInt32Size(4, self.numHoursToShowAfterEventEnd);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_StartupConstants_TournamentConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_TournamentConstants*)[[[StartupResponseProto_StartupConstants_TournamentConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_TournamentConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_TournamentConstants*)[[[StartupResponseProto_StartupConstants_TournamentConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_TournamentConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_TournamentConstants*)[[[StartupResponseProto_StartupConstants_TournamentConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_TournamentConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_TournamentConstants*)[[[StartupResponseProto_StartupConstants_TournamentConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_TournamentConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_TournamentConstants*)[[[StartupResponseProto_StartupConstants_TournamentConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_TournamentConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_TournamentConstants*)[[[StartupResponseProto_StartupConstants_TournamentConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) builder {
  return [[StartupResponseProto_StartupConstants_TournamentConstants_Builder alloc] init];
}
+ (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_TournamentConstants*) prototype {
  return [[StartupResponseProto_StartupConstants_TournamentConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants_TournamentConstants builder];
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) toBuilder {
  return [StartupResponseProto_StartupConstants_TournamentConstants builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasWinsWeight) {
    [output appendFormat:@"%@%@: %@\n", indent, @"winsWeight", [NSNumber numberWithInteger:self.winsWeight]];
  }
  if (self.hasLossesWeight) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lossesWeight", [NSNumber numberWithInteger:self.lossesWeight]];
  }
  if (self.hasFleesWeight) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fleesWeight", [NSNumber numberWithInteger:self.fleesWeight]];
  }
  if (self.hasNumHoursToShowAfterEventEnd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numHoursToShowAfterEventEnd", [NSNumber numberWithInteger:self.numHoursToShowAfterEventEnd]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_StartupConstants_TournamentConstants class]]) {
    return NO;
  }
  StartupResponseProto_StartupConstants_TournamentConstants *otherMessage = other;
  return
      self.hasWinsWeight == otherMessage.hasWinsWeight &&
      (!self.hasWinsWeight || self.winsWeight == otherMessage.winsWeight) &&
      self.hasLossesWeight == otherMessage.hasLossesWeight &&
      (!self.hasLossesWeight || self.lossesWeight == otherMessage.lossesWeight) &&
      self.hasFleesWeight == otherMessage.hasFleesWeight &&
      (!self.hasFleesWeight || self.fleesWeight == otherMessage.fleesWeight) &&
      self.hasNumHoursToShowAfterEventEnd == otherMessage.hasNumHoursToShowAfterEventEnd &&
      (!self.hasNumHoursToShowAfterEventEnd || self.numHoursToShowAfterEventEnd == otherMessage.numHoursToShowAfterEventEnd) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasWinsWeight) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.winsWeight] hash];
  }
  if (self.hasLossesWeight) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.lossesWeight] hash];
  }
  if (self.hasFleesWeight) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.fleesWeight] hash];
  }
  if (self.hasNumHoursToShowAfterEventEnd) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numHoursToShowAfterEventEnd] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_StartupConstants_TournamentConstants_Builder()
@property (strong) StartupResponseProto_StartupConstants_TournamentConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_TournamentConstants_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_StartupConstants_TournamentConstants alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) clear {
  self.result = [[StartupResponseProto_StartupConstants_TournamentConstants alloc] init];
  return self;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants_TournamentConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_TournamentConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants_TournamentConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants_TournamentConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_TournamentConstants*) buildPartial {
  StartupResponseProto_StartupConstants_TournamentConstants* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_TournamentConstants*) other {
  if (other == [StartupResponseProto_StartupConstants_TournamentConstants defaultInstance]) {
    return self;
  }
  if (other.hasWinsWeight) {
    [self setWinsWeight:other.winsWeight];
  }
  if (other.hasLossesWeight) {
    [self setLossesWeight:other.lossesWeight];
  }
  if (other.hasFleesWeight) {
    [self setFleesWeight:other.fleesWeight];
  }
  if (other.hasNumHoursToShowAfterEventEnd) {
    [self setNumHoursToShowAfterEventEnd:other.numHoursToShowAfterEventEnd];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setWinsWeight:[input readInt32]];
        break;
      }
      case 16: {
        [self setLossesWeight:[input readInt32]];
        break;
      }
      case 24: {
        [self setFleesWeight:[input readInt32]];
        break;
      }
      case 32: {
        [self setNumHoursToShowAfterEventEnd:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasWinsWeight {
  return result.hasWinsWeight;
}
- (int32_t) winsWeight {
  return result.winsWeight;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) setWinsWeight:(int32_t) value {
  result.hasWinsWeight = YES;
  result.winsWeight = value;
  return self;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) clearWinsWeight {
  result.hasWinsWeight = NO;
  result.winsWeight = 0;
  return self;
}
- (BOOL) hasLossesWeight {
  return result.hasLossesWeight;
}
- (int32_t) lossesWeight {
  return result.lossesWeight;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) setLossesWeight:(int32_t) value {
  result.hasLossesWeight = YES;
  result.lossesWeight = value;
  return self;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) clearLossesWeight {
  result.hasLossesWeight = NO;
  result.lossesWeight = 0;
  return self;
}
- (BOOL) hasFleesWeight {
  return result.hasFleesWeight;
}
- (int32_t) fleesWeight {
  return result.fleesWeight;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) setFleesWeight:(int32_t) value {
  result.hasFleesWeight = YES;
  result.fleesWeight = value;
  return self;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) clearFleesWeight {
  result.hasFleesWeight = NO;
  result.fleesWeight = 0;
  return self;
}
- (BOOL) hasNumHoursToShowAfterEventEnd {
  return result.hasNumHoursToShowAfterEventEnd;
}
- (int32_t) numHoursToShowAfterEventEnd {
  return result.numHoursToShowAfterEventEnd;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) setNumHoursToShowAfterEventEnd:(int32_t) value {
  result.hasNumHoursToShowAfterEventEnd = YES;
  result.numHoursToShowAfterEventEnd = value;
  return self;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) clearNumHoursToShowAfterEventEnd {
  result.hasNumHoursToShowAfterEventEnd = NO;
  result.numHoursToShowAfterEventEnd = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_UserMonsterConstants ()
@property int32_t maxNumTeamSlots;
@property int32_t initialMaxNumMonsterLimit;
@end

@implementation StartupResponseProto_StartupConstants_UserMonsterConstants

- (BOOL) hasMaxNumTeamSlots {
  return !!hasMaxNumTeamSlots_;
}
- (void) setHasMaxNumTeamSlots:(BOOL) value_ {
  hasMaxNumTeamSlots_ = !!value_;
}
@synthesize maxNumTeamSlots;
- (BOOL) hasInitialMaxNumMonsterLimit {
  return !!hasInitialMaxNumMonsterLimit_;
}
- (void) setHasInitialMaxNumMonsterLimit:(BOOL) value_ {
  hasInitialMaxNumMonsterLimit_ = !!value_;
}
@synthesize initialMaxNumMonsterLimit;
- (id) init {
  if ((self = [super init])) {
    self.maxNumTeamSlots = 0;
    self.initialMaxNumMonsterLimit = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants_UserMonsterConstants* defaultStartupResponseProto_StartupConstants_UserMonsterConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_UserMonsterConstants class]) {
    defaultStartupResponseProto_StartupConstants_UserMonsterConstantsInstance = [[StartupResponseProto_StartupConstants_UserMonsterConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_UserMonsterConstantsInstance;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_UserMonsterConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMaxNumTeamSlots) {
    [output writeInt32:1 value:self.maxNumTeamSlots];
  }
  if (self.hasInitialMaxNumMonsterLimit) {
    [output writeInt32:2 value:self.initialMaxNumMonsterLimit];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMaxNumTeamSlots) {
    size_ += computeInt32Size(1, self.maxNumTeamSlots);
  }
  if (self.hasInitialMaxNumMonsterLimit) {
    size_ += computeInt32Size(2, self.initialMaxNumMonsterLimit);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_UserMonsterConstants*)[[[StartupResponseProto_StartupConstants_UserMonsterConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_UserMonsterConstants*)[[[StartupResponseProto_StartupConstants_UserMonsterConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_UserMonsterConstants*)[[[StartupResponseProto_StartupConstants_UserMonsterConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_UserMonsterConstants*)[[[StartupResponseProto_StartupConstants_UserMonsterConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_UserMonsterConstants*)[[[StartupResponseProto_StartupConstants_UserMonsterConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_UserMonsterConstants*)[[[StartupResponseProto_StartupConstants_UserMonsterConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) builder {
  return [[StartupResponseProto_StartupConstants_UserMonsterConstants_Builder alloc] init];
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_UserMonsterConstants*) prototype {
  return [[StartupResponseProto_StartupConstants_UserMonsterConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants_UserMonsterConstants builder];
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) toBuilder {
  return [StartupResponseProto_StartupConstants_UserMonsterConstants builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMaxNumTeamSlots) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxNumTeamSlots", [NSNumber numberWithInteger:self.maxNumTeamSlots]];
  }
  if (self.hasInitialMaxNumMonsterLimit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"initialMaxNumMonsterLimit", [NSNumber numberWithInteger:self.initialMaxNumMonsterLimit]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_StartupConstants_UserMonsterConstants class]]) {
    return NO;
  }
  StartupResponseProto_StartupConstants_UserMonsterConstants *otherMessage = other;
  return
      self.hasMaxNumTeamSlots == otherMessage.hasMaxNumTeamSlots &&
      (!self.hasMaxNumTeamSlots || self.maxNumTeamSlots == otherMessage.maxNumTeamSlots) &&
      self.hasInitialMaxNumMonsterLimit == otherMessage.hasInitialMaxNumMonsterLimit &&
      (!self.hasInitialMaxNumMonsterLimit || self.initialMaxNumMonsterLimit == otherMessage.initialMaxNumMonsterLimit) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMaxNumTeamSlots) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxNumTeamSlots] hash];
  }
  if (self.hasInitialMaxNumMonsterLimit) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.initialMaxNumMonsterLimit] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_StartupConstants_UserMonsterConstants_Builder()
@property (strong) StartupResponseProto_StartupConstants_UserMonsterConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_UserMonsterConstants_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_StartupConstants_UserMonsterConstants alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) clear {
  self.result = [[StartupResponseProto_StartupConstants_UserMonsterConstants alloc] init];
  return self;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants_UserMonsterConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants_UserMonsterConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants*) buildPartial {
  StartupResponseProto_StartupConstants_UserMonsterConstants* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_UserMonsterConstants*) other {
  if (other == [StartupResponseProto_StartupConstants_UserMonsterConstants defaultInstance]) {
    return self;
  }
  if (other.hasMaxNumTeamSlots) {
    [self setMaxNumTeamSlots:other.maxNumTeamSlots];
  }
  if (other.hasInitialMaxNumMonsterLimit) {
    [self setInitialMaxNumMonsterLimit:other.initialMaxNumMonsterLimit];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMaxNumTeamSlots:[input readInt32]];
        break;
      }
      case 16: {
        [self setInitialMaxNumMonsterLimit:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasMaxNumTeamSlots {
  return result.hasMaxNumTeamSlots;
}
- (int32_t) maxNumTeamSlots {
  return result.maxNumTeamSlots;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) setMaxNumTeamSlots:(int32_t) value {
  result.hasMaxNumTeamSlots = YES;
  result.maxNumTeamSlots = value;
  return self;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) clearMaxNumTeamSlots {
  result.hasMaxNumTeamSlots = NO;
  result.maxNumTeamSlots = 0;
  return self;
}
- (BOOL) hasInitialMaxNumMonsterLimit {
  return result.hasInitialMaxNumMonsterLimit;
}
- (int32_t) initialMaxNumMonsterLimit {
  return result.initialMaxNumMonsterLimit;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) setInitialMaxNumMonsterLimit:(int32_t) value {
  result.hasInitialMaxNumMonsterLimit = YES;
  result.initialMaxNumMonsterLimit = value;
  return self;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) clearInitialMaxNumMonsterLimit {
  result.hasInitialMaxNumMonsterLimit = NO;
  result.initialMaxNumMonsterLimit = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_MonsterConstants ()
@property Float32 cashPerHealthPoint;
@property Float32 secondsToHealPerHealthPoint;
@property Float32 elementalStrength;
@property Float32 elementalWeakness;
@property Float32 oilPerMonsterLevel;
@end

@implementation StartupResponseProto_StartupConstants_MonsterConstants

- (BOOL) hasCashPerHealthPoint {
  return !!hasCashPerHealthPoint_;
}
- (void) setHasCashPerHealthPoint:(BOOL) value_ {
  hasCashPerHealthPoint_ = !!value_;
}
@synthesize cashPerHealthPoint;
- (BOOL) hasSecondsToHealPerHealthPoint {
  return !!hasSecondsToHealPerHealthPoint_;
}
- (void) setHasSecondsToHealPerHealthPoint:(BOOL) value_ {
  hasSecondsToHealPerHealthPoint_ = !!value_;
}
@synthesize secondsToHealPerHealthPoint;
- (BOOL) hasElementalStrength {
  return !!hasElementalStrength_;
}
- (void) setHasElementalStrength:(BOOL) value_ {
  hasElementalStrength_ = !!value_;
}
@synthesize elementalStrength;
- (BOOL) hasElementalWeakness {
  return !!hasElementalWeakness_;
}
- (void) setHasElementalWeakness:(BOOL) value_ {
  hasElementalWeakness_ = !!value_;
}
@synthesize elementalWeakness;
- (BOOL) hasOilPerMonsterLevel {
  return !!hasOilPerMonsterLevel_;
}
- (void) setHasOilPerMonsterLevel:(BOOL) value_ {
  hasOilPerMonsterLevel_ = !!value_;
}
@synthesize oilPerMonsterLevel;
- (id) init {
  if ((self = [super init])) {
    self.cashPerHealthPoint = 0;
    self.secondsToHealPerHealthPoint = 0;
    self.elementalStrength = 0;
    self.elementalWeakness = 0;
    self.oilPerMonsterLevel = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants_MonsterConstants* defaultStartupResponseProto_StartupConstants_MonsterConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_MonsterConstants class]) {
    defaultStartupResponseProto_StartupConstants_MonsterConstantsInstance = [[StartupResponseProto_StartupConstants_MonsterConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_MonsterConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_MonsterConstantsInstance;
}
- (StartupResponseProto_StartupConstants_MonsterConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_MonsterConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCashPerHealthPoint) {
    [output writeFloat:1 value:self.cashPerHealthPoint];
  }
  if (self.hasSecondsToHealPerHealthPoint) {
    [output writeFloat:2 value:self.secondsToHealPerHealthPoint];
  }
  if (self.hasElementalStrength) {
    [output writeFloat:3 value:self.elementalStrength];
  }
  if (self.hasElementalWeakness) {
    [output writeFloat:4 value:self.elementalWeakness];
  }
  if (self.hasOilPerMonsterLevel) {
    [output writeFloat:5 value:self.oilPerMonsterLevel];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCashPerHealthPoint) {
    size_ += computeFloatSize(1, self.cashPerHealthPoint);
  }
  if (self.hasSecondsToHealPerHealthPoint) {
    size_ += computeFloatSize(2, self.secondsToHealPerHealthPoint);
  }
  if (self.hasElementalStrength) {
    size_ += computeFloatSize(3, self.elementalStrength);
  }
  if (self.hasElementalWeakness) {
    size_ += computeFloatSize(4, self.elementalWeakness);
  }
  if (self.hasOilPerMonsterLevel) {
    size_ += computeFloatSize(5, self.oilPerMonsterLevel);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_StartupConstants_MonsterConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_MonsterConstants*)[[[StartupResponseProto_StartupConstants_MonsterConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_MonsterConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_MonsterConstants*)[[[StartupResponseProto_StartupConstants_MonsterConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_MonsterConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_MonsterConstants*)[[[StartupResponseProto_StartupConstants_MonsterConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_MonsterConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_MonsterConstants*)[[[StartupResponseProto_StartupConstants_MonsterConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_MonsterConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_MonsterConstants*)[[[StartupResponseProto_StartupConstants_MonsterConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_MonsterConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_MonsterConstants*)[[[StartupResponseProto_StartupConstants_MonsterConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) builder {
  return [[StartupResponseProto_StartupConstants_MonsterConstants_Builder alloc] init];
}
+ (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_MonsterConstants*) prototype {
  return [[StartupResponseProto_StartupConstants_MonsterConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants_MonsterConstants builder];
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) toBuilder {
  return [StartupResponseProto_StartupConstants_MonsterConstants builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCashPerHealthPoint) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cashPerHealthPoint", [NSNumber numberWithFloat:self.cashPerHealthPoint]];
  }
  if (self.hasSecondsToHealPerHealthPoint) {
    [output appendFormat:@"%@%@: %@\n", indent, @"secondsToHealPerHealthPoint", [NSNumber numberWithFloat:self.secondsToHealPerHealthPoint]];
  }
  if (self.hasElementalStrength) {
    [output appendFormat:@"%@%@: %@\n", indent, @"elementalStrength", [NSNumber numberWithFloat:self.elementalStrength]];
  }
  if (self.hasElementalWeakness) {
    [output appendFormat:@"%@%@: %@\n", indent, @"elementalWeakness", [NSNumber numberWithFloat:self.elementalWeakness]];
  }
  if (self.hasOilPerMonsterLevel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"oilPerMonsterLevel", [NSNumber numberWithFloat:self.oilPerMonsterLevel]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_StartupConstants_MonsterConstants class]]) {
    return NO;
  }
  StartupResponseProto_StartupConstants_MonsterConstants *otherMessage = other;
  return
      self.hasCashPerHealthPoint == otherMessage.hasCashPerHealthPoint &&
      (!self.hasCashPerHealthPoint || self.cashPerHealthPoint == otherMessage.cashPerHealthPoint) &&
      self.hasSecondsToHealPerHealthPoint == otherMessage.hasSecondsToHealPerHealthPoint &&
      (!self.hasSecondsToHealPerHealthPoint || self.secondsToHealPerHealthPoint == otherMessage.secondsToHealPerHealthPoint) &&
      self.hasElementalStrength == otherMessage.hasElementalStrength &&
      (!self.hasElementalStrength || self.elementalStrength == otherMessage.elementalStrength) &&
      self.hasElementalWeakness == otherMessage.hasElementalWeakness &&
      (!self.hasElementalWeakness || self.elementalWeakness == otherMessage.elementalWeakness) &&
      self.hasOilPerMonsterLevel == otherMessage.hasOilPerMonsterLevel &&
      (!self.hasOilPerMonsterLevel || self.oilPerMonsterLevel == otherMessage.oilPerMonsterLevel) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCashPerHealthPoint) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.cashPerHealthPoint] hash];
  }
  if (self.hasSecondsToHealPerHealthPoint) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.secondsToHealPerHealthPoint] hash];
  }
  if (self.hasElementalStrength) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.elementalStrength] hash];
  }
  if (self.hasElementalWeakness) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.elementalWeakness] hash];
  }
  if (self.hasOilPerMonsterLevel) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.oilPerMonsterLevel] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_StartupConstants_MonsterConstants_Builder()
@property (strong) StartupResponseProto_StartupConstants_MonsterConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_MonsterConstants_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_StartupConstants_MonsterConstants alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) clear {
  self.result = [[StartupResponseProto_StartupConstants_MonsterConstants alloc] init];
  return self;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants_MonsterConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_MonsterConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants_MonsterConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants_MonsterConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_MonsterConstants*) buildPartial {
  StartupResponseProto_StartupConstants_MonsterConstants* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_MonsterConstants*) other {
  if (other == [StartupResponseProto_StartupConstants_MonsterConstants defaultInstance]) {
    return self;
  }
  if (other.hasCashPerHealthPoint) {
    [self setCashPerHealthPoint:other.cashPerHealthPoint];
  }
  if (other.hasSecondsToHealPerHealthPoint) {
    [self setSecondsToHealPerHealthPoint:other.secondsToHealPerHealthPoint];
  }
  if (other.hasElementalStrength) {
    [self setElementalStrength:other.elementalStrength];
  }
  if (other.hasElementalWeakness) {
    [self setElementalWeakness:other.elementalWeakness];
  }
  if (other.hasOilPerMonsterLevel) {
    [self setOilPerMonsterLevel:other.oilPerMonsterLevel];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 13: {
        [self setCashPerHealthPoint:[input readFloat]];
        break;
      }
      case 21: {
        [self setSecondsToHealPerHealthPoint:[input readFloat]];
        break;
      }
      case 29: {
        [self setElementalStrength:[input readFloat]];
        break;
      }
      case 37: {
        [self setElementalWeakness:[input readFloat]];
        break;
      }
      case 45: {
        [self setOilPerMonsterLevel:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasCashPerHealthPoint {
  return result.hasCashPerHealthPoint;
}
- (Float32) cashPerHealthPoint {
  return result.cashPerHealthPoint;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) setCashPerHealthPoint:(Float32) value {
  result.hasCashPerHealthPoint = YES;
  result.cashPerHealthPoint = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) clearCashPerHealthPoint {
  result.hasCashPerHealthPoint = NO;
  result.cashPerHealthPoint = 0;
  return self;
}
- (BOOL) hasSecondsToHealPerHealthPoint {
  return result.hasSecondsToHealPerHealthPoint;
}
- (Float32) secondsToHealPerHealthPoint {
  return result.secondsToHealPerHealthPoint;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) setSecondsToHealPerHealthPoint:(Float32) value {
  result.hasSecondsToHealPerHealthPoint = YES;
  result.secondsToHealPerHealthPoint = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) clearSecondsToHealPerHealthPoint {
  result.hasSecondsToHealPerHealthPoint = NO;
  result.secondsToHealPerHealthPoint = 0;
  return self;
}
- (BOOL) hasElementalStrength {
  return result.hasElementalStrength;
}
- (Float32) elementalStrength {
  return result.elementalStrength;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) setElementalStrength:(Float32) value {
  result.hasElementalStrength = YES;
  result.elementalStrength = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) clearElementalStrength {
  result.hasElementalStrength = NO;
  result.elementalStrength = 0;
  return self;
}
- (BOOL) hasElementalWeakness {
  return result.hasElementalWeakness;
}
- (Float32) elementalWeakness {
  return result.elementalWeakness;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) setElementalWeakness:(Float32) value {
  result.hasElementalWeakness = YES;
  result.elementalWeakness = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) clearElementalWeakness {
  result.hasElementalWeakness = NO;
  result.elementalWeakness = 0;
  return self;
}
- (BOOL) hasOilPerMonsterLevel {
  return result.hasOilPerMonsterLevel;
}
- (Float32) oilPerMonsterLevel {
  return result.oilPerMonsterLevel;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) setOilPerMonsterLevel:(Float32) value {
  result.hasOilPerMonsterLevel = YES;
  result.oilPerMonsterLevel = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) clearOilPerMonsterLevel {
  result.hasOilPerMonsterLevel = NO;
  result.oilPerMonsterLevel = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_TaskMapConstants ()
@property (strong) NSString* mapSectionImagePrefix;
@property int32_t mapNumberOfSections;
@property Float32 mapSectionHeight;
@property Float32 mapTotalWidth;
@property Float32 mapTotalHeight;
@end

@implementation StartupResponseProto_StartupConstants_TaskMapConstants

- (BOOL) hasMapSectionImagePrefix {
  return !!hasMapSectionImagePrefix_;
}
- (void) setHasMapSectionImagePrefix:(BOOL) value_ {
  hasMapSectionImagePrefix_ = !!value_;
}
@synthesize mapSectionImagePrefix;
- (BOOL) hasMapNumberOfSections {
  return !!hasMapNumberOfSections_;
}
- (void) setHasMapNumberOfSections:(BOOL) value_ {
  hasMapNumberOfSections_ = !!value_;
}
@synthesize mapNumberOfSections;
- (BOOL) hasMapSectionHeight {
  return !!hasMapSectionHeight_;
}
- (void) setHasMapSectionHeight:(BOOL) value_ {
  hasMapSectionHeight_ = !!value_;
}
@synthesize mapSectionHeight;
- (BOOL) hasMapTotalWidth {
  return !!hasMapTotalWidth_;
}
- (void) setHasMapTotalWidth:(BOOL) value_ {
  hasMapTotalWidth_ = !!value_;
}
@synthesize mapTotalWidth;
- (BOOL) hasMapTotalHeight {
  return !!hasMapTotalHeight_;
}
- (void) setHasMapTotalHeight:(BOOL) value_ {
  hasMapTotalHeight_ = !!value_;
}
@synthesize mapTotalHeight;
- (id) init {
  if ((self = [super init])) {
    self.mapSectionImagePrefix = @"";
    self.mapNumberOfSections = 0;
    self.mapSectionHeight = 0;
    self.mapTotalWidth = 0;
    self.mapTotalHeight = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants_TaskMapConstants* defaultStartupResponseProto_StartupConstants_TaskMapConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_TaskMapConstants class]) {
    defaultStartupResponseProto_StartupConstants_TaskMapConstantsInstance = [[StartupResponseProto_StartupConstants_TaskMapConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_TaskMapConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_TaskMapConstantsInstance;
}
- (StartupResponseProto_StartupConstants_TaskMapConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_TaskMapConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMapSectionImagePrefix) {
    [output writeString:1 value:self.mapSectionImagePrefix];
  }
  if (self.hasMapNumberOfSections) {
    [output writeInt32:2 value:self.mapNumberOfSections];
  }
  if (self.hasMapSectionHeight) {
    [output writeFloat:3 value:self.mapSectionHeight];
  }
  if (self.hasMapTotalWidth) {
    [output writeFloat:4 value:self.mapTotalWidth];
  }
  if (self.hasMapTotalHeight) {
    [output writeFloat:5 value:self.mapTotalHeight];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMapSectionImagePrefix) {
    size_ += computeStringSize(1, self.mapSectionImagePrefix);
  }
  if (self.hasMapNumberOfSections) {
    size_ += computeInt32Size(2, self.mapNumberOfSections);
  }
  if (self.hasMapSectionHeight) {
    size_ += computeFloatSize(3, self.mapSectionHeight);
  }
  if (self.hasMapTotalWidth) {
    size_ += computeFloatSize(4, self.mapTotalWidth);
  }
  if (self.hasMapTotalHeight) {
    size_ += computeFloatSize(5, self.mapTotalHeight);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_StartupConstants_TaskMapConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_TaskMapConstants*)[[[StartupResponseProto_StartupConstants_TaskMapConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_TaskMapConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_TaskMapConstants*)[[[StartupResponseProto_StartupConstants_TaskMapConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_TaskMapConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_TaskMapConstants*)[[[StartupResponseProto_StartupConstants_TaskMapConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_TaskMapConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_TaskMapConstants*)[[[StartupResponseProto_StartupConstants_TaskMapConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_TaskMapConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_TaskMapConstants*)[[[StartupResponseProto_StartupConstants_TaskMapConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_TaskMapConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_TaskMapConstants*)[[[StartupResponseProto_StartupConstants_TaskMapConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) builder {
  return [[StartupResponseProto_StartupConstants_TaskMapConstants_Builder alloc] init];
}
+ (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_TaskMapConstants*) prototype {
  return [[StartupResponseProto_StartupConstants_TaskMapConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants_TaskMapConstants builder];
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) toBuilder {
  return [StartupResponseProto_StartupConstants_TaskMapConstants builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMapSectionImagePrefix) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mapSectionImagePrefix", self.mapSectionImagePrefix];
  }
  if (self.hasMapNumberOfSections) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mapNumberOfSections", [NSNumber numberWithInteger:self.mapNumberOfSections]];
  }
  if (self.hasMapSectionHeight) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mapSectionHeight", [NSNumber numberWithFloat:self.mapSectionHeight]];
  }
  if (self.hasMapTotalWidth) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mapTotalWidth", [NSNumber numberWithFloat:self.mapTotalWidth]];
  }
  if (self.hasMapTotalHeight) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mapTotalHeight", [NSNumber numberWithFloat:self.mapTotalHeight]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_StartupConstants_TaskMapConstants class]]) {
    return NO;
  }
  StartupResponseProto_StartupConstants_TaskMapConstants *otherMessage = other;
  return
      self.hasMapSectionImagePrefix == otherMessage.hasMapSectionImagePrefix &&
      (!self.hasMapSectionImagePrefix || [self.mapSectionImagePrefix isEqual:otherMessage.mapSectionImagePrefix]) &&
      self.hasMapNumberOfSections == otherMessage.hasMapNumberOfSections &&
      (!self.hasMapNumberOfSections || self.mapNumberOfSections == otherMessage.mapNumberOfSections) &&
      self.hasMapSectionHeight == otherMessage.hasMapSectionHeight &&
      (!self.hasMapSectionHeight || self.mapSectionHeight == otherMessage.mapSectionHeight) &&
      self.hasMapTotalWidth == otherMessage.hasMapTotalWidth &&
      (!self.hasMapTotalWidth || self.mapTotalWidth == otherMessage.mapTotalWidth) &&
      self.hasMapTotalHeight == otherMessage.hasMapTotalHeight &&
      (!self.hasMapTotalHeight || self.mapTotalHeight == otherMessage.mapTotalHeight) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMapSectionImagePrefix) {
    hashCode = hashCode * 31 + [self.mapSectionImagePrefix hash];
  }
  if (self.hasMapNumberOfSections) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.mapNumberOfSections] hash];
  }
  if (self.hasMapSectionHeight) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.mapSectionHeight] hash];
  }
  if (self.hasMapTotalWidth) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.mapTotalWidth] hash];
  }
  if (self.hasMapTotalHeight) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.mapTotalHeight] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_StartupConstants_TaskMapConstants_Builder()
@property (strong) StartupResponseProto_StartupConstants_TaskMapConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_TaskMapConstants_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_StartupConstants_TaskMapConstants alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) clear {
  self.result = [[StartupResponseProto_StartupConstants_TaskMapConstants alloc] init];
  return self;
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants_TaskMapConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_TaskMapConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants_TaskMapConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants_TaskMapConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_TaskMapConstants*) buildPartial {
  StartupResponseProto_StartupConstants_TaskMapConstants* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_TaskMapConstants*) other {
  if (other == [StartupResponseProto_StartupConstants_TaskMapConstants defaultInstance]) {
    return self;
  }
  if (other.hasMapSectionImagePrefix) {
    [self setMapSectionImagePrefix:other.mapSectionImagePrefix];
  }
  if (other.hasMapNumberOfSections) {
    [self setMapNumberOfSections:other.mapNumberOfSections];
  }
  if (other.hasMapSectionHeight) {
    [self setMapSectionHeight:other.mapSectionHeight];
  }
  if (other.hasMapTotalWidth) {
    [self setMapTotalWidth:other.mapTotalWidth];
  }
  if (other.hasMapTotalHeight) {
    [self setMapTotalHeight:other.mapTotalHeight];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMapSectionImagePrefix:[input readString]];
        break;
      }
      case 16: {
        [self setMapNumberOfSections:[input readInt32]];
        break;
      }
      case 29: {
        [self setMapSectionHeight:[input readFloat]];
        break;
      }
      case 37: {
        [self setMapTotalWidth:[input readFloat]];
        break;
      }
      case 45: {
        [self setMapTotalHeight:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasMapSectionImagePrefix {
  return result.hasMapSectionImagePrefix;
}
- (NSString*) mapSectionImagePrefix {
  return result.mapSectionImagePrefix;
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) setMapSectionImagePrefix:(NSString*) value {
  result.hasMapSectionImagePrefix = YES;
  result.mapSectionImagePrefix = value;
  return self;
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) clearMapSectionImagePrefix {
  result.hasMapSectionImagePrefix = NO;
  result.mapSectionImagePrefix = @"";
  return self;
}
- (BOOL) hasMapNumberOfSections {
  return result.hasMapNumberOfSections;
}
- (int32_t) mapNumberOfSections {
  return result.mapNumberOfSections;
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) setMapNumberOfSections:(int32_t) value {
  result.hasMapNumberOfSections = YES;
  result.mapNumberOfSections = value;
  return self;
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) clearMapNumberOfSections {
  result.hasMapNumberOfSections = NO;
  result.mapNumberOfSections = 0;
  return self;
}
- (BOOL) hasMapSectionHeight {
  return result.hasMapSectionHeight;
}
- (Float32) mapSectionHeight {
  return result.mapSectionHeight;
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) setMapSectionHeight:(Float32) value {
  result.hasMapSectionHeight = YES;
  result.mapSectionHeight = value;
  return self;
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) clearMapSectionHeight {
  result.hasMapSectionHeight = NO;
  result.mapSectionHeight = 0;
  return self;
}
- (BOOL) hasMapTotalWidth {
  return result.hasMapTotalWidth;
}
- (Float32) mapTotalWidth {
  return result.mapTotalWidth;
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) setMapTotalWidth:(Float32) value {
  result.hasMapTotalWidth = YES;
  result.mapTotalWidth = value;
  return self;
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) clearMapTotalWidth {
  result.hasMapTotalWidth = NO;
  result.mapTotalWidth = 0;
  return self;
}
- (BOOL) hasMapTotalHeight {
  return result.hasMapTotalHeight;
}
- (Float32) mapTotalHeight {
  return result.mapTotalHeight;
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) setMapTotalHeight:(Float32) value {
  result.hasMapTotalHeight = YES;
  result.mapTotalHeight = value;
  return self;
}
- (StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) clearMapTotalHeight {
  result.hasMapTotalHeight = NO;
  result.mapTotalHeight = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_MiniTutorialConstants ()
@property int32_t miniTutorialTaskId;
@property int32_t guideMonsterId;
@property int32_t enhanceGuideMonsterId;
@end

@implementation StartupResponseProto_StartupConstants_MiniTutorialConstants

- (BOOL) hasMiniTutorialTaskId {
  return !!hasMiniTutorialTaskId_;
}
- (void) setHasMiniTutorialTaskId:(BOOL) value_ {
  hasMiniTutorialTaskId_ = !!value_;
}
@synthesize miniTutorialTaskId;
- (BOOL) hasGuideMonsterId {
  return !!hasGuideMonsterId_;
}
- (void) setHasGuideMonsterId:(BOOL) value_ {
  hasGuideMonsterId_ = !!value_;
}
@synthesize guideMonsterId;
- (BOOL) hasEnhanceGuideMonsterId {
  return !!hasEnhanceGuideMonsterId_;
}
- (void) setHasEnhanceGuideMonsterId:(BOOL) value_ {
  hasEnhanceGuideMonsterId_ = !!value_;
}
@synthesize enhanceGuideMonsterId;
- (id) init {
  if ((self = [super init])) {
    self.miniTutorialTaskId = 0;
    self.guideMonsterId = 0;
    self.enhanceGuideMonsterId = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants_MiniTutorialConstants* defaultStartupResponseProto_StartupConstants_MiniTutorialConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_MiniTutorialConstants class]) {
    defaultStartupResponseProto_StartupConstants_MiniTutorialConstantsInstance = [[StartupResponseProto_StartupConstants_MiniTutorialConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_MiniTutorialConstantsInstance;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_MiniTutorialConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMiniTutorialTaskId) {
    [output writeInt32:1 value:self.miniTutorialTaskId];
  }
  if (self.hasGuideMonsterId) {
    [output writeInt32:2 value:self.guideMonsterId];
  }
  if (self.hasEnhanceGuideMonsterId) {
    [output writeInt32:3 value:self.enhanceGuideMonsterId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMiniTutorialTaskId) {
    size_ += computeInt32Size(1, self.miniTutorialTaskId);
  }
  if (self.hasGuideMonsterId) {
    size_ += computeInt32Size(2, self.guideMonsterId);
  }
  if (self.hasEnhanceGuideMonsterId) {
    size_ += computeInt32Size(3, self.enhanceGuideMonsterId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_MiniTutorialConstants*)[[[StartupResponseProto_StartupConstants_MiniTutorialConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_MiniTutorialConstants*)[[[StartupResponseProto_StartupConstants_MiniTutorialConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_MiniTutorialConstants*)[[[StartupResponseProto_StartupConstants_MiniTutorialConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_MiniTutorialConstants*)[[[StartupResponseProto_StartupConstants_MiniTutorialConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_MiniTutorialConstants*)[[[StartupResponseProto_StartupConstants_MiniTutorialConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_MiniTutorialConstants*)[[[StartupResponseProto_StartupConstants_MiniTutorialConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) builder {
  return [[StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder alloc] init];
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_MiniTutorialConstants*) prototype {
  return [[StartupResponseProto_StartupConstants_MiniTutorialConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants_MiniTutorialConstants builder];
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) toBuilder {
  return [StartupResponseProto_StartupConstants_MiniTutorialConstants builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMiniTutorialTaskId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"miniTutorialTaskId", [NSNumber numberWithInteger:self.miniTutorialTaskId]];
  }
  if (self.hasGuideMonsterId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"guideMonsterId", [NSNumber numberWithInteger:self.guideMonsterId]];
  }
  if (self.hasEnhanceGuideMonsterId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"enhanceGuideMonsterId", [NSNumber numberWithInteger:self.enhanceGuideMonsterId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_StartupConstants_MiniTutorialConstants class]]) {
    return NO;
  }
  StartupResponseProto_StartupConstants_MiniTutorialConstants *otherMessage = other;
  return
      self.hasMiniTutorialTaskId == otherMessage.hasMiniTutorialTaskId &&
      (!self.hasMiniTutorialTaskId || self.miniTutorialTaskId == otherMessage.miniTutorialTaskId) &&
      self.hasGuideMonsterId == otherMessage.hasGuideMonsterId &&
      (!self.hasGuideMonsterId || self.guideMonsterId == otherMessage.guideMonsterId) &&
      self.hasEnhanceGuideMonsterId == otherMessage.hasEnhanceGuideMonsterId &&
      (!self.hasEnhanceGuideMonsterId || self.enhanceGuideMonsterId == otherMessage.enhanceGuideMonsterId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMiniTutorialTaskId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.miniTutorialTaskId] hash];
  }
  if (self.hasGuideMonsterId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.guideMonsterId] hash];
  }
  if (self.hasEnhanceGuideMonsterId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.enhanceGuideMonsterId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder()
@property (strong) StartupResponseProto_StartupConstants_MiniTutorialConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_StartupConstants_MiniTutorialConstants alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) clear {
  self.result = [[StartupResponseProto_StartupConstants_MiniTutorialConstants alloc] init];
  return self;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants_MiniTutorialConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants_MiniTutorialConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants*) buildPartial {
  StartupResponseProto_StartupConstants_MiniTutorialConstants* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_MiniTutorialConstants*) other {
  if (other == [StartupResponseProto_StartupConstants_MiniTutorialConstants defaultInstance]) {
    return self;
  }
  if (other.hasMiniTutorialTaskId) {
    [self setMiniTutorialTaskId:other.miniTutorialTaskId];
  }
  if (other.hasGuideMonsterId) {
    [self setGuideMonsterId:other.guideMonsterId];
  }
  if (other.hasEnhanceGuideMonsterId) {
    [self setEnhanceGuideMonsterId:other.enhanceGuideMonsterId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMiniTutorialTaskId:[input readInt32]];
        break;
      }
      case 16: {
        [self setGuideMonsterId:[input readInt32]];
        break;
      }
      case 24: {
        [self setEnhanceGuideMonsterId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasMiniTutorialTaskId {
  return result.hasMiniTutorialTaskId;
}
- (int32_t) miniTutorialTaskId {
  return result.miniTutorialTaskId;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) setMiniTutorialTaskId:(int32_t) value {
  result.hasMiniTutorialTaskId = YES;
  result.miniTutorialTaskId = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) clearMiniTutorialTaskId {
  result.hasMiniTutorialTaskId = NO;
  result.miniTutorialTaskId = 0;
  return self;
}
- (BOOL) hasGuideMonsterId {
  return result.hasGuideMonsterId;
}
- (int32_t) guideMonsterId {
  return result.guideMonsterId;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) setGuideMonsterId:(int32_t) value {
  result.hasGuideMonsterId = YES;
  result.guideMonsterId = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) clearGuideMonsterId {
  result.hasGuideMonsterId = NO;
  result.guideMonsterId = 0;
  return self;
}
- (BOOL) hasEnhanceGuideMonsterId {
  return result.hasEnhanceGuideMonsterId;
}
- (int32_t) enhanceGuideMonsterId {
  return result.enhanceGuideMonsterId;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) setEnhanceGuideMonsterId:(int32_t) value {
  result.hasEnhanceGuideMonsterId = YES;
  result.enhanceGuideMonsterId = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) clearEnhanceGuideMonsterId {
  result.hasEnhanceGuideMonsterId = NO;
  result.enhanceGuideMonsterId = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_ClanHelpConstants ()
@property GameActionType helpType;
@property int32_t amountRemovedPerHelp;
@property Float32 percentRemovedPerHelp;
@end

@implementation StartupResponseProto_StartupConstants_ClanHelpConstants

- (BOOL) hasHelpType {
  return !!hasHelpType_;
}
- (void) setHasHelpType:(BOOL) value_ {
  hasHelpType_ = !!value_;
}
@synthesize helpType;
- (BOOL) hasAmountRemovedPerHelp {
  return !!hasAmountRemovedPerHelp_;
}
- (void) setHasAmountRemovedPerHelp:(BOOL) value_ {
  hasAmountRemovedPerHelp_ = !!value_;
}
@synthesize amountRemovedPerHelp;
- (BOOL) hasPercentRemovedPerHelp {
  return !!hasPercentRemovedPerHelp_;
}
- (void) setHasPercentRemovedPerHelp:(BOOL) value_ {
  hasPercentRemovedPerHelp_ = !!value_;
}
@synthesize percentRemovedPerHelp;
- (id) init {
  if ((self = [super init])) {
    self.helpType = GameActionTypeNoHelp;
    self.amountRemovedPerHelp = 0;
    self.percentRemovedPerHelp = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants_ClanHelpConstants* defaultStartupResponseProto_StartupConstants_ClanHelpConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_ClanHelpConstants class]) {
    defaultStartupResponseProto_StartupConstants_ClanHelpConstantsInstance = [[StartupResponseProto_StartupConstants_ClanHelpConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_ClanHelpConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_ClanHelpConstantsInstance;
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_ClanHelpConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasHelpType) {
    [output writeEnum:1 value:self.helpType];
  }
  if (self.hasAmountRemovedPerHelp) {
    [output writeInt32:2 value:self.amountRemovedPerHelp];
  }
  if (self.hasPercentRemovedPerHelp) {
    [output writeFloat:3 value:self.percentRemovedPerHelp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasHelpType) {
    size_ += computeEnumSize(1, self.helpType);
  }
  if (self.hasAmountRemovedPerHelp) {
    size_ += computeInt32Size(2, self.amountRemovedPerHelp);
  }
  if (self.hasPercentRemovedPerHelp) {
    size_ += computeFloatSize(3, self.percentRemovedPerHelp);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_StartupConstants_ClanHelpConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_ClanHelpConstants*)[[[StartupResponseProto_StartupConstants_ClanHelpConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_ClanHelpConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_ClanHelpConstants*)[[[StartupResponseProto_StartupConstants_ClanHelpConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_ClanHelpConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_ClanHelpConstants*)[[[StartupResponseProto_StartupConstants_ClanHelpConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_ClanHelpConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_ClanHelpConstants*)[[[StartupResponseProto_StartupConstants_ClanHelpConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_ClanHelpConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_ClanHelpConstants*)[[[StartupResponseProto_StartupConstants_ClanHelpConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_ClanHelpConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_ClanHelpConstants*)[[[StartupResponseProto_StartupConstants_ClanHelpConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_ClanHelpConstants_Builder*) builder {
  return [[StartupResponseProto_StartupConstants_ClanHelpConstants_Builder alloc] init];
}
+ (StartupResponseProto_StartupConstants_ClanHelpConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_ClanHelpConstants*) prototype {
  return [[StartupResponseProto_StartupConstants_ClanHelpConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants_ClanHelpConstants builder];
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants_Builder*) toBuilder {
  return [StartupResponseProto_StartupConstants_ClanHelpConstants builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasHelpType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"helpType", [NSNumber numberWithInteger:self.helpType]];
  }
  if (self.hasAmountRemovedPerHelp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"amountRemovedPerHelp", [NSNumber numberWithInteger:self.amountRemovedPerHelp]];
  }
  if (self.hasPercentRemovedPerHelp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"percentRemovedPerHelp", [NSNumber numberWithFloat:self.percentRemovedPerHelp]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_StartupConstants_ClanHelpConstants class]]) {
    return NO;
  }
  StartupResponseProto_StartupConstants_ClanHelpConstants *otherMessage = other;
  return
      self.hasHelpType == otherMessage.hasHelpType &&
      (!self.hasHelpType || self.helpType == otherMessage.helpType) &&
      self.hasAmountRemovedPerHelp == otherMessage.hasAmountRemovedPerHelp &&
      (!self.hasAmountRemovedPerHelp || self.amountRemovedPerHelp == otherMessage.amountRemovedPerHelp) &&
      self.hasPercentRemovedPerHelp == otherMessage.hasPercentRemovedPerHelp &&
      (!self.hasPercentRemovedPerHelp || self.percentRemovedPerHelp == otherMessage.percentRemovedPerHelp) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasHelpType) {
    hashCode = hashCode * 31 + self.helpType;
  }
  if (self.hasAmountRemovedPerHelp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.amountRemovedPerHelp] hash];
  }
  if (self.hasPercentRemovedPerHelp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.percentRemovedPerHelp] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_StartupConstants_ClanHelpConstants_Builder()
@property (strong) StartupResponseProto_StartupConstants_ClanHelpConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_ClanHelpConstants_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_StartupConstants_ClanHelpConstants alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants_Builder*) clear {
  self.result = [[StartupResponseProto_StartupConstants_ClanHelpConstants alloc] init];
  return self;
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants_ClanHelpConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants_ClanHelpConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants*) buildPartial {
  StartupResponseProto_StartupConstants_ClanHelpConstants* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_ClanHelpConstants*) other {
  if (other == [StartupResponseProto_StartupConstants_ClanHelpConstants defaultInstance]) {
    return self;
  }
  if (other.hasHelpType) {
    [self setHelpType:other.helpType];
  }
  if (other.hasAmountRemovedPerHelp) {
    [self setAmountRemovedPerHelp:other.amountRemovedPerHelp];
  }
  if (other.hasPercentRemovedPerHelp) {
    [self setPercentRemovedPerHelp:other.percentRemovedPerHelp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        GameActionType value = (GameActionType)[input readEnum];
        if (GameActionTypeIsValidValue(value)) {
          [self setHelpType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        [self setAmountRemovedPerHelp:[input readInt32]];
        break;
      }
      case 29: {
        [self setPercentRemovedPerHelp:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasHelpType {
  return result.hasHelpType;
}
- (GameActionType) helpType {
  return result.helpType;
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants_Builder*) setHelpType:(GameActionType) value {
  result.hasHelpType = YES;
  result.helpType = value;
  return self;
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants_Builder*) clearHelpTypeList {
  result.hasHelpType = NO;
  result.helpType = GameActionTypeNoHelp;
  return self;
}
- (BOOL) hasAmountRemovedPerHelp {
  return result.hasAmountRemovedPerHelp;
}
- (int32_t) amountRemovedPerHelp {
  return result.amountRemovedPerHelp;
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants_Builder*) setAmountRemovedPerHelp:(int32_t) value {
  result.hasAmountRemovedPerHelp = YES;
  result.amountRemovedPerHelp = value;
  return self;
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants_Builder*) clearAmountRemovedPerHelp {
  result.hasAmountRemovedPerHelp = NO;
  result.amountRemovedPerHelp = 0;
  return self;
}
- (BOOL) hasPercentRemovedPerHelp {
  return result.hasPercentRemovedPerHelp;
}
- (Float32) percentRemovedPerHelp {
  return result.percentRemovedPerHelp;
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants_Builder*) setPercentRemovedPerHelp:(Float32) value {
  result.hasPercentRemovedPerHelp = YES;
  result.percentRemovedPerHelp = value;
  return self;
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants_Builder*) clearPercentRemovedPerHelp {
  result.hasPercentRemovedPerHelp = NO;
  result.percentRemovedPerHelp = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_PvpConstants ()
@property int32_t pvpDmgsWindowSize;
@property Float32 minPvpDmgDelta;
@property Float32 maxPvpDmgDelta;
@property int32_t pvpRequiredMinLvl;
@property int32_t defendingMsgCharLimit;
@property int32_t beginAvengingTimeLimitMins;
@property int32_t requestClanToAvengeTimeLimitMins;
@end

@implementation StartupResponseProto_StartupConstants_PvpConstants

- (BOOL) hasPvpDmgsWindowSize {
  return !!hasPvpDmgsWindowSize_;
}
- (void) setHasPvpDmgsWindowSize:(BOOL) value_ {
  hasPvpDmgsWindowSize_ = !!value_;
}
@synthesize pvpDmgsWindowSize;
- (BOOL) hasMinPvpDmgDelta {
  return !!hasMinPvpDmgDelta_;
}
- (void) setHasMinPvpDmgDelta:(BOOL) value_ {
  hasMinPvpDmgDelta_ = !!value_;
}
@synthesize minPvpDmgDelta;
- (BOOL) hasMaxPvpDmgDelta {
  return !!hasMaxPvpDmgDelta_;
}
- (void) setHasMaxPvpDmgDelta:(BOOL) value_ {
  hasMaxPvpDmgDelta_ = !!value_;
}
@synthesize maxPvpDmgDelta;
- (BOOL) hasPvpRequiredMinLvl {
  return !!hasPvpRequiredMinLvl_;
}
- (void) setHasPvpRequiredMinLvl:(BOOL) value_ {
  hasPvpRequiredMinLvl_ = !!value_;
}
@synthesize pvpRequiredMinLvl;
- (BOOL) hasDefendingMsgCharLimit {
  return !!hasDefendingMsgCharLimit_;
}
- (void) setHasDefendingMsgCharLimit:(BOOL) value_ {
  hasDefendingMsgCharLimit_ = !!value_;
}
@synthesize defendingMsgCharLimit;
- (BOOL) hasBeginAvengingTimeLimitMins {
  return !!hasBeginAvengingTimeLimitMins_;
}
- (void) setHasBeginAvengingTimeLimitMins:(BOOL) value_ {
  hasBeginAvengingTimeLimitMins_ = !!value_;
}
@synthesize beginAvengingTimeLimitMins;
- (BOOL) hasRequestClanToAvengeTimeLimitMins {
  return !!hasRequestClanToAvengeTimeLimitMins_;
}
- (void) setHasRequestClanToAvengeTimeLimitMins:(BOOL) value_ {
  hasRequestClanToAvengeTimeLimitMins_ = !!value_;
}
@synthesize requestClanToAvengeTimeLimitMins;
- (id) init {
  if ((self = [super init])) {
    self.pvpDmgsWindowSize = 0;
    self.minPvpDmgDelta = 0;
    self.maxPvpDmgDelta = 0;
    self.pvpRequiredMinLvl = 0;
    self.defendingMsgCharLimit = 0;
    self.beginAvengingTimeLimitMins = 0;
    self.requestClanToAvengeTimeLimitMins = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants_PvpConstants* defaultStartupResponseProto_StartupConstants_PvpConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_PvpConstants class]) {
    defaultStartupResponseProto_StartupConstants_PvpConstantsInstance = [[StartupResponseProto_StartupConstants_PvpConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_PvpConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_PvpConstantsInstance;
}
- (StartupResponseProto_StartupConstants_PvpConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_PvpConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPvpDmgsWindowSize) {
    [output writeInt32:1 value:self.pvpDmgsWindowSize];
  }
  if (self.hasMinPvpDmgDelta) {
    [output writeFloat:2 value:self.minPvpDmgDelta];
  }
  if (self.hasMaxPvpDmgDelta) {
    [output writeFloat:3 value:self.maxPvpDmgDelta];
  }
  if (self.hasPvpRequiredMinLvl) {
    [output writeInt32:4 value:self.pvpRequiredMinLvl];
  }
  if (self.hasDefendingMsgCharLimit) {
    [output writeInt32:5 value:self.defendingMsgCharLimit];
  }
  if (self.hasBeginAvengingTimeLimitMins) {
    [output writeInt32:6 value:self.beginAvengingTimeLimitMins];
  }
  if (self.hasRequestClanToAvengeTimeLimitMins) {
    [output writeInt32:7 value:self.requestClanToAvengeTimeLimitMins];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPvpDmgsWindowSize) {
    size_ += computeInt32Size(1, self.pvpDmgsWindowSize);
  }
  if (self.hasMinPvpDmgDelta) {
    size_ += computeFloatSize(2, self.minPvpDmgDelta);
  }
  if (self.hasMaxPvpDmgDelta) {
    size_ += computeFloatSize(3, self.maxPvpDmgDelta);
  }
  if (self.hasPvpRequiredMinLvl) {
    size_ += computeInt32Size(4, self.pvpRequiredMinLvl);
  }
  if (self.hasDefendingMsgCharLimit) {
    size_ += computeInt32Size(5, self.defendingMsgCharLimit);
  }
  if (self.hasBeginAvengingTimeLimitMins) {
    size_ += computeInt32Size(6, self.beginAvengingTimeLimitMins);
  }
  if (self.hasRequestClanToAvengeTimeLimitMins) {
    size_ += computeInt32Size(7, self.requestClanToAvengeTimeLimitMins);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_StartupConstants_PvpConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_PvpConstants*)[[[StartupResponseProto_StartupConstants_PvpConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_PvpConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_PvpConstants*)[[[StartupResponseProto_StartupConstants_PvpConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_PvpConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_PvpConstants*)[[[StartupResponseProto_StartupConstants_PvpConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_PvpConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_PvpConstants*)[[[StartupResponseProto_StartupConstants_PvpConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_PvpConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_PvpConstants*)[[[StartupResponseProto_StartupConstants_PvpConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_PvpConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_PvpConstants*)[[[StartupResponseProto_StartupConstants_PvpConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_PvpConstants_Builder*) builder {
  return [[StartupResponseProto_StartupConstants_PvpConstants_Builder alloc] init];
}
+ (StartupResponseProto_StartupConstants_PvpConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_PvpConstants*) prototype {
  return [[StartupResponseProto_StartupConstants_PvpConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants_PvpConstants builder];
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) toBuilder {
  return [StartupResponseProto_StartupConstants_PvpConstants builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPvpDmgsWindowSize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pvpDmgsWindowSize", [NSNumber numberWithInteger:self.pvpDmgsWindowSize]];
  }
  if (self.hasMinPvpDmgDelta) {
    [output appendFormat:@"%@%@: %@\n", indent, @"minPvpDmgDelta", [NSNumber numberWithFloat:self.minPvpDmgDelta]];
  }
  if (self.hasMaxPvpDmgDelta) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxPvpDmgDelta", [NSNumber numberWithFloat:self.maxPvpDmgDelta]];
  }
  if (self.hasPvpRequiredMinLvl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pvpRequiredMinLvl", [NSNumber numberWithInteger:self.pvpRequiredMinLvl]];
  }
  if (self.hasDefendingMsgCharLimit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defendingMsgCharLimit", [NSNumber numberWithInteger:self.defendingMsgCharLimit]];
  }
  if (self.hasBeginAvengingTimeLimitMins) {
    [output appendFormat:@"%@%@: %@\n", indent, @"beginAvengingTimeLimitMins", [NSNumber numberWithInteger:self.beginAvengingTimeLimitMins]];
  }
  if (self.hasRequestClanToAvengeTimeLimitMins) {
    [output appendFormat:@"%@%@: %@\n", indent, @"requestClanToAvengeTimeLimitMins", [NSNumber numberWithInteger:self.requestClanToAvengeTimeLimitMins]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_StartupConstants_PvpConstants class]]) {
    return NO;
  }
  StartupResponseProto_StartupConstants_PvpConstants *otherMessage = other;
  return
      self.hasPvpDmgsWindowSize == otherMessage.hasPvpDmgsWindowSize &&
      (!self.hasPvpDmgsWindowSize || self.pvpDmgsWindowSize == otherMessage.pvpDmgsWindowSize) &&
      self.hasMinPvpDmgDelta == otherMessage.hasMinPvpDmgDelta &&
      (!self.hasMinPvpDmgDelta || self.minPvpDmgDelta == otherMessage.minPvpDmgDelta) &&
      self.hasMaxPvpDmgDelta == otherMessage.hasMaxPvpDmgDelta &&
      (!self.hasMaxPvpDmgDelta || self.maxPvpDmgDelta == otherMessage.maxPvpDmgDelta) &&
      self.hasPvpRequiredMinLvl == otherMessage.hasPvpRequiredMinLvl &&
      (!self.hasPvpRequiredMinLvl || self.pvpRequiredMinLvl == otherMessage.pvpRequiredMinLvl) &&
      self.hasDefendingMsgCharLimit == otherMessage.hasDefendingMsgCharLimit &&
      (!self.hasDefendingMsgCharLimit || self.defendingMsgCharLimit == otherMessage.defendingMsgCharLimit) &&
      self.hasBeginAvengingTimeLimitMins == otherMessage.hasBeginAvengingTimeLimitMins &&
      (!self.hasBeginAvengingTimeLimitMins || self.beginAvengingTimeLimitMins == otherMessage.beginAvengingTimeLimitMins) &&
      self.hasRequestClanToAvengeTimeLimitMins == otherMessage.hasRequestClanToAvengeTimeLimitMins &&
      (!self.hasRequestClanToAvengeTimeLimitMins || self.requestClanToAvengeTimeLimitMins == otherMessage.requestClanToAvengeTimeLimitMins) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPvpDmgsWindowSize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pvpDmgsWindowSize] hash];
  }
  if (self.hasMinPvpDmgDelta) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.minPvpDmgDelta] hash];
  }
  if (self.hasMaxPvpDmgDelta) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.maxPvpDmgDelta] hash];
  }
  if (self.hasPvpRequiredMinLvl) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pvpRequiredMinLvl] hash];
  }
  if (self.hasDefendingMsgCharLimit) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.defendingMsgCharLimit] hash];
  }
  if (self.hasBeginAvengingTimeLimitMins) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.beginAvengingTimeLimitMins] hash];
  }
  if (self.hasRequestClanToAvengeTimeLimitMins) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.requestClanToAvengeTimeLimitMins] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_StartupConstants_PvpConstants_Builder()
@property (strong) StartupResponseProto_StartupConstants_PvpConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_PvpConstants_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_StartupConstants_PvpConstants alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) clear {
  self.result = [[StartupResponseProto_StartupConstants_PvpConstants alloc] init];
  return self;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants_PvpConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_PvpConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants_PvpConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants_PvpConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_PvpConstants*) buildPartial {
  StartupResponseProto_StartupConstants_PvpConstants* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_PvpConstants*) other {
  if (other == [StartupResponseProto_StartupConstants_PvpConstants defaultInstance]) {
    return self;
  }
  if (other.hasPvpDmgsWindowSize) {
    [self setPvpDmgsWindowSize:other.pvpDmgsWindowSize];
  }
  if (other.hasMinPvpDmgDelta) {
    [self setMinPvpDmgDelta:other.minPvpDmgDelta];
  }
  if (other.hasMaxPvpDmgDelta) {
    [self setMaxPvpDmgDelta:other.maxPvpDmgDelta];
  }
  if (other.hasPvpRequiredMinLvl) {
    [self setPvpRequiredMinLvl:other.pvpRequiredMinLvl];
  }
  if (other.hasDefendingMsgCharLimit) {
    [self setDefendingMsgCharLimit:other.defendingMsgCharLimit];
  }
  if (other.hasBeginAvengingTimeLimitMins) {
    [self setBeginAvengingTimeLimitMins:other.beginAvengingTimeLimitMins];
  }
  if (other.hasRequestClanToAvengeTimeLimitMins) {
    [self setRequestClanToAvengeTimeLimitMins:other.requestClanToAvengeTimeLimitMins];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPvpDmgsWindowSize:[input readInt32]];
        break;
      }
      case 21: {
        [self setMinPvpDmgDelta:[input readFloat]];
        break;
      }
      case 29: {
        [self setMaxPvpDmgDelta:[input readFloat]];
        break;
      }
      case 32: {
        [self setPvpRequiredMinLvl:[input readInt32]];
        break;
      }
      case 40: {
        [self setDefendingMsgCharLimit:[input readInt32]];
        break;
      }
      case 48: {
        [self setBeginAvengingTimeLimitMins:[input readInt32]];
        break;
      }
      case 56: {
        [self setRequestClanToAvengeTimeLimitMins:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPvpDmgsWindowSize {
  return result.hasPvpDmgsWindowSize;
}
- (int32_t) pvpDmgsWindowSize {
  return result.pvpDmgsWindowSize;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) setPvpDmgsWindowSize:(int32_t) value {
  result.hasPvpDmgsWindowSize = YES;
  result.pvpDmgsWindowSize = value;
  return self;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) clearPvpDmgsWindowSize {
  result.hasPvpDmgsWindowSize = NO;
  result.pvpDmgsWindowSize = 0;
  return self;
}
- (BOOL) hasMinPvpDmgDelta {
  return result.hasMinPvpDmgDelta;
}
- (Float32) minPvpDmgDelta {
  return result.minPvpDmgDelta;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) setMinPvpDmgDelta:(Float32) value {
  result.hasMinPvpDmgDelta = YES;
  result.minPvpDmgDelta = value;
  return self;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) clearMinPvpDmgDelta {
  result.hasMinPvpDmgDelta = NO;
  result.minPvpDmgDelta = 0;
  return self;
}
- (BOOL) hasMaxPvpDmgDelta {
  return result.hasMaxPvpDmgDelta;
}
- (Float32) maxPvpDmgDelta {
  return result.maxPvpDmgDelta;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) setMaxPvpDmgDelta:(Float32) value {
  result.hasMaxPvpDmgDelta = YES;
  result.maxPvpDmgDelta = value;
  return self;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) clearMaxPvpDmgDelta {
  result.hasMaxPvpDmgDelta = NO;
  result.maxPvpDmgDelta = 0;
  return self;
}
- (BOOL) hasPvpRequiredMinLvl {
  return result.hasPvpRequiredMinLvl;
}
- (int32_t) pvpRequiredMinLvl {
  return result.pvpRequiredMinLvl;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) setPvpRequiredMinLvl:(int32_t) value {
  result.hasPvpRequiredMinLvl = YES;
  result.pvpRequiredMinLvl = value;
  return self;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) clearPvpRequiredMinLvl {
  result.hasPvpRequiredMinLvl = NO;
  result.pvpRequiredMinLvl = 0;
  return self;
}
- (BOOL) hasDefendingMsgCharLimit {
  return result.hasDefendingMsgCharLimit;
}
- (int32_t) defendingMsgCharLimit {
  return result.defendingMsgCharLimit;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) setDefendingMsgCharLimit:(int32_t) value {
  result.hasDefendingMsgCharLimit = YES;
  result.defendingMsgCharLimit = value;
  return self;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) clearDefendingMsgCharLimit {
  result.hasDefendingMsgCharLimit = NO;
  result.defendingMsgCharLimit = 0;
  return self;
}
- (BOOL) hasBeginAvengingTimeLimitMins {
  return result.hasBeginAvengingTimeLimitMins;
}
- (int32_t) beginAvengingTimeLimitMins {
  return result.beginAvengingTimeLimitMins;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) setBeginAvengingTimeLimitMins:(int32_t) value {
  result.hasBeginAvengingTimeLimitMins = YES;
  result.beginAvengingTimeLimitMins = value;
  return self;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) clearBeginAvengingTimeLimitMins {
  result.hasBeginAvengingTimeLimitMins = NO;
  result.beginAvengingTimeLimitMins = 0;
  return self;
}
- (BOOL) hasRequestClanToAvengeTimeLimitMins {
  return result.hasRequestClanToAvengeTimeLimitMins;
}
- (int32_t) requestClanToAvengeTimeLimitMins {
  return result.requestClanToAvengeTimeLimitMins;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) setRequestClanToAvengeTimeLimitMins:(int32_t) value {
  result.hasRequestClanToAvengeTimeLimitMins = YES;
  result.requestClanToAvengeTimeLimitMins = value;
  return self;
}
- (StartupResponseProto_StartupConstants_PvpConstants_Builder*) clearRequestClanToAvengeTimeLimitMins {
  result.hasRequestClanToAvengeTimeLimitMins = NO;
  result.requestClanToAvengeTimeLimitMins = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_SpeedUpConstantProto ()
@property int32_t seconds;
@property int32_t numGems;
@end

@implementation StartupResponseProto_StartupConstants_SpeedUpConstantProto

- (BOOL) hasSeconds {
  return !!hasSeconds_;
}
- (void) setHasSeconds:(BOOL) value_ {
  hasSeconds_ = !!value_;
}
@synthesize seconds;
- (BOOL) hasNumGems {
  return !!hasNumGems_;
}
- (void) setHasNumGems:(BOOL) value_ {
  hasNumGems_ = !!value_;
}
@synthesize numGems;
- (id) init {
  if ((self = [super init])) {
    self.seconds = 0;
    self.numGems = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants_SpeedUpConstantProto* defaultStartupResponseProto_StartupConstants_SpeedUpConstantProtoInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_SpeedUpConstantProto class]) {
    defaultStartupResponseProto_StartupConstants_SpeedUpConstantProtoInstance = [[StartupResponseProto_StartupConstants_SpeedUpConstantProto alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_SpeedUpConstantProto*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_SpeedUpConstantProtoInstance;
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_SpeedUpConstantProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSeconds) {
    [output writeInt32:1 value:self.seconds];
  }
  if (self.hasNumGems) {
    [output writeInt32:2 value:self.numGems];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSeconds) {
    size_ += computeInt32Size(1, self.seconds);
  }
  if (self.hasNumGems) {
    size_ += computeInt32Size(2, self.numGems);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_StartupConstants_SpeedUpConstantProto*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_SpeedUpConstantProto*)[[[StartupResponseProto_StartupConstants_SpeedUpConstantProto builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_SpeedUpConstantProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_SpeedUpConstantProto*)[[[StartupResponseProto_StartupConstants_SpeedUpConstantProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_SpeedUpConstantProto*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_SpeedUpConstantProto*)[[[StartupResponseProto_StartupConstants_SpeedUpConstantProto builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_SpeedUpConstantProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_SpeedUpConstantProto*)[[[StartupResponseProto_StartupConstants_SpeedUpConstantProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_SpeedUpConstantProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_SpeedUpConstantProto*)[[[StartupResponseProto_StartupConstants_SpeedUpConstantProto builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_SpeedUpConstantProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_SpeedUpConstantProto*)[[[StartupResponseProto_StartupConstants_SpeedUpConstantProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder*) builder {
  return [[StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder alloc] init];
}
+ (StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_SpeedUpConstantProto*) prototype {
  return [[StartupResponseProto_StartupConstants_SpeedUpConstantProto builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder*) builder {
  return [StartupResponseProto_StartupConstants_SpeedUpConstantProto builder];
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder*) toBuilder {
  return [StartupResponseProto_StartupConstants_SpeedUpConstantProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSeconds) {
    [output appendFormat:@"%@%@: %@\n", indent, @"seconds", [NSNumber numberWithInteger:self.seconds]];
  }
  if (self.hasNumGems) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numGems", [NSNumber numberWithInteger:self.numGems]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_StartupConstants_SpeedUpConstantProto class]]) {
    return NO;
  }
  StartupResponseProto_StartupConstants_SpeedUpConstantProto *otherMessage = other;
  return
      self.hasSeconds == otherMessage.hasSeconds &&
      (!self.hasSeconds || self.seconds == otherMessage.seconds) &&
      self.hasNumGems == otherMessage.hasNumGems &&
      (!self.hasNumGems || self.numGems == otherMessage.numGems) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSeconds) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.seconds] hash];
  }
  if (self.hasNumGems) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numGems] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder()
@property (strong) StartupResponseProto_StartupConstants_SpeedUpConstantProto* result;
@end

@implementation StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_StartupConstants_SpeedUpConstantProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder*) clear {
  self.result = [[StartupResponseProto_StartupConstants_SpeedUpConstantProto alloc] init];
  return self;
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder*) clone {
  return [StartupResponseProto_StartupConstants_SpeedUpConstantProto builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto*) defaultInstance {
  return [StartupResponseProto_StartupConstants_SpeedUpConstantProto defaultInstance];
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto*) buildPartial {
  StartupResponseProto_StartupConstants_SpeedUpConstantProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_SpeedUpConstantProto*) other {
  if (other == [StartupResponseProto_StartupConstants_SpeedUpConstantProto defaultInstance]) {
    return self;
  }
  if (other.hasSeconds) {
    [self setSeconds:other.seconds];
  }
  if (other.hasNumGems) {
    [self setNumGems:other.numGems];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSeconds:[input readInt32]];
        break;
      }
      case 16: {
        [self setNumGems:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSeconds {
  return result.hasSeconds;
}
- (int32_t) seconds {
  return result.seconds;
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder*) setSeconds:(int32_t) value {
  result.hasSeconds = YES;
  result.seconds = value;
  return self;
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder*) clearSeconds {
  result.hasSeconds = NO;
  result.seconds = 0;
  return self;
}
- (BOOL) hasNumGems {
  return result.hasNumGems;
}
- (int32_t) numGems {
  return result.numGems;
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder*) setNumGems:(int32_t) value {
  result.hasNumGems = YES;
  result.numGems = value;
  return self;
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder*) clearNumGems {
  result.hasNumGems = NO;
  result.numGems = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_ResourceConversionConstantProto ()
@property ResourceType resourceType;
@property int32_t resourceAmt;
@property int32_t numGems;
@end

@implementation StartupResponseProto_StartupConstants_ResourceConversionConstantProto

- (BOOL) hasResourceType {
  return !!hasResourceType_;
}
- (void) setHasResourceType:(BOOL) value_ {
  hasResourceType_ = !!value_;
}
@synthesize resourceType;
- (BOOL) hasResourceAmt {
  return !!hasResourceAmt_;
}
- (void) setHasResourceAmt:(BOOL) value_ {
  hasResourceAmt_ = !!value_;
}
@synthesize resourceAmt;
- (BOOL) hasNumGems {
  return !!hasNumGems_;
}
- (void) setHasNumGems:(BOOL) value_ {
  hasNumGems_ = !!value_;
}
@synthesize numGems;
- (id) init {
  if ((self = [super init])) {
    self.resourceType = ResourceTypeNoResource;
    self.resourceAmt = 0;
    self.numGems = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants_ResourceConversionConstantProto* defaultStartupResponseProto_StartupConstants_ResourceConversionConstantProtoInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_ResourceConversionConstantProto class]) {
    defaultStartupResponseProto_StartupConstants_ResourceConversionConstantProtoInstance = [[StartupResponseProto_StartupConstants_ResourceConversionConstantProto alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_ResourceConversionConstantProtoInstance;
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_ResourceConversionConstantProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResourceType) {
    [output writeEnum:1 value:self.resourceType];
  }
  if (self.hasResourceAmt) {
    [output writeInt32:2 value:self.resourceAmt];
  }
  if (self.hasNumGems) {
    [output writeInt32:3 value:self.numGems];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasResourceType) {
    size_ += computeEnumSize(1, self.resourceType);
  }
  if (self.hasResourceAmt) {
    size_ += computeInt32Size(2, self.resourceAmt);
  }
  if (self.hasNumGems) {
    size_ += computeInt32Size(3, self.numGems);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*)[[[StartupResponseProto_StartupConstants_ResourceConversionConstantProto builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*)[[[StartupResponseProto_StartupConstants_ResourceConversionConstantProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*)[[[StartupResponseProto_StartupConstants_ResourceConversionConstantProto builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*)[[[StartupResponseProto_StartupConstants_ResourceConversionConstantProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*)[[[StartupResponseProto_StartupConstants_ResourceConversionConstantProto builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*)[[[StartupResponseProto_StartupConstants_ResourceConversionConstantProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder*) builder {
  return [[StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder alloc] init];
}
+ (StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_ResourceConversionConstantProto*) prototype {
  return [[StartupResponseProto_StartupConstants_ResourceConversionConstantProto builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder*) builder {
  return [StartupResponseProto_StartupConstants_ResourceConversionConstantProto builder];
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder*) toBuilder {
  return [StartupResponseProto_StartupConstants_ResourceConversionConstantProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResourceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resourceType", [NSNumber numberWithInteger:self.resourceType]];
  }
  if (self.hasResourceAmt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resourceAmt", [NSNumber numberWithInteger:self.resourceAmt]];
  }
  if (self.hasNumGems) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numGems", [NSNumber numberWithInteger:self.numGems]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_StartupConstants_ResourceConversionConstantProto class]]) {
    return NO;
  }
  StartupResponseProto_StartupConstants_ResourceConversionConstantProto *otherMessage = other;
  return
      self.hasResourceType == otherMessage.hasResourceType &&
      (!self.hasResourceType || self.resourceType == otherMessage.resourceType) &&
      self.hasResourceAmt == otherMessage.hasResourceAmt &&
      (!self.hasResourceAmt || self.resourceAmt == otherMessage.resourceAmt) &&
      self.hasNumGems == otherMessage.hasNumGems &&
      (!self.hasNumGems || self.numGems == otherMessage.numGems) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasResourceType) {
    hashCode = hashCode * 31 + self.resourceType;
  }
  if (self.hasResourceAmt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.resourceAmt] hash];
  }
  if (self.hasNumGems) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numGems] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder()
@property (strong) StartupResponseProto_StartupConstants_ResourceConversionConstantProto* result;
@end

@implementation StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_StartupConstants_ResourceConversionConstantProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder*) clear {
  self.result = [[StartupResponseProto_StartupConstants_ResourceConversionConstantProto alloc] init];
  return self;
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder*) clone {
  return [StartupResponseProto_StartupConstants_ResourceConversionConstantProto builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*) defaultInstance {
  return [StartupResponseProto_StartupConstants_ResourceConversionConstantProto defaultInstance];
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*) buildPartial {
  StartupResponseProto_StartupConstants_ResourceConversionConstantProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_ResourceConversionConstantProto*) other {
  if (other == [StartupResponseProto_StartupConstants_ResourceConversionConstantProto defaultInstance]) {
    return self;
  }
  if (other.hasResourceType) {
    [self setResourceType:other.resourceType];
  }
  if (other.hasResourceAmt) {
    [self setResourceAmt:other.resourceAmt];
  }
  if (other.hasNumGems) {
    [self setNumGems:other.numGems];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        ResourceType value = (ResourceType)[input readEnum];
        if (ResourceTypeIsValidValue(value)) {
          [self setResourceType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        [self setResourceAmt:[input readInt32]];
        break;
      }
      case 24: {
        [self setNumGems:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasResourceType {
  return result.hasResourceType;
}
- (ResourceType) resourceType {
  return result.resourceType;
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder*) setResourceType:(ResourceType) value {
  result.hasResourceType = YES;
  result.resourceType = value;
  return self;
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder*) clearResourceTypeList {
  result.hasResourceType = NO;
  result.resourceType = ResourceTypeNoResource;
  return self;
}
- (BOOL) hasResourceAmt {
  return result.hasResourceAmt;
}
- (int32_t) resourceAmt {
  return result.resourceAmt;
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder*) setResourceAmt:(int32_t) value {
  result.hasResourceAmt = YES;
  result.resourceAmt = value;
  return self;
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder*) clearResourceAmt {
  result.hasResourceAmt = NO;
  result.resourceAmt = 0;
  return self;
}
- (BOOL) hasNumGems {
  return result.hasNumGems;
}
- (int32_t) numGems {
  return result.numGems;
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder*) setNumGems:(int32_t) value {
  result.hasNumGems = YES;
  result.numGems = value;
  return self;
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder*) clearNumGems {
  result.hasNumGems = NO;
  result.numGems = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_FileDownloadConstantProto ()
@property int32_t fileDownloadId;
@property (strong) NSString* fileName;
@property int32_t priority;
@property BOOL downloadOnlyOverWifi;
@property BOOL useIphone6Prefix;
@end

@implementation StartupResponseProto_StartupConstants_FileDownloadConstantProto

- (BOOL) hasFileDownloadId {
  return !!hasFileDownloadId_;
}
- (void) setHasFileDownloadId:(BOOL) value_ {
  hasFileDownloadId_ = !!value_;
}
@synthesize fileDownloadId;
- (BOOL) hasFileName {
  return !!hasFileName_;
}
- (void) setHasFileName:(BOOL) value_ {
  hasFileName_ = !!value_;
}
@synthesize fileName;
- (BOOL) hasPriority {
  return !!hasPriority_;
}
- (void) setHasPriority:(BOOL) value_ {
  hasPriority_ = !!value_;
}
@synthesize priority;
- (BOOL) hasDownloadOnlyOverWifi {
  return !!hasDownloadOnlyOverWifi_;
}
- (void) setHasDownloadOnlyOverWifi:(BOOL) value_ {
  hasDownloadOnlyOverWifi_ = !!value_;
}
- (BOOL) downloadOnlyOverWifi {
  return !!downloadOnlyOverWifi_;
}
- (void) setDownloadOnlyOverWifi:(BOOL) value_ {
  downloadOnlyOverWifi_ = !!value_;
}
- (BOOL) hasUseIphone6Prefix {
  return !!hasUseIphone6Prefix_;
}
- (void) setHasUseIphone6Prefix:(BOOL) value_ {
  hasUseIphone6Prefix_ = !!value_;
}
- (BOOL) useIphone6Prefix {
  return !!useIphone6Prefix_;
}
- (void) setUseIphone6Prefix:(BOOL) value_ {
  useIphone6Prefix_ = !!value_;
}
- (id) init {
  if ((self = [super init])) {
    self.fileDownloadId = 0;
    self.fileName = @"";
    self.priority = 0;
    self.downloadOnlyOverWifi = NO;
    self.useIphone6Prefix = NO;
  }
  return self;
}
static StartupResponseProto_StartupConstants_FileDownloadConstantProto* defaultStartupResponseProto_StartupConstants_FileDownloadConstantProtoInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_FileDownloadConstantProto class]) {
    defaultStartupResponseProto_StartupConstants_FileDownloadConstantProtoInstance = [[StartupResponseProto_StartupConstants_FileDownloadConstantProto alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_FileDownloadConstantProto*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_FileDownloadConstantProtoInstance;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_FileDownloadConstantProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFileDownloadId) {
    [output writeInt32:1 value:self.fileDownloadId];
  }
  if (self.hasFileName) {
    [output writeString:2 value:self.fileName];
  }
  if (self.hasPriority) {
    [output writeInt32:3 value:self.priority];
  }
  if (self.hasDownloadOnlyOverWifi) {
    [output writeBool:4 value:self.downloadOnlyOverWifi];
  }
  if (self.hasUseIphone6Prefix) {
    [output writeBool:5 value:self.useIphone6Prefix];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFileDownloadId) {
    size_ += computeInt32Size(1, self.fileDownloadId);
  }
  if (self.hasFileName) {
    size_ += computeStringSize(2, self.fileName);
  }
  if (self.hasPriority) {
    size_ += computeInt32Size(3, self.priority);
  }
  if (self.hasDownloadOnlyOverWifi) {
    size_ += computeBoolSize(4, self.downloadOnlyOverWifi);
  }
  if (self.hasUseIphone6Prefix) {
    size_ += computeBoolSize(5, self.useIphone6Prefix);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_StartupConstants_FileDownloadConstantProto*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_FileDownloadConstantProto*)[[[StartupResponseProto_StartupConstants_FileDownloadConstantProto builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_FileDownloadConstantProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_FileDownloadConstantProto*)[[[StartupResponseProto_StartupConstants_FileDownloadConstantProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_FileDownloadConstantProto*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_FileDownloadConstantProto*)[[[StartupResponseProto_StartupConstants_FileDownloadConstantProto builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_FileDownloadConstantProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_FileDownloadConstantProto*)[[[StartupResponseProto_StartupConstants_FileDownloadConstantProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_FileDownloadConstantProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_FileDownloadConstantProto*)[[[StartupResponseProto_StartupConstants_FileDownloadConstantProto builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_FileDownloadConstantProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_FileDownloadConstantProto*)[[[StartupResponseProto_StartupConstants_FileDownloadConstantProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) builder {
  return [[StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder alloc] init];
}
+ (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_FileDownloadConstantProto*) prototype {
  return [[StartupResponseProto_StartupConstants_FileDownloadConstantProto builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) builder {
  return [StartupResponseProto_StartupConstants_FileDownloadConstantProto builder];
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) toBuilder {
  return [StartupResponseProto_StartupConstants_FileDownloadConstantProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFileDownloadId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fileDownloadId", [NSNumber numberWithInteger:self.fileDownloadId]];
  }
  if (self.hasFileName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fileName", self.fileName];
  }
  if (self.hasPriority) {
    [output appendFormat:@"%@%@: %@\n", indent, @"priority", [NSNumber numberWithInteger:self.priority]];
  }
  if (self.hasDownloadOnlyOverWifi) {
    [output appendFormat:@"%@%@: %@\n", indent, @"downloadOnlyOverWifi", [NSNumber numberWithBool:self.downloadOnlyOverWifi]];
  }
  if (self.hasUseIphone6Prefix) {
    [output appendFormat:@"%@%@: %@\n", indent, @"useIphone6Prefix", [NSNumber numberWithBool:self.useIphone6Prefix]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_StartupConstants_FileDownloadConstantProto class]]) {
    return NO;
  }
  StartupResponseProto_StartupConstants_FileDownloadConstantProto *otherMessage = other;
  return
      self.hasFileDownloadId == otherMessage.hasFileDownloadId &&
      (!self.hasFileDownloadId || self.fileDownloadId == otherMessage.fileDownloadId) &&
      self.hasFileName == otherMessage.hasFileName &&
      (!self.hasFileName || [self.fileName isEqual:otherMessage.fileName]) &&
      self.hasPriority == otherMessage.hasPriority &&
      (!self.hasPriority || self.priority == otherMessage.priority) &&
      self.hasDownloadOnlyOverWifi == otherMessage.hasDownloadOnlyOverWifi &&
      (!self.hasDownloadOnlyOverWifi || self.downloadOnlyOverWifi == otherMessage.downloadOnlyOverWifi) &&
      self.hasUseIphone6Prefix == otherMessage.hasUseIphone6Prefix &&
      (!self.hasUseIphone6Prefix || self.useIphone6Prefix == otherMessage.useIphone6Prefix) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFileDownloadId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.fileDownloadId] hash];
  }
  if (self.hasFileName) {
    hashCode = hashCode * 31 + [self.fileName hash];
  }
  if (self.hasPriority) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.priority] hash];
  }
  if (self.hasDownloadOnlyOverWifi) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.downloadOnlyOverWifi] hash];
  }
  if (self.hasUseIphone6Prefix) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.useIphone6Prefix] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder()
@property (strong) StartupResponseProto_StartupConstants_FileDownloadConstantProto* result;
@end

@implementation StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_StartupConstants_FileDownloadConstantProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) clear {
  self.result = [[StartupResponseProto_StartupConstants_FileDownloadConstantProto alloc] init];
  return self;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) clone {
  return [StartupResponseProto_StartupConstants_FileDownloadConstantProto builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto*) defaultInstance {
  return [StartupResponseProto_StartupConstants_FileDownloadConstantProto defaultInstance];
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto*) buildPartial {
  StartupResponseProto_StartupConstants_FileDownloadConstantProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_FileDownloadConstantProto*) other {
  if (other == [StartupResponseProto_StartupConstants_FileDownloadConstantProto defaultInstance]) {
    return self;
  }
  if (other.hasFileDownloadId) {
    [self setFileDownloadId:other.fileDownloadId];
  }
  if (other.hasFileName) {
    [self setFileName:other.fileName];
  }
  if (other.hasPriority) {
    [self setPriority:other.priority];
  }
  if (other.hasDownloadOnlyOverWifi) {
    [self setDownloadOnlyOverWifi:other.downloadOnlyOverWifi];
  }
  if (other.hasUseIphone6Prefix) {
    [self setUseIphone6Prefix:other.useIphone6Prefix];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFileDownloadId:[input readInt32]];
        break;
      }
      case 18: {
        [self setFileName:[input readString]];
        break;
      }
      case 24: {
        [self setPriority:[input readInt32]];
        break;
      }
      case 32: {
        [self setDownloadOnlyOverWifi:[input readBool]];
        break;
      }
      case 40: {
        [self setUseIphone6Prefix:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasFileDownloadId {
  return result.hasFileDownloadId;
}
- (int32_t) fileDownloadId {
  return result.fileDownloadId;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) setFileDownloadId:(int32_t) value {
  result.hasFileDownloadId = YES;
  result.fileDownloadId = value;
  return self;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) clearFileDownloadId {
  result.hasFileDownloadId = NO;
  result.fileDownloadId = 0;
  return self;
}
- (BOOL) hasFileName {
  return result.hasFileName;
}
- (NSString*) fileName {
  return result.fileName;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) setFileName:(NSString*) value {
  result.hasFileName = YES;
  result.fileName = value;
  return self;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) clearFileName {
  result.hasFileName = NO;
  result.fileName = @"";
  return self;
}
- (BOOL) hasPriority {
  return result.hasPriority;
}
- (int32_t) priority {
  return result.priority;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) setPriority:(int32_t) value {
  result.hasPriority = YES;
  result.priority = value;
  return self;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) clearPriority {
  result.hasPriority = NO;
  result.priority = 0;
  return self;
}
- (BOOL) hasDownloadOnlyOverWifi {
  return result.hasDownloadOnlyOverWifi;
}
- (BOOL) downloadOnlyOverWifi {
  return result.downloadOnlyOverWifi;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) setDownloadOnlyOverWifi:(BOOL) value {
  result.hasDownloadOnlyOverWifi = YES;
  result.downloadOnlyOverWifi = value;
  return self;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) clearDownloadOnlyOverWifi {
  result.hasDownloadOnlyOverWifi = NO;
  result.downloadOnlyOverWifi = NO;
  return self;
}
- (BOOL) hasUseIphone6Prefix {
  return result.hasUseIphone6Prefix;
}
- (BOOL) useIphone6Prefix {
  return result.useIphone6Prefix;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) setUseIphone6Prefix:(BOOL) value {
  result.hasUseIphone6Prefix = YES;
  result.useIphone6Prefix = value;
  return self;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder*) clearUseIphone6Prefix {
  result.hasUseIphone6Prefix = NO;
  result.useIphone6Prefix = NO;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_BoosterPackConstantsProto ()
@property int32_t purchaseAmountRequired;
@property int32_t numberOfPacksGiven;
@end

@implementation StartupResponseProto_StartupConstants_BoosterPackConstantsProto

- (BOOL) hasPurchaseAmountRequired {
  return !!hasPurchaseAmountRequired_;
}
- (void) setHasPurchaseAmountRequired:(BOOL) value_ {
  hasPurchaseAmountRequired_ = !!value_;
}
@synthesize purchaseAmountRequired;
- (BOOL) hasNumberOfPacksGiven {
  return !!hasNumberOfPacksGiven_;
}
- (void) setHasNumberOfPacksGiven:(BOOL) value_ {
  hasNumberOfPacksGiven_ = !!value_;
}
@synthesize numberOfPacksGiven;
- (id) init {
  if ((self = [super init])) {
    self.purchaseAmountRequired = 0;
    self.numberOfPacksGiven = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants_BoosterPackConstantsProto* defaultStartupResponseProto_StartupConstants_BoosterPackConstantsProtoInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_BoosterPackConstantsProto class]) {
    defaultStartupResponseProto_StartupConstants_BoosterPackConstantsProtoInstance = [[StartupResponseProto_StartupConstants_BoosterPackConstantsProto alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_BoosterPackConstantsProtoInstance;
}
- (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_BoosterPackConstantsProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPurchaseAmountRequired) {
    [output writeInt32:1 value:self.purchaseAmountRequired];
  }
  if (self.hasNumberOfPacksGiven) {
    [output writeInt32:2 value:self.numberOfPacksGiven];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPurchaseAmountRequired) {
    size_ += computeInt32Size(1, self.purchaseAmountRequired);
  }
  if (self.hasNumberOfPacksGiven) {
    size_ += computeInt32Size(2, self.numberOfPacksGiven);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*)[[[StartupResponseProto_StartupConstants_BoosterPackConstantsProto builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*)[[[StartupResponseProto_StartupConstants_BoosterPackConstantsProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*)[[[StartupResponseProto_StartupConstants_BoosterPackConstantsProto builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*)[[[StartupResponseProto_StartupConstants_BoosterPackConstantsProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*)[[[StartupResponseProto_StartupConstants_BoosterPackConstantsProto builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*)[[[StartupResponseProto_StartupConstants_BoosterPackConstantsProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder*) builder {
  return [[StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder alloc] init];
}
+ (StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_BoosterPackConstantsProto*) prototype {
  return [[StartupResponseProto_StartupConstants_BoosterPackConstantsProto builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder*) builder {
  return [StartupResponseProto_StartupConstants_BoosterPackConstantsProto builder];
}
- (StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder*) toBuilder {
  return [StartupResponseProto_StartupConstants_BoosterPackConstantsProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPurchaseAmountRequired) {
    [output appendFormat:@"%@%@: %@\n", indent, @"purchaseAmountRequired", [NSNumber numberWithInteger:self.purchaseAmountRequired]];
  }
  if (self.hasNumberOfPacksGiven) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numberOfPacksGiven", [NSNumber numberWithInteger:self.numberOfPacksGiven]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_StartupConstants_BoosterPackConstantsProto class]]) {
    return NO;
  }
  StartupResponseProto_StartupConstants_BoosterPackConstantsProto *otherMessage = other;
  return
      self.hasPurchaseAmountRequired == otherMessage.hasPurchaseAmountRequired &&
      (!self.hasPurchaseAmountRequired || self.purchaseAmountRequired == otherMessage.purchaseAmountRequired) &&
      self.hasNumberOfPacksGiven == otherMessage.hasNumberOfPacksGiven &&
      (!self.hasNumberOfPacksGiven || self.numberOfPacksGiven == otherMessage.numberOfPacksGiven) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPurchaseAmountRequired) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.purchaseAmountRequired] hash];
  }
  if (self.hasNumberOfPacksGiven) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numberOfPacksGiven] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder()
@property (strong) StartupResponseProto_StartupConstants_BoosterPackConstantsProto* result;
@end

@implementation StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_StartupConstants_BoosterPackConstantsProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder*) clear {
  self.result = [[StartupResponseProto_StartupConstants_BoosterPackConstantsProto alloc] init];
  return self;
}
- (StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder*) clone {
  return [StartupResponseProto_StartupConstants_BoosterPackConstantsProto builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*) defaultInstance {
  return [StartupResponseProto_StartupConstants_BoosterPackConstantsProto defaultInstance];
}
- (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*) buildPartial {
  StartupResponseProto_StartupConstants_BoosterPackConstantsProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_BoosterPackConstantsProto*) other {
  if (other == [StartupResponseProto_StartupConstants_BoosterPackConstantsProto defaultInstance]) {
    return self;
  }
  if (other.hasPurchaseAmountRequired) {
    [self setPurchaseAmountRequired:other.purchaseAmountRequired];
  }
  if (other.hasNumberOfPacksGiven) {
    [self setNumberOfPacksGiven:other.numberOfPacksGiven];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPurchaseAmountRequired:[input readInt32]];
        break;
      }
      case 16: {
        [self setNumberOfPacksGiven:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPurchaseAmountRequired {
  return result.hasPurchaseAmountRequired;
}
- (int32_t) purchaseAmountRequired {
  return result.purchaseAmountRequired;
}
- (StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder*) setPurchaseAmountRequired:(int32_t) value {
  result.hasPurchaseAmountRequired = YES;
  result.purchaseAmountRequired = value;
  return self;
}
- (StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder*) clearPurchaseAmountRequired {
  result.hasPurchaseAmountRequired = NO;
  result.purchaseAmountRequired = 0;
  return self;
}
- (BOOL) hasNumberOfPacksGiven {
  return result.hasNumberOfPacksGiven;
}
- (int32_t) numberOfPacksGiven {
  return result.numberOfPacksGiven;
}
- (StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder*) setNumberOfPacksGiven:(int32_t) value {
  result.hasNumberOfPacksGiven = YES;
  result.numberOfPacksGiven = value;
  return self;
}
- (StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder*) clearNumberOfPacksGiven {
  result.hasNumberOfPacksGiven = NO;
  result.numberOfPacksGiven = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_Builder()
@property (strong) StartupResponseProto_StartupConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_StartupConstants alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_Builder*) clear {
  self.result = [[StartupResponseProto_StartupConstants alloc] init];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants*) buildPartial {
  StartupResponseProto_StartupConstants* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants*) other {
  if (other == [StartupResponseProto_StartupConstants defaultInstance]) {
    return self;
  }
  if (other.mutableInAppPurchasePackagesList.count > 0) {
    if (result.mutableInAppPurchasePackagesList == nil) {
      result.mutableInAppPurchasePackagesList = [[NSMutableArray alloc] initWithArray:other.mutableInAppPurchasePackagesList];
    } else {
      [result.mutableInAppPurchasePackagesList addObjectsFromArray:other.mutableInAppPurchasePackagesList];
    }
  }
  if (other.hasMaxLevelForUser) {
    [self setMaxLevelForUser:other.maxLevelForUser];
  }
  if (other.hasMaxNumOfSingleStruct) {
    [self setMaxNumOfSingleStruct:other.maxNumOfSingleStruct];
  }
  if (other.mutableAnimatedSpriteOffsetsList.count > 0) {
    if (result.mutableAnimatedSpriteOffsetsList == nil) {
      result.mutableAnimatedSpriteOffsetsList = [[NSMutableArray alloc] initWithArray:other.mutableAnimatedSpriteOffsetsList];
    } else {
      [result.mutableAnimatedSpriteOffsetsList addObjectsFromArray:other.mutableAnimatedSpriteOffsetsList];
    }
  }
  if (other.hasMinNameLength) {
    [self setMinNameLength:other.minNameLength];
  }
  if (other.hasMaxNameLength) {
    [self setMaxNameLength:other.maxNameLength];
  }
  if (other.hasMaxLengthOfChatString) {
    [self setMaxLengthOfChatString:other.maxLengthOfChatString];
  }
  if (other.hasClanConstants) {
    [self mergeClanConstants:other.clanConstants];
  }
  if (other.hasDownloadableNibConstants) {
    [self mergeDownloadableNibConstants:other.downloadableNibConstants];
  }
  if (other.hasNumHoursBeforeReshowingGoldSale) {
    [self setNumHoursBeforeReshowingGoldSale:other.numHoursBeforeReshowingGoldSale];
  }
  if (other.hasLevelToShowRateUsPopup) {
    [self setLevelToShowRateUsPopup:other.levelToShowRateUsPopup];
  }
  if (other.hasTouramentConstants) {
    [self mergeTouramentConstants:other.touramentConstants];
  }
  if (other.hasFbConnectRewardDiamonds) {
    [self setFbConnectRewardDiamonds:other.fbConnectRewardDiamonds];
  }
  if (other.hasFaqFileName) {
    [self setFaqFileName:other.faqFileName];
  }
  if (other.hasAdminChatUserProto) {
    [self mergeAdminChatUserProto:other.adminChatUserProto];
  }
  if (other.hasNumBeginnerSalesAllowed) {
    [self setNumBeginnerSalesAllowed:other.numBeginnerSalesAllowed];
  }
  if (other.hasUserMonsterConstants) {
    [self mergeUserMonsterConstants:other.userMonsterConstants];
  }
  if (other.hasMonsterConstants) {
    [self mergeMonsterConstants:other.monsterConstants];
  }
  if (other.hasMinutesPerGem) {
    [self setMinutesPerGem:other.minutesPerGem];
  }
  if (other.hasGemsPerResource) {
    [self setGemsPerResource:other.gemsPerResource];
  }
  if (other.hasPvpRequiredMinLvl) {
    [self setPvpRequiredMinLvl:other.pvpRequiredMinLvl];
  }
  if (other.hasMonsterDmgMultiplier) {
    [self setMonsterDmgMultiplier:other.monsterDmgMultiplier];
  }
  if (other.hasContinueBattleGemCostMultiplier) {
    [self setContinueBattleGemCostMultiplier:other.continueBattleGemCostMultiplier];
  }
  if (other.hasBattleRunAwayBasePercent) {
    [self setBattleRunAwayBasePercent:other.battleRunAwayBasePercent];
  }
  if (other.hasBattleRunAwayIncrement) {
    [self setBattleRunAwayIncrement:other.battleRunAwayIncrement];
  }
  if (other.hasAddAllFbFriends) {
    [self setAddAllFbFriends:other.addAllFbFriends];
  }
  if (other.hasFacebookPopUp) {
    [self setFacebookPopUp:other.facebookPopUp];
  }
  if (other.hasMiniTuts) {
    [self mergeMiniTuts:other.miniTuts];
  }
  if (other.hasMaxObstacles) {
    [self setMaxObstacles:other.maxObstacles];
  }
  if (other.hasMinutesPerObstacle) {
    [self setMinutesPerObstacle:other.minutesPerObstacle];
  }
  if (other.hasTaskMapConstants) {
    [self mergeTaskMapConstants:other.taskMapConstants];
  }
  if (other.hasMaxMinutesForFreeSpeedUp) {
    [self setMaxMinutesForFreeSpeedUp:other.maxMinutesForFreeSpeedUp];
  }
  if (other.mutableClanHelpConstantsList.count > 0) {
    if (result.mutableClanHelpConstantsList == nil) {
      result.mutableClanHelpConstantsList = [[NSMutableArray alloc] initWithArray:other.mutableClanHelpConstantsList];
    } else {
      [result.mutableClanHelpConstantsList addObjectsFromArray:other.mutableClanHelpConstantsList];
    }
  }
  if (other.hasPvpConstant) {
    [self mergePvpConstant:other.pvpConstant];
  }
  if (other.mutableSucpList.count > 0) {
    if (result.mutableSucpList == nil) {
      result.mutableSucpList = [[NSMutableArray alloc] initWithArray:other.mutableSucpList];
    } else {
      [result.mutableSucpList addObjectsFromArray:other.mutableSucpList];
    }
  }
  if (other.mutableRccpList.count > 0) {
    if (result.mutableRccpList == nil) {
      result.mutableRccpList = [[NSMutableArray alloc] initWithArray:other.mutableRccpList];
    } else {
      [result.mutableRccpList addObjectsFromArray:other.mutableRccpList];
    }
  }
  if (other.hasDisplayRarity) {
    [self setDisplayRarity:other.displayRarity];
  }
  if (other.hasTaskIdOfFirstSkill) {
    [self setTaskIdOfFirstSkill:other.taskIdOfFirstSkill];
  }
  if (other.hasMinsToResolicitTeamDonation) {
    [self setMinsToResolicitTeamDonation:other.minsToResolicitTeamDonation];
  }
  if (other.mutableFileDownloadProtoList.count > 0) {
    if (result.mutableFileDownloadProtoList == nil) {
      result.mutableFileDownloadProtoList = [[NSMutableArray alloc] initWithArray:other.mutableFileDownloadProtoList];
    } else {
      [result.mutableFileDownloadProtoList addObjectsFromArray:other.mutableFileDownloadProtoList];
    }
  }
  if (other.hasTaskIdForUpgradeTutorial) {
    [self setTaskIdForUpgradeTutorial:other.taskIdForUpgradeTutorial];
  }
  if (other.hasBoosterPackConstantProto) {
    [self mergeBoosterPackConstantProto:other.boosterPackConstantProto];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        InAppPurchasePackageProto_Builder* subBuilder = [InAppPurchasePackageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addInAppPurchasePackages:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setMaxLevelForUser:[input readInt32]];
        break;
      }
      case 24: {
        [self setMaxNumOfSingleStruct:[input readInt32]];
        break;
      }
      case 34: {
        StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder* subBuilder = [StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAnimatedSpriteOffsets:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setMinNameLength:[input readInt32]];
        break;
      }
      case 48: {
        [self setMaxNameLength:[input readInt32]];
        break;
      }
      case 56: {
        [self setMaxLengthOfChatString:[input readInt32]];
        break;
      }
      case 66: {
        StartupResponseProto_StartupConstants_ClanConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants_ClanConstants builder];
        if (self.hasClanConstants) {
          [subBuilder mergeFrom:self.clanConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClanConstants:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants_DownloadableNibConstants builder];
        if (self.hasDownloadableNibConstants) {
          [subBuilder mergeFrom:self.downloadableNibConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDownloadableNibConstants:[subBuilder buildPartial]];
        break;
      }
      case 80: {
        [self setNumHoursBeforeReshowingGoldSale:[input readInt32]];
        break;
      }
      case 88: {
        [self setLevelToShowRateUsPopup:[input readInt32]];
        break;
      }
      case 98: {
        StartupResponseProto_StartupConstants_TournamentConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants_TournamentConstants builder];
        if (self.hasTouramentConstants) {
          [subBuilder mergeFrom:self.touramentConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTouramentConstants:[subBuilder buildPartial]];
        break;
      }
      case 104: {
        [self setFbConnectRewardDiamonds:[input readInt32]];
        break;
      }
      case 114: {
        [self setFaqFileName:[input readString]];
        break;
      }
      case 122: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasAdminChatUserProto) {
          [subBuilder mergeFrom:self.adminChatUserProto];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAdminChatUserProto:[subBuilder buildPartial]];
        break;
      }
      case 128: {
        [self setNumBeginnerSalesAllowed:[input readInt32]];
        break;
      }
      case 138: {
        StartupResponseProto_StartupConstants_UserMonsterConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants_UserMonsterConstants builder];
        if (self.hasUserMonsterConstants) {
          [subBuilder mergeFrom:self.userMonsterConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserMonsterConstants:[subBuilder buildPartial]];
        break;
      }
      case 146: {
        StartupResponseProto_StartupConstants_MonsterConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants_MonsterConstants builder];
        if (self.hasMonsterConstants) {
          [subBuilder mergeFrom:self.monsterConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMonsterConstants:[subBuilder buildPartial]];
        break;
      }
      case 157: {
        [self setMinutesPerGem:[input readFloat]];
        break;
      }
      case 160: {
        [self setPvpRequiredMinLvl:[input readInt32]];
        break;
      }
      case 173: {
        [self setGemsPerResource:[input readFloat]];
        break;
      }
      case 181: {
        [self setContinueBattleGemCostMultiplier:[input readFloat]];
        break;
      }
      case 184: {
        [self setAddAllFbFriends:[input readBool]];
        break;
      }
      case 194: {
        StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants_MiniTutorialConstants builder];
        if (self.hasMiniTuts) {
          [subBuilder mergeFrom:self.miniTuts];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMiniTuts:[subBuilder buildPartial]];
        break;
      }
      case 200: {
        [self setMaxObstacles:[input readInt32]];
        break;
      }
      case 208: {
        [self setMinutesPerObstacle:[input readInt32]];
        break;
      }
      case 218: {
        StartupResponseProto_StartupConstants_TaskMapConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants_TaskMapConstants builder];
        if (self.hasTaskMapConstants) {
          [subBuilder mergeFrom:self.taskMapConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTaskMapConstants:[subBuilder buildPartial]];
        break;
      }
      case 229: {
        [self setBattleRunAwayBasePercent:[input readFloat]];
        break;
      }
      case 237: {
        [self setBattleRunAwayIncrement:[input readFloat]];
        break;
      }
      case 240: {
        [self setMaxMinutesForFreeSpeedUp:[input readInt32]];
        break;
      }
      case 253: {
        [self setMonsterDmgMultiplier:[input readFloat]];
        break;
      }
      case 258: {
        StartupResponseProto_StartupConstants_ClanHelpConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants_ClanHelpConstants builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanHelpConstants:[subBuilder buildPartial]];
        break;
      }
      case 266: {
        StartupResponseProto_StartupConstants_PvpConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants_PvpConstants builder];
        if (self.hasPvpConstant) {
          [subBuilder mergeFrom:self.pvpConstant];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPvpConstant:[subBuilder buildPartial]];
        break;
      }
      case 274: {
        StartupResponseProto_StartupConstants_SpeedUpConstantProto_Builder* subBuilder = [StartupResponseProto_StartupConstants_SpeedUpConstantProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSucp:[subBuilder buildPartial]];
        break;
      }
      case 282: {
        StartupResponseProto_StartupConstants_ResourceConversionConstantProto_Builder* subBuilder = [StartupResponseProto_StartupConstants_ResourceConversionConstantProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRccp:[subBuilder buildPartial]];
        break;
      }
      case 288: {
        [self setFacebookPopUp:[input readBool]];
        break;
      }
      case 296: {
        [self setDisplayRarity:[input readBool]];
        break;
      }
      case 304: {
        [self setTaskIdOfFirstSkill:[input readInt32]];
        break;
      }
      case 312: {
        [self setMinsToResolicitTeamDonation:[input readInt32]];
        break;
      }
      case 322: {
        StartupResponseProto_StartupConstants_FileDownloadConstantProto_Builder* subBuilder = [StartupResponseProto_StartupConstants_FileDownloadConstantProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFileDownloadProto:[subBuilder buildPartial]];
        break;
      }
      case 328: {
        [self setTaskIdForUpgradeTutorial:[input readInt32]];
        break;
      }
      case 4002: {
        StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder* subBuilder = [StartupResponseProto_StartupConstants_BoosterPackConstantsProto builder];
        if (self.hasBoosterPackConstantProto) {
          [subBuilder mergeFrom:self.boosterPackConstantProto];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBoosterPackConstantProto:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)inAppPurchasePackagesList {
  return result.mutableInAppPurchasePackagesList;
}
- (InAppPurchasePackageProto*)inAppPurchasePackagesAtIndex:(NSUInteger)index {
  return [result inAppPurchasePackagesAtIndex:index];
}
- (StartupResponseProto_StartupConstants_Builder *)addInAppPurchasePackages:(InAppPurchasePackageProto*)value {
  if (result.mutableInAppPurchasePackagesList == nil) {
    result.mutableInAppPurchasePackagesList = [[NSMutableArray alloc]init];
  }
  [result.mutableInAppPurchasePackagesList addObject:value];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder *)addAllInAppPurchasePackages:(NSArray *)array {
  if (result.mutableInAppPurchasePackagesList == nil) {
    result.mutableInAppPurchasePackagesList = [NSMutableArray array];
  }
  [result.mutableInAppPurchasePackagesList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder *)clearInAppPurchasePackages {
  result.mutableInAppPurchasePackagesList = nil;
  return self;
}
- (BOOL) hasMaxLevelForUser {
  return result.hasMaxLevelForUser;
}
- (int32_t) maxLevelForUser {
  return result.maxLevelForUser;
}
- (StartupResponseProto_StartupConstants_Builder*) setMaxLevelForUser:(int32_t) value {
  result.hasMaxLevelForUser = YES;
  result.maxLevelForUser = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMaxLevelForUser {
  result.hasMaxLevelForUser = NO;
  result.maxLevelForUser = 0;
  return self;
}
- (BOOL) hasMaxNumOfSingleStruct {
  return result.hasMaxNumOfSingleStruct;
}
- (int32_t) maxNumOfSingleStruct {
  return result.maxNumOfSingleStruct;
}
- (StartupResponseProto_StartupConstants_Builder*) setMaxNumOfSingleStruct:(int32_t) value {
  result.hasMaxNumOfSingleStruct = YES;
  result.maxNumOfSingleStruct = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMaxNumOfSingleStruct {
  result.hasMaxNumOfSingleStruct = NO;
  result.maxNumOfSingleStruct = 0;
  return self;
}
- (NSMutableArray *)animatedSpriteOffsetsList {
  return result.mutableAnimatedSpriteOffsetsList;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*)animatedSpriteOffsetsAtIndex:(NSUInteger)index {
  return [result animatedSpriteOffsetsAtIndex:index];
}
- (StartupResponseProto_StartupConstants_Builder *)addAnimatedSpriteOffsets:(StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*)value {
  if (result.mutableAnimatedSpriteOffsetsList == nil) {
    result.mutableAnimatedSpriteOffsetsList = [[NSMutableArray alloc]init];
  }
  [result.mutableAnimatedSpriteOffsetsList addObject:value];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder *)addAllAnimatedSpriteOffsets:(NSArray *)array {
  if (result.mutableAnimatedSpriteOffsetsList == nil) {
    result.mutableAnimatedSpriteOffsetsList = [NSMutableArray array];
  }
  [result.mutableAnimatedSpriteOffsetsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder *)clearAnimatedSpriteOffsets {
  result.mutableAnimatedSpriteOffsetsList = nil;
  return self;
}
- (BOOL) hasMinNameLength {
  return result.hasMinNameLength;
}
- (int32_t) minNameLength {
  return result.minNameLength;
}
- (StartupResponseProto_StartupConstants_Builder*) setMinNameLength:(int32_t) value {
  result.hasMinNameLength = YES;
  result.minNameLength = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMinNameLength {
  result.hasMinNameLength = NO;
  result.minNameLength = 0;
  return self;
}
- (BOOL) hasMaxNameLength {
  return result.hasMaxNameLength;
}
- (int32_t) maxNameLength {
  return result.maxNameLength;
}
- (StartupResponseProto_StartupConstants_Builder*) setMaxNameLength:(int32_t) value {
  result.hasMaxNameLength = YES;
  result.maxNameLength = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMaxNameLength {
  result.hasMaxNameLength = NO;
  result.maxNameLength = 0;
  return self;
}
- (BOOL) hasMaxLengthOfChatString {
  return result.hasMaxLengthOfChatString;
}
- (int32_t) maxLengthOfChatString {
  return result.maxLengthOfChatString;
}
- (StartupResponseProto_StartupConstants_Builder*) setMaxLengthOfChatString:(int32_t) value {
  result.hasMaxLengthOfChatString = YES;
  result.maxLengthOfChatString = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMaxLengthOfChatString {
  result.hasMaxLengthOfChatString = NO;
  result.maxLengthOfChatString = 0;
  return self;
}
- (BOOL) hasClanConstants {
  return result.hasClanConstants;
}
- (StartupResponseProto_StartupConstants_ClanConstants*) clanConstants {
  return result.clanConstants;
}
- (StartupResponseProto_StartupConstants_Builder*) setClanConstants:(StartupResponseProto_StartupConstants_ClanConstants*) value {
  result.hasClanConstants = YES;
  result.clanConstants = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setClanConstants_Builder:(StartupResponseProto_StartupConstants_ClanConstants_Builder*) builderForValue {
  return [self setClanConstants:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeClanConstants:(StartupResponseProto_StartupConstants_ClanConstants*) value {
  if (result.hasClanConstants &&
      result.clanConstants != [StartupResponseProto_StartupConstants_ClanConstants defaultInstance]) {
    result.clanConstants =
      [[[StartupResponseProto_StartupConstants_ClanConstants builderWithPrototype:result.clanConstants] mergeFrom:value] buildPartial];
  } else {
    result.clanConstants = value;
  }
  result.hasClanConstants = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearClanConstants {
  result.hasClanConstants = NO;
  result.clanConstants = [StartupResponseProto_StartupConstants_ClanConstants defaultInstance];
  return self;
}
- (BOOL) hasDownloadableNibConstants {
  return result.hasDownloadableNibConstants;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants*) downloadableNibConstants {
  return result.downloadableNibConstants;
}
- (StartupResponseProto_StartupConstants_Builder*) setDownloadableNibConstants:(StartupResponseProto_StartupConstants_DownloadableNibConstants*) value {
  result.hasDownloadableNibConstants = YES;
  result.downloadableNibConstants = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setDownloadableNibConstants_Builder:(StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) builderForValue {
  return [self setDownloadableNibConstants:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeDownloadableNibConstants:(StartupResponseProto_StartupConstants_DownloadableNibConstants*) value {
  if (result.hasDownloadableNibConstants &&
      result.downloadableNibConstants != [StartupResponseProto_StartupConstants_DownloadableNibConstants defaultInstance]) {
    result.downloadableNibConstants =
      [[[StartupResponseProto_StartupConstants_DownloadableNibConstants builderWithPrototype:result.downloadableNibConstants] mergeFrom:value] buildPartial];
  } else {
    result.downloadableNibConstants = value;
  }
  result.hasDownloadableNibConstants = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearDownloadableNibConstants {
  result.hasDownloadableNibConstants = NO;
  result.downloadableNibConstants = [StartupResponseProto_StartupConstants_DownloadableNibConstants defaultInstance];
  return self;
}
- (BOOL) hasNumHoursBeforeReshowingGoldSale {
  return result.hasNumHoursBeforeReshowingGoldSale;
}
- (int32_t) numHoursBeforeReshowingGoldSale {
  return result.numHoursBeforeReshowingGoldSale;
}
- (StartupResponseProto_StartupConstants_Builder*) setNumHoursBeforeReshowingGoldSale:(int32_t) value {
  result.hasNumHoursBeforeReshowingGoldSale = YES;
  result.numHoursBeforeReshowingGoldSale = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearNumHoursBeforeReshowingGoldSale {
  result.hasNumHoursBeforeReshowingGoldSale = NO;
  result.numHoursBeforeReshowingGoldSale = 0;
  return self;
}
- (BOOL) hasLevelToShowRateUsPopup {
  return result.hasLevelToShowRateUsPopup;
}
- (int32_t) levelToShowRateUsPopup {
  return result.levelToShowRateUsPopup;
}
- (StartupResponseProto_StartupConstants_Builder*) setLevelToShowRateUsPopup:(int32_t) value {
  result.hasLevelToShowRateUsPopup = YES;
  result.levelToShowRateUsPopup = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearLevelToShowRateUsPopup {
  result.hasLevelToShowRateUsPopup = NO;
  result.levelToShowRateUsPopup = 0;
  return self;
}
- (BOOL) hasTouramentConstants {
  return result.hasTouramentConstants;
}
- (StartupResponseProto_StartupConstants_TournamentConstants*) touramentConstants {
  return result.touramentConstants;
}
- (StartupResponseProto_StartupConstants_Builder*) setTouramentConstants:(StartupResponseProto_StartupConstants_TournamentConstants*) value {
  result.hasTouramentConstants = YES;
  result.touramentConstants = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setTouramentConstants_Builder:(StartupResponseProto_StartupConstants_TournamentConstants_Builder*) builderForValue {
  return [self setTouramentConstants:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeTouramentConstants:(StartupResponseProto_StartupConstants_TournamentConstants*) value {
  if (result.hasTouramentConstants &&
      result.touramentConstants != [StartupResponseProto_StartupConstants_TournamentConstants defaultInstance]) {
    result.touramentConstants =
      [[[StartupResponseProto_StartupConstants_TournamentConstants builderWithPrototype:result.touramentConstants] mergeFrom:value] buildPartial];
  } else {
    result.touramentConstants = value;
  }
  result.hasTouramentConstants = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearTouramentConstants {
  result.hasTouramentConstants = NO;
  result.touramentConstants = [StartupResponseProto_StartupConstants_TournamentConstants defaultInstance];
  return self;
}
- (BOOL) hasFbConnectRewardDiamonds {
  return result.hasFbConnectRewardDiamonds;
}
- (int32_t) fbConnectRewardDiamonds {
  return result.fbConnectRewardDiamonds;
}
- (StartupResponseProto_StartupConstants_Builder*) setFbConnectRewardDiamonds:(int32_t) value {
  result.hasFbConnectRewardDiamonds = YES;
  result.fbConnectRewardDiamonds = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearFbConnectRewardDiamonds {
  result.hasFbConnectRewardDiamonds = NO;
  result.fbConnectRewardDiamonds = 0;
  return self;
}
- (BOOL) hasFaqFileName {
  return result.hasFaqFileName;
}
- (NSString*) faqFileName {
  return result.faqFileName;
}
- (StartupResponseProto_StartupConstants_Builder*) setFaqFileName:(NSString*) value {
  result.hasFaqFileName = YES;
  result.faqFileName = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearFaqFileName {
  result.hasFaqFileName = NO;
  result.faqFileName = @"";
  return self;
}
- (BOOL) hasAdminChatUserProto {
  return result.hasAdminChatUserProto;
}
- (MinimumUserProto*) adminChatUserProto {
  return result.adminChatUserProto;
}
- (StartupResponseProto_StartupConstants_Builder*) setAdminChatUserProto:(MinimumUserProto*) value {
  result.hasAdminChatUserProto = YES;
  result.adminChatUserProto = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setAdminChatUserProto_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setAdminChatUserProto:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeAdminChatUserProto:(MinimumUserProto*) value {
  if (result.hasAdminChatUserProto &&
      result.adminChatUserProto != [MinimumUserProto defaultInstance]) {
    result.adminChatUserProto =
      [[[MinimumUserProto builderWithPrototype:result.adminChatUserProto] mergeFrom:value] buildPartial];
  } else {
    result.adminChatUserProto = value;
  }
  result.hasAdminChatUserProto = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearAdminChatUserProto {
  result.hasAdminChatUserProto = NO;
  result.adminChatUserProto = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasNumBeginnerSalesAllowed {
  return result.hasNumBeginnerSalesAllowed;
}
- (int32_t) numBeginnerSalesAllowed {
  return result.numBeginnerSalesAllowed;
}
- (StartupResponseProto_StartupConstants_Builder*) setNumBeginnerSalesAllowed:(int32_t) value {
  result.hasNumBeginnerSalesAllowed = YES;
  result.numBeginnerSalesAllowed = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearNumBeginnerSalesAllowed {
  result.hasNumBeginnerSalesAllowed = NO;
  result.numBeginnerSalesAllowed = 0;
  return self;
}
- (BOOL) hasUserMonsterConstants {
  return result.hasUserMonsterConstants;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants*) userMonsterConstants {
  return result.userMonsterConstants;
}
- (StartupResponseProto_StartupConstants_Builder*) setUserMonsterConstants:(StartupResponseProto_StartupConstants_UserMonsterConstants*) value {
  result.hasUserMonsterConstants = YES;
  result.userMonsterConstants = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setUserMonsterConstants_Builder:(StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) builderForValue {
  return [self setUserMonsterConstants:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeUserMonsterConstants:(StartupResponseProto_StartupConstants_UserMonsterConstants*) value {
  if (result.hasUserMonsterConstants &&
      result.userMonsterConstants != [StartupResponseProto_StartupConstants_UserMonsterConstants defaultInstance]) {
    result.userMonsterConstants =
      [[[StartupResponseProto_StartupConstants_UserMonsterConstants builderWithPrototype:result.userMonsterConstants] mergeFrom:value] buildPartial];
  } else {
    result.userMonsterConstants = value;
  }
  result.hasUserMonsterConstants = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearUserMonsterConstants {
  result.hasUserMonsterConstants = NO;
  result.userMonsterConstants = [StartupResponseProto_StartupConstants_UserMonsterConstants defaultInstance];
  return self;
}
- (BOOL) hasMonsterConstants {
  return result.hasMonsterConstants;
}
- (StartupResponseProto_StartupConstants_MonsterConstants*) monsterConstants {
  return result.monsterConstants;
}
- (StartupResponseProto_StartupConstants_Builder*) setMonsterConstants:(StartupResponseProto_StartupConstants_MonsterConstants*) value {
  result.hasMonsterConstants = YES;
  result.monsterConstants = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setMonsterConstants_Builder:(StartupResponseProto_StartupConstants_MonsterConstants_Builder*) builderForValue {
  return [self setMonsterConstants:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeMonsterConstants:(StartupResponseProto_StartupConstants_MonsterConstants*) value {
  if (result.hasMonsterConstants &&
      result.monsterConstants != [StartupResponseProto_StartupConstants_MonsterConstants defaultInstance]) {
    result.monsterConstants =
      [[[StartupResponseProto_StartupConstants_MonsterConstants builderWithPrototype:result.monsterConstants] mergeFrom:value] buildPartial];
  } else {
    result.monsterConstants = value;
  }
  result.hasMonsterConstants = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMonsterConstants {
  result.hasMonsterConstants = NO;
  result.monsterConstants = [StartupResponseProto_StartupConstants_MonsterConstants defaultInstance];
  return self;
}
- (BOOL) hasMinutesPerGem {
  return result.hasMinutesPerGem;
}
- (Float32) minutesPerGem {
  return result.minutesPerGem;
}
- (StartupResponseProto_StartupConstants_Builder*) setMinutesPerGem:(Float32) value {
  result.hasMinutesPerGem = YES;
  result.minutesPerGem = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMinutesPerGem {
  result.hasMinutesPerGem = NO;
  result.minutesPerGem = 0;
  return self;
}
- (BOOL) hasGemsPerResource {
  return result.hasGemsPerResource;
}
- (Float32) gemsPerResource {
  return result.gemsPerResource;
}
- (StartupResponseProto_StartupConstants_Builder*) setGemsPerResource:(Float32) value {
  result.hasGemsPerResource = YES;
  result.gemsPerResource = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearGemsPerResource {
  result.hasGemsPerResource = NO;
  result.gemsPerResource = 0;
  return self;
}
- (BOOL) hasPvpRequiredMinLvl {
  return result.hasPvpRequiredMinLvl;
}
- (int32_t) pvpRequiredMinLvl {
  return result.pvpRequiredMinLvl;
}
- (StartupResponseProto_StartupConstants_Builder*) setPvpRequiredMinLvl:(int32_t) value {
  result.hasPvpRequiredMinLvl = YES;
  result.pvpRequiredMinLvl = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearPvpRequiredMinLvl {
  result.hasPvpRequiredMinLvl = NO;
  result.pvpRequiredMinLvl = 0;
  return self;
}
- (BOOL) hasMonsterDmgMultiplier {
  return result.hasMonsterDmgMultiplier;
}
- (Float32) monsterDmgMultiplier {
  return result.monsterDmgMultiplier;
}
- (StartupResponseProto_StartupConstants_Builder*) setMonsterDmgMultiplier:(Float32) value {
  result.hasMonsterDmgMultiplier = YES;
  result.monsterDmgMultiplier = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMonsterDmgMultiplier {
  result.hasMonsterDmgMultiplier = NO;
  result.monsterDmgMultiplier = 0;
  return self;
}
- (BOOL) hasContinueBattleGemCostMultiplier {
  return result.hasContinueBattleGemCostMultiplier;
}
- (Float32) continueBattleGemCostMultiplier {
  return result.continueBattleGemCostMultiplier;
}
- (StartupResponseProto_StartupConstants_Builder*) setContinueBattleGemCostMultiplier:(Float32) value {
  result.hasContinueBattleGemCostMultiplier = YES;
  result.continueBattleGemCostMultiplier = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearContinueBattleGemCostMultiplier {
  result.hasContinueBattleGemCostMultiplier = NO;
  result.continueBattleGemCostMultiplier = 0;
  return self;
}
- (BOOL) hasBattleRunAwayBasePercent {
  return result.hasBattleRunAwayBasePercent;
}
- (Float32) battleRunAwayBasePercent {
  return result.battleRunAwayBasePercent;
}
- (StartupResponseProto_StartupConstants_Builder*) setBattleRunAwayBasePercent:(Float32) value {
  result.hasBattleRunAwayBasePercent = YES;
  result.battleRunAwayBasePercent = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearBattleRunAwayBasePercent {
  result.hasBattleRunAwayBasePercent = NO;
  result.battleRunAwayBasePercent = 0;
  return self;
}
- (BOOL) hasBattleRunAwayIncrement {
  return result.hasBattleRunAwayIncrement;
}
- (Float32) battleRunAwayIncrement {
  return result.battleRunAwayIncrement;
}
- (StartupResponseProto_StartupConstants_Builder*) setBattleRunAwayIncrement:(Float32) value {
  result.hasBattleRunAwayIncrement = YES;
  result.battleRunAwayIncrement = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearBattleRunAwayIncrement {
  result.hasBattleRunAwayIncrement = NO;
  result.battleRunAwayIncrement = 0;
  return self;
}
- (BOOL) hasAddAllFbFriends {
  return result.hasAddAllFbFriends;
}
- (BOOL) addAllFbFriends {
  return result.addAllFbFriends;
}
- (StartupResponseProto_StartupConstants_Builder*) setAddAllFbFriends:(BOOL) value {
  result.hasAddAllFbFriends = YES;
  result.addAllFbFriends = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearAddAllFbFriends {
  result.hasAddAllFbFriends = NO;
  result.addAllFbFriends = NO;
  return self;
}
- (BOOL) hasFacebookPopUp {
  return result.hasFacebookPopUp;
}
- (BOOL) facebookPopUp {
  return result.facebookPopUp;
}
- (StartupResponseProto_StartupConstants_Builder*) setFacebookPopUp:(BOOL) value {
  result.hasFacebookPopUp = YES;
  result.facebookPopUp = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearFacebookPopUp {
  result.hasFacebookPopUp = NO;
  result.facebookPopUp = NO;
  return self;
}
- (BOOL) hasMiniTuts {
  return result.hasMiniTuts;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants*) miniTuts {
  return result.miniTuts;
}
- (StartupResponseProto_StartupConstants_Builder*) setMiniTuts:(StartupResponseProto_StartupConstants_MiniTutorialConstants*) value {
  result.hasMiniTuts = YES;
  result.miniTuts = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setMiniTuts_Builder:(StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) builderForValue {
  return [self setMiniTuts:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeMiniTuts:(StartupResponseProto_StartupConstants_MiniTutorialConstants*) value {
  if (result.hasMiniTuts &&
      result.miniTuts != [StartupResponseProto_StartupConstants_MiniTutorialConstants defaultInstance]) {
    result.miniTuts =
      [[[StartupResponseProto_StartupConstants_MiniTutorialConstants builderWithPrototype:result.miniTuts] mergeFrom:value] buildPartial];
  } else {
    result.miniTuts = value;
  }
  result.hasMiniTuts = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMiniTuts {
  result.hasMiniTuts = NO;
  result.miniTuts = [StartupResponseProto_StartupConstants_MiniTutorialConstants defaultInstance];
  return self;
}
- (BOOL) hasMaxObstacles {
  return result.hasMaxObstacles;
}
- (int32_t) maxObstacles {
  return result.maxObstacles;
}
- (StartupResponseProto_StartupConstants_Builder*) setMaxObstacles:(int32_t) value {
  result.hasMaxObstacles = YES;
  result.maxObstacles = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMaxObstacles {
  result.hasMaxObstacles = NO;
  result.maxObstacles = 0;
  return self;
}
- (BOOL) hasMinutesPerObstacle {
  return result.hasMinutesPerObstacle;
}
- (int32_t) minutesPerObstacle {
  return result.minutesPerObstacle;
}
- (StartupResponseProto_StartupConstants_Builder*) setMinutesPerObstacle:(int32_t) value {
  result.hasMinutesPerObstacle = YES;
  result.minutesPerObstacle = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMinutesPerObstacle {
  result.hasMinutesPerObstacle = NO;
  result.minutesPerObstacle = 0;
  return self;
}
- (BOOL) hasTaskMapConstants {
  return result.hasTaskMapConstants;
}
- (StartupResponseProto_StartupConstants_TaskMapConstants*) taskMapConstants {
  return result.taskMapConstants;
}
- (StartupResponseProto_StartupConstants_Builder*) setTaskMapConstants:(StartupResponseProto_StartupConstants_TaskMapConstants*) value {
  result.hasTaskMapConstants = YES;
  result.taskMapConstants = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setTaskMapConstants_Builder:(StartupResponseProto_StartupConstants_TaskMapConstants_Builder*) builderForValue {
  return [self setTaskMapConstants:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeTaskMapConstants:(StartupResponseProto_StartupConstants_TaskMapConstants*) value {
  if (result.hasTaskMapConstants &&
      result.taskMapConstants != [StartupResponseProto_StartupConstants_TaskMapConstants defaultInstance]) {
    result.taskMapConstants =
      [[[StartupResponseProto_StartupConstants_TaskMapConstants builderWithPrototype:result.taskMapConstants] mergeFrom:value] buildPartial];
  } else {
    result.taskMapConstants = value;
  }
  result.hasTaskMapConstants = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearTaskMapConstants {
  result.hasTaskMapConstants = NO;
  result.taskMapConstants = [StartupResponseProto_StartupConstants_TaskMapConstants defaultInstance];
  return self;
}
- (BOOL) hasMaxMinutesForFreeSpeedUp {
  return result.hasMaxMinutesForFreeSpeedUp;
}
- (int32_t) maxMinutesForFreeSpeedUp {
  return result.maxMinutesForFreeSpeedUp;
}
- (StartupResponseProto_StartupConstants_Builder*) setMaxMinutesForFreeSpeedUp:(int32_t) value {
  result.hasMaxMinutesForFreeSpeedUp = YES;
  result.maxMinutesForFreeSpeedUp = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMaxMinutesForFreeSpeedUp {
  result.hasMaxMinutesForFreeSpeedUp = NO;
  result.maxMinutesForFreeSpeedUp = 0;
  return self;
}
- (NSMutableArray *)clanHelpConstantsList {
  return result.mutableClanHelpConstantsList;
}
- (StartupResponseProto_StartupConstants_ClanHelpConstants*)clanHelpConstantsAtIndex:(NSUInteger)index {
  return [result clanHelpConstantsAtIndex:index];
}
- (StartupResponseProto_StartupConstants_Builder *)addClanHelpConstants:(StartupResponseProto_StartupConstants_ClanHelpConstants*)value {
  if (result.mutableClanHelpConstantsList == nil) {
    result.mutableClanHelpConstantsList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanHelpConstantsList addObject:value];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder *)addAllClanHelpConstants:(NSArray *)array {
  if (result.mutableClanHelpConstantsList == nil) {
    result.mutableClanHelpConstantsList = [NSMutableArray array];
  }
  [result.mutableClanHelpConstantsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder *)clearClanHelpConstants {
  result.mutableClanHelpConstantsList = nil;
  return self;
}
- (BOOL) hasPvpConstant {
  return result.hasPvpConstant;
}
- (StartupResponseProto_StartupConstants_PvpConstants*) pvpConstant {
  return result.pvpConstant;
}
- (StartupResponseProto_StartupConstants_Builder*) setPvpConstant:(StartupResponseProto_StartupConstants_PvpConstants*) value {
  result.hasPvpConstant = YES;
  result.pvpConstant = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setPvpConstant_Builder:(StartupResponseProto_StartupConstants_PvpConstants_Builder*) builderForValue {
  return [self setPvpConstant:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergePvpConstant:(StartupResponseProto_StartupConstants_PvpConstants*) value {
  if (result.hasPvpConstant &&
      result.pvpConstant != [StartupResponseProto_StartupConstants_PvpConstants defaultInstance]) {
    result.pvpConstant =
      [[[StartupResponseProto_StartupConstants_PvpConstants builderWithPrototype:result.pvpConstant] mergeFrom:value] buildPartial];
  } else {
    result.pvpConstant = value;
  }
  result.hasPvpConstant = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearPvpConstant {
  result.hasPvpConstant = NO;
  result.pvpConstant = [StartupResponseProto_StartupConstants_PvpConstants defaultInstance];
  return self;
}
- (NSMutableArray *)sucpList {
  return result.mutableSucpList;
}
- (StartupResponseProto_StartupConstants_SpeedUpConstantProto*)sucpAtIndex:(NSUInteger)index {
  return [result sucpAtIndex:index];
}
- (StartupResponseProto_StartupConstants_Builder *)addSucp:(StartupResponseProto_StartupConstants_SpeedUpConstantProto*)value {
  if (result.mutableSucpList == nil) {
    result.mutableSucpList = [[NSMutableArray alloc]init];
  }
  [result.mutableSucpList addObject:value];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder *)addAllSucp:(NSArray *)array {
  if (result.mutableSucpList == nil) {
    result.mutableSucpList = [NSMutableArray array];
  }
  [result.mutableSucpList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder *)clearSucp {
  result.mutableSucpList = nil;
  return self;
}
- (NSMutableArray *)rccpList {
  return result.mutableRccpList;
}
- (StartupResponseProto_StartupConstants_ResourceConversionConstantProto*)rccpAtIndex:(NSUInteger)index {
  return [result rccpAtIndex:index];
}
- (StartupResponseProto_StartupConstants_Builder *)addRccp:(StartupResponseProto_StartupConstants_ResourceConversionConstantProto*)value {
  if (result.mutableRccpList == nil) {
    result.mutableRccpList = [[NSMutableArray alloc]init];
  }
  [result.mutableRccpList addObject:value];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder *)addAllRccp:(NSArray *)array {
  if (result.mutableRccpList == nil) {
    result.mutableRccpList = [NSMutableArray array];
  }
  [result.mutableRccpList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder *)clearRccp {
  result.mutableRccpList = nil;
  return self;
}
- (BOOL) hasDisplayRarity {
  return result.hasDisplayRarity;
}
- (BOOL) displayRarity {
  return result.displayRarity;
}
- (StartupResponseProto_StartupConstants_Builder*) setDisplayRarity:(BOOL) value {
  result.hasDisplayRarity = YES;
  result.displayRarity = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearDisplayRarity {
  result.hasDisplayRarity = NO;
  result.displayRarity = NO;
  return self;
}
- (BOOL) hasTaskIdOfFirstSkill {
  return result.hasTaskIdOfFirstSkill;
}
- (int32_t) taskIdOfFirstSkill {
  return result.taskIdOfFirstSkill;
}
- (StartupResponseProto_StartupConstants_Builder*) setTaskIdOfFirstSkill:(int32_t) value {
  result.hasTaskIdOfFirstSkill = YES;
  result.taskIdOfFirstSkill = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearTaskIdOfFirstSkill {
  result.hasTaskIdOfFirstSkill = NO;
  result.taskIdOfFirstSkill = 0;
  return self;
}
- (BOOL) hasMinsToResolicitTeamDonation {
  return result.hasMinsToResolicitTeamDonation;
}
- (int32_t) minsToResolicitTeamDonation {
  return result.minsToResolicitTeamDonation;
}
- (StartupResponseProto_StartupConstants_Builder*) setMinsToResolicitTeamDonation:(int32_t) value {
  result.hasMinsToResolicitTeamDonation = YES;
  result.minsToResolicitTeamDonation = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMinsToResolicitTeamDonation {
  result.hasMinsToResolicitTeamDonation = NO;
  result.minsToResolicitTeamDonation = 0;
  return self;
}
- (NSMutableArray *)fileDownloadProtoList {
  return result.mutableFileDownloadProtoList;
}
- (StartupResponseProto_StartupConstants_FileDownloadConstantProto*)fileDownloadProtoAtIndex:(NSUInteger)index {
  return [result fileDownloadProtoAtIndex:index];
}
- (StartupResponseProto_StartupConstants_Builder *)addFileDownloadProto:(StartupResponseProto_StartupConstants_FileDownloadConstantProto*)value {
  if (result.mutableFileDownloadProtoList == nil) {
    result.mutableFileDownloadProtoList = [[NSMutableArray alloc]init];
  }
  [result.mutableFileDownloadProtoList addObject:value];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder *)addAllFileDownloadProto:(NSArray *)array {
  if (result.mutableFileDownloadProtoList == nil) {
    result.mutableFileDownloadProtoList = [NSMutableArray array];
  }
  [result.mutableFileDownloadProtoList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder *)clearFileDownloadProto {
  result.mutableFileDownloadProtoList = nil;
  return self;
}
- (BOOL) hasTaskIdForUpgradeTutorial {
  return result.hasTaskIdForUpgradeTutorial;
}
- (int32_t) taskIdForUpgradeTutorial {
  return result.taskIdForUpgradeTutorial;
}
- (StartupResponseProto_StartupConstants_Builder*) setTaskIdForUpgradeTutorial:(int32_t) value {
  result.hasTaskIdForUpgradeTutorial = YES;
  result.taskIdForUpgradeTutorial = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearTaskIdForUpgradeTutorial {
  result.hasTaskIdForUpgradeTutorial = NO;
  result.taskIdForUpgradeTutorial = 0;
  return self;
}
- (BOOL) hasBoosterPackConstantProto {
  return result.hasBoosterPackConstantProto;
}
- (StartupResponseProto_StartupConstants_BoosterPackConstantsProto*) boosterPackConstantProto {
  return result.boosterPackConstantProto;
}
- (StartupResponseProto_StartupConstants_Builder*) setBoosterPackConstantProto:(StartupResponseProto_StartupConstants_BoosterPackConstantsProto*) value {
  result.hasBoosterPackConstantProto = YES;
  result.boosterPackConstantProto = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setBoosterPackConstantProto_Builder:(StartupResponseProto_StartupConstants_BoosterPackConstantsProto_Builder*) builderForValue {
  return [self setBoosterPackConstantProto:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeBoosterPackConstantProto:(StartupResponseProto_StartupConstants_BoosterPackConstantsProto*) value {
  if (result.hasBoosterPackConstantProto &&
      result.boosterPackConstantProto != [StartupResponseProto_StartupConstants_BoosterPackConstantsProto defaultInstance]) {
    result.boosterPackConstantProto =
      [[[StartupResponseProto_StartupConstants_BoosterPackConstantsProto builderWithPrototype:result.boosterPackConstantProto] mergeFrom:value] buildPartial];
  } else {
    result.boosterPackConstantProto = value;
  }
  result.hasBoosterPackConstantProto = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearBoosterPackConstantProto {
  result.hasBoosterPackConstantProto = NO;
  result.boosterPackConstantProto = [StartupResponseProto_StartupConstants_BoosterPackConstantsProto defaultInstance];
  return self;
}
@end

@interface StartupResponseProto_TutorialConstants ()
@property int32_t startingMonsterId;
@property int32_t guideMonsterId;
@property int32_t enemyMonsterId;
@property int32_t enemyMonsterIdTwo;
@property int32_t enemyBossMonsterId;
@property int32_t markZmonsterId;
@property (strong) NSMutableArray * mutableTutorialStructuresList;
@property (strong) PBAppendableArray * mutableStructureIdsToBeBuilltList;
@property int32_t cityId;
@property (strong) NSMutableArray * mutableCityOneElementsList;
@property int32_t cityElementIdForFirstDungeon;
@property int32_t cityElementIdForSecondDungeon;
@property int32_t cashInit;
@property int32_t oilInit;
@property int32_t gemsInit;
@property (strong) NSMutableArray * mutableTutorialObstaclesList;
@end

@implementation StartupResponseProto_TutorialConstants

- (BOOL) hasStartingMonsterId {
  return !!hasStartingMonsterId_;
}
- (void) setHasStartingMonsterId:(BOOL) value_ {
  hasStartingMonsterId_ = !!value_;
}
@synthesize startingMonsterId;
- (BOOL) hasGuideMonsterId {
  return !!hasGuideMonsterId_;
}
- (void) setHasGuideMonsterId:(BOOL) value_ {
  hasGuideMonsterId_ = !!value_;
}
@synthesize guideMonsterId;
- (BOOL) hasEnemyMonsterId {
  return !!hasEnemyMonsterId_;
}
- (void) setHasEnemyMonsterId:(BOOL) value_ {
  hasEnemyMonsterId_ = !!value_;
}
@synthesize enemyMonsterId;
- (BOOL) hasEnemyMonsterIdTwo {
  return !!hasEnemyMonsterIdTwo_;
}
- (void) setHasEnemyMonsterIdTwo:(BOOL) value_ {
  hasEnemyMonsterIdTwo_ = !!value_;
}
@synthesize enemyMonsterIdTwo;
- (BOOL) hasEnemyBossMonsterId {
  return !!hasEnemyBossMonsterId_;
}
- (void) setHasEnemyBossMonsterId:(BOOL) value_ {
  hasEnemyBossMonsterId_ = !!value_;
}
@synthesize enemyBossMonsterId;
- (BOOL) hasMarkZmonsterId {
  return !!hasMarkZmonsterId_;
}
- (void) setHasMarkZmonsterId:(BOOL) value_ {
  hasMarkZmonsterId_ = !!value_;
}
@synthesize markZmonsterId;
@synthesize mutableTutorialStructuresList;
@dynamic tutorialStructuresList;
@synthesize mutableStructureIdsToBeBuilltList;
@dynamic structureIdsToBeBuilltList;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value_ {
  hasCityId_ = !!value_;
}
@synthesize cityId;
@synthesize mutableCityOneElementsList;
@dynamic cityOneElementsList;
- (BOOL) hasCityElementIdForFirstDungeon {
  return !!hasCityElementIdForFirstDungeon_;
}
- (void) setHasCityElementIdForFirstDungeon:(BOOL) value_ {
  hasCityElementIdForFirstDungeon_ = !!value_;
}
@synthesize cityElementIdForFirstDungeon;
- (BOOL) hasCityElementIdForSecondDungeon {
  return !!hasCityElementIdForSecondDungeon_;
}
- (void) setHasCityElementIdForSecondDungeon:(BOOL) value_ {
  hasCityElementIdForSecondDungeon_ = !!value_;
}
@synthesize cityElementIdForSecondDungeon;
- (BOOL) hasCashInit {
  return !!hasCashInit_;
}
- (void) setHasCashInit:(BOOL) value_ {
  hasCashInit_ = !!value_;
}
@synthesize cashInit;
- (BOOL) hasOilInit {
  return !!hasOilInit_;
}
- (void) setHasOilInit:(BOOL) value_ {
  hasOilInit_ = !!value_;
}
@synthesize oilInit;
- (BOOL) hasGemsInit {
  return !!hasGemsInit_;
}
- (void) setHasGemsInit:(BOOL) value_ {
  hasGemsInit_ = !!value_;
}
@synthesize gemsInit;
@synthesize mutableTutorialObstaclesList;
@dynamic tutorialObstaclesList;
- (id) init {
  if ((self = [super init])) {
    self.startingMonsterId = 0;
    self.guideMonsterId = 0;
    self.enemyMonsterId = 0;
    self.enemyMonsterIdTwo = 0;
    self.enemyBossMonsterId = 0;
    self.markZmonsterId = 0;
    self.cityId = 0;
    self.cityElementIdForFirstDungeon = 0;
    self.cityElementIdForSecondDungeon = 0;
    self.cashInit = 0;
    self.oilInit = 0;
    self.gemsInit = 0;
  }
  return self;
}
static StartupResponseProto_TutorialConstants* defaultStartupResponseProto_TutorialConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_TutorialConstants class]) {
    defaultStartupResponseProto_TutorialConstantsInstance = [[StartupResponseProto_TutorialConstants alloc] init];
  }
}
+ (StartupResponseProto_TutorialConstants*) defaultInstance {
  return defaultStartupResponseProto_TutorialConstantsInstance;
}
- (StartupResponseProto_TutorialConstants*) defaultInstance {
  return defaultStartupResponseProto_TutorialConstantsInstance;
}
- (NSArray *)tutorialStructuresList {
  return mutableTutorialStructuresList;
}
- (TutorialStructProto*)tutorialStructuresAtIndex:(NSUInteger)index {
  return [mutableTutorialStructuresList objectAtIndex:index];
}
- (PBArray *)structureIdsToBeBuilltList {
  return mutableStructureIdsToBeBuilltList;
}
- (int32_t)structureIdsToBeBuilltAtIndex:(NSUInteger)index {
  return [mutableStructureIdsToBeBuilltList int32AtIndex:index];
}
- (NSArray *)cityOneElementsList {
  return mutableCityOneElementsList;
}
- (CityElementProto*)cityOneElementsAtIndex:(NSUInteger)index {
  return [mutableCityOneElementsList objectAtIndex:index];
}
- (NSArray *)tutorialObstaclesList {
  return mutableTutorialObstaclesList;
}
- (MinimumObstacleProto*)tutorialObstaclesAtIndex:(NSUInteger)index {
  return [mutableTutorialObstaclesList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStartingMonsterId) {
    [output writeInt32:1 value:self.startingMonsterId];
  }
  if (self.hasEnemyMonsterId) {
    [output writeInt32:2 value:self.enemyMonsterId];
  }
  [self.tutorialStructuresList enumerateObjectsUsingBlock:^(TutorialStructProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  const NSUInteger structureIdsToBeBuilltListCount = self.structureIdsToBeBuilltList.count;
  if (structureIdsToBeBuilltListCount > 0) {
    const int32_t *values = (const int32_t *)self.structureIdsToBeBuilltList.data;
    for (NSUInteger i = 0; i < structureIdsToBeBuilltListCount; ++i) {
      [output writeInt32:4 value:values[i]];
    }
  }
  if (self.hasCityId) {
    [output writeInt32:5 value:self.cityId];
  }
  [self.cityOneElementsList enumerateObjectsUsingBlock:^(CityElementProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:6 value:element];
  }];
  if (self.hasCityElementIdForFirstDungeon) {
    [output writeInt32:7 value:self.cityElementIdForFirstDungeon];
  }
  if (self.hasCityElementIdForSecondDungeon) {
    [output writeInt32:8 value:self.cityElementIdForSecondDungeon];
  }
  if (self.hasEnemyBossMonsterId) {
    [output writeInt32:9 value:self.enemyBossMonsterId];
  }
  if (self.hasMarkZmonsterId) {
    [output writeInt32:10 value:self.markZmonsterId];
  }
  if (self.hasCashInit) {
    [output writeInt32:11 value:self.cashInit];
  }
  if (self.hasOilInit) {
    [output writeInt32:12 value:self.oilInit];
  }
  if (self.hasGemsInit) {
    [output writeInt32:13 value:self.gemsInit];
  }
  [self.tutorialObstaclesList enumerateObjectsUsingBlock:^(MinimumObstacleProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:14 value:element];
  }];
  if (self.hasEnemyMonsterIdTwo) {
    [output writeInt32:15 value:self.enemyMonsterIdTwo];
  }
  if (self.hasGuideMonsterId) {
    [output writeInt32:16 value:self.guideMonsterId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStartingMonsterId) {
    size_ += computeInt32Size(1, self.startingMonsterId);
  }
  if (self.hasEnemyMonsterId) {
    size_ += computeInt32Size(2, self.enemyMonsterId);
  }
  [self.tutorialStructuresList enumerateObjectsUsingBlock:^(TutorialStructProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.structureIdsToBeBuilltList.count;
    const int32_t *values = (const int32_t *)self.structureIdsToBeBuilltList.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasCityId) {
    size_ += computeInt32Size(5, self.cityId);
  }
  [self.cityOneElementsList enumerateObjectsUsingBlock:^(CityElementProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(6, element);
  }];
  if (self.hasCityElementIdForFirstDungeon) {
    size_ += computeInt32Size(7, self.cityElementIdForFirstDungeon);
  }
  if (self.hasCityElementIdForSecondDungeon) {
    size_ += computeInt32Size(8, self.cityElementIdForSecondDungeon);
  }
  if (self.hasEnemyBossMonsterId) {
    size_ += computeInt32Size(9, self.enemyBossMonsterId);
  }
  if (self.hasMarkZmonsterId) {
    size_ += computeInt32Size(10, self.markZmonsterId);
  }
  if (self.hasCashInit) {
    size_ += computeInt32Size(11, self.cashInit);
  }
  if (self.hasOilInit) {
    size_ += computeInt32Size(12, self.oilInit);
  }
  if (self.hasGemsInit) {
    size_ += computeInt32Size(13, self.gemsInit);
  }
  [self.tutorialObstaclesList enumerateObjectsUsingBlock:^(MinimumObstacleProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(14, element);
  }];
  if (self.hasEnemyMonsterIdTwo) {
    size_ += computeInt32Size(15, self.enemyMonsterIdTwo);
  }
  if (self.hasGuideMonsterId) {
    size_ += computeInt32Size(16, self.guideMonsterId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StartupResponseProto_TutorialConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_TutorialConstants*)[[[StartupResponseProto_TutorialConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_TutorialConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_TutorialConstants*)[[[StartupResponseProto_TutorialConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_TutorialConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_TutorialConstants*)[[[StartupResponseProto_TutorialConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_TutorialConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_TutorialConstants*)[[[StartupResponseProto_TutorialConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_TutorialConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_TutorialConstants*)[[[StartupResponseProto_TutorialConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_TutorialConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_TutorialConstants*)[[[StartupResponseProto_TutorialConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_TutorialConstants_Builder*) builder {
  return [[StartupResponseProto_TutorialConstants_Builder alloc] init];
}
+ (StartupResponseProto_TutorialConstants_Builder*) builderWithPrototype:(StartupResponseProto_TutorialConstants*) prototype {
  return [[StartupResponseProto_TutorialConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_TutorialConstants_Builder*) builder {
  return [StartupResponseProto_TutorialConstants builder];
}
- (StartupResponseProto_TutorialConstants_Builder*) toBuilder {
  return [StartupResponseProto_TutorialConstants builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStartingMonsterId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startingMonsterId", [NSNumber numberWithInteger:self.startingMonsterId]];
  }
  if (self.hasEnemyMonsterId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"enemyMonsterId", [NSNumber numberWithInteger:self.enemyMonsterId]];
  }
  [self.tutorialStructuresList enumerateObjectsUsingBlock:^(TutorialStructProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"tutorialStructures"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.structureIdsToBeBuilltList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"structureIdsToBeBuillt", obj];
  }];
  if (self.hasCityId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cityId", [NSNumber numberWithInteger:self.cityId]];
  }
  [self.cityOneElementsList enumerateObjectsUsingBlock:^(CityElementProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"cityOneElements"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasCityElementIdForFirstDungeon) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cityElementIdForFirstDungeon", [NSNumber numberWithInteger:self.cityElementIdForFirstDungeon]];
  }
  if (self.hasCityElementIdForSecondDungeon) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cityElementIdForSecondDungeon", [NSNumber numberWithInteger:self.cityElementIdForSecondDungeon]];
  }
  if (self.hasEnemyBossMonsterId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"enemyBossMonsterId", [NSNumber numberWithInteger:self.enemyBossMonsterId]];
  }
  if (self.hasMarkZmonsterId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"markZmonsterId", [NSNumber numberWithInteger:self.markZmonsterId]];
  }
  if (self.hasCashInit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cashInit", [NSNumber numberWithInteger:self.cashInit]];
  }
  if (self.hasOilInit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"oilInit", [NSNumber numberWithInteger:self.oilInit]];
  }
  if (self.hasGemsInit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gemsInit", [NSNumber numberWithInteger:self.gemsInit]];
  }
  [self.tutorialObstaclesList enumerateObjectsUsingBlock:^(MinimumObstacleProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"tutorialObstacles"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasEnemyMonsterIdTwo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"enemyMonsterIdTwo", [NSNumber numberWithInteger:self.enemyMonsterIdTwo]];
  }
  if (self.hasGuideMonsterId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"guideMonsterId", [NSNumber numberWithInteger:self.guideMonsterId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StartupResponseProto_TutorialConstants class]]) {
    return NO;
  }
  StartupResponseProto_TutorialConstants *otherMessage = other;
  return
      self.hasStartingMonsterId == otherMessage.hasStartingMonsterId &&
      (!self.hasStartingMonsterId || self.startingMonsterId == otherMessage.startingMonsterId) &&
      self.hasEnemyMonsterId == otherMessage.hasEnemyMonsterId &&
      (!self.hasEnemyMonsterId || self.enemyMonsterId == otherMessage.enemyMonsterId) &&
      [self.tutorialStructuresList isEqualToArray:otherMessage.tutorialStructuresList] &&
      [self.structureIdsToBeBuilltList isEqualToArray:otherMessage.structureIdsToBeBuilltList] &&
      self.hasCityId == otherMessage.hasCityId &&
      (!self.hasCityId || self.cityId == otherMessage.cityId) &&
      [self.cityOneElementsList isEqualToArray:otherMessage.cityOneElementsList] &&
      self.hasCityElementIdForFirstDungeon == otherMessage.hasCityElementIdForFirstDungeon &&
      (!self.hasCityElementIdForFirstDungeon || self.cityElementIdForFirstDungeon == otherMessage.cityElementIdForFirstDungeon) &&
      self.hasCityElementIdForSecondDungeon == otherMessage.hasCityElementIdForSecondDungeon &&
      (!self.hasCityElementIdForSecondDungeon || self.cityElementIdForSecondDungeon == otherMessage.cityElementIdForSecondDungeon) &&
      self.hasEnemyBossMonsterId == otherMessage.hasEnemyBossMonsterId &&
      (!self.hasEnemyBossMonsterId || self.enemyBossMonsterId == otherMessage.enemyBossMonsterId) &&
      self.hasMarkZmonsterId == otherMessage.hasMarkZmonsterId &&
      (!self.hasMarkZmonsterId || self.markZmonsterId == otherMessage.markZmonsterId) &&
      self.hasCashInit == otherMessage.hasCashInit &&
      (!self.hasCashInit || self.cashInit == otherMessage.cashInit) &&
      self.hasOilInit == otherMessage.hasOilInit &&
      (!self.hasOilInit || self.oilInit == otherMessage.oilInit) &&
      self.hasGemsInit == otherMessage.hasGemsInit &&
      (!self.hasGemsInit || self.gemsInit == otherMessage.gemsInit) &&
      [self.tutorialObstaclesList isEqualToArray:otherMessage.tutorialObstaclesList] &&
      self.hasEnemyMonsterIdTwo == otherMessage.hasEnemyMonsterIdTwo &&
      (!self.hasEnemyMonsterIdTwo || self.enemyMonsterIdTwo == otherMessage.enemyMonsterIdTwo) &&
      self.hasGuideMonsterId == otherMessage.hasGuideMonsterId &&
      (!self.hasGuideMonsterId || self.guideMonsterId == otherMessage.guideMonsterId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStartingMonsterId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.startingMonsterId] hash];
  }
  if (self.hasEnemyMonsterId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.enemyMonsterId] hash];
  }
  [self.tutorialStructuresList enumerateObjectsUsingBlock:^(TutorialStructProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.structureIdsToBeBuilltList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  if (self.hasCityId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cityId] hash];
  }
  [self.cityOneElementsList enumerateObjectsUsingBlock:^(CityElementProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasCityElementIdForFirstDungeon) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cityElementIdForFirstDungeon] hash];
  }
  if (self.hasCityElementIdForSecondDungeon) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cityElementIdForSecondDungeon] hash];
  }
  if (self.hasEnemyBossMonsterId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.enemyBossMonsterId] hash];
  }
  if (self.hasMarkZmonsterId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.markZmonsterId] hash];
  }
  if (self.hasCashInit) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cashInit] hash];
  }
  if (self.hasOilInit) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.oilInit] hash];
  }
  if (self.hasGemsInit) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.gemsInit] hash];
  }
  [self.tutorialObstaclesList enumerateObjectsUsingBlock:^(MinimumObstacleProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasEnemyMonsterIdTwo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.enemyMonsterIdTwo] hash];
  }
  if (self.hasGuideMonsterId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.guideMonsterId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface StartupResponseProto_TutorialConstants_Builder()
@property (strong) StartupResponseProto_TutorialConstants* result;
@end

@implementation StartupResponseProto_TutorialConstants_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto_TutorialConstants alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_TutorialConstants_Builder*) clear {
  self.result = [[StartupResponseProto_TutorialConstants alloc] init];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clone {
  return [StartupResponseProto_TutorialConstants builderWithPrototype:result];
}
- (StartupResponseProto_TutorialConstants*) defaultInstance {
  return [StartupResponseProto_TutorialConstants defaultInstance];
}
- (StartupResponseProto_TutorialConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_TutorialConstants*) buildPartial {
  StartupResponseProto_TutorialConstants* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_TutorialConstants_Builder*) mergeFrom:(StartupResponseProto_TutorialConstants*) other {
  if (other == [StartupResponseProto_TutorialConstants defaultInstance]) {
    return self;
  }
  if (other.hasStartingMonsterId) {
    [self setStartingMonsterId:other.startingMonsterId];
  }
  if (other.hasGuideMonsterId) {
    [self setGuideMonsterId:other.guideMonsterId];
  }
  if (other.hasEnemyMonsterId) {
    [self setEnemyMonsterId:other.enemyMonsterId];
  }
  if (other.hasEnemyMonsterIdTwo) {
    [self setEnemyMonsterIdTwo:other.enemyMonsterIdTwo];
  }
  if (other.hasEnemyBossMonsterId) {
    [self setEnemyBossMonsterId:other.enemyBossMonsterId];
  }
  if (other.hasMarkZmonsterId) {
    [self setMarkZmonsterId:other.markZmonsterId];
  }
  if (other.mutableTutorialStructuresList.count > 0) {
    if (result.mutableTutorialStructuresList == nil) {
      result.mutableTutorialStructuresList = [[NSMutableArray alloc] initWithArray:other.mutableTutorialStructuresList];
    } else {
      [result.mutableTutorialStructuresList addObjectsFromArray:other.mutableTutorialStructuresList];
    }
  }
  if (other.mutableStructureIdsToBeBuilltList.count > 0) {
    if (result.mutableStructureIdsToBeBuilltList == nil) {
      result.mutableStructureIdsToBeBuilltList = [other.mutableStructureIdsToBeBuilltList copy];
    } else {
      [result.mutableStructureIdsToBeBuilltList appendArray:other.mutableStructureIdsToBeBuilltList];
    }
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  if (other.mutableCityOneElementsList.count > 0) {
    if (result.mutableCityOneElementsList == nil) {
      result.mutableCityOneElementsList = [[NSMutableArray alloc] initWithArray:other.mutableCityOneElementsList];
    } else {
      [result.mutableCityOneElementsList addObjectsFromArray:other.mutableCityOneElementsList];
    }
  }
  if (other.hasCityElementIdForFirstDungeon) {
    [self setCityElementIdForFirstDungeon:other.cityElementIdForFirstDungeon];
  }
  if (other.hasCityElementIdForSecondDungeon) {
    [self setCityElementIdForSecondDungeon:other.cityElementIdForSecondDungeon];
  }
  if (other.hasCashInit) {
    [self setCashInit:other.cashInit];
  }
  if (other.hasOilInit) {
    [self setOilInit:other.oilInit];
  }
  if (other.hasGemsInit) {
    [self setGemsInit:other.gemsInit];
  }
  if (other.mutableTutorialObstaclesList.count > 0) {
    if (result.mutableTutorialObstaclesList == nil) {
      result.mutableTutorialObstaclesList = [[NSMutableArray alloc] initWithArray:other.mutableTutorialObstaclesList];
    } else {
      [result.mutableTutorialObstaclesList addObjectsFromArray:other.mutableTutorialObstaclesList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_TutorialConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStartingMonsterId:[input readInt32]];
        break;
      }
      case 16: {
        [self setEnemyMonsterId:[input readInt32]];
        break;
      }
      case 26: {
        TutorialStructProto_Builder* subBuilder = [TutorialStructProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTutorialStructures:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self addStructureIdsToBeBuillt:[input readInt32]];
        break;
      }
      case 40: {
        [self setCityId:[input readInt32]];
        break;
      }
      case 50: {
        CityElementProto_Builder* subBuilder = [CityElementProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCityOneElements:[subBuilder buildPartial]];
        break;
      }
      case 56: {
        [self setCityElementIdForFirstDungeon:[input readInt32]];
        break;
      }
      case 64: {
        [self setCityElementIdForSecondDungeon:[input readInt32]];
        break;
      }
      case 72: {
        [self setEnemyBossMonsterId:[input readInt32]];
        break;
      }
      case 80: {
        [self setMarkZmonsterId:[input readInt32]];
        break;
      }
      case 88: {
        [self setCashInit:[input readInt32]];
        break;
      }
      case 96: {
        [self setOilInit:[input readInt32]];
        break;
      }
      case 104: {
        [self setGemsInit:[input readInt32]];
        break;
      }
      case 114: {
        MinimumObstacleProto_Builder* subBuilder = [MinimumObstacleProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTutorialObstacles:[subBuilder buildPartial]];
        break;
      }
      case 120: {
        [self setEnemyMonsterIdTwo:[input readInt32]];
        break;
      }
      case 128: {
        [self setGuideMonsterId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasStartingMonsterId {
  return result.hasStartingMonsterId;
}
- (int32_t) startingMonsterId {
  return result.startingMonsterId;
}
- (StartupResponseProto_TutorialConstants_Builder*) setStartingMonsterId:(int32_t) value {
  result.hasStartingMonsterId = YES;
  result.startingMonsterId = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearStartingMonsterId {
  result.hasStartingMonsterId = NO;
  result.startingMonsterId = 0;
  return self;
}
- (BOOL) hasGuideMonsterId {
  return result.hasGuideMonsterId;
}
- (int32_t) guideMonsterId {
  return result.guideMonsterId;
}
- (StartupResponseProto_TutorialConstants_Builder*) setGuideMonsterId:(int32_t) value {
  result.hasGuideMonsterId = YES;
  result.guideMonsterId = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearGuideMonsterId {
  result.hasGuideMonsterId = NO;
  result.guideMonsterId = 0;
  return self;
}
- (BOOL) hasEnemyMonsterId {
  return result.hasEnemyMonsterId;
}
- (int32_t) enemyMonsterId {
  return result.enemyMonsterId;
}
- (StartupResponseProto_TutorialConstants_Builder*) setEnemyMonsterId:(int32_t) value {
  result.hasEnemyMonsterId = YES;
  result.enemyMonsterId = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearEnemyMonsterId {
  result.hasEnemyMonsterId = NO;
  result.enemyMonsterId = 0;
  return self;
}
- (BOOL) hasEnemyMonsterIdTwo {
  return result.hasEnemyMonsterIdTwo;
}
- (int32_t) enemyMonsterIdTwo {
  return result.enemyMonsterIdTwo;
}
- (StartupResponseProto_TutorialConstants_Builder*) setEnemyMonsterIdTwo:(int32_t) value {
  result.hasEnemyMonsterIdTwo = YES;
  result.enemyMonsterIdTwo = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearEnemyMonsterIdTwo {
  result.hasEnemyMonsterIdTwo = NO;
  result.enemyMonsterIdTwo = 0;
  return self;
}
- (BOOL) hasEnemyBossMonsterId {
  return result.hasEnemyBossMonsterId;
}
- (int32_t) enemyBossMonsterId {
  return result.enemyBossMonsterId;
}
- (StartupResponseProto_TutorialConstants_Builder*) setEnemyBossMonsterId:(int32_t) value {
  result.hasEnemyBossMonsterId = YES;
  result.enemyBossMonsterId = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearEnemyBossMonsterId {
  result.hasEnemyBossMonsterId = NO;
  result.enemyBossMonsterId = 0;
  return self;
}
- (BOOL) hasMarkZmonsterId {
  return result.hasMarkZmonsterId;
}
- (int32_t) markZmonsterId {
  return result.markZmonsterId;
}
- (StartupResponseProto_TutorialConstants_Builder*) setMarkZmonsterId:(int32_t) value {
  result.hasMarkZmonsterId = YES;
  result.markZmonsterId = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearMarkZmonsterId {
  result.hasMarkZmonsterId = NO;
  result.markZmonsterId = 0;
  return self;
}
- (NSMutableArray *)tutorialStructuresList {
  return result.mutableTutorialStructuresList;
}
- (TutorialStructProto*)tutorialStructuresAtIndex:(NSUInteger)index {
  return [result tutorialStructuresAtIndex:index];
}
- (StartupResponseProto_TutorialConstants_Builder *)addTutorialStructures:(TutorialStructProto*)value {
  if (result.mutableTutorialStructuresList == nil) {
    result.mutableTutorialStructuresList = [[NSMutableArray alloc]init];
  }
  [result.mutableTutorialStructuresList addObject:value];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder *)addAllTutorialStructures:(NSArray *)array {
  if (result.mutableTutorialStructuresList == nil) {
    result.mutableTutorialStructuresList = [NSMutableArray array];
  }
  [result.mutableTutorialStructuresList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder *)clearTutorialStructures {
  result.mutableTutorialStructuresList = nil;
  return self;
}
- (PBAppendableArray *)structureIdsToBeBuilltList {
  return result.mutableStructureIdsToBeBuilltList;
}
- (int32_t)structureIdsToBeBuilltAtIndex:(NSUInteger)index {
  return [result structureIdsToBeBuilltAtIndex:index];
}
- (StartupResponseProto_TutorialConstants_Builder *)addStructureIdsToBeBuillt:(int32_t)value {
  if (result.mutableStructureIdsToBeBuilltList == nil) {
    result.mutableStructureIdsToBeBuilltList = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [result.mutableStructureIdsToBeBuilltList addInt32:value];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder *)addAllStructureIdsToBeBuillt:(NSArray *)array {
  if (result.mutableStructureIdsToBeBuilltList == nil) {
    result.mutableStructureIdsToBeBuilltList = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [result.mutableStructureIdsToBeBuilltList appendArray:[PBArray arrayWithArray:array valueType:PBArrayValueTypeInt32]];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder *)setStructureIdsToBeBuilltValues:(const int32_t *)values count:(NSUInteger)count {
  result.mutableStructureIdsToBeBuilltList = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder *)clearStructureIdsToBeBuillt {
  result.mutableStructureIdsToBeBuilltList = nil;
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (StartupResponseProto_TutorialConstants_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
- (NSMutableArray *)cityOneElementsList {
  return result.mutableCityOneElementsList;
}
- (CityElementProto*)cityOneElementsAtIndex:(NSUInteger)index {
  return [result cityOneElementsAtIndex:index];
}
- (StartupResponseProto_TutorialConstants_Builder *)addCityOneElements:(CityElementProto*)value {
  if (result.mutableCityOneElementsList == nil) {
    result.mutableCityOneElementsList = [[NSMutableArray alloc]init];
  }
  [result.mutableCityOneElementsList addObject:value];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder *)addAllCityOneElements:(NSArray *)array {
  if (result.mutableCityOneElementsList == nil) {
    result.mutableCityOneElementsList = [NSMutableArray array];
  }
  [result.mutableCityOneElementsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder *)clearCityOneElements {
  result.mutableCityOneElementsList = nil;
  return self;
}
- (BOOL) hasCityElementIdForFirstDungeon {
  return result.hasCityElementIdForFirstDungeon;
}
- (int32_t) cityElementIdForFirstDungeon {
  return result.cityElementIdForFirstDungeon;
}
- (StartupResponseProto_TutorialConstants_Builder*) setCityElementIdForFirstDungeon:(int32_t) value {
  result.hasCityElementIdForFirstDungeon = YES;
  result.cityElementIdForFirstDungeon = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearCityElementIdForFirstDungeon {
  result.hasCityElementIdForFirstDungeon = NO;
  result.cityElementIdForFirstDungeon = 0;
  return self;
}
- (BOOL) hasCityElementIdForSecondDungeon {
  return result.hasCityElementIdForSecondDungeon;
}
- (int32_t) cityElementIdForSecondDungeon {
  return result.cityElementIdForSecondDungeon;
}
- (StartupResponseProto_TutorialConstants_Builder*) setCityElementIdForSecondDungeon:(int32_t) value {
  result.hasCityElementIdForSecondDungeon = YES;
  result.cityElementIdForSecondDungeon = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearCityElementIdForSecondDungeon {
  result.hasCityElementIdForSecondDungeon = NO;
  result.cityElementIdForSecondDungeon = 0;
  return self;
}
- (BOOL) hasCashInit {
  return result.hasCashInit;
}
- (int32_t) cashInit {
  return result.cashInit;
}
- (StartupResponseProto_TutorialConstants_Builder*) setCashInit:(int32_t) value {
  result.hasCashInit = YES;
  result.cashInit = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearCashInit {
  result.hasCashInit = NO;
  result.cashInit = 0;
  return self;
}
- (BOOL) hasOilInit {
  return result.hasOilInit;
}
- (int32_t) oilInit {
  return result.oilInit;
}
- (StartupResponseProto_TutorialConstants_Builder*) setOilInit:(int32_t) value {
  result.hasOilInit = YES;
  result.oilInit = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearOilInit {
  result.hasOilInit = NO;
  result.oilInit = 0;
  return self;
}
- (BOOL) hasGemsInit {
  return result.hasGemsInit;
}
- (int32_t) gemsInit {
  return result.gemsInit;
}
- (StartupResponseProto_TutorialConstants_Builder*) setGemsInit:(int32_t) value {
  result.hasGemsInit = YES;
  result.gemsInit = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearGemsInit {
  result.hasGemsInit = NO;
  result.gemsInit = 0;
  return self;
}
- (NSMutableArray *)tutorialObstaclesList {
  return result.mutableTutorialObstaclesList;
}
- (MinimumObstacleProto*)tutorialObstaclesAtIndex:(NSUInteger)index {
  return [result tutorialObstaclesAtIndex:index];
}
- (StartupResponseProto_TutorialConstants_Builder *)addTutorialObstacles:(MinimumObstacleProto*)value {
  if (result.mutableTutorialObstaclesList == nil) {
    result.mutableTutorialObstaclesList = [[NSMutableArray alloc]init];
  }
  [result.mutableTutorialObstaclesList addObject:value];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder *)addAllTutorialObstacles:(NSArray *)array {
  if (result.mutableTutorialObstaclesList == nil) {
    result.mutableTutorialObstaclesList = [NSMutableArray array];
  }
  [result.mutableTutorialObstaclesList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder *)clearTutorialObstacles {
  result.mutableTutorialObstaclesList = nil;
  return self;
}
@end

@interface StartupResponseProto_Builder()
@property (strong) StartupResponseProto* result;
@end

@implementation StartupResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StartupResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_Builder*) clear {
  self.result = [[StartupResponseProto alloc] init];
  return self;
}
- (StartupResponseProto_Builder*) clone {
  return [StartupResponseProto builderWithPrototype:result];
}
- (StartupResponseProto*) defaultInstance {
  return [StartupResponseProto defaultInstance];
}
- (StartupResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto*) buildPartial {
  StartupResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_Builder*) mergeFrom:(StartupResponseProto*) other {
  if (other == [StartupResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasServerTimeMillis) {
    [self setServerTimeMillis:other.serverTimeMillis];
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStartupStatus) {
    [self setStartupStatus:other.startupStatus];
  }
  if (other.hasUpdateStatus) {
    [self setUpdateStatus:other.updateStatus];
  }
  if (other.hasStartupConstants) {
    [self mergeStartupConstants:other.startupConstants];
  }
  if (other.hasTutorialConstants) {
    [self mergeTutorialConstants:other.tutorialConstants];
  }
  if (other.mutableUserQuestsList.count > 0) {
    if (result.mutableUserQuestsList == nil) {
      result.mutableUserQuestsList = [[NSMutableArray alloc] initWithArray:other.mutableUserQuestsList];
    } else {
      [result.mutableUserQuestsList addObjectsFromArray:other.mutableUserQuestsList];
    }
  }
  if (other.mutableRedeemedQuestIdsList.count > 0) {
    if (result.mutableRedeemedQuestIdsList == nil) {
      result.mutableRedeemedQuestIdsList = [other.mutableRedeemedQuestIdsList copy];
    } else {
      [result.mutableRedeemedQuestIdsList appendArray:other.mutableRedeemedQuestIdsList];
    }
  }
  if (other.mutableUserClanInfoList.count > 0) {
    if (result.mutableUserClanInfoList == nil) {
      result.mutableUserClanInfoList = [[NSMutableArray alloc] initWithArray:other.mutableUserClanInfoList];
    } else {
      [result.mutableUserClanInfoList addObjectsFromArray:other.mutableUserClanInfoList];
    }
  }
  if (other.mutableCompletedTaskIdsList.count > 0) {
    if (result.mutableCompletedTaskIdsList == nil) {
      result.mutableCompletedTaskIdsList = [other.mutableCompletedTaskIdsList copy];
    } else {
      [result.mutableCompletedTaskIdsList appendArray:other.mutableCompletedTaskIdsList];
    }
  }
  if (other.mutableCompletedTasksList.count > 0) {
    if (result.mutableCompletedTasksList == nil) {
      result.mutableCompletedTasksList = [[NSMutableArray alloc] initWithArray:other.mutableCompletedTasksList];
    } else {
      [result.mutableCompletedTasksList addObjectsFromArray:other.mutableCompletedTasksList];
    }
  }
  if (other.hasAppStoreUrl) {
    [self setAppStoreUrl:other.appStoreUrl];
  }
  if (other.hasReviewPageUrl) {
    [self setReviewPageUrl:other.reviewPageUrl];
  }
  if (other.hasReviewPageConfirmationMessage) {
    [self setReviewPageConfirmationMessage:other.reviewPageConfirmationMessage];
  }
  if (other.hasPlayerHasBoughtInAppPurchase) {
    [self setPlayerHasBoughtInAppPurchase:other.playerHasBoughtInAppPurchase];
  }
  if (other.mutableAttackNotificationsList.count > 0) {
    if (result.mutableAttackNotificationsList == nil) {
      result.mutableAttackNotificationsList = [[NSMutableArray alloc] initWithArray:other.mutableAttackNotificationsList];
    } else {
      [result.mutableAttackNotificationsList addObjectsFromArray:other.mutableAttackNotificationsList];
    }
  }
  if (other.mutableReferralNotificationsList.count > 0) {
    if (result.mutableReferralNotificationsList == nil) {
      result.mutableReferralNotificationsList = [[NSMutableArray alloc] initWithArray:other.mutableReferralNotificationsList];
    } else {
      [result.mutableReferralNotificationsList addObjectsFromArray:other.mutableReferralNotificationsList];
    }
  }
  if (other.mutableNoticesToPlayersList.count > 0) {
    if (result.mutableNoticesToPlayersList == nil) {
      result.mutableNoticesToPlayersList = [[NSMutableArray alloc] initWithArray:other.mutableNoticesToPlayersList];
    } else {
      [result.mutableNoticesToPlayersList addObjectsFromArray:other.mutableNoticesToPlayersList];
    }
  }
  if (other.mutableGlobalChatsList.count > 0) {
    if (result.mutableGlobalChatsList == nil) {
      result.mutableGlobalChatsList = [[NSMutableArray alloc] initWithArray:other.mutableGlobalChatsList];
    } else {
      [result.mutableGlobalChatsList addObjectsFromArray:other.mutableGlobalChatsList];
    }
  }
  if (other.mutableClanChatsList.count > 0) {
    if (result.mutableClanChatsList == nil) {
      result.mutableClanChatsList = [[NSMutableArray alloc] initWithArray:other.mutableClanChatsList];
    } else {
      [result.mutableClanChatsList addObjectsFromArray:other.mutableClanChatsList];
    }
  }
  if (other.mutablePcppList.count > 0) {
    if (result.mutablePcppList == nil) {
      result.mutablePcppList = [[NSMutableArray alloc] initWithArray:other.mutablePcppList];
    } else {
      [result.mutablePcppList addObjectsFromArray:other.mutablePcppList];
    }
  }
  if (other.mutableUsersMonstersList.count > 0) {
    if (result.mutableUsersMonstersList == nil) {
      result.mutableUsersMonstersList = [[NSMutableArray alloc] initWithArray:other.mutableUsersMonstersList];
    } else {
      [result.mutableUsersMonstersList addObjectsFromArray:other.mutableUsersMonstersList];
    }
  }
  if (other.mutableMonstersHealingList.count > 0) {
    if (result.mutableMonstersHealingList == nil) {
      result.mutableMonstersHealingList = [[NSMutableArray alloc] initWithArray:other.mutableMonstersHealingList];
    } else {
      [result.mutableMonstersHealingList addObjectsFromArray:other.mutableMonstersHealingList];
    }
  }
  if (other.hasEnhancements) {
    [self mergeEnhancements:other.enhancements];
  }
  if (other.hasEvolution) {
    [self mergeEvolution:other.evolution];
  }
  if (other.mutableRareBoosterPurchasesList.count > 0) {
    if (result.mutableRareBoosterPurchasesList == nil) {
      result.mutableRareBoosterPurchasesList = [[NSMutableArray alloc] initWithArray:other.mutableRareBoosterPurchasesList];
    } else {
      [result.mutableRareBoosterPurchasesList addObjectsFromArray:other.mutableRareBoosterPurchasesList];
    }
  }
  if (other.hasKabamNaid) {
    [self setKabamNaid:other.kabamNaid];
  }
  if (other.mutableInvitesToMeForSlotsList.count > 0) {
    if (result.mutableInvitesToMeForSlotsList == nil) {
      result.mutableInvitesToMeForSlotsList = [[NSMutableArray alloc] initWithArray:other.mutableInvitesToMeForSlotsList];
    } else {
      [result.mutableInvitesToMeForSlotsList addObjectsFromArray:other.mutableInvitesToMeForSlotsList];
    }
  }
  if (other.mutableInvitesFromMeForSlotsList.count > 0) {
    if (result.mutableInvitesFromMeForSlotsList == nil) {
      result.mutableInvitesFromMeForSlotsList = [[NSMutableArray alloc] initWithArray:other.mutableInvitesFromMeForSlotsList];
    } else {
      [result.mutableInvitesFromMeForSlotsList addObjectsFromArray:other.mutableInvitesFromMeForSlotsList];
    }
  }
  if (other.hasStaticDataStuffProto) {
    [self mergeStaticDataStuffProto:other.staticDataStuffProto];
  }
  if (other.mutableTaskIdForCurrentCityBossList.count > 0) {
    if (result.mutableTaskIdForCurrentCityBossList == nil) {
      result.mutableTaskIdForCurrentCityBossList = [other.mutableTaskIdForCurrentCityBossList copy];
    } else {
      [result.mutableTaskIdForCurrentCityBossList appendArray:other.mutableTaskIdForCurrentCityBossList];
    }
  }
  if (other.mutableUserEventsList.count > 0) {
    if (result.mutableUserEventsList == nil) {
      result.mutableUserEventsList = [[NSMutableArray alloc] initWithArray:other.mutableUserEventsList];
    } else {
      [result.mutableUserEventsList addObjectsFromArray:other.mutableUserEventsList];
    }
  }
  if (other.hasCurRaidClanInfo) {
    [self mergeCurRaidClanInfo:other.curRaidClanInfo];
  }
  if (other.mutableCurRaidClanUserInfoList.count > 0) {
    if (result.mutableCurRaidClanUserInfoList == nil) {
      result.mutableCurRaidClanUserInfoList = [[NSMutableArray alloc] initWithArray:other.mutableCurRaidClanUserInfoList];
    } else {
      [result.mutableCurRaidClanUserInfoList addObjectsFromArray:other.mutableCurRaidClanUserInfoList];
    }
  }
  if (other.mutableRaidStageHistoryList.count > 0) {
    if (result.mutableRaidStageHistoryList == nil) {
      result.mutableRaidStageHistoryList = [[NSMutableArray alloc] initWithArray:other.mutableRaidStageHistoryList];
    } else {
      [result.mutableRaidStageHistoryList addObjectsFromArray:other.mutableRaidStageHistoryList];
    }
  }
  if (other.mutableRecentNbattlesList.count > 0) {
    if (result.mutableRecentNbattlesList == nil) {
      result.mutableRecentNbattlesList = [[NSMutableArray alloc] initWithArray:other.mutableRecentNbattlesList];
    } else {
      [result.mutableRecentNbattlesList addObjectsFromArray:other.mutableRecentNbattlesList];
    }
  }
  if (other.hasCurTask) {
    [self mergeCurTask:other.curTask];
  }
  if (other.mutableCurTaskStagesList.count > 0) {
    if (result.mutableCurTaskStagesList == nil) {
      result.mutableCurTaskStagesList = [[NSMutableArray alloc] initWithArray:other.mutableCurTaskStagesList];
    } else {
      [result.mutableCurTaskStagesList addObjectsFromArray:other.mutableCurTaskStagesList];
    }
  }
  if (other.mutableUserAchievementsList.count > 0) {
    if (result.mutableUserAchievementsList == nil) {
      result.mutableUserAchievementsList = [[NSMutableArray alloc] initWithArray:other.mutableUserAchievementsList];
    } else {
      [result.mutableUserAchievementsList addObjectsFromArray:other.mutableUserAchievementsList];
    }
  }
  if (other.mutableUserMiniJobProtosList.count > 0) {
    if (result.mutableUserMiniJobProtosList == nil) {
      result.mutableUserMiniJobProtosList = [[NSMutableArray alloc] initWithArray:other.mutableUserMiniJobProtosList];
    } else {
      [result.mutableUserMiniJobProtosList addObjectsFromArray:other.mutableUserMiniJobProtosList];
    }
  }
  if (other.mutableUserItemsList.count > 0) {
    if (result.mutableUserItemsList == nil) {
      result.mutableUserItemsList = [[NSMutableArray alloc] initWithArray:other.mutableUserItemsList];
    } else {
      [result.mutableUserItemsList addObjectsFromArray:other.mutableUserItemsList];
    }
  }
  if (other.mutableClanHelpingsList.count > 0) {
    if (result.mutableClanHelpingsList == nil) {
      result.mutableClanHelpingsList = [[NSMutableArray alloc] initWithArray:other.mutableClanHelpingsList];
    } else {
      [result.mutableClanHelpingsList addObjectsFromArray:other.mutableClanHelpingsList];
    }
  }
  if (other.mutableClanInvitesList.count > 0) {
    if (result.mutableClanInvitesList == nil) {
      result.mutableClanInvitesList = [[NSMutableArray alloc] initWithArray:other.mutableClanInvitesList];
    } else {
      [result.mutableClanInvitesList addObjectsFromArray:other.mutableClanInvitesList];
    }
  }
  if (other.hasClanData) {
    [self mergeClanData:other.clanData];
  }
  if (other.mutableItemsInUseList.count > 0) {
    if (result.mutableItemsInUseList == nil) {
      result.mutableItemsInUseList = [[NSMutableArray alloc] initWithArray:other.mutableItemsInUseList];
    } else {
      [result.mutableItemsInUseList addObjectsFromArray:other.mutableItemsInUseList];
    }
  }
  if (other.mutableGiftsList.count > 0) {
    if (result.mutableGiftsList == nil) {
      result.mutableGiftsList = [[NSMutableArray alloc] initWithArray:other.mutableGiftsList];
    } else {
      [result.mutableGiftsList addObjectsFromArray:other.mutableGiftsList];
    }
  }
  if (other.mutableUserPvpBoardObstaclesList.count > 0) {
    if (result.mutableUserPvpBoardObstaclesList == nil) {
      result.mutableUserPvpBoardObstaclesList = [[NSMutableArray alloc] initWithArray:other.mutableUserPvpBoardObstaclesList];
    } else {
      [result.mutableUserPvpBoardObstaclesList addObjectsFromArray:other.mutableUserPvpBoardObstaclesList];
    }
  }
  if (other.mutableBattleItemQueueList.count > 0) {
    if (result.mutableBattleItemQueueList == nil) {
      result.mutableBattleItemQueueList = [[NSMutableArray alloc] initWithArray:other.mutableBattleItemQueueList];
    } else {
      [result.mutableBattleItemQueueList addObjectsFromArray:other.mutableBattleItemQueueList];
    }
  }
  if (other.mutableBattleItemList.count > 0) {
    if (result.mutableBattleItemList == nil) {
      result.mutableBattleItemList = [[NSMutableArray alloc] initWithArray:other.mutableBattleItemList];
    } else {
      [result.mutableBattleItemList addObjectsFromArray:other.mutableBattleItemList];
    }
  }
  if (other.mutableUserResearchsList.count > 0) {
    if (result.mutableUserResearchsList == nil) {
      result.mutableUserResearchsList = [[NSMutableArray alloc] initWithArray:other.mutableUserResearchsList];
    } else {
      [result.mutableUserResearchsList addObjectsFromArray:other.mutableUserResearchsList];
    }
  }
  if (other.mutableSalesPackagesList.count > 0) {
    if (result.mutableSalesPackagesList == nil) {
      result.mutableSalesPackagesList = [[NSMutableArray alloc] initWithArray:other.mutableSalesPackagesList];
    } else {
      [result.mutableSalesPackagesList addObjectsFromArray:other.mutableSalesPackagesList];
    }
  }
  if (other.hasUserMiniEvent) {
    [self mergeUserMiniEvent:other.userMiniEvent];
  }
  if (other.hasUserDefaultLanguages) {
    [self mergeUserDefaultLanguages:other.userDefaultLanguages];
  }
  if (other.mutableUserClanGiftsList.count > 0) {
    if (result.mutableUserClanGiftsList == nil) {
      result.mutableUserClanGiftsList = [[NSMutableArray alloc] initWithArray:other.mutableUserClanGiftsList];
    } else {
      [result.mutableUserClanGiftsList addObjectsFromArray:other.mutableUserClanGiftsList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setServerTimeMillis:[input readInt64]];
        break;
      }
      case 18: {
        FullUserProto_Builder* subBuilder = [FullUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        StartupResponseProto_StartupStatus value = (StartupResponseProto_StartupStatus)[input readEnum];
        if (StartupResponseProto_StartupStatusIsValidValue(value)) {
          [self setStartupStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        StartupResponseProto_UpdateStatus value = (StartupResponseProto_UpdateStatus)[input readEnum];
        if (StartupResponseProto_UpdateStatusIsValidValue(value)) {
          [self setUpdateStatus:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 42: {
        StartupResponseProto_StartupConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants builder];
        if (self.hasStartupConstants) {
          [subBuilder mergeFrom:self.startupConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStartupConstants:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        FullUserQuestProto_Builder* subBuilder = [FullUserQuestProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserQuests:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        FullUserClanProto_Builder* subBuilder = [FullUserClanProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserClanInfo:[subBuilder buildPartial]];
        break;
      }
      case 64: {
        [self addCompletedTaskIds:[input readInt32]];
        break;
      }
      case 74: {
        [self setAppStoreUrl:[input readString]];
        break;
      }
      case 82: {
        [self setReviewPageUrl:[input readString]];
        break;
      }
      case 90: {
        [self setReviewPageConfirmationMessage:[input readString]];
        break;
      }
      case 96: {
        [self setPlayerHasBoughtInAppPurchase:[input readBool]];
        break;
      }
      case 106: {
        StartupResponseProto_AttackedNotificationProto_Builder* subBuilder = [StartupResponseProto_AttackedNotificationProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttackNotifications:[subBuilder buildPartial]];
        break;
      }
      case 114: {
        StartupResponseProto_ReferralNotificationProto_Builder* subBuilder = [StartupResponseProto_ReferralNotificationProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addReferralNotifications:[subBuilder buildPartial]];
        break;
      }
      case 122: {
        [self addNoticesToPlayers:[input readString]];
        break;
      }
      case 130: {
        GroupChatMessageProto_Builder* subBuilder = [GroupChatMessageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGlobalChats:[subBuilder buildPartial]];
        break;
      }
      case 138: {
        GroupChatMessageProto_Builder* subBuilder = [GroupChatMessageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanChats:[subBuilder buildPartial]];
        break;
      }
      case 146: {
        PrivateChatPostProto_Builder* subBuilder = [PrivateChatPostProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPcpp:[subBuilder buildPartial]];
        break;
      }
      case 154: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUsersMonsters:[subBuilder buildPartial]];
        break;
      }
      case 162: {
        UserMonsterHealingProto_Builder* subBuilder = [UserMonsterHealingProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMonstersHealing:[subBuilder buildPartial]];
        break;
      }
      case 170: {
        UserEnhancementProto_Builder* subBuilder = [UserEnhancementProto builder];
        if (self.hasEnhancements) {
          [subBuilder mergeFrom:self.enhancements];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEnhancements:[subBuilder buildPartial]];
        break;
      }
      case 178: {
        RareBoosterPurchaseProto_Builder* subBuilder = [RareBoosterPurchaseProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRareBoosterPurchases:[subBuilder buildPartial]];
        break;
      }
      case 186: {
        [self setKabamNaid:[input readString]];
        break;
      }
      case 194: {
        UserFacebookInviteForSlotProto_Builder* subBuilder = [UserFacebookInviteForSlotProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addInvitesToMeForSlots:[subBuilder buildPartial]];
        break;
      }
      case 202: {
        UserFacebookInviteForSlotProto_Builder* subBuilder = [UserFacebookInviteForSlotProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addInvitesFromMeForSlots:[subBuilder buildPartial]];
        break;
      }
      case 210: {
        StaticDataProto_Builder* subBuilder = [StaticDataProto builder];
        if (self.hasStaticDataStuffProto) {
          [subBuilder mergeFrom:self.staticDataStuffProto];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStaticDataStuffProto:[subBuilder buildPartial]];
        break;
      }
      case 216: {
        [self addRedeemedQuestIds:[input readInt32]];
        break;
      }
      case 224: {
        [self addTaskIdForCurrentCityBoss:[input readInt32]];
        break;
      }
      case 234: {
        UserMonsterEvolutionProto_Builder* subBuilder = [UserMonsterEvolutionProto builder];
        if (self.hasEvolution) {
          [subBuilder mergeFrom:self.evolution];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEvolution:[subBuilder buildPartial]];
        break;
      }
      case 242: {
        UserPersistentEventProto_Builder* subBuilder = [UserPersistentEventProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserEvents:[subBuilder buildPartial]];
        break;
      }
      case 250: {
        PersistentClanEventClanInfoProto_Builder* subBuilder = [PersistentClanEventClanInfoProto builder];
        if (self.hasCurRaidClanInfo) {
          [subBuilder mergeFrom:self.curRaidClanInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCurRaidClanInfo:[subBuilder buildPartial]];
        break;
      }
      case 258: {
        PersistentClanEventUserInfoProto_Builder* subBuilder = [PersistentClanEventUserInfoProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCurRaidClanUserInfo:[subBuilder buildPartial]];
        break;
      }
      case 266: {
        PersistentClanEventRaidStageHistoryProto_Builder* subBuilder = [PersistentClanEventRaidStageHistoryProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRaidStageHistory:[subBuilder buildPartial]];
        break;
      }
      case 274: {
        StartupResponseProto_TutorialConstants_Builder* subBuilder = [StartupResponseProto_TutorialConstants builder];
        if (self.hasTutorialConstants) {
          [subBuilder mergeFrom:self.tutorialConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTutorialConstants:[subBuilder buildPartial]];
        break;
      }
      case 282: {
        PvpHistoryProto_Builder* subBuilder = [PvpHistoryProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRecentNbattles:[subBuilder buildPartial]];
        break;
      }
      case 290: {
        MinimumUserTaskProto_Builder* subBuilder = [MinimumUserTaskProto builder];
        if (self.hasCurTask) {
          [subBuilder mergeFrom:self.curTask];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCurTask:[subBuilder buildPartial]];
        break;
      }
      case 298: {
        TaskStageProto_Builder* subBuilder = [TaskStageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCurTaskStages:[subBuilder buildPartial]];
        break;
      }
      case 306: {
        UserAchievementProto_Builder* subBuilder = [UserAchievementProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserAchievements:[subBuilder buildPartial]];
        break;
      }
      case 314: {
        UserMiniJobProto_Builder* subBuilder = [UserMiniJobProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserMiniJobProtos:[subBuilder buildPartial]];
        break;
      }
      case 322: {
        UserItemProto_Builder* subBuilder = [UserItemProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserItems:[subBuilder buildPartial]];
        break;
      }
      case 330: {
        ClanHelpProto_Builder* subBuilder = [ClanHelpProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanHelpings:[subBuilder buildPartial]];
        break;
      }
      case 338: {
        ClanInviteProto_Builder* subBuilder = [ClanInviteProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanInvites:[subBuilder buildPartial]];
        break;
      }
      case 346: {
        ClanDataProto_Builder* subBuilder = [ClanDataProto builder];
        if (self.hasClanData) {
          [subBuilder mergeFrom:self.clanData];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClanData:[subBuilder buildPartial]];
        break;
      }
      case 354: {
        UserItemUsageProto_Builder* subBuilder = [UserItemUsageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addItemsInUse:[subBuilder buildPartial]];
        break;
      }
      case 362: {
        UserItemSecretGiftProto_Builder* subBuilder = [UserItemSecretGiftProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGifts:[subBuilder buildPartial]];
        break;
      }
      case 370: {
        UserTaskCompletedProto_Builder* subBuilder = [UserTaskCompletedProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCompletedTasks:[subBuilder buildPartial]];
        break;
      }
      case 378: {
        UserPvpBoardObstacleProto_Builder* subBuilder = [UserPvpBoardObstacleProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserPvpBoardObstacles:[subBuilder buildPartial]];
        break;
      }
      case 386: {
        BattleItemQueueForUserProto_Builder* subBuilder = [BattleItemQueueForUserProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBattleItemQueue:[subBuilder buildPartial]];
        break;
      }
      case 394: {
        UserBattleItemProto_Builder* subBuilder = [UserBattleItemProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBattleItem:[subBuilder buildPartial]];
        break;
      }
      case 402: {
        UserResearchProto_Builder* subBuilder = [UserResearchProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserResearchs:[subBuilder buildPartial]];
        break;
      }
      case 410: {
        SalesPackageProto_Builder* subBuilder = [SalesPackageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSalesPackages:[subBuilder buildPartial]];
        break;
      }
      case 418: {
        UserMiniEventProto_Builder* subBuilder = [UserMiniEventProto builder];
        if (self.hasUserMiniEvent) {
          [subBuilder mergeFrom:self.userMiniEvent];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserMiniEvent:[subBuilder buildPartial]];
        break;
      }
      case 426: {
        DefaultLanguagesProto_Builder* subBuilder = [DefaultLanguagesProto builder];
        if (self.hasUserDefaultLanguages) {
          [subBuilder mergeFrom:self.userDefaultLanguages];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserDefaultLanguages:[subBuilder buildPartial]];
        break;
      }
      case 4002: {
        UserClanGiftProto_Builder* subBuilder = [UserClanGiftProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserClanGifts:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasServerTimeMillis {
  return result.hasServerTimeMillis;
}
- (int64_t) serverTimeMillis {
  return result.serverTimeMillis;
}
- (StartupResponseProto_Builder*) setServerTimeMillis:(int64_t) value {
  result.hasServerTimeMillis = YES;
  result.serverTimeMillis = value;
  return self;
}
- (StartupResponseProto_Builder*) clearServerTimeMillis {
  result.hasServerTimeMillis = NO;
  result.serverTimeMillis = 0L;
  return self;
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (FullUserProto*) sender {
  return result.sender;
}
- (StartupResponseProto_Builder*) setSender:(FullUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (StartupResponseProto_Builder*) setSender_Builder:(FullUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeSender:(FullUserProto*) value {
  if (result.hasSender &&
      result.sender != [FullUserProto defaultInstance]) {
    result.sender =
      [[[FullUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [FullUserProto defaultInstance];
  return self;
}
- (BOOL) hasStartupStatus {
  return result.hasStartupStatus;
}
- (StartupResponseProto_StartupStatus) startupStatus {
  return result.startupStatus;
}
- (StartupResponseProto_Builder*) setStartupStatus:(StartupResponseProto_StartupStatus) value {
  result.hasStartupStatus = YES;
  result.startupStatus = value;
  return self;
}
- (StartupResponseProto_Builder*) clearStartupStatusList {
  result.hasStartupStatus = NO;
  result.startupStatus = StartupResponseProto_StartupStatusUserInDb;
  return self;
}
- (BOOL) hasUpdateStatus {
  return result.hasUpdateStatus;
}
- (StartupResponseProto_UpdateStatus) updateStatus {
  return result.updateStatus;
}
- (StartupResponseProto_Builder*) setUpdateStatus:(StartupResponseProto_UpdateStatus) value {
  result.hasUpdateStatus = YES;
  result.updateStatus = value;
  return self;
}
- (StartupResponseProto_Builder*) clearUpdateStatusList {
  result.hasUpdateStatus = NO;
  result.updateStatus = StartupResponseProto_UpdateStatusNoUpdate;
  return self;
}
- (BOOL) hasStartupConstants {
  return result.hasStartupConstants;
}
- (StartupResponseProto_StartupConstants*) startupConstants {
  return result.startupConstants;
}
- (StartupResponseProto_Builder*) setStartupConstants:(StartupResponseProto_StartupConstants*) value {
  result.hasStartupConstants = YES;
  result.startupConstants = value;
  return self;
}
- (StartupResponseProto_Builder*) setStartupConstants_Builder:(StartupResponseProto_StartupConstants_Builder*) builderForValue {
  return [self setStartupConstants:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeStartupConstants:(StartupResponseProto_StartupConstants*) value {
  if (result.hasStartupConstants &&
      result.startupConstants != [StartupResponseProto_StartupConstants defaultInstance]) {
    result.startupConstants =
      [[[StartupResponseProto_StartupConstants builderWithPrototype:result.startupConstants] mergeFrom:value] buildPartial];
  } else {
    result.startupConstants = value;
  }
  result.hasStartupConstants = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearStartupConstants {
  result.hasStartupConstants = NO;
  result.startupConstants = [StartupResponseProto_StartupConstants defaultInstance];
  return self;
}
- (BOOL) hasTutorialConstants {
  return result.hasTutorialConstants;
}
- (StartupResponseProto_TutorialConstants*) tutorialConstants {
  return result.tutorialConstants;
}
- (StartupResponseProto_Builder*) setTutorialConstants:(StartupResponseProto_TutorialConstants*) value {
  result.hasTutorialConstants = YES;
  result.tutorialConstants = value;
  return self;
}
- (StartupResponseProto_Builder*) setTutorialConstants_Builder:(StartupResponseProto_TutorialConstants_Builder*) builderForValue {
  return [self setTutorialConstants:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeTutorialConstants:(StartupResponseProto_TutorialConstants*) value {
  if (result.hasTutorialConstants &&
      result.tutorialConstants != [StartupResponseProto_TutorialConstants defaultInstance]) {
    result.tutorialConstants =
      [[[StartupResponseProto_TutorialConstants builderWithPrototype:result.tutorialConstants] mergeFrom:value] buildPartial];
  } else {
    result.tutorialConstants = value;
  }
  result.hasTutorialConstants = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearTutorialConstants {
  result.hasTutorialConstants = NO;
  result.tutorialConstants = [StartupResponseProto_TutorialConstants defaultInstance];
  return self;
}
- (NSMutableArray *)userQuestsList {
  return result.mutableUserQuestsList;
}
- (FullUserQuestProto*)userQuestsAtIndex:(NSUInteger)index {
  return [result userQuestsAtIndex:index];
}
- (StartupResponseProto_Builder *)addUserQuests:(FullUserQuestProto*)value {
  if (result.mutableUserQuestsList == nil) {
    result.mutableUserQuestsList = [[NSMutableArray alloc]init];
  }
  [result.mutableUserQuestsList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllUserQuests:(NSArray *)array {
  if (result.mutableUserQuestsList == nil) {
    result.mutableUserQuestsList = [NSMutableArray array];
  }
  [result.mutableUserQuestsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearUserQuests {
  result.mutableUserQuestsList = nil;
  return self;
}
- (PBAppendableArray *)redeemedQuestIdsList {
  return result.mutableRedeemedQuestIdsList;
}
- (int32_t)redeemedQuestIdsAtIndex:(NSUInteger)index {
  return [result redeemedQuestIdsAtIndex:index];
}
- (StartupResponseProto_Builder *)addRedeemedQuestIds:(int32_t)value {
  if (result.mutableRedeemedQuestIdsList == nil) {
    result.mutableRedeemedQuestIdsList = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [result.mutableRedeemedQuestIdsList addInt32:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllRedeemedQuestIds:(NSArray *)array {
  if (result.mutableRedeemedQuestIdsList == nil) {
    result.mutableRedeemedQuestIdsList = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [result.mutableRedeemedQuestIdsList appendArray:[PBArray arrayWithArray:array valueType:PBArrayValueTypeInt32]];
  return self;
}
- (StartupResponseProto_Builder *)setRedeemedQuestIdsValues:(const int32_t *)values count:(NSUInteger)count {
  result.mutableRedeemedQuestIdsList = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (StartupResponseProto_Builder *)clearRedeemedQuestIds {
  result.mutableRedeemedQuestIdsList = nil;
  return self;
}
- (NSMutableArray *)userClanInfoList {
  return result.mutableUserClanInfoList;
}
- (FullUserClanProto*)userClanInfoAtIndex:(NSUInteger)index {
  return [result userClanInfoAtIndex:index];
}
- (StartupResponseProto_Builder *)addUserClanInfo:(FullUserClanProto*)value {
  if (result.mutableUserClanInfoList == nil) {
    result.mutableUserClanInfoList = [[NSMutableArray alloc]init];
  }
  [result.mutableUserClanInfoList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllUserClanInfo:(NSArray *)array {
  if (result.mutableUserClanInfoList == nil) {
    result.mutableUserClanInfoList = [NSMutableArray array];
  }
  [result.mutableUserClanInfoList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearUserClanInfo {
  result.mutableUserClanInfoList = nil;
  return self;
}
- (PBAppendableArray *)completedTaskIdsList {
  return result.mutableCompletedTaskIdsList;
}
- (int32_t)completedTaskIdsAtIndex:(NSUInteger)index {
  return [result completedTaskIdsAtIndex:index];
}
- (StartupResponseProto_Builder *)addCompletedTaskIds:(int32_t)value {
  if (result.mutableCompletedTaskIdsList == nil) {
    result.mutableCompletedTaskIdsList = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [result.mutableCompletedTaskIdsList addInt32:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllCompletedTaskIds:(NSArray *)array {
  if (result.mutableCompletedTaskIdsList == nil) {
    result.mutableCompletedTaskIdsList = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [result.mutableCompletedTaskIdsList appendArray:[PBArray arrayWithArray:array valueType:PBArrayValueTypeInt32]];
  return self;
}
- (StartupResponseProto_Builder *)setCompletedTaskIdsValues:(const int32_t *)values count:(NSUInteger)count {
  result.mutableCompletedTaskIdsList = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (StartupResponseProto_Builder *)clearCompletedTaskIds {
  result.mutableCompletedTaskIdsList = nil;
  return self;
}
- (NSMutableArray *)completedTasksList {
  return result.mutableCompletedTasksList;
}
- (UserTaskCompletedProto*)completedTasksAtIndex:(NSUInteger)index {
  return [result completedTasksAtIndex:index];
}
- (StartupResponseProto_Builder *)addCompletedTasks:(UserTaskCompletedProto*)value {
  if (result.mutableCompletedTasksList == nil) {
    result.mutableCompletedTasksList = [[NSMutableArray alloc]init];
  }
  [result.mutableCompletedTasksList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllCompletedTasks:(NSArray *)array {
  if (result.mutableCompletedTasksList == nil) {
    result.mutableCompletedTasksList = [NSMutableArray array];
  }
  [result.mutableCompletedTasksList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearCompletedTasks {
  result.mutableCompletedTasksList = nil;
  return self;
}
- (BOOL) hasAppStoreUrl {
  return result.hasAppStoreUrl;
}
- (NSString*) appStoreUrl {
  return result.appStoreUrl;
}
- (StartupResponseProto_Builder*) setAppStoreUrl:(NSString*) value {
  result.hasAppStoreUrl = YES;
  result.appStoreUrl = value;
  return self;
}
- (StartupResponseProto_Builder*) clearAppStoreUrl {
  result.hasAppStoreUrl = NO;
  result.appStoreUrl = @"";
  return self;
}
- (BOOL) hasReviewPageUrl {
  return result.hasReviewPageUrl;
}
- (NSString*) reviewPageUrl {
  return result.reviewPageUrl;
}
- (StartupResponseProto_Builder*) setReviewPageUrl:(NSString*) value {
  result.hasReviewPageUrl = YES;
  result.reviewPageUrl = value;
  return self;
}
- (StartupResponseProto_Builder*) clearReviewPageUrl {
  result.hasReviewPageUrl = NO;
  result.reviewPageUrl = @"";
  return self;
}
- (BOOL) hasReviewPageConfirmationMessage {
  return result.hasReviewPageConfirmationMessage;
}
- (NSString*) reviewPageConfirmationMessage {
  return result.reviewPageConfirmationMessage;
}
- (StartupResponseProto_Builder*) setReviewPageConfirmationMessage:(NSString*) value {
  result.hasReviewPageConfirmationMessage = YES;
  result.reviewPageConfirmationMessage = value;
  return self;
}
- (StartupResponseProto_Builder*) clearReviewPageConfirmationMessage {
  result.hasReviewPageConfirmationMessage = NO;
  result.reviewPageConfirmationMessage = @"";
  return self;
}
- (BOOL) hasPlayerHasBoughtInAppPurchase {
  return result.hasPlayerHasBoughtInAppPurchase;
}
- (BOOL) playerHasBoughtInAppPurchase {
  return result.playerHasBoughtInAppPurchase;
}
- (StartupResponseProto_Builder*) setPlayerHasBoughtInAppPurchase:(BOOL) value {
  result.hasPlayerHasBoughtInAppPurchase = YES;
  result.playerHasBoughtInAppPurchase = value;
  return self;
}
- (StartupResponseProto_Builder*) clearPlayerHasBoughtInAppPurchase {
  result.hasPlayerHasBoughtInAppPurchase = NO;
  result.playerHasBoughtInAppPurchase = NO;
  return self;
}
- (NSMutableArray *)attackNotificationsList {
  return result.mutableAttackNotificationsList;
}
- (StartupResponseProto_AttackedNotificationProto*)attackNotificationsAtIndex:(NSUInteger)index {
  return [result attackNotificationsAtIndex:index];
}
- (StartupResponseProto_Builder *)addAttackNotifications:(StartupResponseProto_AttackedNotificationProto*)value {
  if (result.mutableAttackNotificationsList == nil) {
    result.mutableAttackNotificationsList = [[NSMutableArray alloc]init];
  }
  [result.mutableAttackNotificationsList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllAttackNotifications:(NSArray *)array {
  if (result.mutableAttackNotificationsList == nil) {
    result.mutableAttackNotificationsList = [NSMutableArray array];
  }
  [result.mutableAttackNotificationsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearAttackNotifications {
  result.mutableAttackNotificationsList = nil;
  return self;
}
- (NSMutableArray *)referralNotificationsList {
  return result.mutableReferralNotificationsList;
}
- (StartupResponseProto_ReferralNotificationProto*)referralNotificationsAtIndex:(NSUInteger)index {
  return [result referralNotificationsAtIndex:index];
}
- (StartupResponseProto_Builder *)addReferralNotifications:(StartupResponseProto_ReferralNotificationProto*)value {
  if (result.mutableReferralNotificationsList == nil) {
    result.mutableReferralNotificationsList = [[NSMutableArray alloc]init];
  }
  [result.mutableReferralNotificationsList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllReferralNotifications:(NSArray *)array {
  if (result.mutableReferralNotificationsList == nil) {
    result.mutableReferralNotificationsList = [NSMutableArray array];
  }
  [result.mutableReferralNotificationsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearReferralNotifications {
  result.mutableReferralNotificationsList = nil;
  return self;
}
- (NSMutableArray *)noticesToPlayersList {
  return result.mutableNoticesToPlayersList;
}
- (NSString*)noticesToPlayersAtIndex:(NSUInteger)index {
  return [result noticesToPlayersAtIndex:index];
}
- (StartupResponseProto_Builder *)addNoticesToPlayers:(NSString*)value {
  if (result.mutableNoticesToPlayersList == nil) {
    result.mutableNoticesToPlayersList = [[NSMutableArray alloc]init];
  }
  [result.mutableNoticesToPlayersList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllNoticesToPlayers:(NSArray *)array {
  if (result.mutableNoticesToPlayersList == nil) {
    result.mutableNoticesToPlayersList = [NSMutableArray array];
  }
  [result.mutableNoticesToPlayersList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearNoticesToPlayers {
  result.mutableNoticesToPlayersList = nil;
  return self;
}
- (NSMutableArray *)globalChatsList {
  return result.mutableGlobalChatsList;
}
- (GroupChatMessageProto*)globalChatsAtIndex:(NSUInteger)index {
  return [result globalChatsAtIndex:index];
}
- (StartupResponseProto_Builder *)addGlobalChats:(GroupChatMessageProto*)value {
  if (result.mutableGlobalChatsList == nil) {
    result.mutableGlobalChatsList = [[NSMutableArray alloc]init];
  }
  [result.mutableGlobalChatsList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllGlobalChats:(NSArray *)array {
  if (result.mutableGlobalChatsList == nil) {
    result.mutableGlobalChatsList = [NSMutableArray array];
  }
  [result.mutableGlobalChatsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearGlobalChats {
  result.mutableGlobalChatsList = nil;
  return self;
}
- (NSMutableArray *)clanChatsList {
  return result.mutableClanChatsList;
}
- (GroupChatMessageProto*)clanChatsAtIndex:(NSUInteger)index {
  return [result clanChatsAtIndex:index];
}
- (StartupResponseProto_Builder *)addClanChats:(GroupChatMessageProto*)value {
  if (result.mutableClanChatsList == nil) {
    result.mutableClanChatsList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanChatsList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllClanChats:(NSArray *)array {
  if (result.mutableClanChatsList == nil) {
    result.mutableClanChatsList = [NSMutableArray array];
  }
  [result.mutableClanChatsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearClanChats {
  result.mutableClanChatsList = nil;
  return self;
}
- (NSMutableArray *)pcppList {
  return result.mutablePcppList;
}
- (PrivateChatPostProto*)pcppAtIndex:(NSUInteger)index {
  return [result pcppAtIndex:index];
}
- (StartupResponseProto_Builder *)addPcpp:(PrivateChatPostProto*)value {
  if (result.mutablePcppList == nil) {
    result.mutablePcppList = [[NSMutableArray alloc]init];
  }
  [result.mutablePcppList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllPcpp:(NSArray *)array {
  if (result.mutablePcppList == nil) {
    result.mutablePcppList = [NSMutableArray array];
  }
  [result.mutablePcppList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearPcpp {
  result.mutablePcppList = nil;
  return self;
}
- (NSMutableArray *)usersMonstersList {
  return result.mutableUsersMonstersList;
}
- (FullUserMonsterProto*)usersMonstersAtIndex:(NSUInteger)index {
  return [result usersMonstersAtIndex:index];
}
- (StartupResponseProto_Builder *)addUsersMonsters:(FullUserMonsterProto*)value {
  if (result.mutableUsersMonstersList == nil) {
    result.mutableUsersMonstersList = [[NSMutableArray alloc]init];
  }
  [result.mutableUsersMonstersList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllUsersMonsters:(NSArray *)array {
  if (result.mutableUsersMonstersList == nil) {
    result.mutableUsersMonstersList = [NSMutableArray array];
  }
  [result.mutableUsersMonstersList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearUsersMonsters {
  result.mutableUsersMonstersList = nil;
  return self;
}
- (NSMutableArray *)monstersHealingList {
  return result.mutableMonstersHealingList;
}
- (UserMonsterHealingProto*)monstersHealingAtIndex:(NSUInteger)index {
  return [result monstersHealingAtIndex:index];
}
- (StartupResponseProto_Builder *)addMonstersHealing:(UserMonsterHealingProto*)value {
  if (result.mutableMonstersHealingList == nil) {
    result.mutableMonstersHealingList = [[NSMutableArray alloc]init];
  }
  [result.mutableMonstersHealingList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllMonstersHealing:(NSArray *)array {
  if (result.mutableMonstersHealingList == nil) {
    result.mutableMonstersHealingList = [NSMutableArray array];
  }
  [result.mutableMonstersHealingList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearMonstersHealing {
  result.mutableMonstersHealingList = nil;
  return self;
}
- (BOOL) hasEnhancements {
  return result.hasEnhancements;
}
- (UserEnhancementProto*) enhancements {
  return result.enhancements;
}
- (StartupResponseProto_Builder*) setEnhancements:(UserEnhancementProto*) value {
  result.hasEnhancements = YES;
  result.enhancements = value;
  return self;
}
- (StartupResponseProto_Builder*) setEnhancements_Builder:(UserEnhancementProto_Builder*) builderForValue {
  return [self setEnhancements:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeEnhancements:(UserEnhancementProto*) value {
  if (result.hasEnhancements &&
      result.enhancements != [UserEnhancementProto defaultInstance]) {
    result.enhancements =
      [[[UserEnhancementProto builderWithPrototype:result.enhancements] mergeFrom:value] buildPartial];
  } else {
    result.enhancements = value;
  }
  result.hasEnhancements = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearEnhancements {
  result.hasEnhancements = NO;
  result.enhancements = [UserEnhancementProto defaultInstance];
  return self;
}
- (BOOL) hasEvolution {
  return result.hasEvolution;
}
- (UserMonsterEvolutionProto*) evolution {
  return result.evolution;
}
- (StartupResponseProto_Builder*) setEvolution:(UserMonsterEvolutionProto*) value {
  result.hasEvolution = YES;
  result.evolution = value;
  return self;
}
- (StartupResponseProto_Builder*) setEvolution_Builder:(UserMonsterEvolutionProto_Builder*) builderForValue {
  return [self setEvolution:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeEvolution:(UserMonsterEvolutionProto*) value {
  if (result.hasEvolution &&
      result.evolution != [UserMonsterEvolutionProto defaultInstance]) {
    result.evolution =
      [[[UserMonsterEvolutionProto builderWithPrototype:result.evolution] mergeFrom:value] buildPartial];
  } else {
    result.evolution = value;
  }
  result.hasEvolution = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearEvolution {
  result.hasEvolution = NO;
  result.evolution = [UserMonsterEvolutionProto defaultInstance];
  return self;
}
- (NSMutableArray *)rareBoosterPurchasesList {
  return result.mutableRareBoosterPurchasesList;
}
- (RareBoosterPurchaseProto*)rareBoosterPurchasesAtIndex:(NSUInteger)index {
  return [result rareBoosterPurchasesAtIndex:index];
}
- (StartupResponseProto_Builder *)addRareBoosterPurchases:(RareBoosterPurchaseProto*)value {
  if (result.mutableRareBoosterPurchasesList == nil) {
    result.mutableRareBoosterPurchasesList = [[NSMutableArray alloc]init];
  }
  [result.mutableRareBoosterPurchasesList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllRareBoosterPurchases:(NSArray *)array {
  if (result.mutableRareBoosterPurchasesList == nil) {
    result.mutableRareBoosterPurchasesList = [NSMutableArray array];
  }
  [result.mutableRareBoosterPurchasesList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearRareBoosterPurchases {
  result.mutableRareBoosterPurchasesList = nil;
  return self;
}
- (BOOL) hasKabamNaid {
  return result.hasKabamNaid;
}
- (NSString*) kabamNaid {
  return result.kabamNaid;
}
- (StartupResponseProto_Builder*) setKabamNaid:(NSString*) value {
  result.hasKabamNaid = YES;
  result.kabamNaid = value;
  return self;
}
- (StartupResponseProto_Builder*) clearKabamNaid {
  result.hasKabamNaid = NO;
  result.kabamNaid = @"";
  return self;
}
- (NSMutableArray *)invitesToMeForSlotsList {
  return result.mutableInvitesToMeForSlotsList;
}
- (UserFacebookInviteForSlotProto*)invitesToMeForSlotsAtIndex:(NSUInteger)index {
  return [result invitesToMeForSlotsAtIndex:index];
}
- (StartupResponseProto_Builder *)addInvitesToMeForSlots:(UserFacebookInviteForSlotProto*)value {
  if (result.mutableInvitesToMeForSlotsList == nil) {
    result.mutableInvitesToMeForSlotsList = [[NSMutableArray alloc]init];
  }
  [result.mutableInvitesToMeForSlotsList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllInvitesToMeForSlots:(NSArray *)array {
  if (result.mutableInvitesToMeForSlotsList == nil) {
    result.mutableInvitesToMeForSlotsList = [NSMutableArray array];
  }
  [result.mutableInvitesToMeForSlotsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearInvitesToMeForSlots {
  result.mutableInvitesToMeForSlotsList = nil;
  return self;
}
- (NSMutableArray *)invitesFromMeForSlotsList {
  return result.mutableInvitesFromMeForSlotsList;
}
- (UserFacebookInviteForSlotProto*)invitesFromMeForSlotsAtIndex:(NSUInteger)index {
  return [result invitesFromMeForSlotsAtIndex:index];
}
- (StartupResponseProto_Builder *)addInvitesFromMeForSlots:(UserFacebookInviteForSlotProto*)value {
  if (result.mutableInvitesFromMeForSlotsList == nil) {
    result.mutableInvitesFromMeForSlotsList = [[NSMutableArray alloc]init];
  }
  [result.mutableInvitesFromMeForSlotsList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllInvitesFromMeForSlots:(NSArray *)array {
  if (result.mutableInvitesFromMeForSlotsList == nil) {
    result.mutableInvitesFromMeForSlotsList = [NSMutableArray array];
  }
  [result.mutableInvitesFromMeForSlotsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearInvitesFromMeForSlots {
  result.mutableInvitesFromMeForSlotsList = nil;
  return self;
}
- (BOOL) hasStaticDataStuffProto {
  return result.hasStaticDataStuffProto;
}
- (StaticDataProto*) staticDataStuffProto {
  return result.staticDataStuffProto;
}
- (StartupResponseProto_Builder*) setStaticDataStuffProto:(StaticDataProto*) value {
  result.hasStaticDataStuffProto = YES;
  result.staticDataStuffProto = value;
  return self;
}
- (StartupResponseProto_Builder*) setStaticDataStuffProto_Builder:(StaticDataProto_Builder*) builderForValue {
  return [self setStaticDataStuffProto:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeStaticDataStuffProto:(StaticDataProto*) value {
  if (result.hasStaticDataStuffProto &&
      result.staticDataStuffProto != [StaticDataProto defaultInstance]) {
    result.staticDataStuffProto =
      [[[StaticDataProto builderWithPrototype:result.staticDataStuffProto] mergeFrom:value] buildPartial];
  } else {
    result.staticDataStuffProto = value;
  }
  result.hasStaticDataStuffProto = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearStaticDataStuffProto {
  result.hasStaticDataStuffProto = NO;
  result.staticDataStuffProto = [StaticDataProto defaultInstance];
  return self;
}
- (PBAppendableArray *)taskIdForCurrentCityBossList {
  return result.mutableTaskIdForCurrentCityBossList;
}
- (int32_t)taskIdForCurrentCityBossAtIndex:(NSUInteger)index {
  return [result taskIdForCurrentCityBossAtIndex:index];
}
- (StartupResponseProto_Builder *)addTaskIdForCurrentCityBoss:(int32_t)value {
  if (result.mutableTaskIdForCurrentCityBossList == nil) {
    result.mutableTaskIdForCurrentCityBossList = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [result.mutableTaskIdForCurrentCityBossList addInt32:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllTaskIdForCurrentCityBoss:(NSArray *)array {
  if (result.mutableTaskIdForCurrentCityBossList == nil) {
    result.mutableTaskIdForCurrentCityBossList = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [result.mutableTaskIdForCurrentCityBossList appendArray:[PBArray arrayWithArray:array valueType:PBArrayValueTypeInt32]];
  return self;
}
- (StartupResponseProto_Builder *)setTaskIdForCurrentCityBossValues:(const int32_t *)values count:(NSUInteger)count {
  result.mutableTaskIdForCurrentCityBossList = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (StartupResponseProto_Builder *)clearTaskIdForCurrentCityBoss {
  result.mutableTaskIdForCurrentCityBossList = nil;
  return self;
}
- (NSMutableArray *)userEventsList {
  return result.mutableUserEventsList;
}
- (UserPersistentEventProto*)userEventsAtIndex:(NSUInteger)index {
  return [result userEventsAtIndex:index];
}
- (StartupResponseProto_Builder *)addUserEvents:(UserPersistentEventProto*)value {
  if (result.mutableUserEventsList == nil) {
    result.mutableUserEventsList = [[NSMutableArray alloc]init];
  }
  [result.mutableUserEventsList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllUserEvents:(NSArray *)array {
  if (result.mutableUserEventsList == nil) {
    result.mutableUserEventsList = [NSMutableArray array];
  }
  [result.mutableUserEventsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearUserEvents {
  result.mutableUserEventsList = nil;
  return self;
}
- (BOOL) hasCurRaidClanInfo {
  return result.hasCurRaidClanInfo;
}
- (PersistentClanEventClanInfoProto*) curRaidClanInfo {
  return result.curRaidClanInfo;
}
- (StartupResponseProto_Builder*) setCurRaidClanInfo:(PersistentClanEventClanInfoProto*) value {
  result.hasCurRaidClanInfo = YES;
  result.curRaidClanInfo = value;
  return self;
}
- (StartupResponseProto_Builder*) setCurRaidClanInfo_Builder:(PersistentClanEventClanInfoProto_Builder*) builderForValue {
  return [self setCurRaidClanInfo:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeCurRaidClanInfo:(PersistentClanEventClanInfoProto*) value {
  if (result.hasCurRaidClanInfo &&
      result.curRaidClanInfo != [PersistentClanEventClanInfoProto defaultInstance]) {
    result.curRaidClanInfo =
      [[[PersistentClanEventClanInfoProto builderWithPrototype:result.curRaidClanInfo] mergeFrom:value] buildPartial];
  } else {
    result.curRaidClanInfo = value;
  }
  result.hasCurRaidClanInfo = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearCurRaidClanInfo {
  result.hasCurRaidClanInfo = NO;
  result.curRaidClanInfo = [PersistentClanEventClanInfoProto defaultInstance];
  return self;
}
- (NSMutableArray *)curRaidClanUserInfoList {
  return result.mutableCurRaidClanUserInfoList;
}
- (PersistentClanEventUserInfoProto*)curRaidClanUserInfoAtIndex:(NSUInteger)index {
  return [result curRaidClanUserInfoAtIndex:index];
}
- (StartupResponseProto_Builder *)addCurRaidClanUserInfo:(PersistentClanEventUserInfoProto*)value {
  if (result.mutableCurRaidClanUserInfoList == nil) {
    result.mutableCurRaidClanUserInfoList = [[NSMutableArray alloc]init];
  }
  [result.mutableCurRaidClanUserInfoList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllCurRaidClanUserInfo:(NSArray *)array {
  if (result.mutableCurRaidClanUserInfoList == nil) {
    result.mutableCurRaidClanUserInfoList = [NSMutableArray array];
  }
  [result.mutableCurRaidClanUserInfoList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearCurRaidClanUserInfo {
  result.mutableCurRaidClanUserInfoList = nil;
  return self;
}
- (NSMutableArray *)raidStageHistoryList {
  return result.mutableRaidStageHistoryList;
}
- (PersistentClanEventRaidStageHistoryProto*)raidStageHistoryAtIndex:(NSUInteger)index {
  return [result raidStageHistoryAtIndex:index];
}
- (StartupResponseProto_Builder *)addRaidStageHistory:(PersistentClanEventRaidStageHistoryProto*)value {
  if (result.mutableRaidStageHistoryList == nil) {
    result.mutableRaidStageHistoryList = [[NSMutableArray alloc]init];
  }
  [result.mutableRaidStageHistoryList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllRaidStageHistory:(NSArray *)array {
  if (result.mutableRaidStageHistoryList == nil) {
    result.mutableRaidStageHistoryList = [NSMutableArray array];
  }
  [result.mutableRaidStageHistoryList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearRaidStageHistory {
  result.mutableRaidStageHistoryList = nil;
  return self;
}
- (NSMutableArray *)recentNbattlesList {
  return result.mutableRecentNbattlesList;
}
- (PvpHistoryProto*)recentNbattlesAtIndex:(NSUInteger)index {
  return [result recentNbattlesAtIndex:index];
}
- (StartupResponseProto_Builder *)addRecentNbattles:(PvpHistoryProto*)value {
  if (result.mutableRecentNbattlesList == nil) {
    result.mutableRecentNbattlesList = [[NSMutableArray alloc]init];
  }
  [result.mutableRecentNbattlesList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllRecentNbattles:(NSArray *)array {
  if (result.mutableRecentNbattlesList == nil) {
    result.mutableRecentNbattlesList = [NSMutableArray array];
  }
  [result.mutableRecentNbattlesList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearRecentNbattles {
  result.mutableRecentNbattlesList = nil;
  return self;
}
- (BOOL) hasCurTask {
  return result.hasCurTask;
}
- (MinimumUserTaskProto*) curTask {
  return result.curTask;
}
- (StartupResponseProto_Builder*) setCurTask:(MinimumUserTaskProto*) value {
  result.hasCurTask = YES;
  result.curTask = value;
  return self;
}
- (StartupResponseProto_Builder*) setCurTask_Builder:(MinimumUserTaskProto_Builder*) builderForValue {
  return [self setCurTask:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeCurTask:(MinimumUserTaskProto*) value {
  if (result.hasCurTask &&
      result.curTask != [MinimumUserTaskProto defaultInstance]) {
    result.curTask =
      [[[MinimumUserTaskProto builderWithPrototype:result.curTask] mergeFrom:value] buildPartial];
  } else {
    result.curTask = value;
  }
  result.hasCurTask = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearCurTask {
  result.hasCurTask = NO;
  result.curTask = [MinimumUserTaskProto defaultInstance];
  return self;
}
- (NSMutableArray *)curTaskStagesList {
  return result.mutableCurTaskStagesList;
}
- (TaskStageProto*)curTaskStagesAtIndex:(NSUInteger)index {
  return [result curTaskStagesAtIndex:index];
}
- (StartupResponseProto_Builder *)addCurTaskStages:(TaskStageProto*)value {
  if (result.mutableCurTaskStagesList == nil) {
    result.mutableCurTaskStagesList = [[NSMutableArray alloc]init];
  }
  [result.mutableCurTaskStagesList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllCurTaskStages:(NSArray *)array {
  if (result.mutableCurTaskStagesList == nil) {
    result.mutableCurTaskStagesList = [NSMutableArray array];
  }
  [result.mutableCurTaskStagesList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearCurTaskStages {
  result.mutableCurTaskStagesList = nil;
  return self;
}
- (NSMutableArray *)userAchievementsList {
  return result.mutableUserAchievementsList;
}
- (UserAchievementProto*)userAchievementsAtIndex:(NSUInteger)index {
  return [result userAchievementsAtIndex:index];
}
- (StartupResponseProto_Builder *)addUserAchievements:(UserAchievementProto*)value {
  if (result.mutableUserAchievementsList == nil) {
    result.mutableUserAchievementsList = [[NSMutableArray alloc]init];
  }
  [result.mutableUserAchievementsList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllUserAchievements:(NSArray *)array {
  if (result.mutableUserAchievementsList == nil) {
    result.mutableUserAchievementsList = [NSMutableArray array];
  }
  [result.mutableUserAchievementsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearUserAchievements {
  result.mutableUserAchievementsList = nil;
  return self;
}
- (NSMutableArray *)userMiniJobProtosList {
  return result.mutableUserMiniJobProtosList;
}
- (UserMiniJobProto*)userMiniJobProtosAtIndex:(NSUInteger)index {
  return [result userMiniJobProtosAtIndex:index];
}
- (StartupResponseProto_Builder *)addUserMiniJobProtos:(UserMiniJobProto*)value {
  if (result.mutableUserMiniJobProtosList == nil) {
    result.mutableUserMiniJobProtosList = [[NSMutableArray alloc]init];
  }
  [result.mutableUserMiniJobProtosList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllUserMiniJobProtos:(NSArray *)array {
  if (result.mutableUserMiniJobProtosList == nil) {
    result.mutableUserMiniJobProtosList = [NSMutableArray array];
  }
  [result.mutableUserMiniJobProtosList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearUserMiniJobProtos {
  result.mutableUserMiniJobProtosList = nil;
  return self;
}
- (NSMutableArray *)userItemsList {
  return result.mutableUserItemsList;
}
- (UserItemProto*)userItemsAtIndex:(NSUInteger)index {
  return [result userItemsAtIndex:index];
}
- (StartupResponseProto_Builder *)addUserItems:(UserItemProto*)value {
  if (result.mutableUserItemsList == nil) {
    result.mutableUserItemsList = [[NSMutableArray alloc]init];
  }
  [result.mutableUserItemsList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllUserItems:(NSArray *)array {
  if (result.mutableUserItemsList == nil) {
    result.mutableUserItemsList = [NSMutableArray array];
  }
  [result.mutableUserItemsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearUserItems {
  result.mutableUserItemsList = nil;
  return self;
}
- (NSMutableArray *)clanHelpingsList {
  return result.mutableClanHelpingsList;
}
- (ClanHelpProto*)clanHelpingsAtIndex:(NSUInteger)index {
  return [result clanHelpingsAtIndex:index];
}
- (StartupResponseProto_Builder *)addClanHelpings:(ClanHelpProto*)value {
  if (result.mutableClanHelpingsList == nil) {
    result.mutableClanHelpingsList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanHelpingsList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllClanHelpings:(NSArray *)array {
  if (result.mutableClanHelpingsList == nil) {
    result.mutableClanHelpingsList = [NSMutableArray array];
  }
  [result.mutableClanHelpingsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearClanHelpings {
  result.mutableClanHelpingsList = nil;
  return self;
}
- (NSMutableArray *)clanInvitesList {
  return result.mutableClanInvitesList;
}
- (ClanInviteProto*)clanInvitesAtIndex:(NSUInteger)index {
  return [result clanInvitesAtIndex:index];
}
- (StartupResponseProto_Builder *)addClanInvites:(ClanInviteProto*)value {
  if (result.mutableClanInvitesList == nil) {
    result.mutableClanInvitesList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanInvitesList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllClanInvites:(NSArray *)array {
  if (result.mutableClanInvitesList == nil) {
    result.mutableClanInvitesList = [NSMutableArray array];
  }
  [result.mutableClanInvitesList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearClanInvites {
  result.mutableClanInvitesList = nil;
  return self;
}
- (BOOL) hasClanData {
  return result.hasClanData;
}
- (ClanDataProto*) clanData {
  return result.clanData;
}
- (StartupResponseProto_Builder*) setClanData:(ClanDataProto*) value {
  result.hasClanData = YES;
  result.clanData = value;
  return self;
}
- (StartupResponseProto_Builder*) setClanData_Builder:(ClanDataProto_Builder*) builderForValue {
  return [self setClanData:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeClanData:(ClanDataProto*) value {
  if (result.hasClanData &&
      result.clanData != [ClanDataProto defaultInstance]) {
    result.clanData =
      [[[ClanDataProto builderWithPrototype:result.clanData] mergeFrom:value] buildPartial];
  } else {
    result.clanData = value;
  }
  result.hasClanData = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearClanData {
  result.hasClanData = NO;
  result.clanData = [ClanDataProto defaultInstance];
  return self;
}
- (NSMutableArray *)itemsInUseList {
  return result.mutableItemsInUseList;
}
- (UserItemUsageProto*)itemsInUseAtIndex:(NSUInteger)index {
  return [result itemsInUseAtIndex:index];
}
- (StartupResponseProto_Builder *)addItemsInUse:(UserItemUsageProto*)value {
  if (result.mutableItemsInUseList == nil) {
    result.mutableItemsInUseList = [[NSMutableArray alloc]init];
  }
  [result.mutableItemsInUseList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllItemsInUse:(NSArray *)array {
  if (result.mutableItemsInUseList == nil) {
    result.mutableItemsInUseList = [NSMutableArray array];
  }
  [result.mutableItemsInUseList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearItemsInUse {
  result.mutableItemsInUseList = nil;
  return self;
}
- (NSMutableArray *)giftsList {
  return result.mutableGiftsList;
}
- (UserItemSecretGiftProto*)giftsAtIndex:(NSUInteger)index {
  return [result giftsAtIndex:index];
}
- (StartupResponseProto_Builder *)addGifts:(UserItemSecretGiftProto*)value {
  if (result.mutableGiftsList == nil) {
    result.mutableGiftsList = [[NSMutableArray alloc]init];
  }
  [result.mutableGiftsList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllGifts:(NSArray *)array {
  if (result.mutableGiftsList == nil) {
    result.mutableGiftsList = [NSMutableArray array];
  }
  [result.mutableGiftsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearGifts {
  result.mutableGiftsList = nil;
  return self;
}
- (NSMutableArray *)userPvpBoardObstaclesList {
  return result.mutableUserPvpBoardObstaclesList;
}
- (UserPvpBoardObstacleProto*)userPvpBoardObstaclesAtIndex:(NSUInteger)index {
  return [result userPvpBoardObstaclesAtIndex:index];
}
- (StartupResponseProto_Builder *)addUserPvpBoardObstacles:(UserPvpBoardObstacleProto*)value {
  if (result.mutableUserPvpBoardObstaclesList == nil) {
    result.mutableUserPvpBoardObstaclesList = [[NSMutableArray alloc]init];
  }
  [result.mutableUserPvpBoardObstaclesList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllUserPvpBoardObstacles:(NSArray *)array {
  if (result.mutableUserPvpBoardObstaclesList == nil) {
    result.mutableUserPvpBoardObstaclesList = [NSMutableArray array];
  }
  [result.mutableUserPvpBoardObstaclesList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearUserPvpBoardObstacles {
  result.mutableUserPvpBoardObstaclesList = nil;
  return self;
}
- (NSMutableArray *)battleItemQueueList {
  return result.mutableBattleItemQueueList;
}
- (BattleItemQueueForUserProto*)battleItemQueueAtIndex:(NSUInteger)index {
  return [result battleItemQueueAtIndex:index];
}
- (StartupResponseProto_Builder *)addBattleItemQueue:(BattleItemQueueForUserProto*)value {
  if (result.mutableBattleItemQueueList == nil) {
    result.mutableBattleItemQueueList = [[NSMutableArray alloc]init];
  }
  [result.mutableBattleItemQueueList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllBattleItemQueue:(NSArray *)array {
  if (result.mutableBattleItemQueueList == nil) {
    result.mutableBattleItemQueueList = [NSMutableArray array];
  }
  [result.mutableBattleItemQueueList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearBattleItemQueue {
  result.mutableBattleItemQueueList = nil;
  return self;
}
- (NSMutableArray *)battleItemList {
  return result.mutableBattleItemList;
}
- (UserBattleItemProto*)battleItemAtIndex:(NSUInteger)index {
  return [result battleItemAtIndex:index];
}
- (StartupResponseProto_Builder *)addBattleItem:(UserBattleItemProto*)value {
  if (result.mutableBattleItemList == nil) {
    result.mutableBattleItemList = [[NSMutableArray alloc]init];
  }
  [result.mutableBattleItemList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllBattleItem:(NSArray *)array {
  if (result.mutableBattleItemList == nil) {
    result.mutableBattleItemList = [NSMutableArray array];
  }
  [result.mutableBattleItemList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearBattleItem {
  result.mutableBattleItemList = nil;
  return self;
}
- (NSMutableArray *)userResearchsList {
  return result.mutableUserResearchsList;
}
- (UserResearchProto*)userResearchsAtIndex:(NSUInteger)index {
  return [result userResearchsAtIndex:index];
}
- (StartupResponseProto_Builder *)addUserResearchs:(UserResearchProto*)value {
  if (result.mutableUserResearchsList == nil) {
    result.mutableUserResearchsList = [[NSMutableArray alloc]init];
  }
  [result.mutableUserResearchsList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllUserResearchs:(NSArray *)array {
  if (result.mutableUserResearchsList == nil) {
    result.mutableUserResearchsList = [NSMutableArray array];
  }
  [result.mutableUserResearchsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearUserResearchs {
  result.mutableUserResearchsList = nil;
  return self;
}
- (NSMutableArray *)salesPackagesList {
  return result.mutableSalesPackagesList;
}
- (SalesPackageProto*)salesPackagesAtIndex:(NSUInteger)index {
  return [result salesPackagesAtIndex:index];
}
- (StartupResponseProto_Builder *)addSalesPackages:(SalesPackageProto*)value {
  if (result.mutableSalesPackagesList == nil) {
    result.mutableSalesPackagesList = [[NSMutableArray alloc]init];
  }
  [result.mutableSalesPackagesList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllSalesPackages:(NSArray *)array {
  if (result.mutableSalesPackagesList == nil) {
    result.mutableSalesPackagesList = [NSMutableArray array];
  }
  [result.mutableSalesPackagesList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearSalesPackages {
  result.mutableSalesPackagesList = nil;
  return self;
}
- (BOOL) hasUserMiniEvent {
  return result.hasUserMiniEvent;
}
- (UserMiniEventProto*) userMiniEvent {
  return result.userMiniEvent;
}
- (StartupResponseProto_Builder*) setUserMiniEvent:(UserMiniEventProto*) value {
  result.hasUserMiniEvent = YES;
  result.userMiniEvent = value;
  return self;
}
- (StartupResponseProto_Builder*) setUserMiniEvent_Builder:(UserMiniEventProto_Builder*) builderForValue {
  return [self setUserMiniEvent:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeUserMiniEvent:(UserMiniEventProto*) value {
  if (result.hasUserMiniEvent &&
      result.userMiniEvent != [UserMiniEventProto defaultInstance]) {
    result.userMiniEvent =
      [[[UserMiniEventProto builderWithPrototype:result.userMiniEvent] mergeFrom:value] buildPartial];
  } else {
    result.userMiniEvent = value;
  }
  result.hasUserMiniEvent = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearUserMiniEvent {
  result.hasUserMiniEvent = NO;
  result.userMiniEvent = [UserMiniEventProto defaultInstance];
  return self;
}
- (BOOL) hasUserDefaultLanguages {
  return result.hasUserDefaultLanguages;
}
- (DefaultLanguagesProto*) userDefaultLanguages {
  return result.userDefaultLanguages;
}
- (StartupResponseProto_Builder*) setUserDefaultLanguages:(DefaultLanguagesProto*) value {
  result.hasUserDefaultLanguages = YES;
  result.userDefaultLanguages = value;
  return self;
}
- (StartupResponseProto_Builder*) setUserDefaultLanguages_Builder:(DefaultLanguagesProto_Builder*) builderForValue {
  return [self setUserDefaultLanguages:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeUserDefaultLanguages:(DefaultLanguagesProto*) value {
  if (result.hasUserDefaultLanguages &&
      result.userDefaultLanguages != [DefaultLanguagesProto defaultInstance]) {
    result.userDefaultLanguages =
      [[[DefaultLanguagesProto builderWithPrototype:result.userDefaultLanguages] mergeFrom:value] buildPartial];
  } else {
    result.userDefaultLanguages = value;
  }
  result.hasUserDefaultLanguages = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearUserDefaultLanguages {
  result.hasUserDefaultLanguages = NO;
  result.userDefaultLanguages = [DefaultLanguagesProto defaultInstance];
  return self;
}
- (NSMutableArray *)userClanGiftsList {
  return result.mutableUserClanGiftsList;
}
- (UserClanGiftProto*)userClanGiftsAtIndex:(NSUInteger)index {
  return [result userClanGiftsAtIndex:index];
}
- (StartupResponseProto_Builder *)addUserClanGifts:(UserClanGiftProto*)value {
  if (result.mutableUserClanGiftsList == nil) {
    result.mutableUserClanGiftsList = [[NSMutableArray alloc]init];
  }
  [result.mutableUserClanGiftsList addObject:value];
  return self;
}
- (StartupResponseProto_Builder *)addAllUserClanGifts:(NSArray *)array {
  if (result.mutableUserClanGiftsList == nil) {
    result.mutableUserClanGiftsList = [NSMutableArray array];
  }
  [result.mutableUserClanGiftsList addObjectsFromArray:array];
  return self;
}
- (StartupResponseProto_Builder *)clearUserClanGifts {
  result.mutableUserClanGiftsList = nil;
  return self;
}
@end

@interface ForceLogoutResponseProto ()
@property int64_t previousLoginTime;
@property (strong) NSString* udid;
@end

@implementation ForceLogoutResponseProto

- (BOOL) hasPreviousLoginTime {
  return !!hasPreviousLoginTime_;
}
- (void) setHasPreviousLoginTime:(BOOL) value_ {
  hasPreviousLoginTime_ = !!value_;
}
@synthesize previousLoginTime;
- (BOOL) hasUdid {
  return !!hasUdid_;
}
- (void) setHasUdid:(BOOL) value_ {
  hasUdid_ = !!value_;
}
@synthesize udid;
- (id) init {
  if ((self = [super init])) {
    self.previousLoginTime = 0L;
    self.udid = @"";
  }
  return self;
}
static ForceLogoutResponseProto* defaultForceLogoutResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [ForceLogoutResponseProto class]) {
    defaultForceLogoutResponseProtoInstance = [[ForceLogoutResponseProto alloc] init];
  }
}
+ (ForceLogoutResponseProto*) defaultInstance {
  return defaultForceLogoutResponseProtoInstance;
}
- (ForceLogoutResponseProto*) defaultInstance {
  return defaultForceLogoutResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPreviousLoginTime) {
    [output writeInt64:1 value:self.previousLoginTime];
  }
  if (self.hasUdid) {
    [output writeString:2 value:self.udid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPreviousLoginTime) {
    size_ += computeInt64Size(1, self.previousLoginTime);
  }
  if (self.hasUdid) {
    size_ += computeStringSize(2, self.udid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ForceLogoutResponseProto*) parseFromData:(NSData*) data {
  return (ForceLogoutResponseProto*)[[[ForceLogoutResponseProto builder] mergeFromData:data] build];
}
+ (ForceLogoutResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ForceLogoutResponseProto*)[[[ForceLogoutResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ForceLogoutResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (ForceLogoutResponseProto*)[[[ForceLogoutResponseProto builder] mergeFromInputStream:input] build];
}
+ (ForceLogoutResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ForceLogoutResponseProto*)[[[ForceLogoutResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ForceLogoutResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ForceLogoutResponseProto*)[[[ForceLogoutResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (ForceLogoutResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ForceLogoutResponseProto*)[[[ForceLogoutResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ForceLogoutResponseProto_Builder*) builder {
  return [[ForceLogoutResponseProto_Builder alloc] init];
}
+ (ForceLogoutResponseProto_Builder*) builderWithPrototype:(ForceLogoutResponseProto*) prototype {
  return [[ForceLogoutResponseProto builder] mergeFrom:prototype];
}
- (ForceLogoutResponseProto_Builder*) builder {
  return [ForceLogoutResponseProto builder];
}
- (ForceLogoutResponseProto_Builder*) toBuilder {
  return [ForceLogoutResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPreviousLoginTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"previousLoginTime", [NSNumber numberWithLongLong:self.previousLoginTime]];
  }
  if (self.hasUdid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"udid", self.udid];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ForceLogoutResponseProto class]]) {
    return NO;
  }
  ForceLogoutResponseProto *otherMessage = other;
  return
      self.hasPreviousLoginTime == otherMessage.hasPreviousLoginTime &&
      (!self.hasPreviousLoginTime || self.previousLoginTime == otherMessage.previousLoginTime) &&
      self.hasUdid == otherMessage.hasUdid &&
      (!self.hasUdid || [self.udid isEqual:otherMessage.udid]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPreviousLoginTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.previousLoginTime] hash];
  }
  if (self.hasUdid) {
    hashCode = hashCode * 31 + [self.udid hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ForceLogoutResponseProto_Builder()
@property (strong) ForceLogoutResponseProto* result;
@end

@implementation ForceLogoutResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ForceLogoutResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ForceLogoutResponseProto_Builder*) clear {
  self.result = [[ForceLogoutResponseProto alloc] init];
  return self;
}
- (ForceLogoutResponseProto_Builder*) clone {
  return [ForceLogoutResponseProto builderWithPrototype:result];
}
- (ForceLogoutResponseProto*) defaultInstance {
  return [ForceLogoutResponseProto defaultInstance];
}
- (ForceLogoutResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ForceLogoutResponseProto*) buildPartial {
  ForceLogoutResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ForceLogoutResponseProto_Builder*) mergeFrom:(ForceLogoutResponseProto*) other {
  if (other == [ForceLogoutResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasPreviousLoginTime) {
    [self setPreviousLoginTime:other.previousLoginTime];
  }
  if (other.hasUdid) {
    [self setUdid:other.udid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ForceLogoutResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ForceLogoutResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPreviousLoginTime:[input readInt64]];
        break;
      }
      case 18: {
        [self setUdid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPreviousLoginTime {
  return result.hasPreviousLoginTime;
}
- (int64_t) previousLoginTime {
  return result.previousLoginTime;
}
- (ForceLogoutResponseProto_Builder*) setPreviousLoginTime:(int64_t) value {
  result.hasPreviousLoginTime = YES;
  result.previousLoginTime = value;
  return self;
}
- (ForceLogoutResponseProto_Builder*) clearPreviousLoginTime {
  result.hasPreviousLoginTime = NO;
  result.previousLoginTime = 0L;
  return self;
}
- (BOOL) hasUdid {
  return result.hasUdid;
}
- (NSString*) udid {
  return result.udid;
}
- (ForceLogoutResponseProto_Builder*) setUdid:(NSString*) value {
  result.hasUdid = YES;
  result.udid = value;
  return self;
}
- (ForceLogoutResponseProto_Builder*) clearUdid {
  result.hasUdid = NO;
  result.udid = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
