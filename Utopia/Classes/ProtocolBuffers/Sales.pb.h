// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "SharedEnumConfig.pb.h"
#import "User.pb.h"
// @@protoc_insertion_point(imports)

@class FullUserProto;
@class FullUserProto_Builder;
@class MinimumClanProto;
@class MinimumClanProto_Builder;
@class MinimumUserProto;
@class MinimumUserProtoWithFacebookId;
@class MinimumUserProtoWithFacebookId_Builder;
@class MinimumUserProtoWithLevel;
@class MinimumUserProtoWithLevel_Builder;
@class MinimumUserProtoWithMaxResources;
@class MinimumUserProtoWithMaxResources_Builder;
@class MinimumUserProto_Builder;
@class SalesDisplayItemProto;
@class SalesDisplayItemProto_Builder;
@class SalesItemProto;
@class SalesItemProto_Builder;
@class SalesPackageProto;
@class SalesPackageProto_Builder;
@class StaticUserLevelInfoProto;
@class StaticUserLevelInfoProto_Builder;
@class UserFacebookInviteForSlotProto;
@class UserFacebookInviteForSlotProto_Builder;
@class UserPvpLeagueProto;
@class UserPvpLeagueProto_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif


@interface SalesRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface SalesPackageProto : PBGeneratedMessage {
@private
  BOOL hasPrice_:1;
  BOOL hasSalesPackageId_:1;
  BOOL hasSalesPackageName_:1;
  BOOL hasUuid_:1;
  int64_t price;
  int32_t salesPackageId;
  NSString* salesPackageName;
  NSString* uuid;
  NSMutableArray * mutableSipList;
  NSMutableArray * mutableSdipList;
}
- (BOOL) hasSalesPackageId;
- (BOOL) hasSalesPackageName;
- (BOOL) hasPrice;
- (BOOL) hasUuid;
@property (readonly) int32_t salesPackageId;
@property (readonly, strong) NSString* salesPackageName;
@property (readonly) int64_t price;
@property (readonly, strong) NSString* uuid;
@property (readonly, strong) NSArray * sipList;
@property (readonly, strong) NSArray * sdipList;
- (SalesItemProto*)sipAtIndex:(NSUInteger)index;
- (SalesDisplayItemProto*)sdipAtIndex:(NSUInteger)index;

+ (SalesPackageProto*) defaultInstance;
- (SalesPackageProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SalesPackageProto_Builder*) builder;
+ (SalesPackageProto_Builder*) builder;
+ (SalesPackageProto_Builder*) builderWithPrototype:(SalesPackageProto*) prototype;
- (SalesPackageProto_Builder*) toBuilder;

+ (SalesPackageProto*) parseFromData:(NSData*) data;
+ (SalesPackageProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SalesPackageProto*) parseFromInputStream:(NSInputStream*) input;
+ (SalesPackageProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SalesPackageProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SalesPackageProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SalesPackageProto_Builder : PBGeneratedMessageBuilder {
@private
  SalesPackageProto* result;
}

- (SalesPackageProto*) defaultInstance;

- (SalesPackageProto_Builder*) clear;
- (SalesPackageProto_Builder*) clone;

- (SalesPackageProto*) build;
- (SalesPackageProto*) buildPartial;

- (SalesPackageProto_Builder*) mergeFrom:(SalesPackageProto*) other;
- (SalesPackageProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SalesPackageProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSalesPackageId;
- (int32_t) salesPackageId;
- (SalesPackageProto_Builder*) setSalesPackageId:(int32_t) value;
- (SalesPackageProto_Builder*) clearSalesPackageId;

- (BOOL) hasSalesPackageName;
- (NSString*) salesPackageName;
- (SalesPackageProto_Builder*) setSalesPackageName:(NSString*) value;
- (SalesPackageProto_Builder*) clearSalesPackageName;

- (BOOL) hasPrice;
- (int64_t) price;
- (SalesPackageProto_Builder*) setPrice:(int64_t) value;
- (SalesPackageProto_Builder*) clearPrice;

- (BOOL) hasUuid;
- (NSString*) uuid;
- (SalesPackageProto_Builder*) setUuid:(NSString*) value;
- (SalesPackageProto_Builder*) clearUuid;

- (NSMutableArray *)sipList;
- (SalesItemProto*)sipAtIndex:(NSUInteger)index;
- (SalesPackageProto_Builder *)addSip:(SalesItemProto*)value;
- (SalesPackageProto_Builder *)addAllSip:(NSArray *)array;
- (SalesPackageProto_Builder *)clearSip;

- (NSMutableArray *)sdipList;
- (SalesDisplayItemProto*)sdipAtIndex:(NSUInteger)index;
- (SalesPackageProto_Builder *)addSdip:(SalesDisplayItemProto*)value;
- (SalesPackageProto_Builder *)addAllSdip:(NSArray *)array;
- (SalesPackageProto_Builder *)clearSdip;
@end

@interface SalesItemProto : PBGeneratedMessage {
@private
  BOOL hasSalesItemId_:1;
  BOOL hasSalesPackageId_:1;
  BOOL hasMonsterId_:1;
  BOOL hasMonsterQuantity_:1;
  BOOL hasItemId_:1;
  BOOL hasItemQuantity_:1;
  BOOL hasGemReward_:1;
  int32_t salesItemId;
  int32_t salesPackageId;
  int32_t monsterId;
  int32_t monsterQuantity;
  int32_t itemId;
  int32_t itemQuantity;
  int32_t gemReward;
}
- (BOOL) hasSalesItemId;
- (BOOL) hasSalesPackageId;
- (BOOL) hasMonsterId;
- (BOOL) hasMonsterQuantity;
- (BOOL) hasItemId;
- (BOOL) hasItemQuantity;
- (BOOL) hasGemReward;
@property (readonly) int32_t salesItemId;
@property (readonly) int32_t salesPackageId;
@property (readonly) int32_t monsterId;
@property (readonly) int32_t monsterQuantity;
@property (readonly) int32_t itemId;
@property (readonly) int32_t itemQuantity;
@property (readonly) int32_t gemReward;

+ (SalesItemProto*) defaultInstance;
- (SalesItemProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SalesItemProto_Builder*) builder;
+ (SalesItemProto_Builder*) builder;
+ (SalesItemProto_Builder*) builderWithPrototype:(SalesItemProto*) prototype;
- (SalesItemProto_Builder*) toBuilder;

+ (SalesItemProto*) parseFromData:(NSData*) data;
+ (SalesItemProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SalesItemProto*) parseFromInputStream:(NSInputStream*) input;
+ (SalesItemProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SalesItemProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SalesItemProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SalesItemProto_Builder : PBGeneratedMessageBuilder {
@private
  SalesItemProto* result;
}

- (SalesItemProto*) defaultInstance;

- (SalesItemProto_Builder*) clear;
- (SalesItemProto_Builder*) clone;

- (SalesItemProto*) build;
- (SalesItemProto*) buildPartial;

- (SalesItemProto_Builder*) mergeFrom:(SalesItemProto*) other;
- (SalesItemProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SalesItemProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSalesItemId;
- (int32_t) salesItemId;
- (SalesItemProto_Builder*) setSalesItemId:(int32_t) value;
- (SalesItemProto_Builder*) clearSalesItemId;

- (BOOL) hasSalesPackageId;
- (int32_t) salesPackageId;
- (SalesItemProto_Builder*) setSalesPackageId:(int32_t) value;
- (SalesItemProto_Builder*) clearSalesPackageId;

- (BOOL) hasMonsterId;
- (int32_t) monsterId;
- (SalesItemProto_Builder*) setMonsterId:(int32_t) value;
- (SalesItemProto_Builder*) clearMonsterId;

- (BOOL) hasMonsterQuantity;
- (int32_t) monsterQuantity;
- (SalesItemProto_Builder*) setMonsterQuantity:(int32_t) value;
- (SalesItemProto_Builder*) clearMonsterQuantity;

- (BOOL) hasItemId;
- (int32_t) itemId;
- (SalesItemProto_Builder*) setItemId:(int32_t) value;
- (SalesItemProto_Builder*) clearItemId;

- (BOOL) hasItemQuantity;
- (int32_t) itemQuantity;
- (SalesItemProto_Builder*) setItemQuantity:(int32_t) value;
- (SalesItemProto_Builder*) clearItemQuantity;

- (BOOL) hasGemReward;
- (int32_t) gemReward;
- (SalesItemProto_Builder*) setGemReward:(int32_t) value;
- (SalesItemProto_Builder*) clearGemReward;
@end

@interface SalesDisplayItemProto : PBGeneratedMessage {
@private
  BOOL hasSalesItemId_:1;
  BOOL hasSalesPackageId_:1;
  BOOL hasMonsterId_:1;
  BOOL hasMonsterQuantity_:1;
  BOOL hasItemId_:1;
  BOOL hasItemQuantity_:1;
  BOOL hasGemReward_:1;
  int32_t salesItemId;
  int32_t salesPackageId;
  int32_t monsterId;
  int32_t monsterQuantity;
  int32_t itemId;
  int32_t itemQuantity;
  int32_t gemReward;
}
- (BOOL) hasSalesItemId;
- (BOOL) hasSalesPackageId;
- (BOOL) hasMonsterId;
- (BOOL) hasMonsterQuantity;
- (BOOL) hasItemId;
- (BOOL) hasItemQuantity;
- (BOOL) hasGemReward;
@property (readonly) int32_t salesItemId;
@property (readonly) int32_t salesPackageId;
@property (readonly) int32_t monsterId;
@property (readonly) int32_t monsterQuantity;
@property (readonly) int32_t itemId;
@property (readonly) int32_t itemQuantity;
@property (readonly) int32_t gemReward;

+ (SalesDisplayItemProto*) defaultInstance;
- (SalesDisplayItemProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SalesDisplayItemProto_Builder*) builder;
+ (SalesDisplayItemProto_Builder*) builder;
+ (SalesDisplayItemProto_Builder*) builderWithPrototype:(SalesDisplayItemProto*) prototype;
- (SalesDisplayItemProto_Builder*) toBuilder;

+ (SalesDisplayItemProto*) parseFromData:(NSData*) data;
+ (SalesDisplayItemProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SalesDisplayItemProto*) parseFromInputStream:(NSInputStream*) input;
+ (SalesDisplayItemProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SalesDisplayItemProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SalesDisplayItemProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SalesDisplayItemProto_Builder : PBGeneratedMessageBuilder {
@private
  SalesDisplayItemProto* result;
}

- (SalesDisplayItemProto*) defaultInstance;

- (SalesDisplayItemProto_Builder*) clear;
- (SalesDisplayItemProto_Builder*) clone;

- (SalesDisplayItemProto*) build;
- (SalesDisplayItemProto*) buildPartial;

- (SalesDisplayItemProto_Builder*) mergeFrom:(SalesDisplayItemProto*) other;
- (SalesDisplayItemProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SalesDisplayItemProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSalesItemId;
- (int32_t) salesItemId;
- (SalesDisplayItemProto_Builder*) setSalesItemId:(int32_t) value;
- (SalesDisplayItemProto_Builder*) clearSalesItemId;

- (BOOL) hasSalesPackageId;
- (int32_t) salesPackageId;
- (SalesDisplayItemProto_Builder*) setSalesPackageId:(int32_t) value;
- (SalesDisplayItemProto_Builder*) clearSalesPackageId;

- (BOOL) hasMonsterId;
- (int32_t) monsterId;
- (SalesDisplayItemProto_Builder*) setMonsterId:(int32_t) value;
- (SalesDisplayItemProto_Builder*) clearMonsterId;

- (BOOL) hasMonsterQuantity;
- (int32_t) monsterQuantity;
- (SalesDisplayItemProto_Builder*) setMonsterQuantity:(int32_t) value;
- (SalesDisplayItemProto_Builder*) clearMonsterQuantity;

- (BOOL) hasItemId;
- (int32_t) itemId;
- (SalesDisplayItemProto_Builder*) setItemId:(int32_t) value;
- (SalesDisplayItemProto_Builder*) clearItemId;

- (BOOL) hasItemQuantity;
- (int32_t) itemQuantity;
- (SalesDisplayItemProto_Builder*) setItemQuantity:(int32_t) value;
- (SalesDisplayItemProto_Builder*) clearItemQuantity;

- (BOOL) hasGemReward;
- (int32_t) gemReward;
- (SalesDisplayItemProto_Builder*) setGemReward:(int32_t) value;
- (SalesDisplayItemProto_Builder*) clearGemReward;
@end


// @@protoc_insertion_point(global_scope)
