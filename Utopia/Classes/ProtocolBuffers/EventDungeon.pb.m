// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventDungeon.pb.h"
// @@protoc_insertion_point(imports)

@implementation EventDungeonRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventDungeonRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ItemRoot registerAllExtensions:registry];
    [MonsterStuffRoot registerAllExtensions:registry];
    [SharedEnumConfigRoot registerAllExtensions:registry];
    [TaskRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface BeginDungeonRequestProto ()
@property (strong) MinimumUserProto* sender;
@property int64_t clientTime;
@property int32_t taskId;
@property BOOL userBeatAllCityTasks;
@property BOOL isEvent;
@property int32_t persistentEventId;
@property int32_t gemsSpent;
@property (strong) PBAppendableArray * mutableQuestIdsList;
@property Element elem;
@property BOOL forceEnemyElem;
@property BOOL alreadyCompletedMiniTutorialTask;
@end

@implementation BeginDungeonRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) value_ {
  hasTaskId_ = !!value_;
}
@synthesize taskId;
- (BOOL) hasUserBeatAllCityTasks {
  return !!hasUserBeatAllCityTasks_;
}
- (void) setHasUserBeatAllCityTasks:(BOOL) value_ {
  hasUserBeatAllCityTasks_ = !!value_;
}
- (BOOL) userBeatAllCityTasks {
  return !!userBeatAllCityTasks_;
}
- (void) setUserBeatAllCityTasks:(BOOL) value_ {
  userBeatAllCityTasks_ = !!value_;
}
- (BOOL) hasIsEvent {
  return !!hasIsEvent_;
}
- (void) setHasIsEvent:(BOOL) value_ {
  hasIsEvent_ = !!value_;
}
- (BOOL) isEvent {
  return !!isEvent_;
}
- (void) setIsEvent:(BOOL) value_ {
  isEvent_ = !!value_;
}
- (BOOL) hasPersistentEventId {
  return !!hasPersistentEventId_;
}
- (void) setHasPersistentEventId:(BOOL) value_ {
  hasPersistentEventId_ = !!value_;
}
@synthesize persistentEventId;
- (BOOL) hasGemsSpent {
  return !!hasGemsSpent_;
}
- (void) setHasGemsSpent:(BOOL) value_ {
  hasGemsSpent_ = !!value_;
}
@synthesize gemsSpent;
@synthesize mutableQuestIdsList;
@dynamic questIdsList;
- (BOOL) hasElem {
  return !!hasElem_;
}
- (void) setHasElem:(BOOL) value_ {
  hasElem_ = !!value_;
}
@synthesize elem;
- (BOOL) hasForceEnemyElem {
  return !!hasForceEnemyElem_;
}
- (void) setHasForceEnemyElem:(BOOL) value_ {
  hasForceEnemyElem_ = !!value_;
}
- (BOOL) forceEnemyElem {
  return !!forceEnemyElem_;
}
- (void) setForceEnemyElem:(BOOL) value_ {
  forceEnemyElem_ = !!value_;
}
- (BOOL) hasAlreadyCompletedMiniTutorialTask {
  return !!hasAlreadyCompletedMiniTutorialTask_;
}
- (void) setHasAlreadyCompletedMiniTutorialTask:(BOOL) value_ {
  hasAlreadyCompletedMiniTutorialTask_ = !!value_;
}
- (BOOL) alreadyCompletedMiniTutorialTask {
  return !!alreadyCompletedMiniTutorialTask_;
}
- (void) setAlreadyCompletedMiniTutorialTask:(BOOL) value_ {
  alreadyCompletedMiniTutorialTask_ = !!value_;
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clientTime = 0L;
    self.taskId = 0;
    self.userBeatAllCityTasks = NO;
    self.isEvent = NO;
    self.persistentEventId = 0;
    self.gemsSpent = 0;
    self.elem = ElementNoElement;
    self.forceEnemyElem = NO;
    self.alreadyCompletedMiniTutorialTask = NO;
  }
  return self;
}
static BeginDungeonRequestProto* defaultBeginDungeonRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [BeginDungeonRequestProto class]) {
    defaultBeginDungeonRequestProtoInstance = [[BeginDungeonRequestProto alloc] init];
  }
}
+ (BeginDungeonRequestProto*) defaultInstance {
  return defaultBeginDungeonRequestProtoInstance;
}
- (BeginDungeonRequestProto*) defaultInstance {
  return defaultBeginDungeonRequestProtoInstance;
}
- (PBArray *)questIdsList {
  return mutableQuestIdsList;
}
- (int32_t)questIdsAtIndex:(NSUInteger)index {
  return [mutableQuestIdsList int32AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClientTime) {
    [output writeInt64:2 value:self.clientTime];
  }
  if (self.hasTaskId) {
    [output writeInt32:3 value:self.taskId];
  }
  if (self.hasUserBeatAllCityTasks) {
    [output writeBool:4 value:self.userBeatAllCityTasks];
  }
  if (self.hasIsEvent) {
    [output writeBool:5 value:self.isEvent];
  }
  if (self.hasPersistentEventId) {
    [output writeInt32:6 value:self.persistentEventId];
  }
  if (self.hasGemsSpent) {
    [output writeInt32:7 value:self.gemsSpent];
  }
  const NSUInteger questIdsListCount = self.questIdsList.count;
  if (questIdsListCount > 0) {
    const int32_t *values = (const int32_t *)self.questIdsList.data;
    for (NSUInteger i = 0; i < questIdsListCount; ++i) {
      [output writeInt32:8 value:values[i]];
    }
  }
  if (self.hasElem) {
    [output writeEnum:9 value:self.elem];
  }
  if (self.hasForceEnemyElem) {
    [output writeBool:10 value:self.forceEnemyElem];
  }
  if (self.hasAlreadyCompletedMiniTutorialTask) {
    [output writeBool:11 value:self.alreadyCompletedMiniTutorialTask];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(2, self.clientTime);
  }
  if (self.hasTaskId) {
    size_ += computeInt32Size(3, self.taskId);
  }
  if (self.hasUserBeatAllCityTasks) {
    size_ += computeBoolSize(4, self.userBeatAllCityTasks);
  }
  if (self.hasIsEvent) {
    size_ += computeBoolSize(5, self.isEvent);
  }
  if (self.hasPersistentEventId) {
    size_ += computeInt32Size(6, self.persistentEventId);
  }
  if (self.hasGemsSpent) {
    size_ += computeInt32Size(7, self.gemsSpent);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.questIdsList.count;
    const int32_t *values = (const int32_t *)self.questIdsList.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasElem) {
    size_ += computeEnumSize(9, self.elem);
  }
  if (self.hasForceEnemyElem) {
    size_ += computeBoolSize(10, self.forceEnemyElem);
  }
  if (self.hasAlreadyCompletedMiniTutorialTask) {
    size_ += computeBoolSize(11, self.alreadyCompletedMiniTutorialTask);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BeginDungeonRequestProto*) parseFromData:(NSData*) data {
  return (BeginDungeonRequestProto*)[[[BeginDungeonRequestProto builder] mergeFromData:data] build];
}
+ (BeginDungeonRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginDungeonRequestProto*)[[[BeginDungeonRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BeginDungeonRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (BeginDungeonRequestProto*)[[[BeginDungeonRequestProto builder] mergeFromInputStream:input] build];
}
+ (BeginDungeonRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginDungeonRequestProto*)[[[BeginDungeonRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginDungeonRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BeginDungeonRequestProto*)[[[BeginDungeonRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (BeginDungeonRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginDungeonRequestProto*)[[[BeginDungeonRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginDungeonRequestProto_Builder*) builder {
  return [[BeginDungeonRequestProto_Builder alloc] init];
}
+ (BeginDungeonRequestProto_Builder*) builderWithPrototype:(BeginDungeonRequestProto*) prototype {
  return [[BeginDungeonRequestProto builder] mergeFrom:prototype];
}
- (BeginDungeonRequestProto_Builder*) builder {
  return [BeginDungeonRequestProto builder];
}
- (BeginDungeonRequestProto_Builder*) toBuilder {
  return [BeginDungeonRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  if (self.hasTaskId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskId", [NSNumber numberWithInteger:self.taskId]];
  }
  if (self.hasUserBeatAllCityTasks) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userBeatAllCityTasks", [NSNumber numberWithBool:self.userBeatAllCityTasks]];
  }
  if (self.hasIsEvent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isEvent", [NSNumber numberWithBool:self.isEvent]];
  }
  if (self.hasPersistentEventId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"persistentEventId", [NSNumber numberWithInteger:self.persistentEventId]];
  }
  if (self.hasGemsSpent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gemsSpent", [NSNumber numberWithInteger:self.gemsSpent]];
  }
  [self.questIdsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"questIds", obj];
  }];
  if (self.hasElem) {
    [output appendFormat:@"%@%@: %@\n", indent, @"elem", [NSNumber numberWithInteger:self.elem]];
  }
  if (self.hasForceEnemyElem) {
    [output appendFormat:@"%@%@: %@\n", indent, @"forceEnemyElem", [NSNumber numberWithBool:self.forceEnemyElem]];
  }
  if (self.hasAlreadyCompletedMiniTutorialTask) {
    [output appendFormat:@"%@%@: %@\n", indent, @"alreadyCompletedMiniTutorialTask", [NSNumber numberWithBool:self.alreadyCompletedMiniTutorialTask]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BeginDungeonRequestProto class]]) {
    return NO;
  }
  BeginDungeonRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      self.hasTaskId == otherMessage.hasTaskId &&
      (!self.hasTaskId || self.taskId == otherMessage.taskId) &&
      self.hasUserBeatAllCityTasks == otherMessage.hasUserBeatAllCityTasks &&
      (!self.hasUserBeatAllCityTasks || self.userBeatAllCityTasks == otherMessage.userBeatAllCityTasks) &&
      self.hasIsEvent == otherMessage.hasIsEvent &&
      (!self.hasIsEvent || self.isEvent == otherMessage.isEvent) &&
      self.hasPersistentEventId == otherMessage.hasPersistentEventId &&
      (!self.hasPersistentEventId || self.persistentEventId == otherMessage.persistentEventId) &&
      self.hasGemsSpent == otherMessage.hasGemsSpent &&
      (!self.hasGemsSpent || self.gemsSpent == otherMessage.gemsSpent) &&
      [self.questIdsList isEqualToArray:otherMessage.questIdsList] &&
      self.hasElem == otherMessage.hasElem &&
      (!self.hasElem || self.elem == otherMessage.elem) &&
      self.hasForceEnemyElem == otherMessage.hasForceEnemyElem &&
      (!self.hasForceEnemyElem || self.forceEnemyElem == otherMessage.forceEnemyElem) &&
      self.hasAlreadyCompletedMiniTutorialTask == otherMessage.hasAlreadyCompletedMiniTutorialTask &&
      (!self.hasAlreadyCompletedMiniTutorialTask || self.alreadyCompletedMiniTutorialTask == otherMessage.alreadyCompletedMiniTutorialTask) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  if (self.hasTaskId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskId] hash];
  }
  if (self.hasUserBeatAllCityTasks) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.userBeatAllCityTasks] hash];
  }
  if (self.hasIsEvent) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isEvent] hash];
  }
  if (self.hasPersistentEventId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.persistentEventId] hash];
  }
  if (self.hasGemsSpent) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.gemsSpent] hash];
  }
  [self.questIdsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  if (self.hasElem) {
    hashCode = hashCode * 31 + self.elem;
  }
  if (self.hasForceEnemyElem) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.forceEnemyElem] hash];
  }
  if (self.hasAlreadyCompletedMiniTutorialTask) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.alreadyCompletedMiniTutorialTask] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BeginDungeonRequestProto_Builder()
@property (strong) BeginDungeonRequestProto* result;
@end

@implementation BeginDungeonRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BeginDungeonRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BeginDungeonRequestProto_Builder*) clear {
  self.result = [[BeginDungeonRequestProto alloc] init];
  return self;
}
- (BeginDungeonRequestProto_Builder*) clone {
  return [BeginDungeonRequestProto builderWithPrototype:result];
}
- (BeginDungeonRequestProto*) defaultInstance {
  return [BeginDungeonRequestProto defaultInstance];
}
- (BeginDungeonRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BeginDungeonRequestProto*) buildPartial {
  BeginDungeonRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BeginDungeonRequestProto_Builder*) mergeFrom:(BeginDungeonRequestProto*) other {
  if (other == [BeginDungeonRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasUserBeatAllCityTasks) {
    [self setUserBeatAllCityTasks:other.userBeatAllCityTasks];
  }
  if (other.hasIsEvent) {
    [self setIsEvent:other.isEvent];
  }
  if (other.hasPersistentEventId) {
    [self setPersistentEventId:other.persistentEventId];
  }
  if (other.hasGemsSpent) {
    [self setGemsSpent:other.gemsSpent];
  }
  if (other.mutableQuestIdsList.count > 0) {
    if (result.mutableQuestIdsList == nil) {
      result.mutableQuestIdsList = [other.mutableQuestIdsList copy];
    } else {
      [result.mutableQuestIdsList appendArray:other.mutableQuestIdsList];
    }
  }
  if (other.hasElem) {
    [self setElem:other.elem];
  }
  if (other.hasForceEnemyElem) {
    [self setForceEnemyElem:other.forceEnemyElem];
  }
  if (other.hasAlreadyCompletedMiniTutorialTask) {
    [self setAlreadyCompletedMiniTutorialTask:other.alreadyCompletedMiniTutorialTask];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BeginDungeonRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BeginDungeonRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 24: {
        [self setTaskId:[input readInt32]];
        break;
      }
      case 32: {
        [self setUserBeatAllCityTasks:[input readBool]];
        break;
      }
      case 40: {
        [self setIsEvent:[input readBool]];
        break;
      }
      case 48: {
        [self setPersistentEventId:[input readInt32]];
        break;
      }
      case 56: {
        [self setGemsSpent:[input readInt32]];
        break;
      }
      case 64: {
        [self addQuestIds:[input readInt32]];
        break;
      }
      case 72: {
        Element value = (Element)[input readEnum];
        if (ElementIsValidValue(value)) {
          [self setElem:value];
        } else {
          [unknownFields mergeVarintField:9 value:value];
        }
        break;
      }
      case 80: {
        [self setForceEnemyElem:[input readBool]];
        break;
      }
      case 88: {
        [self setAlreadyCompletedMiniTutorialTask:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BeginDungeonRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BeginDungeonRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (BeginDungeonRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (BOOL) hasTaskId {
  return result.hasTaskId;
}
- (int32_t) taskId {
  return result.taskId;
}
- (BeginDungeonRequestProto_Builder*) setTaskId:(int32_t) value {
  result.hasTaskId = YES;
  result.taskId = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearTaskId {
  result.hasTaskId = NO;
  result.taskId = 0;
  return self;
}
- (BOOL) hasUserBeatAllCityTasks {
  return result.hasUserBeatAllCityTasks;
}
- (BOOL) userBeatAllCityTasks {
  return result.userBeatAllCityTasks;
}
- (BeginDungeonRequestProto_Builder*) setUserBeatAllCityTasks:(BOOL) value {
  result.hasUserBeatAllCityTasks = YES;
  result.userBeatAllCityTasks = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearUserBeatAllCityTasks {
  result.hasUserBeatAllCityTasks = NO;
  result.userBeatAllCityTasks = NO;
  return self;
}
- (BOOL) hasIsEvent {
  return result.hasIsEvent;
}
- (BOOL) isEvent {
  return result.isEvent;
}
- (BeginDungeonRequestProto_Builder*) setIsEvent:(BOOL) value {
  result.hasIsEvent = YES;
  result.isEvent = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearIsEvent {
  result.hasIsEvent = NO;
  result.isEvent = NO;
  return self;
}
- (BOOL) hasPersistentEventId {
  return result.hasPersistentEventId;
}
- (int32_t) persistentEventId {
  return result.persistentEventId;
}
- (BeginDungeonRequestProto_Builder*) setPersistentEventId:(int32_t) value {
  result.hasPersistentEventId = YES;
  result.persistentEventId = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearPersistentEventId {
  result.hasPersistentEventId = NO;
  result.persistentEventId = 0;
  return self;
}
- (BOOL) hasGemsSpent {
  return result.hasGemsSpent;
}
- (int32_t) gemsSpent {
  return result.gemsSpent;
}
- (BeginDungeonRequestProto_Builder*) setGemsSpent:(int32_t) value {
  result.hasGemsSpent = YES;
  result.gemsSpent = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearGemsSpent {
  result.hasGemsSpent = NO;
  result.gemsSpent = 0;
  return self;
}
- (PBAppendableArray *)questIdsList {
  return result.mutableQuestIdsList;
}
- (int32_t)questIdsAtIndex:(NSUInteger)index {
  return [result questIdsAtIndex:index];
}
- (BeginDungeonRequestProto_Builder *)addQuestIds:(int32_t)value {
  if (result.mutableQuestIdsList == nil) {
    result.mutableQuestIdsList = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [result.mutableQuestIdsList addInt32:value];
  return self;
}
- (BeginDungeonRequestProto_Builder *)addAllQuestIds:(NSArray *)array {
  if (result.mutableQuestIdsList == nil) {
    result.mutableQuestIdsList = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [result.mutableQuestIdsList appendArray:[PBArray arrayWithArray:array valueType:PBArrayValueTypeInt32]];
  return self;
}
- (BeginDungeonRequestProto_Builder *)setQuestIdsValues:(const int32_t *)values count:(NSUInteger)count {
  result.mutableQuestIdsList = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (BeginDungeonRequestProto_Builder *)clearQuestIds {
  result.mutableQuestIdsList = nil;
  return self;
}
- (BOOL) hasElem {
  return result.hasElem;
}
- (Element) elem {
  return result.elem;
}
- (BeginDungeonRequestProto_Builder*) setElem:(Element) value {
  result.hasElem = YES;
  result.elem = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearElemList {
  result.hasElem = NO;
  result.elem = ElementNoElement;
  return self;
}
- (BOOL) hasForceEnemyElem {
  return result.hasForceEnemyElem;
}
- (BOOL) forceEnemyElem {
  return result.forceEnemyElem;
}
- (BeginDungeonRequestProto_Builder*) setForceEnemyElem:(BOOL) value {
  result.hasForceEnemyElem = YES;
  result.forceEnemyElem = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearForceEnemyElem {
  result.hasForceEnemyElem = NO;
  result.forceEnemyElem = NO;
  return self;
}
- (BOOL) hasAlreadyCompletedMiniTutorialTask {
  return result.hasAlreadyCompletedMiniTutorialTask;
}
- (BOOL) alreadyCompletedMiniTutorialTask {
  return result.alreadyCompletedMiniTutorialTask;
}
- (BeginDungeonRequestProto_Builder*) setAlreadyCompletedMiniTutorialTask:(BOOL) value {
  result.hasAlreadyCompletedMiniTutorialTask = YES;
  result.alreadyCompletedMiniTutorialTask = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearAlreadyCompletedMiniTutorialTask {
  result.hasAlreadyCompletedMiniTutorialTask = NO;
  result.alreadyCompletedMiniTutorialTask = NO;
  return self;
}
@end

@interface BeginDungeonResponseProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutableTspList;
@property (strong) NSString* userTaskUuid;
@property int32_t taskId;
@property ResponseStatus status;
@end

@implementation BeginDungeonResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutableTspList;
@dynamic tspList;
- (BOOL) hasUserTaskUuid {
  return !!hasUserTaskUuid_;
}
- (void) setHasUserTaskUuid:(BOOL) value_ {
  hasUserTaskUuid_ = !!value_;
}
@synthesize userTaskUuid;
- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) value_ {
  hasTaskId_ = !!value_;
}
@synthesize taskId;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.userTaskUuid = @"";
    self.taskId = 0;
    self.status = ResponseStatusSuccess;
  }
  return self;
}
static BeginDungeonResponseProto* defaultBeginDungeonResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [BeginDungeonResponseProto class]) {
    defaultBeginDungeonResponseProtoInstance = [[BeginDungeonResponseProto alloc] init];
  }
}
+ (BeginDungeonResponseProto*) defaultInstance {
  return defaultBeginDungeonResponseProtoInstance;
}
- (BeginDungeonResponseProto*) defaultInstance {
  return defaultBeginDungeonResponseProtoInstance;
}
- (NSArray *)tspList {
  return mutableTspList;
}
- (TaskStageProto*)tspAtIndex:(NSUInteger)index {
  return [mutableTspList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.tspList enumerateObjectsUsingBlock:^(TaskStageProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasUserTaskUuid) {
    [output writeString:3 value:self.userTaskUuid];
  }
  if (self.hasTaskId) {
    [output writeInt32:4 value:self.taskId];
  }
  if (self.hasStatus) {
    [output writeEnum:5 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  [self.tspList enumerateObjectsUsingBlock:^(TaskStageProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasUserTaskUuid) {
    size_ += computeStringSize(3, self.userTaskUuid);
  }
  if (self.hasTaskId) {
    size_ += computeInt32Size(4, self.taskId);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(5, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BeginDungeonResponseProto*) parseFromData:(NSData*) data {
  return (BeginDungeonResponseProto*)[[[BeginDungeonResponseProto builder] mergeFromData:data] build];
}
+ (BeginDungeonResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginDungeonResponseProto*)[[[BeginDungeonResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BeginDungeonResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (BeginDungeonResponseProto*)[[[BeginDungeonResponseProto builder] mergeFromInputStream:input] build];
}
+ (BeginDungeonResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginDungeonResponseProto*)[[[BeginDungeonResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginDungeonResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BeginDungeonResponseProto*)[[[BeginDungeonResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (BeginDungeonResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginDungeonResponseProto*)[[[BeginDungeonResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginDungeonResponseProto_Builder*) builder {
  return [[BeginDungeonResponseProto_Builder alloc] init];
}
+ (BeginDungeonResponseProto_Builder*) builderWithPrototype:(BeginDungeonResponseProto*) prototype {
  return [[BeginDungeonResponseProto builder] mergeFrom:prototype];
}
- (BeginDungeonResponseProto_Builder*) builder {
  return [BeginDungeonResponseProto builder];
}
- (BeginDungeonResponseProto_Builder*) toBuilder {
  return [BeginDungeonResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.tspList enumerateObjectsUsingBlock:^(TaskStageProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"tsp"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasUserTaskUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userTaskUuid", self.userTaskUuid];
  }
  if (self.hasTaskId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskId", [NSNumber numberWithInteger:self.taskId]];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BeginDungeonResponseProto class]]) {
    return NO;
  }
  BeginDungeonResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.tspList isEqualToArray:otherMessage.tspList] &&
      self.hasUserTaskUuid == otherMessage.hasUserTaskUuid &&
      (!self.hasUserTaskUuid || [self.userTaskUuid isEqual:otherMessage.userTaskUuid]) &&
      self.hasTaskId == otherMessage.hasTaskId &&
      (!self.hasTaskId || self.taskId == otherMessage.taskId) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.tspList enumerateObjectsUsingBlock:^(TaskStageProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasUserTaskUuid) {
    hashCode = hashCode * 31 + [self.userTaskUuid hash];
  }
  if (self.hasTaskId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskId] hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BeginDungeonResponseProto_Builder()
@property (strong) BeginDungeonResponseProto* result;
@end

@implementation BeginDungeonResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BeginDungeonResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BeginDungeonResponseProto_Builder*) clear {
  self.result = [[BeginDungeonResponseProto alloc] init];
  return self;
}
- (BeginDungeonResponseProto_Builder*) clone {
  return [BeginDungeonResponseProto builderWithPrototype:result];
}
- (BeginDungeonResponseProto*) defaultInstance {
  return [BeginDungeonResponseProto defaultInstance];
}
- (BeginDungeonResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BeginDungeonResponseProto*) buildPartial {
  BeginDungeonResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BeginDungeonResponseProto_Builder*) mergeFrom:(BeginDungeonResponseProto*) other {
  if (other == [BeginDungeonResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableTspList.count > 0) {
    if (result.mutableTspList == nil) {
      result.mutableTspList = [[NSMutableArray alloc] initWithArray:other.mutableTspList];
    } else {
      [result.mutableTspList addObjectsFromArray:other.mutableTspList];
    }
  }
  if (other.hasUserTaskUuid) {
    [self setUserTaskUuid:other.userTaskUuid];
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BeginDungeonResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BeginDungeonResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        TaskStageProto_Builder* subBuilder = [TaskStageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTsp:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setUserTaskUuid:[input readString]];
        break;
      }
      case 32: {
        [self setTaskId:[input readInt32]];
        break;
      }
      case 40: {
        ResponseStatus value = (ResponseStatus)[input readEnum];
        if (ResponseStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BeginDungeonResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BeginDungeonResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BeginDungeonResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BeginDungeonResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)tspList {
  return result.mutableTspList;
}
- (TaskStageProto*)tspAtIndex:(NSUInteger)index {
  return [result tspAtIndex:index];
}
- (BeginDungeonResponseProto_Builder *)addTsp:(TaskStageProto*)value {
  if (result.mutableTspList == nil) {
    result.mutableTspList = [[NSMutableArray alloc]init];
  }
  [result.mutableTspList addObject:value];
  return self;
}
- (BeginDungeonResponseProto_Builder *)addAllTsp:(NSArray *)array {
  if (result.mutableTspList == nil) {
    result.mutableTspList = [NSMutableArray array];
  }
  [result.mutableTspList addObjectsFromArray:array];
  return self;
}
- (BeginDungeonResponseProto_Builder *)clearTsp {
  result.mutableTspList = nil;
  return self;
}
- (BOOL) hasUserTaskUuid {
  return result.hasUserTaskUuid;
}
- (NSString*) userTaskUuid {
  return result.userTaskUuid;
}
- (BeginDungeonResponseProto_Builder*) setUserTaskUuid:(NSString*) value {
  result.hasUserTaskUuid = YES;
  result.userTaskUuid = value;
  return self;
}
- (BeginDungeonResponseProto_Builder*) clearUserTaskUuid {
  result.hasUserTaskUuid = NO;
  result.userTaskUuid = @"";
  return self;
}
- (BOOL) hasTaskId {
  return result.hasTaskId;
}
- (int32_t) taskId {
  return result.taskId;
}
- (BeginDungeonResponseProto_Builder*) setTaskId:(int32_t) value {
  result.hasTaskId = YES;
  result.taskId = value;
  return self;
}
- (BeginDungeonResponseProto_Builder*) clearTaskId {
  result.hasTaskId = NO;
  result.taskId = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (ResponseStatus) status {
  return result.status;
}
- (BeginDungeonResponseProto_Builder*) setStatus:(ResponseStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (BeginDungeonResponseProto_Builder*) clearStatusList {
  result.hasStatus = NO;
  result.status = ResponseStatusSuccess;
  return self;
}
@end

@interface EndDungeonRequestProto ()
@property (strong) MinimumUserProtoWithMaxResources* sender;
@property (strong) NSString* userTaskUuid;
@property BOOL userWon;
@property int64_t clientTime;
@property BOOL firstTimeUserWonTask;
@property BOOL userBeatAllCityTasks;
@property (strong) NSMutableArray * mutableDroplessTsfuUuidsList;
@end

@implementation EndDungeonRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasUserTaskUuid {
  return !!hasUserTaskUuid_;
}
- (void) setHasUserTaskUuid:(BOOL) value_ {
  hasUserTaskUuid_ = !!value_;
}
@synthesize userTaskUuid;
- (BOOL) hasUserWon {
  return !!hasUserWon_;
}
- (void) setHasUserWon:(BOOL) value_ {
  hasUserWon_ = !!value_;
}
- (BOOL) userWon {
  return !!userWon_;
}
- (void) setUserWon:(BOOL) value_ {
  userWon_ = !!value_;
}
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (BOOL) hasFirstTimeUserWonTask {
  return !!hasFirstTimeUserWonTask_;
}
- (void) setHasFirstTimeUserWonTask:(BOOL) value_ {
  hasFirstTimeUserWonTask_ = !!value_;
}
- (BOOL) firstTimeUserWonTask {
  return !!firstTimeUserWonTask_;
}
- (void) setFirstTimeUserWonTask:(BOOL) value_ {
  firstTimeUserWonTask_ = !!value_;
}
- (BOOL) hasUserBeatAllCityTasks {
  return !!hasUserBeatAllCityTasks_;
}
- (void) setHasUserBeatAllCityTasks:(BOOL) value_ {
  hasUserBeatAllCityTasks_ = !!value_;
}
- (BOOL) userBeatAllCityTasks {
  return !!userBeatAllCityTasks_;
}
- (void) setUserBeatAllCityTasks:(BOOL) value_ {
  userBeatAllCityTasks_ = !!value_;
}
@synthesize mutableDroplessTsfuUuidsList;
@dynamic droplessTsfuUuidsList;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.userTaskUuid = @"";
    self.userWon = NO;
    self.clientTime = 0L;
    self.firstTimeUserWonTask = NO;
    self.userBeatAllCityTasks = NO;
  }
  return self;
}
static EndDungeonRequestProto* defaultEndDungeonRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [EndDungeonRequestProto class]) {
    defaultEndDungeonRequestProtoInstance = [[EndDungeonRequestProto alloc] init];
  }
}
+ (EndDungeonRequestProto*) defaultInstance {
  return defaultEndDungeonRequestProtoInstance;
}
- (EndDungeonRequestProto*) defaultInstance {
  return defaultEndDungeonRequestProtoInstance;
}
- (NSArray *)droplessTsfuUuidsList {
  return mutableDroplessTsfuUuidsList;
}
- (NSString*)droplessTsfuUuidsAtIndex:(NSUInteger)index {
  return [mutableDroplessTsfuUuidsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasUserTaskUuid) {
    [output writeString:2 value:self.userTaskUuid];
  }
  if (self.hasUserWon) {
    [output writeBool:3 value:self.userWon];
  }
  if (self.hasClientTime) {
    [output writeInt64:4 value:self.clientTime];
  }
  if (self.hasFirstTimeUserWonTask) {
    [output writeBool:5 value:self.firstTimeUserWonTask];
  }
  if (self.hasUserBeatAllCityTasks) {
    [output writeBool:6 value:self.userBeatAllCityTasks];
  }
  [self.droplessTsfuUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:7 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasUserTaskUuid) {
    size_ += computeStringSize(2, self.userTaskUuid);
  }
  if (self.hasUserWon) {
    size_ += computeBoolSize(3, self.userWon);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(4, self.clientTime);
  }
  if (self.hasFirstTimeUserWonTask) {
    size_ += computeBoolSize(5, self.firstTimeUserWonTask);
  }
  if (self.hasUserBeatAllCityTasks) {
    size_ += computeBoolSize(6, self.userBeatAllCityTasks);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.droplessTsfuUuidsList.count;
    [self.droplessTsfuUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (EndDungeonRequestProto*) parseFromData:(NSData*) data {
  return (EndDungeonRequestProto*)[[[EndDungeonRequestProto builder] mergeFromData:data] build];
}
+ (EndDungeonRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndDungeonRequestProto*)[[[EndDungeonRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EndDungeonRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (EndDungeonRequestProto*)[[[EndDungeonRequestProto builder] mergeFromInputStream:input] build];
}
+ (EndDungeonRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndDungeonRequestProto*)[[[EndDungeonRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndDungeonRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EndDungeonRequestProto*)[[[EndDungeonRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (EndDungeonRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndDungeonRequestProto*)[[[EndDungeonRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndDungeonRequestProto_Builder*) builder {
  return [[EndDungeonRequestProto_Builder alloc] init];
}
+ (EndDungeonRequestProto_Builder*) builderWithPrototype:(EndDungeonRequestProto*) prototype {
  return [[EndDungeonRequestProto builder] mergeFrom:prototype];
}
- (EndDungeonRequestProto_Builder*) builder {
  return [EndDungeonRequestProto builder];
}
- (EndDungeonRequestProto_Builder*) toBuilder {
  return [EndDungeonRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasUserTaskUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userTaskUuid", self.userTaskUuid];
  }
  if (self.hasUserWon) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userWon", [NSNumber numberWithBool:self.userWon]];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  if (self.hasFirstTimeUserWonTask) {
    [output appendFormat:@"%@%@: %@\n", indent, @"firstTimeUserWonTask", [NSNumber numberWithBool:self.firstTimeUserWonTask]];
  }
  if (self.hasUserBeatAllCityTasks) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userBeatAllCityTasks", [NSNumber numberWithBool:self.userBeatAllCityTasks]];
  }
  [self.droplessTsfuUuidsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"droplessTsfuUuids", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[EndDungeonRequestProto class]]) {
    return NO;
  }
  EndDungeonRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasUserTaskUuid == otherMessage.hasUserTaskUuid &&
      (!self.hasUserTaskUuid || [self.userTaskUuid isEqual:otherMessage.userTaskUuid]) &&
      self.hasUserWon == otherMessage.hasUserWon &&
      (!self.hasUserWon || self.userWon == otherMessage.userWon) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      self.hasFirstTimeUserWonTask == otherMessage.hasFirstTimeUserWonTask &&
      (!self.hasFirstTimeUserWonTask || self.firstTimeUserWonTask == otherMessage.firstTimeUserWonTask) &&
      self.hasUserBeatAllCityTasks == otherMessage.hasUserBeatAllCityTasks &&
      (!self.hasUserBeatAllCityTasks || self.userBeatAllCityTasks == otherMessage.userBeatAllCityTasks) &&
      [self.droplessTsfuUuidsList isEqualToArray:otherMessage.droplessTsfuUuidsList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasUserTaskUuid) {
    hashCode = hashCode * 31 + [self.userTaskUuid hash];
  }
  if (self.hasUserWon) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.userWon] hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  if (self.hasFirstTimeUserWonTask) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.firstTimeUserWonTask] hash];
  }
  if (self.hasUserBeatAllCityTasks) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.userBeatAllCityTasks] hash];
  }
  [self.droplessTsfuUuidsList enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface EndDungeonRequestProto_Builder()
@property (strong) EndDungeonRequestProto* result;
@end

@implementation EndDungeonRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[EndDungeonRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EndDungeonRequestProto_Builder*) clear {
  self.result = [[EndDungeonRequestProto alloc] init];
  return self;
}
- (EndDungeonRequestProto_Builder*) clone {
  return [EndDungeonRequestProto builderWithPrototype:result];
}
- (EndDungeonRequestProto*) defaultInstance {
  return [EndDungeonRequestProto defaultInstance];
}
- (EndDungeonRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EndDungeonRequestProto*) buildPartial {
  EndDungeonRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (EndDungeonRequestProto_Builder*) mergeFrom:(EndDungeonRequestProto*) other {
  if (other == [EndDungeonRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasUserTaskUuid) {
    [self setUserTaskUuid:other.userTaskUuid];
  }
  if (other.hasUserWon) {
    [self setUserWon:other.userWon];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.hasFirstTimeUserWonTask) {
    [self setFirstTimeUserWonTask:other.firstTimeUserWonTask];
  }
  if (other.hasUserBeatAllCityTasks) {
    [self setUserBeatAllCityTasks:other.userBeatAllCityTasks];
  }
  if (other.mutableDroplessTsfuUuidsList.count > 0) {
    if (result.mutableDroplessTsfuUuidsList == nil) {
      result.mutableDroplessTsfuUuidsList = [[NSMutableArray alloc] initWithArray:other.mutableDroplessTsfuUuidsList];
    } else {
      [result.mutableDroplessTsfuUuidsList addObjectsFromArray:other.mutableDroplessTsfuUuidsList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EndDungeonRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EndDungeonRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setUserTaskUuid:[input readString]];
        break;
      }
      case 24: {
        [self setUserWon:[input readBool]];
        break;
      }
      case 32: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 40: {
        [self setFirstTimeUserWonTask:[input readBool]];
        break;
      }
      case 48: {
        [self setUserBeatAllCityTasks:[input readBool]];
        break;
      }
      case 58: {
        [self addDroplessTsfuUuids:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (EndDungeonRequestProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (EndDungeonRequestProto_Builder*) setSender_Builder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (EndDungeonRequestProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (EndDungeonRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (BOOL) hasUserTaskUuid {
  return result.hasUserTaskUuid;
}
- (NSString*) userTaskUuid {
  return result.userTaskUuid;
}
- (EndDungeonRequestProto_Builder*) setUserTaskUuid:(NSString*) value {
  result.hasUserTaskUuid = YES;
  result.userTaskUuid = value;
  return self;
}
- (EndDungeonRequestProto_Builder*) clearUserTaskUuid {
  result.hasUserTaskUuid = NO;
  result.userTaskUuid = @"";
  return self;
}
- (BOOL) hasUserWon {
  return result.hasUserWon;
}
- (BOOL) userWon {
  return result.userWon;
}
- (EndDungeonRequestProto_Builder*) setUserWon:(BOOL) value {
  result.hasUserWon = YES;
  result.userWon = value;
  return self;
}
- (EndDungeonRequestProto_Builder*) clearUserWon {
  result.hasUserWon = NO;
  result.userWon = NO;
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (EndDungeonRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (EndDungeonRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (BOOL) hasFirstTimeUserWonTask {
  return result.hasFirstTimeUserWonTask;
}
- (BOOL) firstTimeUserWonTask {
  return result.firstTimeUserWonTask;
}
- (EndDungeonRequestProto_Builder*) setFirstTimeUserWonTask:(BOOL) value {
  result.hasFirstTimeUserWonTask = YES;
  result.firstTimeUserWonTask = value;
  return self;
}
- (EndDungeonRequestProto_Builder*) clearFirstTimeUserWonTask {
  result.hasFirstTimeUserWonTask = NO;
  result.firstTimeUserWonTask = NO;
  return self;
}
- (BOOL) hasUserBeatAllCityTasks {
  return result.hasUserBeatAllCityTasks;
}
- (BOOL) userBeatAllCityTasks {
  return result.userBeatAllCityTasks;
}
- (EndDungeonRequestProto_Builder*) setUserBeatAllCityTasks:(BOOL) value {
  result.hasUserBeatAllCityTasks = YES;
  result.userBeatAllCityTasks = value;
  return self;
}
- (EndDungeonRequestProto_Builder*) clearUserBeatAllCityTasks {
  result.hasUserBeatAllCityTasks = NO;
  result.userBeatAllCityTasks = NO;
  return self;
}
- (NSMutableArray *)droplessTsfuUuidsList {
  return result.mutableDroplessTsfuUuidsList;
}
- (NSString*)droplessTsfuUuidsAtIndex:(NSUInteger)index {
  return [result droplessTsfuUuidsAtIndex:index];
}
- (EndDungeonRequestProto_Builder *)addDroplessTsfuUuids:(NSString*)value {
  if (result.mutableDroplessTsfuUuidsList == nil) {
    result.mutableDroplessTsfuUuidsList = [[NSMutableArray alloc]init];
  }
  [result.mutableDroplessTsfuUuidsList addObject:value];
  return self;
}
- (EndDungeonRequestProto_Builder *)addAllDroplessTsfuUuids:(NSArray *)array {
  if (result.mutableDroplessTsfuUuidsList == nil) {
    result.mutableDroplessTsfuUuidsList = [NSMutableArray array];
  }
  [result.mutableDroplessTsfuUuidsList addObjectsFromArray:array];
  return self;
}
- (EndDungeonRequestProto_Builder *)clearDroplessTsfuUuids {
  result.mutableDroplessTsfuUuidsList = nil;
  return self;
}
@end

@interface EndDungeonResponseProto ()
@property (strong) MinimumUserProtoWithMaxResources* sender;
@property ResponseStatus status;
@property (strong) NSMutableArray * mutableUpdatedOrNewList;
@property int32_t taskId;
@property BOOL userWon;
@property (strong) UserItemProto* userItem;
@property (strong) NSString* taskMapSectionName;
@property (strong) UserTaskCompletedProto* utcp;
@end

@implementation EndDungeonResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
@synthesize mutableUpdatedOrNewList;
@dynamic updatedOrNewList;
- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) value_ {
  hasTaskId_ = !!value_;
}
@synthesize taskId;
- (BOOL) hasUserWon {
  return !!hasUserWon_;
}
- (void) setHasUserWon:(BOOL) value_ {
  hasUserWon_ = !!value_;
}
- (BOOL) userWon {
  return !!userWon_;
}
- (void) setUserWon:(BOOL) value_ {
  userWon_ = !!value_;
}
- (BOOL) hasUserItem {
  return !!hasUserItem_;
}
- (void) setHasUserItem:(BOOL) value_ {
  hasUserItem_ = !!value_;
}
@synthesize userItem;
- (BOOL) hasTaskMapSectionName {
  return !!hasTaskMapSectionName_;
}
- (void) setHasTaskMapSectionName:(BOOL) value_ {
  hasTaskMapSectionName_ = !!value_;
}
@synthesize taskMapSectionName;
- (BOOL) hasUtcp {
  return !!hasUtcp_;
}
- (void) setHasUtcp:(BOOL) value_ {
  hasUtcp_ = !!value_;
}
@synthesize utcp;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.status = ResponseStatusSuccess;
    self.taskId = 0;
    self.userWon = NO;
    self.userItem = [UserItemProto defaultInstance];
    self.taskMapSectionName = @"";
    self.utcp = [UserTaskCompletedProto defaultInstance];
  }
  return self;
}
static EndDungeonResponseProto* defaultEndDungeonResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [EndDungeonResponseProto class]) {
    defaultEndDungeonResponseProtoInstance = [[EndDungeonResponseProto alloc] init];
  }
}
+ (EndDungeonResponseProto*) defaultInstance {
  return defaultEndDungeonResponseProtoInstance;
}
- (EndDungeonResponseProto*) defaultInstance {
  return defaultEndDungeonResponseProtoInstance;
}
- (NSArray *)updatedOrNewList {
  return mutableUpdatedOrNewList;
}
- (FullUserMonsterProto*)updatedOrNewAtIndex:(NSUInteger)index {
  return [mutableUpdatedOrNewList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.updatedOrNewList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  if (self.hasTaskId) {
    [output writeInt32:4 value:self.taskId];
  }
  if (self.hasUserWon) {
    [output writeBool:5 value:self.userWon];
  }
  if (self.hasUserItem) {
    [output writeMessage:6 value:self.userItem];
  }
  if (self.hasTaskMapSectionName) {
    [output writeString:7 value:self.taskMapSectionName];
  }
  if (self.hasUtcp) {
    [output writeMessage:8 value:self.utcp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  [self.updatedOrNewList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  if (self.hasTaskId) {
    size_ += computeInt32Size(4, self.taskId);
  }
  if (self.hasUserWon) {
    size_ += computeBoolSize(5, self.userWon);
  }
  if (self.hasUserItem) {
    size_ += computeMessageSize(6, self.userItem);
  }
  if (self.hasTaskMapSectionName) {
    size_ += computeStringSize(7, self.taskMapSectionName);
  }
  if (self.hasUtcp) {
    size_ += computeMessageSize(8, self.utcp);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (EndDungeonResponseProto*) parseFromData:(NSData*) data {
  return (EndDungeonResponseProto*)[[[EndDungeonResponseProto builder] mergeFromData:data] build];
}
+ (EndDungeonResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndDungeonResponseProto*)[[[EndDungeonResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EndDungeonResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (EndDungeonResponseProto*)[[[EndDungeonResponseProto builder] mergeFromInputStream:input] build];
}
+ (EndDungeonResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndDungeonResponseProto*)[[[EndDungeonResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndDungeonResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EndDungeonResponseProto*)[[[EndDungeonResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (EndDungeonResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndDungeonResponseProto*)[[[EndDungeonResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndDungeonResponseProto_Builder*) builder {
  return [[EndDungeonResponseProto_Builder alloc] init];
}
+ (EndDungeonResponseProto_Builder*) builderWithPrototype:(EndDungeonResponseProto*) prototype {
  return [[EndDungeonResponseProto builder] mergeFrom:prototype];
}
- (EndDungeonResponseProto_Builder*) builder {
  return [EndDungeonResponseProto builder];
}
- (EndDungeonResponseProto_Builder*) toBuilder {
  return [EndDungeonResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.updatedOrNewList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"updatedOrNew"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasTaskId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskId", [NSNumber numberWithInteger:self.taskId]];
  }
  if (self.hasUserWon) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userWon", [NSNumber numberWithBool:self.userWon]];
  }
  if (self.hasUserItem) {
    [output appendFormat:@"%@%@ {\n", indent, @"userItem"];
    [self.userItem writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTaskMapSectionName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskMapSectionName", self.taskMapSectionName];
  }
  if (self.hasUtcp) {
    [output appendFormat:@"%@%@ {\n", indent, @"utcp"];
    [self.utcp writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[EndDungeonResponseProto class]]) {
    return NO;
  }
  EndDungeonResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      [self.updatedOrNewList isEqualToArray:otherMessage.updatedOrNewList] &&
      self.hasTaskId == otherMessage.hasTaskId &&
      (!self.hasTaskId || self.taskId == otherMessage.taskId) &&
      self.hasUserWon == otherMessage.hasUserWon &&
      (!self.hasUserWon || self.userWon == otherMessage.userWon) &&
      self.hasUserItem == otherMessage.hasUserItem &&
      (!self.hasUserItem || [self.userItem isEqual:otherMessage.userItem]) &&
      self.hasTaskMapSectionName == otherMessage.hasTaskMapSectionName &&
      (!self.hasTaskMapSectionName || [self.taskMapSectionName isEqual:otherMessage.taskMapSectionName]) &&
      self.hasUtcp == otherMessage.hasUtcp &&
      (!self.hasUtcp || [self.utcp isEqual:otherMessage.utcp]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  [self.updatedOrNewList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasTaskId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.taskId] hash];
  }
  if (self.hasUserWon) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.userWon] hash];
  }
  if (self.hasUserItem) {
    hashCode = hashCode * 31 + [self.userItem hash];
  }
  if (self.hasTaskMapSectionName) {
    hashCode = hashCode * 31 + [self.taskMapSectionName hash];
  }
  if (self.hasUtcp) {
    hashCode = hashCode * 31 + [self.utcp hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface EndDungeonResponseProto_Builder()
@property (strong) EndDungeonResponseProto* result;
@end

@implementation EndDungeonResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[EndDungeonResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EndDungeonResponseProto_Builder*) clear {
  self.result = [[EndDungeonResponseProto alloc] init];
  return self;
}
- (EndDungeonResponseProto_Builder*) clone {
  return [EndDungeonResponseProto builderWithPrototype:result];
}
- (EndDungeonResponseProto*) defaultInstance {
  return [EndDungeonResponseProto defaultInstance];
}
- (EndDungeonResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EndDungeonResponseProto*) buildPartial {
  EndDungeonResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (EndDungeonResponseProto_Builder*) mergeFrom:(EndDungeonResponseProto*) other {
  if (other == [EndDungeonResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.mutableUpdatedOrNewList.count > 0) {
    if (result.mutableUpdatedOrNewList == nil) {
      result.mutableUpdatedOrNewList = [[NSMutableArray alloc] initWithArray:other.mutableUpdatedOrNewList];
    } else {
      [result.mutableUpdatedOrNewList addObjectsFromArray:other.mutableUpdatedOrNewList];
    }
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasUserWon) {
    [self setUserWon:other.userWon];
  }
  if (other.hasUserItem) {
    [self mergeUserItem:other.userItem];
  }
  if (other.hasTaskMapSectionName) {
    [self setTaskMapSectionName:other.taskMapSectionName];
  }
  if (other.hasUtcp) {
    [self mergeUtcp:other.utcp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EndDungeonResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EndDungeonResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        ResponseStatus value = (ResponseStatus)[input readEnum];
        if (ResponseStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUpdatedOrNew:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setTaskId:[input readInt32]];
        break;
      }
      case 40: {
        [self setUserWon:[input readBool]];
        break;
      }
      case 50: {
        UserItemProto_Builder* subBuilder = [UserItemProto builder];
        if (self.hasUserItem) {
          [subBuilder mergeFrom:self.userItem];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserItem:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        [self setTaskMapSectionName:[input readString]];
        break;
      }
      case 66: {
        UserTaskCompletedProto_Builder* subBuilder = [UserTaskCompletedProto builder];
        if (self.hasUtcp) {
          [subBuilder mergeFrom:self.utcp];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUtcp:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (EndDungeonResponseProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (EndDungeonResponseProto_Builder*) setSender_Builder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (EndDungeonResponseProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (EndDungeonResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (ResponseStatus) status {
  return result.status;
}
- (EndDungeonResponseProto_Builder*) setStatus:(ResponseStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (EndDungeonResponseProto_Builder*) clearStatusList {
  result.hasStatus = NO;
  result.status = ResponseStatusSuccess;
  return self;
}
- (NSMutableArray *)updatedOrNewList {
  return result.mutableUpdatedOrNewList;
}
- (FullUserMonsterProto*)updatedOrNewAtIndex:(NSUInteger)index {
  return [result updatedOrNewAtIndex:index];
}
- (EndDungeonResponseProto_Builder *)addUpdatedOrNew:(FullUserMonsterProto*)value {
  if (result.mutableUpdatedOrNewList == nil) {
    result.mutableUpdatedOrNewList = [[NSMutableArray alloc]init];
  }
  [result.mutableUpdatedOrNewList addObject:value];
  return self;
}
- (EndDungeonResponseProto_Builder *)addAllUpdatedOrNew:(NSArray *)array {
  if (result.mutableUpdatedOrNewList == nil) {
    result.mutableUpdatedOrNewList = [NSMutableArray array];
  }
  [result.mutableUpdatedOrNewList addObjectsFromArray:array];
  return self;
}
- (EndDungeonResponseProto_Builder *)clearUpdatedOrNew {
  result.mutableUpdatedOrNewList = nil;
  return self;
}
- (BOOL) hasTaskId {
  return result.hasTaskId;
}
- (int32_t) taskId {
  return result.taskId;
}
- (EndDungeonResponseProto_Builder*) setTaskId:(int32_t) value {
  result.hasTaskId = YES;
  result.taskId = value;
  return self;
}
- (EndDungeonResponseProto_Builder*) clearTaskId {
  result.hasTaskId = NO;
  result.taskId = 0;
  return self;
}
- (BOOL) hasUserWon {
  return result.hasUserWon;
}
- (BOOL) userWon {
  return result.userWon;
}
- (EndDungeonResponseProto_Builder*) setUserWon:(BOOL) value {
  result.hasUserWon = YES;
  result.userWon = value;
  return self;
}
- (EndDungeonResponseProto_Builder*) clearUserWon {
  result.hasUserWon = NO;
  result.userWon = NO;
  return self;
}
- (BOOL) hasUserItem {
  return result.hasUserItem;
}
- (UserItemProto*) userItem {
  return result.userItem;
}
- (EndDungeonResponseProto_Builder*) setUserItem:(UserItemProto*) value {
  result.hasUserItem = YES;
  result.userItem = value;
  return self;
}
- (EndDungeonResponseProto_Builder*) setUserItem_Builder:(UserItemProto_Builder*) builderForValue {
  return [self setUserItem:[builderForValue build]];
}
- (EndDungeonResponseProto_Builder*) mergeUserItem:(UserItemProto*) value {
  if (result.hasUserItem &&
      result.userItem != [UserItemProto defaultInstance]) {
    result.userItem =
      [[[UserItemProto builderWithPrototype:result.userItem] mergeFrom:value] buildPartial];
  } else {
    result.userItem = value;
  }
  result.hasUserItem = YES;
  return self;
}
- (EndDungeonResponseProto_Builder*) clearUserItem {
  result.hasUserItem = NO;
  result.userItem = [UserItemProto defaultInstance];
  return self;
}
- (BOOL) hasTaskMapSectionName {
  return result.hasTaskMapSectionName;
}
- (NSString*) taskMapSectionName {
  return result.taskMapSectionName;
}
- (EndDungeonResponseProto_Builder*) setTaskMapSectionName:(NSString*) value {
  result.hasTaskMapSectionName = YES;
  result.taskMapSectionName = value;
  return self;
}
- (EndDungeonResponseProto_Builder*) clearTaskMapSectionName {
  result.hasTaskMapSectionName = NO;
  result.taskMapSectionName = @"";
  return self;
}
- (BOOL) hasUtcp {
  return result.hasUtcp;
}
- (UserTaskCompletedProto*) utcp {
  return result.utcp;
}
- (EndDungeonResponseProto_Builder*) setUtcp:(UserTaskCompletedProto*) value {
  result.hasUtcp = YES;
  result.utcp = value;
  return self;
}
- (EndDungeonResponseProto_Builder*) setUtcp_Builder:(UserTaskCompletedProto_Builder*) builderForValue {
  return [self setUtcp:[builderForValue build]];
}
- (EndDungeonResponseProto_Builder*) mergeUtcp:(UserTaskCompletedProto*) value {
  if (result.hasUtcp &&
      result.utcp != [UserTaskCompletedProto defaultInstance]) {
    result.utcp =
      [[[UserTaskCompletedProto builderWithPrototype:result.utcp] mergeFrom:value] buildPartial];
  } else {
    result.utcp = value;
  }
  result.hasUtcp = YES;
  return self;
}
- (EndDungeonResponseProto_Builder*) clearUtcp {
  result.hasUtcp = NO;
  result.utcp = [UserTaskCompletedProto defaultInstance];
  return self;
}
@end

@interface ReviveInDungeonRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSString* userTaskUuid;
@property int64_t clientTime;
@property (strong) NSMutableArray * mutableReviveMeList;
@property int32_t gemsSpent;
@end

@implementation ReviveInDungeonRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasUserTaskUuid {
  return !!hasUserTaskUuid_;
}
- (void) setHasUserTaskUuid:(BOOL) value_ {
  hasUserTaskUuid_ = !!value_;
}
@synthesize userTaskUuid;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
@synthesize mutableReviveMeList;
@dynamic reviveMeList;
- (BOOL) hasGemsSpent {
  return !!hasGemsSpent_;
}
- (void) setHasGemsSpent:(BOOL) value_ {
  hasGemsSpent_ = !!value_;
}
@synthesize gemsSpent;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.userTaskUuid = @"";
    self.clientTime = 0L;
    self.gemsSpent = 0;
  }
  return self;
}
static ReviveInDungeonRequestProto* defaultReviveInDungeonRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [ReviveInDungeonRequestProto class]) {
    defaultReviveInDungeonRequestProtoInstance = [[ReviveInDungeonRequestProto alloc] init];
  }
}
+ (ReviveInDungeonRequestProto*) defaultInstance {
  return defaultReviveInDungeonRequestProtoInstance;
}
- (ReviveInDungeonRequestProto*) defaultInstance {
  return defaultReviveInDungeonRequestProtoInstance;
}
- (NSArray *)reviveMeList {
  return mutableReviveMeList;
}
- (UserMonsterCurrentHealthProto*)reviveMeAtIndex:(NSUInteger)index {
  return [mutableReviveMeList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasUserTaskUuid) {
    [output writeString:2 value:self.userTaskUuid];
  }
  if (self.hasClientTime) {
    [output writeInt64:3 value:self.clientTime];
  }
  [self.reviveMeList enumerateObjectsUsingBlock:^(UserMonsterCurrentHealthProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  if (self.hasGemsSpent) {
    [output writeInt32:5 value:self.gemsSpent];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasUserTaskUuid) {
    size_ += computeStringSize(2, self.userTaskUuid);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(3, self.clientTime);
  }
  [self.reviveMeList enumerateObjectsUsingBlock:^(UserMonsterCurrentHealthProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  if (self.hasGemsSpent) {
    size_ += computeInt32Size(5, self.gemsSpent);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ReviveInDungeonRequestProto*) parseFromData:(NSData*) data {
  return (ReviveInDungeonRequestProto*)[[[ReviveInDungeonRequestProto builder] mergeFromData:data] build];
}
+ (ReviveInDungeonRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReviveInDungeonRequestProto*)[[[ReviveInDungeonRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ReviveInDungeonRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (ReviveInDungeonRequestProto*)[[[ReviveInDungeonRequestProto builder] mergeFromInputStream:input] build];
}
+ (ReviveInDungeonRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReviveInDungeonRequestProto*)[[[ReviveInDungeonRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReviveInDungeonRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ReviveInDungeonRequestProto*)[[[ReviveInDungeonRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (ReviveInDungeonRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReviveInDungeonRequestProto*)[[[ReviveInDungeonRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReviveInDungeonRequestProto_Builder*) builder {
  return [[ReviveInDungeonRequestProto_Builder alloc] init];
}
+ (ReviveInDungeonRequestProto_Builder*) builderWithPrototype:(ReviveInDungeonRequestProto*) prototype {
  return [[ReviveInDungeonRequestProto builder] mergeFrom:prototype];
}
- (ReviveInDungeonRequestProto_Builder*) builder {
  return [ReviveInDungeonRequestProto builder];
}
- (ReviveInDungeonRequestProto_Builder*) toBuilder {
  return [ReviveInDungeonRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasUserTaskUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userTaskUuid", self.userTaskUuid];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  [self.reviveMeList enumerateObjectsUsingBlock:^(UserMonsterCurrentHealthProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"reviveMe"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasGemsSpent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gemsSpent", [NSNumber numberWithInteger:self.gemsSpent]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ReviveInDungeonRequestProto class]]) {
    return NO;
  }
  ReviveInDungeonRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasUserTaskUuid == otherMessage.hasUserTaskUuid &&
      (!self.hasUserTaskUuid || [self.userTaskUuid isEqual:otherMessage.userTaskUuid]) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      [self.reviveMeList isEqualToArray:otherMessage.reviveMeList] &&
      self.hasGemsSpent == otherMessage.hasGemsSpent &&
      (!self.hasGemsSpent || self.gemsSpent == otherMessage.gemsSpent) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasUserTaskUuid) {
    hashCode = hashCode * 31 + [self.userTaskUuid hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  [self.reviveMeList enumerateObjectsUsingBlock:^(UserMonsterCurrentHealthProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasGemsSpent) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.gemsSpent] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ReviveInDungeonRequestProto_Builder()
@property (strong) ReviveInDungeonRequestProto* result;
@end

@implementation ReviveInDungeonRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ReviveInDungeonRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ReviveInDungeonRequestProto_Builder*) clear {
  self.result = [[ReviveInDungeonRequestProto alloc] init];
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) clone {
  return [ReviveInDungeonRequestProto builderWithPrototype:result];
}
- (ReviveInDungeonRequestProto*) defaultInstance {
  return [ReviveInDungeonRequestProto defaultInstance];
}
- (ReviveInDungeonRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ReviveInDungeonRequestProto*) buildPartial {
  ReviveInDungeonRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ReviveInDungeonRequestProto_Builder*) mergeFrom:(ReviveInDungeonRequestProto*) other {
  if (other == [ReviveInDungeonRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasUserTaskUuid) {
    [self setUserTaskUuid:other.userTaskUuid];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.mutableReviveMeList.count > 0) {
    if (result.mutableReviveMeList == nil) {
      result.mutableReviveMeList = [[NSMutableArray alloc] initWithArray:other.mutableReviveMeList];
    } else {
      [result.mutableReviveMeList addObjectsFromArray:other.mutableReviveMeList];
    }
  }
  if (other.hasGemsSpent) {
    [self setGemsSpent:other.gemsSpent];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ReviveInDungeonRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setUserTaskUuid:[input readString]];
        break;
      }
      case 24: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 34: {
        UserMonsterCurrentHealthProto_Builder* subBuilder = [UserMonsterCurrentHealthProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addReviveMe:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setGemsSpent:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ReviveInDungeonRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ReviveInDungeonRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasUserTaskUuid {
  return result.hasUserTaskUuid;
}
- (NSString*) userTaskUuid {
  return result.userTaskUuid;
}
- (ReviveInDungeonRequestProto_Builder*) setUserTaskUuid:(NSString*) value {
  result.hasUserTaskUuid = YES;
  result.userTaskUuid = value;
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) clearUserTaskUuid {
  result.hasUserTaskUuid = NO;
  result.userTaskUuid = @"";
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (ReviveInDungeonRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (NSMutableArray *)reviveMeList {
  return result.mutableReviveMeList;
}
- (UserMonsterCurrentHealthProto*)reviveMeAtIndex:(NSUInteger)index {
  return [result reviveMeAtIndex:index];
}
- (ReviveInDungeonRequestProto_Builder *)addReviveMe:(UserMonsterCurrentHealthProto*)value {
  if (result.mutableReviveMeList == nil) {
    result.mutableReviveMeList = [[NSMutableArray alloc]init];
  }
  [result.mutableReviveMeList addObject:value];
  return self;
}
- (ReviveInDungeonRequestProto_Builder *)addAllReviveMe:(NSArray *)array {
  if (result.mutableReviveMeList == nil) {
    result.mutableReviveMeList = [NSMutableArray array];
  }
  [result.mutableReviveMeList addObjectsFromArray:array];
  return self;
}
- (ReviveInDungeonRequestProto_Builder *)clearReviveMe {
  result.mutableReviveMeList = nil;
  return self;
}
- (BOOL) hasGemsSpent {
  return result.hasGemsSpent;
}
- (int32_t) gemsSpent {
  return result.gemsSpent;
}
- (ReviveInDungeonRequestProto_Builder*) setGemsSpent:(int32_t) value {
  result.hasGemsSpent = YES;
  result.gemsSpent = value;
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) clearGemsSpent {
  result.hasGemsSpent = NO;
  result.gemsSpent = 0;
  return self;
}
@end

@interface ReviveInDungeonResponseProto ()
@property (strong) MinimumUserProto* sender;
@property ResponseStatus status;
@end

@implementation ReviveInDungeonResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = ResponseStatusSuccess;
  }
  return self;
}
static ReviveInDungeonResponseProto* defaultReviveInDungeonResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [ReviveInDungeonResponseProto class]) {
    defaultReviveInDungeonResponseProtoInstance = [[ReviveInDungeonResponseProto alloc] init];
  }
}
+ (ReviveInDungeonResponseProto*) defaultInstance {
  return defaultReviveInDungeonResponseProtoInstance;
}
- (ReviveInDungeonResponseProto*) defaultInstance {
  return defaultReviveInDungeonResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ReviveInDungeonResponseProto*) parseFromData:(NSData*) data {
  return (ReviveInDungeonResponseProto*)[[[ReviveInDungeonResponseProto builder] mergeFromData:data] build];
}
+ (ReviveInDungeonResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReviveInDungeonResponseProto*)[[[ReviveInDungeonResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ReviveInDungeonResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (ReviveInDungeonResponseProto*)[[[ReviveInDungeonResponseProto builder] mergeFromInputStream:input] build];
}
+ (ReviveInDungeonResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReviveInDungeonResponseProto*)[[[ReviveInDungeonResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReviveInDungeonResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ReviveInDungeonResponseProto*)[[[ReviveInDungeonResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (ReviveInDungeonResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReviveInDungeonResponseProto*)[[[ReviveInDungeonResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReviveInDungeonResponseProto_Builder*) builder {
  return [[ReviveInDungeonResponseProto_Builder alloc] init];
}
+ (ReviveInDungeonResponseProto_Builder*) builderWithPrototype:(ReviveInDungeonResponseProto*) prototype {
  return [[ReviveInDungeonResponseProto builder] mergeFrom:prototype];
}
- (ReviveInDungeonResponseProto_Builder*) builder {
  return [ReviveInDungeonResponseProto builder];
}
- (ReviveInDungeonResponseProto_Builder*) toBuilder {
  return [ReviveInDungeonResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ReviveInDungeonResponseProto class]]) {
    return NO;
  }
  ReviveInDungeonResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ReviveInDungeonResponseProto_Builder()
@property (strong) ReviveInDungeonResponseProto* result;
@end

@implementation ReviveInDungeonResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ReviveInDungeonResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ReviveInDungeonResponseProto_Builder*) clear {
  self.result = [[ReviveInDungeonResponseProto alloc] init];
  return self;
}
- (ReviveInDungeonResponseProto_Builder*) clone {
  return [ReviveInDungeonResponseProto builderWithPrototype:result];
}
- (ReviveInDungeonResponseProto*) defaultInstance {
  return [ReviveInDungeonResponseProto defaultInstance];
}
- (ReviveInDungeonResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ReviveInDungeonResponseProto*) buildPartial {
  ReviveInDungeonResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ReviveInDungeonResponseProto_Builder*) mergeFrom:(ReviveInDungeonResponseProto*) other {
  if (other == [ReviveInDungeonResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ReviveInDungeonResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ReviveInDungeonResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        ResponseStatus value = (ResponseStatus)[input readEnum];
        if (ResponseStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ReviveInDungeonResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ReviveInDungeonResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ReviveInDungeonResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ReviveInDungeonResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (ResponseStatus) status {
  return result.status;
}
- (ReviveInDungeonResponseProto_Builder*) setStatus:(ResponseStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (ReviveInDungeonResponseProto_Builder*) clearStatusList {
  result.hasStatus = NO;
  result.status = ResponseStatusSuccess;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
