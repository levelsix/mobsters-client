// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

// @@protoc_insertion_point(imports)

#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef NS_ENUM(SInt32, DayOfWeek) {
  DayOfWeekSunday = 1,
  DayOfWeekMonday = 2,
  DayOfWeekTuesday = 3,
  DayOfWeekWednesday = 4,
  DayOfWeekThursday = 5,
  DayOfWeekFriday = 6,
  DayOfWeekSaturday = 7,
  DayOfWeekNoDayOfWeek = 8,
};

BOOL DayOfWeekIsValidValue(DayOfWeek value);

typedef NS_ENUM(SInt32, Element) {
  ElementFire = 1,
  ElementEarth = 2,
  ElementWater = 3,
  ElementLight = 4,
  ElementDark = 5,
  ElementRock = 6,
  ElementNoElement = 7,
};

BOOL ElementIsValidValue(Element value);

typedef NS_ENUM(SInt32, Quality) {
  QualityNoQuality = 1,
  QualityCommon = 2,
  QualityRare = 3,
  QualitySuper = 4,
  QualityUltra = 5,
  QualityEpic = 6,
  QualityLegendary = 7,
  QualityEvo = 8,
};

BOOL QualityIsValidValue(Quality value);

typedef NS_ENUM(SInt32, GameActionType) {
  GameActionTypeNoHelp = 1,
  GameActionTypeUpgradeStruct = 2,
  GameActionTypeHeal = 3,
  GameActionTypeEvolve = 4,
  GameActionTypeMiniJob = 5,
  GameActionTypeEnhanceTime = 6,
  GameActionTypeRemoveObstacle = 7,
  GameActionTypeCombineMonster = 8,
  GameActionTypeEnterPersistentEvent = 9,
  GameActionTypePerformingResearch = 10,
  GameActionTypeCreateBattleItem = 11,
};

BOOL GameActionTypeIsValidValue(GameActionType value);

typedef NS_ENUM(SInt32, GameType) {
  GameTypeNoType = 1,
  GameTypeStructure = 2,
  GameTypeResearch = 3,
  GameTypeSkill = 4,
  GameTypeTask = 5,
  GameTypeBattleItem = 6,
  GameTypeBoardObstacle = 7,
};

BOOL GameTypeIsValidValue(GameType value);

typedef NS_ENUM(SInt32, ResourceType) {
  ResourceTypeNoResource = 4,
  ResourceTypeCash = 1,
  ResourceTypeOil = 2,
  ResourceTypeGems = 3,
  ResourceTypeGachaCredits = 5,
  ResourceTypeMonster = 20,
};

BOOL ResourceTypeIsValidValue(ResourceType value);

typedef NS_ENUM(SInt32, ResponseStatus) {
  ResponseStatusSuccess = 1,
  ResponseStatusFailOther = 2,
  ResponseStatusFailTimeOutOfSync = 3,
  ResponseStatusFailClientTimeNotSent = 11,
  ResponseStatusFailInsufficientFunds = 4,
  ResponseStatusFailInsufficientCash = 5,
  ResponseStatusFailInsufficientOil = 6,
  ResponseStatusFailInsufficientGems = 7,
  ResponseStatusFailNotComplete = 8,
  ResponseStatusFailInsufficientItem = 9,
  ResponseStatusFailDoesntExist = 10,
  ResponseStatusFailAlreadyRedeemed = 100,
  ResponseStatusFailNotEnabled = 200,
  ResponseStatusFailInvalidBattleItems = 300,
  ResponseStatusFailInsufficientGachaCredits = 400,
  ResponseStatusFailTooLong = 500,
  ResponseStatusFailBanned = 501,
  ResponseStatusFailNoContentSent = 502,
  ResponseStatusFailNotValidLanguage = 503,
  ResponseStatusFailNoSuchPlayer = 600,
  ResponseStatusSuccessRequest = 701,
  ResponseStatusSuccessJoin = 702,
  ResponseStatusSuccessMonsterJustDied = 703,
  ResponseStatusFailNameTaken = 704,
  ResponseStatusFailAlreadyInClan = 705,
  ResponseStatusFailInvalidTagLength = 706,
  ResponseStatusFailTagTaken = 707,
  ResponseStatusFailAlreadyStarted = 708,
  ResponseStatusFailNotInClan = 709,
  ResponseStatusFailOwnerOfClanWithOthersStillIn = 710,
  ResponseStatusFailAlreadyFulfilled = 711,
  ResponseStatusFailRequestAlreadyFiled = 712,
  ResponseStatusFailClanIsFull = 713,
  ResponseStatusFailDidNotRequest = 714,
  ResponseStatusFailNotAuthorized = 715,
  ResponseStatusFailNoActiveClanRaid = 716,
  ResponseStatusFailNoMonstersSent = 717,
  ResponseStatusFailMonsterAlreadyDead = 718,
  ResponseStatusFailFulfilledRequestExists = 719,
  ResponseStatusFailDuplicateReceipt = 800,
  ResponseStatusFailMethodNotSupported = 801,
  ResponseStatusFailNoResults = 900,
  ResponseStatusFailMonsterReachedEvolvingLimit = 1000,
  ResponseStatusFailMaxNumEvolutionsReached = 1001,
  ResponseStatusFailMonsterInEnhancing = 1002,
  ResponseStatusFailMonsterInEvolution = 1003,
  ResponseStatusFailMonsterNonexistent = 1004,
  ResponseStatusFailMonsterRestricted = 1005,
  ResponseStatusFailMonsterAlreadyInHealing = 1006,
  ResponseStatusFailHealingNotComplete = 1007,
  ResponseStatusFailInsufficientFacebookInvites = 1008,
  ResponseStatusFailInconsistentInviteData = 1009,
  ResponseStatusFailStructureAtMaxFbInviteLvl = 1010,
  ResponseStatusFailMoreThanOneMonsterForSpeedup = 1011,
  ResponseStatusFailExpired = 1012,
  ResponseStatusFailAlreadyBeenUsed = 1013,
  ResponseStatusFailEnemyUnavailable = 1100,
  ResponseStatusFailBattleTookTooLong = 1101,
  ResponseStatusFailNotBuiltYet = 1200,
  ResponseStatusFailNotUsersStruct = 1201,
  ResponseStatusFailAtMaxLevelAlready = 1202,
  ResponseStatusFailNotExpiredYet = 1203,
  ResponseStatusFailUserWithUdidAlreadyExists = 1300,
  ResponseStatusFailInvalidReferCode = 1301,
  ResponseStatusFailUserWithFacebookIdExists = 1302,
  ResponseStatusFailFbIdExists = 1303,
  ResponseStatusFailUserFbIdAlreadySet = 1304,
};

BOOL ResponseStatusIsValidValue(ResponseStatus value);


@interface SharedEnumConfigRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end


// @@protoc_insertion_point(global_scope)
