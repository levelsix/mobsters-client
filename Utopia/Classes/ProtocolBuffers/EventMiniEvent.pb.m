// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventMiniEvent.pb.h"
// @@protoc_insertion_point(imports)

@implementation EventMiniEventRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventMiniEventRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [MiniEventRoot registerAllExtensions:registry];
    [RewardRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface RetrieveMiniEventRequestProto ()
@property (strong) MinimumUserProto* sender;
@end

@implementation RetrieveMiniEventRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
  }
  return self;
}
static RetrieveMiniEventRequestProto* defaultRetrieveMiniEventRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrieveMiniEventRequestProto class]) {
    defaultRetrieveMiniEventRequestProtoInstance = [[RetrieveMiniEventRequestProto alloc] init];
  }
}
+ (RetrieveMiniEventRequestProto*) defaultInstance {
  return defaultRetrieveMiniEventRequestProtoInstance;
}
- (RetrieveMiniEventRequestProto*) defaultInstance {
  return defaultRetrieveMiniEventRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RetrieveMiniEventRequestProto*) parseFromData:(NSData*) data {
  return (RetrieveMiniEventRequestProto*)[[[RetrieveMiniEventRequestProto builder] mergeFromData:data] build];
}
+ (RetrieveMiniEventRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveMiniEventRequestProto*)[[[RetrieveMiniEventRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrieveMiniEventRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrieveMiniEventRequestProto*)[[[RetrieveMiniEventRequestProto builder] mergeFromInputStream:input] build];
}
+ (RetrieveMiniEventRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveMiniEventRequestProto*)[[[RetrieveMiniEventRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveMiniEventRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrieveMiniEventRequestProto*)[[[RetrieveMiniEventRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrieveMiniEventRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveMiniEventRequestProto*)[[[RetrieveMiniEventRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveMiniEventRequestProto_Builder*) builder {
  return [[RetrieveMiniEventRequestProto_Builder alloc] init];
}
+ (RetrieveMiniEventRequestProto_Builder*) builderWithPrototype:(RetrieveMiniEventRequestProto*) prototype {
  return [[RetrieveMiniEventRequestProto builder] mergeFrom:prototype];
}
- (RetrieveMiniEventRequestProto_Builder*) builder {
  return [RetrieveMiniEventRequestProto builder];
}
- (RetrieveMiniEventRequestProto_Builder*) toBuilder {
  return [RetrieveMiniEventRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RetrieveMiniEventRequestProto class]]) {
    return NO;
  }
  RetrieveMiniEventRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RetrieveMiniEventRequestProto_Builder()
@property (strong) RetrieveMiniEventRequestProto* result;
@end

@implementation RetrieveMiniEventRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RetrieveMiniEventRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrieveMiniEventRequestProto_Builder*) clear {
  self.result = [[RetrieveMiniEventRequestProto alloc] init];
  return self;
}
- (RetrieveMiniEventRequestProto_Builder*) clone {
  return [RetrieveMiniEventRequestProto builderWithPrototype:result];
}
- (RetrieveMiniEventRequestProto*) defaultInstance {
  return [RetrieveMiniEventRequestProto defaultInstance];
}
- (RetrieveMiniEventRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrieveMiniEventRequestProto*) buildPartial {
  RetrieveMiniEventRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RetrieveMiniEventRequestProto_Builder*) mergeFrom:(RetrieveMiniEventRequestProto*) other {
  if (other == [RetrieveMiniEventRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrieveMiniEventRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrieveMiniEventRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RetrieveMiniEventRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetrieveMiniEventRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetrieveMiniEventRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetrieveMiniEventRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
@end

@interface RetrieveMiniEventResponseProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) UserMiniEventProto* userMiniEvent;
@property RetrieveMiniEventResponseProto_RetrieveMiniEventStatus status;
@end

@implementation RetrieveMiniEventResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasUserMiniEvent {
  return !!hasUserMiniEvent_;
}
- (void) setHasUserMiniEvent:(BOOL) value_ {
  hasUserMiniEvent_ = !!value_;
}
@synthesize userMiniEvent;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.userMiniEvent = [UserMiniEventProto defaultInstance];
    self.status = RetrieveMiniEventResponseProto_RetrieveMiniEventStatusSuccess;
  }
  return self;
}
static RetrieveMiniEventResponseProto* defaultRetrieveMiniEventResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrieveMiniEventResponseProto class]) {
    defaultRetrieveMiniEventResponseProtoInstance = [[RetrieveMiniEventResponseProto alloc] init];
  }
}
+ (RetrieveMiniEventResponseProto*) defaultInstance {
  return defaultRetrieveMiniEventResponseProtoInstance;
}
- (RetrieveMiniEventResponseProto*) defaultInstance {
  return defaultRetrieveMiniEventResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasUserMiniEvent) {
    [output writeMessage:2 value:self.userMiniEvent];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasUserMiniEvent) {
    size_ += computeMessageSize(2, self.userMiniEvent);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(3, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RetrieveMiniEventResponseProto*) parseFromData:(NSData*) data {
  return (RetrieveMiniEventResponseProto*)[[[RetrieveMiniEventResponseProto builder] mergeFromData:data] build];
}
+ (RetrieveMiniEventResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveMiniEventResponseProto*)[[[RetrieveMiniEventResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrieveMiniEventResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrieveMiniEventResponseProto*)[[[RetrieveMiniEventResponseProto builder] mergeFromInputStream:input] build];
}
+ (RetrieveMiniEventResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveMiniEventResponseProto*)[[[RetrieveMiniEventResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveMiniEventResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrieveMiniEventResponseProto*)[[[RetrieveMiniEventResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrieveMiniEventResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveMiniEventResponseProto*)[[[RetrieveMiniEventResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveMiniEventResponseProto_Builder*) builder {
  return [[RetrieveMiniEventResponseProto_Builder alloc] init];
}
+ (RetrieveMiniEventResponseProto_Builder*) builderWithPrototype:(RetrieveMiniEventResponseProto*) prototype {
  return [[RetrieveMiniEventResponseProto builder] mergeFrom:prototype];
}
- (RetrieveMiniEventResponseProto_Builder*) builder {
  return [RetrieveMiniEventResponseProto builder];
}
- (RetrieveMiniEventResponseProto_Builder*) toBuilder {
  return [RetrieveMiniEventResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasUserMiniEvent) {
    [output appendFormat:@"%@%@ {\n", indent, @"userMiniEvent"];
    [self.userMiniEvent writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RetrieveMiniEventResponseProto class]]) {
    return NO;
  }
  RetrieveMiniEventResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasUserMiniEvent == otherMessage.hasUserMiniEvent &&
      (!self.hasUserMiniEvent || [self.userMiniEvent isEqual:otherMessage.userMiniEvent]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasUserMiniEvent) {
    hashCode = hashCode * 31 + [self.userMiniEvent hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL RetrieveMiniEventResponseProto_RetrieveMiniEventStatusIsValidValue(RetrieveMiniEventResponseProto_RetrieveMiniEventStatus value) {
  switch (value) {
    case RetrieveMiniEventResponseProto_RetrieveMiniEventStatusSuccess:
    case RetrieveMiniEventResponseProto_RetrieveMiniEventStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface RetrieveMiniEventResponseProto_Builder()
@property (strong) RetrieveMiniEventResponseProto* result;
@end

@implementation RetrieveMiniEventResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RetrieveMiniEventResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrieveMiniEventResponseProto_Builder*) clear {
  self.result = [[RetrieveMiniEventResponseProto alloc] init];
  return self;
}
- (RetrieveMiniEventResponseProto_Builder*) clone {
  return [RetrieveMiniEventResponseProto builderWithPrototype:result];
}
- (RetrieveMiniEventResponseProto*) defaultInstance {
  return [RetrieveMiniEventResponseProto defaultInstance];
}
- (RetrieveMiniEventResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrieveMiniEventResponseProto*) buildPartial {
  RetrieveMiniEventResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RetrieveMiniEventResponseProto_Builder*) mergeFrom:(RetrieveMiniEventResponseProto*) other {
  if (other == [RetrieveMiniEventResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasUserMiniEvent) {
    [self mergeUserMiniEvent:other.userMiniEvent];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrieveMiniEventResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrieveMiniEventResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        UserMiniEventProto_Builder* subBuilder = [UserMiniEventProto builder];
        if (self.hasUserMiniEvent) {
          [subBuilder mergeFrom:self.userMiniEvent];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserMiniEvent:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        RetrieveMiniEventResponseProto_RetrieveMiniEventStatus value = (RetrieveMiniEventResponseProto_RetrieveMiniEventStatus)[input readEnum];
        if (RetrieveMiniEventResponseProto_RetrieveMiniEventStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RetrieveMiniEventResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetrieveMiniEventResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetrieveMiniEventResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetrieveMiniEventResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasUserMiniEvent {
  return result.hasUserMiniEvent;
}
- (UserMiniEventProto*) userMiniEvent {
  return result.userMiniEvent;
}
- (RetrieveMiniEventResponseProto_Builder*) setUserMiniEvent:(UserMiniEventProto*) value {
  result.hasUserMiniEvent = YES;
  result.userMiniEvent = value;
  return self;
}
- (RetrieveMiniEventResponseProto_Builder*) setUserMiniEvent_Builder:(UserMiniEventProto_Builder*) builderForValue {
  return [self setUserMiniEvent:[builderForValue build]];
}
- (RetrieveMiniEventResponseProto_Builder*) mergeUserMiniEvent:(UserMiniEventProto*) value {
  if (result.hasUserMiniEvent &&
      result.userMiniEvent != [UserMiniEventProto defaultInstance]) {
    result.userMiniEvent =
      [[[UserMiniEventProto builderWithPrototype:result.userMiniEvent] mergeFrom:value] buildPartial];
  } else {
    result.userMiniEvent = value;
  }
  result.hasUserMiniEvent = YES;
  return self;
}
- (RetrieveMiniEventResponseProto_Builder*) clearUserMiniEvent {
  result.hasUserMiniEvent = NO;
  result.userMiniEvent = [UserMiniEventProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RetrieveMiniEventResponseProto_RetrieveMiniEventStatus) status {
  return result.status;
}
- (RetrieveMiniEventResponseProto_Builder*) setStatus:(RetrieveMiniEventResponseProto_RetrieveMiniEventStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RetrieveMiniEventResponseProto_Builder*) clearStatusList {
  result.hasStatus = NO;
  result.status = RetrieveMiniEventResponseProto_RetrieveMiniEventStatusSuccess;
  return self;
}
@end

@interface UpdateMiniEventRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutableUpdatedGoalsList;
@end

@implementation UpdateMiniEventRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutableUpdatedGoalsList;
@dynamic updatedGoalsList;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
  }
  return self;
}
static UpdateMiniEventRequestProto* defaultUpdateMiniEventRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [UpdateMiniEventRequestProto class]) {
    defaultUpdateMiniEventRequestProtoInstance = [[UpdateMiniEventRequestProto alloc] init];
  }
}
+ (UpdateMiniEventRequestProto*) defaultInstance {
  return defaultUpdateMiniEventRequestProtoInstance;
}
- (UpdateMiniEventRequestProto*) defaultInstance {
  return defaultUpdateMiniEventRequestProtoInstance;
}
- (NSArray *)updatedGoalsList {
  return mutableUpdatedGoalsList;
}
- (UserMiniEventGoalProto*)updatedGoalsAtIndex:(NSUInteger)index {
  return [mutableUpdatedGoalsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.updatedGoalsList enumerateObjectsUsingBlock:^(UserMiniEventGoalProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  [self.updatedGoalsList enumerateObjectsUsingBlock:^(UserMiniEventGoalProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UpdateMiniEventRequestProto*) parseFromData:(NSData*) data {
  return (UpdateMiniEventRequestProto*)[[[UpdateMiniEventRequestProto builder] mergeFromData:data] build];
}
+ (UpdateMiniEventRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMiniEventRequestProto*)[[[UpdateMiniEventRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UpdateMiniEventRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (UpdateMiniEventRequestProto*)[[[UpdateMiniEventRequestProto builder] mergeFromInputStream:input] build];
}
+ (UpdateMiniEventRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMiniEventRequestProto*)[[[UpdateMiniEventRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpdateMiniEventRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UpdateMiniEventRequestProto*)[[[UpdateMiniEventRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (UpdateMiniEventRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMiniEventRequestProto*)[[[UpdateMiniEventRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpdateMiniEventRequestProto_Builder*) builder {
  return [[UpdateMiniEventRequestProto_Builder alloc] init];
}
+ (UpdateMiniEventRequestProto_Builder*) builderWithPrototype:(UpdateMiniEventRequestProto*) prototype {
  return [[UpdateMiniEventRequestProto builder] mergeFrom:prototype];
}
- (UpdateMiniEventRequestProto_Builder*) builder {
  return [UpdateMiniEventRequestProto builder];
}
- (UpdateMiniEventRequestProto_Builder*) toBuilder {
  return [UpdateMiniEventRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.updatedGoalsList enumerateObjectsUsingBlock:^(UserMiniEventGoalProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"updatedGoals"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UpdateMiniEventRequestProto class]]) {
    return NO;
  }
  UpdateMiniEventRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.updatedGoalsList isEqualToArray:otherMessage.updatedGoalsList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.updatedGoalsList enumerateObjectsUsingBlock:^(UserMiniEventGoalProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UpdateMiniEventRequestProto_Builder()
@property (strong) UpdateMiniEventRequestProto* result;
@end

@implementation UpdateMiniEventRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[UpdateMiniEventRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UpdateMiniEventRequestProto_Builder*) clear {
  self.result = [[UpdateMiniEventRequestProto alloc] init];
  return self;
}
- (UpdateMiniEventRequestProto_Builder*) clone {
  return [UpdateMiniEventRequestProto builderWithPrototype:result];
}
- (UpdateMiniEventRequestProto*) defaultInstance {
  return [UpdateMiniEventRequestProto defaultInstance];
}
- (UpdateMiniEventRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UpdateMiniEventRequestProto*) buildPartial {
  UpdateMiniEventRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (UpdateMiniEventRequestProto_Builder*) mergeFrom:(UpdateMiniEventRequestProto*) other {
  if (other == [UpdateMiniEventRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableUpdatedGoalsList.count > 0) {
    if (result.mutableUpdatedGoalsList == nil) {
      result.mutableUpdatedGoalsList = [[NSMutableArray alloc] initWithArray:other.mutableUpdatedGoalsList];
    } else {
      [result.mutableUpdatedGoalsList addObjectsFromArray:other.mutableUpdatedGoalsList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UpdateMiniEventRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UpdateMiniEventRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        UserMiniEventGoalProto_Builder* subBuilder = [UserMiniEventGoalProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUpdatedGoals:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (UpdateMiniEventRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (UpdateMiniEventRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (UpdateMiniEventRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (UpdateMiniEventRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)updatedGoalsList {
  return result.mutableUpdatedGoalsList;
}
- (UserMiniEventGoalProto*)updatedGoalsAtIndex:(NSUInteger)index {
  return [result updatedGoalsAtIndex:index];
}
- (UpdateMiniEventRequestProto_Builder *)addUpdatedGoals:(UserMiniEventGoalProto*)value {
  if (result.mutableUpdatedGoalsList == nil) {
    result.mutableUpdatedGoalsList = [[NSMutableArray alloc]init];
  }
  [result.mutableUpdatedGoalsList addObject:value];
  return self;
}
- (UpdateMiniEventRequestProto_Builder *)addAllUpdatedGoals:(NSArray *)array {
  if (result.mutableUpdatedGoalsList == nil) {
    result.mutableUpdatedGoalsList = [NSMutableArray array];
  }
  [result.mutableUpdatedGoalsList addObjectsFromArray:array];
  return self;
}
- (UpdateMiniEventRequestProto_Builder *)clearUpdatedGoals {
  result.mutableUpdatedGoalsList = nil;
  return self;
}
@end

@interface UpdateMiniEventResponseProto ()
@property (strong) MinimumUserProto* sender;
@property UpdateMiniEventResponseProto_UpdateMiniEventStatus status;
@end

@implementation UpdateMiniEventResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = UpdateMiniEventResponseProto_UpdateMiniEventStatusSuccess;
  }
  return self;
}
static UpdateMiniEventResponseProto* defaultUpdateMiniEventResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [UpdateMiniEventResponseProto class]) {
    defaultUpdateMiniEventResponseProtoInstance = [[UpdateMiniEventResponseProto alloc] init];
  }
}
+ (UpdateMiniEventResponseProto*) defaultInstance {
  return defaultUpdateMiniEventResponseProtoInstance;
}
- (UpdateMiniEventResponseProto*) defaultInstance {
  return defaultUpdateMiniEventResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UpdateMiniEventResponseProto*) parseFromData:(NSData*) data {
  return (UpdateMiniEventResponseProto*)[[[UpdateMiniEventResponseProto builder] mergeFromData:data] build];
}
+ (UpdateMiniEventResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMiniEventResponseProto*)[[[UpdateMiniEventResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UpdateMiniEventResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (UpdateMiniEventResponseProto*)[[[UpdateMiniEventResponseProto builder] mergeFromInputStream:input] build];
}
+ (UpdateMiniEventResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMiniEventResponseProto*)[[[UpdateMiniEventResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpdateMiniEventResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UpdateMiniEventResponseProto*)[[[UpdateMiniEventResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (UpdateMiniEventResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMiniEventResponseProto*)[[[UpdateMiniEventResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpdateMiniEventResponseProto_Builder*) builder {
  return [[UpdateMiniEventResponseProto_Builder alloc] init];
}
+ (UpdateMiniEventResponseProto_Builder*) builderWithPrototype:(UpdateMiniEventResponseProto*) prototype {
  return [[UpdateMiniEventResponseProto builder] mergeFrom:prototype];
}
- (UpdateMiniEventResponseProto_Builder*) builder {
  return [UpdateMiniEventResponseProto builder];
}
- (UpdateMiniEventResponseProto_Builder*) toBuilder {
  return [UpdateMiniEventResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UpdateMiniEventResponseProto class]]) {
    return NO;
  }
  UpdateMiniEventResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL UpdateMiniEventResponseProto_UpdateMiniEventStatusIsValidValue(UpdateMiniEventResponseProto_UpdateMiniEventStatus value) {
  switch (value) {
    case UpdateMiniEventResponseProto_UpdateMiniEventStatusSuccess:
    case UpdateMiniEventResponseProto_UpdateMiniEventStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface UpdateMiniEventResponseProto_Builder()
@property (strong) UpdateMiniEventResponseProto* result;
@end

@implementation UpdateMiniEventResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[UpdateMiniEventResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UpdateMiniEventResponseProto_Builder*) clear {
  self.result = [[UpdateMiniEventResponseProto alloc] init];
  return self;
}
- (UpdateMiniEventResponseProto_Builder*) clone {
  return [UpdateMiniEventResponseProto builderWithPrototype:result];
}
- (UpdateMiniEventResponseProto*) defaultInstance {
  return [UpdateMiniEventResponseProto defaultInstance];
}
- (UpdateMiniEventResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UpdateMiniEventResponseProto*) buildPartial {
  UpdateMiniEventResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (UpdateMiniEventResponseProto_Builder*) mergeFrom:(UpdateMiniEventResponseProto*) other {
  if (other == [UpdateMiniEventResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UpdateMiniEventResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UpdateMiniEventResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        UpdateMiniEventResponseProto_UpdateMiniEventStatus value = (UpdateMiniEventResponseProto_UpdateMiniEventStatus)[input readEnum];
        if (UpdateMiniEventResponseProto_UpdateMiniEventStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (UpdateMiniEventResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (UpdateMiniEventResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (UpdateMiniEventResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (UpdateMiniEventResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (UpdateMiniEventResponseProto_UpdateMiniEventStatus) status {
  return result.status;
}
- (UpdateMiniEventResponseProto_Builder*) setStatus:(UpdateMiniEventResponseProto_UpdateMiniEventStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (UpdateMiniEventResponseProto_Builder*) clearStatusList {
  result.hasStatus = NO;
  result.status = UpdateMiniEventResponseProto_UpdateMiniEventStatusSuccess;
  return self;
}
@end

@interface RedeemMiniEventRewardRequestProto ()
@property (strong) MinimumUserProtoWithMaxResources* sender;
@property RedeemMiniEventRewardRequestProto_RewardTier tierRedeemed;
@property int32_t mefplId;
@property int64_t clientTime;
@end

@implementation RedeemMiniEventRewardRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasTierRedeemed {
  return !!hasTierRedeemed_;
}
- (void) setHasTierRedeemed:(BOOL) value_ {
  hasTierRedeemed_ = !!value_;
}
@synthesize tierRedeemed;
- (BOOL) hasMefplId {
  return !!hasMefplId_;
}
- (void) setHasMefplId:(BOOL) value_ {
  hasMefplId_ = !!value_;
}
@synthesize mefplId;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.tierRedeemed = RedeemMiniEventRewardRequestProto_RewardTierTierOne;
    self.mefplId = 0;
    self.clientTime = 0L;
  }
  return self;
}
static RedeemMiniEventRewardRequestProto* defaultRedeemMiniEventRewardRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RedeemMiniEventRewardRequestProto class]) {
    defaultRedeemMiniEventRewardRequestProtoInstance = [[RedeemMiniEventRewardRequestProto alloc] init];
  }
}
+ (RedeemMiniEventRewardRequestProto*) defaultInstance {
  return defaultRedeemMiniEventRewardRequestProtoInstance;
}
- (RedeemMiniEventRewardRequestProto*) defaultInstance {
  return defaultRedeemMiniEventRewardRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasTierRedeemed) {
    [output writeEnum:2 value:self.tierRedeemed];
  }
  if (self.hasMefplId) {
    [output writeInt32:3 value:self.mefplId];
  }
  if (self.hasClientTime) {
    [output writeInt64:4 value:self.clientTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasTierRedeemed) {
    size_ += computeEnumSize(2, self.tierRedeemed);
  }
  if (self.hasMefplId) {
    size_ += computeInt32Size(3, self.mefplId);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(4, self.clientTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RedeemMiniEventRewardRequestProto*) parseFromData:(NSData*) data {
  return (RedeemMiniEventRewardRequestProto*)[[[RedeemMiniEventRewardRequestProto builder] mergeFromData:data] build];
}
+ (RedeemMiniEventRewardRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RedeemMiniEventRewardRequestProto*)[[[RedeemMiniEventRewardRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RedeemMiniEventRewardRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RedeemMiniEventRewardRequestProto*)[[[RedeemMiniEventRewardRequestProto builder] mergeFromInputStream:input] build];
}
+ (RedeemMiniEventRewardRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RedeemMiniEventRewardRequestProto*)[[[RedeemMiniEventRewardRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RedeemMiniEventRewardRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RedeemMiniEventRewardRequestProto*)[[[RedeemMiniEventRewardRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RedeemMiniEventRewardRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RedeemMiniEventRewardRequestProto*)[[[RedeemMiniEventRewardRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RedeemMiniEventRewardRequestProto_Builder*) builder {
  return [[RedeemMiniEventRewardRequestProto_Builder alloc] init];
}
+ (RedeemMiniEventRewardRequestProto_Builder*) builderWithPrototype:(RedeemMiniEventRewardRequestProto*) prototype {
  return [[RedeemMiniEventRewardRequestProto builder] mergeFrom:prototype];
}
- (RedeemMiniEventRewardRequestProto_Builder*) builder {
  return [RedeemMiniEventRewardRequestProto builder];
}
- (RedeemMiniEventRewardRequestProto_Builder*) toBuilder {
  return [RedeemMiniEventRewardRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTierRedeemed) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tierRedeemed", [NSNumber numberWithInteger:self.tierRedeemed]];
  }
  if (self.hasMefplId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mefplId", [NSNumber numberWithInteger:self.mefplId]];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RedeemMiniEventRewardRequestProto class]]) {
    return NO;
  }
  RedeemMiniEventRewardRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasTierRedeemed == otherMessage.hasTierRedeemed &&
      (!self.hasTierRedeemed || self.tierRedeemed == otherMessage.tierRedeemed) &&
      self.hasMefplId == otherMessage.hasMefplId &&
      (!self.hasMefplId || self.mefplId == otherMessage.mefplId) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasTierRedeemed) {
    hashCode = hashCode * 31 + self.tierRedeemed;
  }
  if (self.hasMefplId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.mefplId] hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL RedeemMiniEventRewardRequestProto_RewardTierIsValidValue(RedeemMiniEventRewardRequestProto_RewardTier value) {
  switch (value) {
    case RedeemMiniEventRewardRequestProto_RewardTierTierOne:
    case RedeemMiniEventRewardRequestProto_RewardTierTierTwo:
    case RedeemMiniEventRewardRequestProto_RewardTierTierThree:
      return YES;
    default:
      return NO;
  }
}
@interface RedeemMiniEventRewardRequestProto_Builder()
@property (strong) RedeemMiniEventRewardRequestProto* result;
@end

@implementation RedeemMiniEventRewardRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RedeemMiniEventRewardRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RedeemMiniEventRewardRequestProto_Builder*) clear {
  self.result = [[RedeemMiniEventRewardRequestProto alloc] init];
  return self;
}
- (RedeemMiniEventRewardRequestProto_Builder*) clone {
  return [RedeemMiniEventRewardRequestProto builderWithPrototype:result];
}
- (RedeemMiniEventRewardRequestProto*) defaultInstance {
  return [RedeemMiniEventRewardRequestProto defaultInstance];
}
- (RedeemMiniEventRewardRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RedeemMiniEventRewardRequestProto*) buildPartial {
  RedeemMiniEventRewardRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RedeemMiniEventRewardRequestProto_Builder*) mergeFrom:(RedeemMiniEventRewardRequestProto*) other {
  if (other == [RedeemMiniEventRewardRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasTierRedeemed) {
    [self setTierRedeemed:other.tierRedeemed];
  }
  if (other.hasMefplId) {
    [self setMefplId:other.mefplId];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RedeemMiniEventRewardRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RedeemMiniEventRewardRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        RedeemMiniEventRewardRequestProto_RewardTier value = (RedeemMiniEventRewardRequestProto_RewardTier)[input readEnum];
        if (RedeemMiniEventRewardRequestProto_RewardTierIsValidValue(value)) {
          [self setTierRedeemed:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setMefplId:[input readInt32]];
        break;
      }
      case 32: {
        [self setClientTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (RedeemMiniEventRewardRequestProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RedeemMiniEventRewardRequestProto_Builder*) setSender_Builder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RedeemMiniEventRewardRequestProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RedeemMiniEventRewardRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (BOOL) hasTierRedeemed {
  return result.hasTierRedeemed;
}
- (RedeemMiniEventRewardRequestProto_RewardTier) tierRedeemed {
  return result.tierRedeemed;
}
- (RedeemMiniEventRewardRequestProto_Builder*) setTierRedeemed:(RedeemMiniEventRewardRequestProto_RewardTier) value {
  result.hasTierRedeemed = YES;
  result.tierRedeemed = value;
  return self;
}
- (RedeemMiniEventRewardRequestProto_Builder*) clearTierRedeemedList {
  result.hasTierRedeemed = NO;
  result.tierRedeemed = RedeemMiniEventRewardRequestProto_RewardTierTierOne;
  return self;
}
- (BOOL) hasMefplId {
  return result.hasMefplId;
}
- (int32_t) mefplId {
  return result.mefplId;
}
- (RedeemMiniEventRewardRequestProto_Builder*) setMefplId:(int32_t) value {
  result.hasMefplId = YES;
  result.mefplId = value;
  return self;
}
- (RedeemMiniEventRewardRequestProto_Builder*) clearMefplId {
  result.hasMefplId = NO;
  result.mefplId = 0;
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (RedeemMiniEventRewardRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (RedeemMiniEventRewardRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
@end

@interface RedeemMiniEventRewardResponseProto ()
@property (strong) MinimumUserProto* sender;
@property RedeemMiniEventRewardResponseProto_RedeemMiniEventRewardStatus status;
@property (strong) UserRewardProto* rewards;
@end

@implementation RedeemMiniEventRewardResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasRewards {
  return !!hasRewards_;
}
- (void) setHasRewards:(BOOL) value_ {
  hasRewards_ = !!value_;
}
@synthesize rewards;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = RedeemMiniEventRewardResponseProto_RedeemMiniEventRewardStatusFailOther;
    self.rewards = [UserRewardProto defaultInstance];
  }
  return self;
}
static RedeemMiniEventRewardResponseProto* defaultRedeemMiniEventRewardResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RedeemMiniEventRewardResponseProto class]) {
    defaultRedeemMiniEventRewardResponseProtoInstance = [[RedeemMiniEventRewardResponseProto alloc] init];
  }
}
+ (RedeemMiniEventRewardResponseProto*) defaultInstance {
  return defaultRedeemMiniEventRewardResponseProtoInstance;
}
- (RedeemMiniEventRewardResponseProto*) defaultInstance {
  return defaultRedeemMiniEventRewardResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasRewards) {
    [output writeMessage:3 value:self.rewards];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  if (self.hasRewards) {
    size_ += computeMessageSize(3, self.rewards);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RedeemMiniEventRewardResponseProto*) parseFromData:(NSData*) data {
  return (RedeemMiniEventRewardResponseProto*)[[[RedeemMiniEventRewardResponseProto builder] mergeFromData:data] build];
}
+ (RedeemMiniEventRewardResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RedeemMiniEventRewardResponseProto*)[[[RedeemMiniEventRewardResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RedeemMiniEventRewardResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RedeemMiniEventRewardResponseProto*)[[[RedeemMiniEventRewardResponseProto builder] mergeFromInputStream:input] build];
}
+ (RedeemMiniEventRewardResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RedeemMiniEventRewardResponseProto*)[[[RedeemMiniEventRewardResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RedeemMiniEventRewardResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RedeemMiniEventRewardResponseProto*)[[[RedeemMiniEventRewardResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RedeemMiniEventRewardResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RedeemMiniEventRewardResponseProto*)[[[RedeemMiniEventRewardResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RedeemMiniEventRewardResponseProto_Builder*) builder {
  return [[RedeemMiniEventRewardResponseProto_Builder alloc] init];
}
+ (RedeemMiniEventRewardResponseProto_Builder*) builderWithPrototype:(RedeemMiniEventRewardResponseProto*) prototype {
  return [[RedeemMiniEventRewardResponseProto builder] mergeFrom:prototype];
}
- (RedeemMiniEventRewardResponseProto_Builder*) builder {
  return [RedeemMiniEventRewardResponseProto builder];
}
- (RedeemMiniEventRewardResponseProto_Builder*) toBuilder {
  return [RedeemMiniEventRewardResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasRewards) {
    [output appendFormat:@"%@%@ {\n", indent, @"rewards"];
    [self.rewards writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RedeemMiniEventRewardResponseProto class]]) {
    return NO;
  }
  RedeemMiniEventRewardResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasRewards == otherMessage.hasRewards &&
      (!self.hasRewards || [self.rewards isEqual:otherMessage.rewards]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasRewards) {
    hashCode = hashCode * 31 + [self.rewards hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL RedeemMiniEventRewardResponseProto_RedeemMiniEventRewardStatusIsValidValue(RedeemMiniEventRewardResponseProto_RedeemMiniEventRewardStatus value) {
  switch (value) {
    case RedeemMiniEventRewardResponseProto_RedeemMiniEventRewardStatusSuccess:
    case RedeemMiniEventRewardResponseProto_RedeemMiniEventRewardStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface RedeemMiniEventRewardResponseProto_Builder()
@property (strong) RedeemMiniEventRewardResponseProto* result;
@end

@implementation RedeemMiniEventRewardResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RedeemMiniEventRewardResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RedeemMiniEventRewardResponseProto_Builder*) clear {
  self.result = [[RedeemMiniEventRewardResponseProto alloc] init];
  return self;
}
- (RedeemMiniEventRewardResponseProto_Builder*) clone {
  return [RedeemMiniEventRewardResponseProto builderWithPrototype:result];
}
- (RedeemMiniEventRewardResponseProto*) defaultInstance {
  return [RedeemMiniEventRewardResponseProto defaultInstance];
}
- (RedeemMiniEventRewardResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RedeemMiniEventRewardResponseProto*) buildPartial {
  RedeemMiniEventRewardResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RedeemMiniEventRewardResponseProto_Builder*) mergeFrom:(RedeemMiniEventRewardResponseProto*) other {
  if (other == [RedeemMiniEventRewardResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasRewards) {
    [self mergeRewards:other.rewards];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RedeemMiniEventRewardResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RedeemMiniEventRewardResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        RedeemMiniEventRewardResponseProto_RedeemMiniEventRewardStatus value = (RedeemMiniEventRewardResponseProto_RedeemMiniEventRewardStatus)[input readEnum];
        if (RedeemMiniEventRewardResponseProto_RedeemMiniEventRewardStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        UserRewardProto_Builder* subBuilder = [UserRewardProto builder];
        if (self.hasRewards) {
          [subBuilder mergeFrom:self.rewards];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRewards:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RedeemMiniEventRewardResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RedeemMiniEventRewardResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RedeemMiniEventRewardResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RedeemMiniEventRewardResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RedeemMiniEventRewardResponseProto_RedeemMiniEventRewardStatus) status {
  return result.status;
}
- (RedeemMiniEventRewardResponseProto_Builder*) setStatus:(RedeemMiniEventRewardResponseProto_RedeemMiniEventRewardStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RedeemMiniEventRewardResponseProto_Builder*) clearStatusList {
  result.hasStatus = NO;
  result.status = RedeemMiniEventRewardResponseProto_RedeemMiniEventRewardStatusFailOther;
  return self;
}
- (BOOL) hasRewards {
  return result.hasRewards;
}
- (UserRewardProto*) rewards {
  return result.rewards;
}
- (RedeemMiniEventRewardResponseProto_Builder*) setRewards:(UserRewardProto*) value {
  result.hasRewards = YES;
  result.rewards = value;
  return self;
}
- (RedeemMiniEventRewardResponseProto_Builder*) setRewards_Builder:(UserRewardProto_Builder*) builderForValue {
  return [self setRewards:[builderForValue build]];
}
- (RedeemMiniEventRewardResponseProto_Builder*) mergeRewards:(UserRewardProto*) value {
  if (result.hasRewards &&
      result.rewards != [UserRewardProto defaultInstance]) {
    result.rewards =
      [[[UserRewardProto builderWithPrototype:result.rewards] mergeFrom:value] buildPartial];
  } else {
    result.rewards = value;
  }
  result.hasRewards = YES;
  return self;
}
- (RedeemMiniEventRewardResponseProto_Builder*) clearRewards {
  result.hasRewards = NO;
  result.rewards = [UserRewardProto defaultInstance];
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
