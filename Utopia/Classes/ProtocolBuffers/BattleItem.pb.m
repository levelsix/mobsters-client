// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "BattleItem.pb.h"
// @@protoc_insertion_point(imports)

@implementation BattleItemRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [BattleItemRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [SharedEnumConfigRoot registerAllExtensions:registry];
    [StructureRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL BattleItemTypeIsValidValue(BattleItemType value) {
  switch (value) {
    case BattleItemTypeHealingPotion:
    case BattleItemTypeChillAntidote:
    case BattleItemTypePoisonAntidote:
    case BattleItemTypeOrbHammer:
    case BattleItemTypeHandSwap:
    case BattleItemTypeBoardShuffle:
      return YES;
    default:
      return NO;
  }
}
BOOL BattleItemCategoryIsValidValue(BattleItemCategory value) {
  switch (value) {
    case BattleItemCategoryPotion:
    case BattleItemCategoryPuzzle:
      return YES;
    default:
      return NO;
  }
}
@interface UserBattleItemProto ()
@property (strong) NSString* userBattleItemId;
@property (strong) NSString* userUuid;
@property int32_t battleItemId;
@property int32_t quantity;
@end

@implementation UserBattleItemProto

- (BOOL) hasUserBattleItemId {
  return !!hasUserBattleItemId_;
}
- (void) setHasUserBattleItemId:(BOOL) value_ {
  hasUserBattleItemId_ = !!value_;
}
@synthesize userBattleItemId;
- (BOOL) hasUserUuid {
  return !!hasUserUuid_;
}
- (void) setHasUserUuid:(BOOL) value_ {
  hasUserUuid_ = !!value_;
}
@synthesize userUuid;
- (BOOL) hasBattleItemId {
  return !!hasBattleItemId_;
}
- (void) setHasBattleItemId:(BOOL) value_ {
  hasBattleItemId_ = !!value_;
}
@synthesize battleItemId;
- (BOOL) hasQuantity {
  return !!hasQuantity_;
}
- (void) setHasQuantity:(BOOL) value_ {
  hasQuantity_ = !!value_;
}
@synthesize quantity;
- (id) init {
  if ((self = [super init])) {
    self.userBattleItemId = @"";
    self.userUuid = @"";
    self.battleItemId = 0;
    self.quantity = 0;
  }
  return self;
}
static UserBattleItemProto* defaultUserBattleItemProtoInstance = nil;
+ (void) initialize {
  if (self == [UserBattleItemProto class]) {
    defaultUserBattleItemProtoInstance = [[UserBattleItemProto alloc] init];
  }
}
+ (UserBattleItemProto*) defaultInstance {
  return defaultUserBattleItemProtoInstance;
}
- (UserBattleItemProto*) defaultInstance {
  return defaultUserBattleItemProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserBattleItemId) {
    [output writeString:1 value:self.userBattleItemId];
  }
  if (self.hasUserUuid) {
    [output writeString:2 value:self.userUuid];
  }
  if (self.hasBattleItemId) {
    [output writeInt32:3 value:self.battleItemId];
  }
  if (self.hasQuantity) {
    [output writeInt32:4 value:self.quantity];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserBattleItemId) {
    size_ += computeStringSize(1, self.userBattleItemId);
  }
  if (self.hasUserUuid) {
    size_ += computeStringSize(2, self.userUuid);
  }
  if (self.hasBattleItemId) {
    size_ += computeInt32Size(3, self.battleItemId);
  }
  if (self.hasQuantity) {
    size_ += computeInt32Size(4, self.quantity);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UserBattleItemProto*) parseFromData:(NSData*) data {
  return (UserBattleItemProto*)[[[UserBattleItemProto builder] mergeFromData:data] build];
}
+ (UserBattleItemProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserBattleItemProto*)[[[UserBattleItemProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserBattleItemProto*) parseFromInputStream:(NSInputStream*) input {
  return (UserBattleItemProto*)[[[UserBattleItemProto builder] mergeFromInputStream:input] build];
}
+ (UserBattleItemProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserBattleItemProto*)[[[UserBattleItemProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserBattleItemProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserBattleItemProto*)[[[UserBattleItemProto builder] mergeFromCodedInputStream:input] build];
}
+ (UserBattleItemProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserBattleItemProto*)[[[UserBattleItemProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserBattleItemProto_Builder*) builder {
  return [[UserBattleItemProto_Builder alloc] init];
}
+ (UserBattleItemProto_Builder*) builderWithPrototype:(UserBattleItemProto*) prototype {
  return [[UserBattleItemProto builder] mergeFrom:prototype];
}
- (UserBattleItemProto_Builder*) builder {
  return [UserBattleItemProto builder];
}
- (UserBattleItemProto_Builder*) toBuilder {
  return [UserBattleItemProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserBattleItemId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userBattleItemId", self.userBattleItemId];
  }
  if (self.hasUserUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userUuid", self.userUuid];
  }
  if (self.hasBattleItemId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"battleItemId", [NSNumber numberWithInteger:self.battleItemId]];
  }
  if (self.hasQuantity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"quantity", [NSNumber numberWithInteger:self.quantity]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UserBattleItemProto class]]) {
    return NO;
  }
  UserBattleItemProto *otherMessage = other;
  return
      self.hasUserBattleItemId == otherMessage.hasUserBattleItemId &&
      (!self.hasUserBattleItemId || [self.userBattleItemId isEqual:otherMessage.userBattleItemId]) &&
      self.hasUserUuid == otherMessage.hasUserUuid &&
      (!self.hasUserUuid || [self.userUuid isEqual:otherMessage.userUuid]) &&
      self.hasBattleItemId == otherMessage.hasBattleItemId &&
      (!self.hasBattleItemId || self.battleItemId == otherMessage.battleItemId) &&
      self.hasQuantity == otherMessage.hasQuantity &&
      (!self.hasQuantity || self.quantity == otherMessage.quantity) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserBattleItemId) {
    hashCode = hashCode * 31 + [self.userBattleItemId hash];
  }
  if (self.hasUserUuid) {
    hashCode = hashCode * 31 + [self.userUuid hash];
  }
  if (self.hasBattleItemId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.battleItemId] hash];
  }
  if (self.hasQuantity) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.quantity] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UserBattleItemProto_Builder()
@property (strong) UserBattleItemProto* result;
@end

@implementation UserBattleItemProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[UserBattleItemProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserBattleItemProto_Builder*) clear {
  self.result = [[UserBattleItemProto alloc] init];
  return self;
}
- (UserBattleItemProto_Builder*) clone {
  return [UserBattleItemProto builderWithPrototype:result];
}
- (UserBattleItemProto*) defaultInstance {
  return [UserBattleItemProto defaultInstance];
}
- (UserBattleItemProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserBattleItemProto*) buildPartial {
  UserBattleItemProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (UserBattleItemProto_Builder*) mergeFrom:(UserBattleItemProto*) other {
  if (other == [UserBattleItemProto defaultInstance]) {
    return self;
  }
  if (other.hasUserBattleItemId) {
    [self setUserBattleItemId:other.userBattleItemId];
  }
  if (other.hasUserUuid) {
    [self setUserUuid:other.userUuid];
  }
  if (other.hasBattleItemId) {
    [self setBattleItemId:other.battleItemId];
  }
  if (other.hasQuantity) {
    [self setQuantity:other.quantity];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserBattleItemProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserBattleItemProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserBattleItemId:[input readString]];
        break;
      }
      case 18: {
        [self setUserUuid:[input readString]];
        break;
      }
      case 24: {
        [self setBattleItemId:[input readInt32]];
        break;
      }
      case 32: {
        [self setQuantity:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserBattleItemId {
  return result.hasUserBattleItemId;
}
- (NSString*) userBattleItemId {
  return result.userBattleItemId;
}
- (UserBattleItemProto_Builder*) setUserBattleItemId:(NSString*) value {
  result.hasUserBattleItemId = YES;
  result.userBattleItemId = value;
  return self;
}
- (UserBattleItemProto_Builder*) clearUserBattleItemId {
  result.hasUserBattleItemId = NO;
  result.userBattleItemId = @"";
  return self;
}
- (BOOL) hasUserUuid {
  return result.hasUserUuid;
}
- (NSString*) userUuid {
  return result.userUuid;
}
- (UserBattleItemProto_Builder*) setUserUuid:(NSString*) value {
  result.hasUserUuid = YES;
  result.userUuid = value;
  return self;
}
- (UserBattleItemProto_Builder*) clearUserUuid {
  result.hasUserUuid = NO;
  result.userUuid = @"";
  return self;
}
- (BOOL) hasBattleItemId {
  return result.hasBattleItemId;
}
- (int32_t) battleItemId {
  return result.battleItemId;
}
- (UserBattleItemProto_Builder*) setBattleItemId:(int32_t) value {
  result.hasBattleItemId = YES;
  result.battleItemId = value;
  return self;
}
- (UserBattleItemProto_Builder*) clearBattleItemId {
  result.hasBattleItemId = NO;
  result.battleItemId = 0;
  return self;
}
- (BOOL) hasQuantity {
  return result.hasQuantity;
}
- (int32_t) quantity {
  return result.quantity;
}
- (UserBattleItemProto_Builder*) setQuantity:(int32_t) value {
  result.hasQuantity = YES;
  result.quantity = value;
  return self;
}
- (UserBattleItemProto_Builder*) clearQuantity {
  result.hasQuantity = NO;
  result.quantity = 0;
  return self;
}
@end

@interface BattleItemProto ()
@property int32_t battleItemId;
@property (strong) NSString* name;
@property (strong) NSString* imgName;
@property BattleItemType battleItemType;
@property BattleItemCategory battleItemCategory;
@property ResourceType createResourceType;
@property int32_t createCost;
@property (strong) NSString* description;
@property int32_t powerAmount;
@property int32_t priority;
@property int32_t minutesToCreate;
@property int32_t inBattleGemCost;
@property int32_t amount;
@end

@implementation BattleItemProto

- (BOOL) hasBattleItemId {
  return !!hasBattleItemId_;
}
- (void) setHasBattleItemId:(BOOL) value_ {
  hasBattleItemId_ = !!value_;
}
@synthesize battleItemId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasImgName {
  return !!hasImgName_;
}
- (void) setHasImgName:(BOOL) value_ {
  hasImgName_ = !!value_;
}
@synthesize imgName;
- (BOOL) hasBattleItemType {
  return !!hasBattleItemType_;
}
- (void) setHasBattleItemType:(BOOL) value_ {
  hasBattleItemType_ = !!value_;
}
@synthesize battleItemType;
- (BOOL) hasBattleItemCategory {
  return !!hasBattleItemCategory_;
}
- (void) setHasBattleItemCategory:(BOOL) value_ {
  hasBattleItemCategory_ = !!value_;
}
@synthesize battleItemCategory;
- (BOOL) hasCreateResourceType {
  return !!hasCreateResourceType_;
}
- (void) setHasCreateResourceType:(BOOL) value_ {
  hasCreateResourceType_ = !!value_;
}
@synthesize createResourceType;
- (BOOL) hasCreateCost {
  return !!hasCreateCost_;
}
- (void) setHasCreateCost:(BOOL) value_ {
  hasCreateCost_ = !!value_;
}
@synthesize createCost;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) value_ {
  hasDescription_ = !!value_;
}
@synthesize description;
- (BOOL) hasPowerAmount {
  return !!hasPowerAmount_;
}
- (void) setHasPowerAmount:(BOOL) value_ {
  hasPowerAmount_ = !!value_;
}
@synthesize powerAmount;
- (BOOL) hasPriority {
  return !!hasPriority_;
}
- (void) setHasPriority:(BOOL) value_ {
  hasPriority_ = !!value_;
}
@synthesize priority;
- (BOOL) hasMinutesToCreate {
  return !!hasMinutesToCreate_;
}
- (void) setHasMinutesToCreate:(BOOL) value_ {
  hasMinutesToCreate_ = !!value_;
}
@synthesize minutesToCreate;
- (BOOL) hasInBattleGemCost {
  return !!hasInBattleGemCost_;
}
- (void) setHasInBattleGemCost:(BOOL) value_ {
  hasInBattleGemCost_ = !!value_;
}
@synthesize inBattleGemCost;
- (BOOL) hasAmount {
  return !!hasAmount_;
}
- (void) setHasAmount:(BOOL) value_ {
  hasAmount_ = !!value_;
}
@synthesize amount;
- (id) init {
  if ((self = [super init])) {
    self.battleItemId = 0;
    self.name = @"";
    self.imgName = @"";
    self.battleItemType = BattleItemTypeHealingPotion;
    self.battleItemCategory = BattleItemCategoryPotion;
    self.createResourceType = ResourceTypeNoResource;
    self.createCost = 0;
    self.description = @"";
    self.powerAmount = 0;
    self.priority = 0;
    self.minutesToCreate = 0;
    self.inBattleGemCost = 0;
    self.amount = 0;
  }
  return self;
}
static BattleItemProto* defaultBattleItemProtoInstance = nil;
+ (void) initialize {
  if (self == [BattleItemProto class]) {
    defaultBattleItemProtoInstance = [[BattleItemProto alloc] init];
  }
}
+ (BattleItemProto*) defaultInstance {
  return defaultBattleItemProtoInstance;
}
- (BattleItemProto*) defaultInstance {
  return defaultBattleItemProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBattleItemId) {
    [output writeInt32:1 value:self.battleItemId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasImgName) {
    [output writeString:3 value:self.imgName];
  }
  if (self.hasBattleItemType) {
    [output writeEnum:4 value:self.battleItemType];
  }
  if (self.hasBattleItemCategory) {
    [output writeEnum:5 value:self.battleItemCategory];
  }
  if (self.hasCreateResourceType) {
    [output writeEnum:6 value:self.createResourceType];
  }
  if (self.hasCreateCost) {
    [output writeInt32:7 value:self.createCost];
  }
  if (self.hasDescription) {
    [output writeString:8 value:self.description];
  }
  if (self.hasPowerAmount) {
    [output writeInt32:9 value:self.powerAmount];
  }
  if (self.hasPriority) {
    [output writeInt32:11 value:self.priority];
  }
  if (self.hasMinutesToCreate) {
    [output writeInt32:12 value:self.minutesToCreate];
  }
  if (self.hasInBattleGemCost) {
    [output writeInt32:13 value:self.inBattleGemCost];
  }
  if (self.hasAmount) {
    [output writeInt32:14 value:self.amount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBattleItemId) {
    size_ += computeInt32Size(1, self.battleItemId);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasImgName) {
    size_ += computeStringSize(3, self.imgName);
  }
  if (self.hasBattleItemType) {
    size_ += computeEnumSize(4, self.battleItemType);
  }
  if (self.hasBattleItemCategory) {
    size_ += computeEnumSize(5, self.battleItemCategory);
  }
  if (self.hasCreateResourceType) {
    size_ += computeEnumSize(6, self.createResourceType);
  }
  if (self.hasCreateCost) {
    size_ += computeInt32Size(7, self.createCost);
  }
  if (self.hasDescription) {
    size_ += computeStringSize(8, self.description);
  }
  if (self.hasPowerAmount) {
    size_ += computeInt32Size(9, self.powerAmount);
  }
  if (self.hasPriority) {
    size_ += computeInt32Size(11, self.priority);
  }
  if (self.hasMinutesToCreate) {
    size_ += computeInt32Size(12, self.minutesToCreate);
  }
  if (self.hasInBattleGemCost) {
    size_ += computeInt32Size(13, self.inBattleGemCost);
  }
  if (self.hasAmount) {
    size_ += computeInt32Size(14, self.amount);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BattleItemProto*) parseFromData:(NSData*) data {
  return (BattleItemProto*)[[[BattleItemProto builder] mergeFromData:data] build];
}
+ (BattleItemProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BattleItemProto*)[[[BattleItemProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BattleItemProto*) parseFromInputStream:(NSInputStream*) input {
  return (BattleItemProto*)[[[BattleItemProto builder] mergeFromInputStream:input] build];
}
+ (BattleItemProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BattleItemProto*)[[[BattleItemProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BattleItemProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BattleItemProto*)[[[BattleItemProto builder] mergeFromCodedInputStream:input] build];
}
+ (BattleItemProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BattleItemProto*)[[[BattleItemProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BattleItemProto_Builder*) builder {
  return [[BattleItemProto_Builder alloc] init];
}
+ (BattleItemProto_Builder*) builderWithPrototype:(BattleItemProto*) prototype {
  return [[BattleItemProto builder] mergeFrom:prototype];
}
- (BattleItemProto_Builder*) builder {
  return [BattleItemProto builder];
}
- (BattleItemProto_Builder*) toBuilder {
  return [BattleItemProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBattleItemId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"battleItemId", [NSNumber numberWithInteger:self.battleItemId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasImgName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imgName", self.imgName];
  }
  if (self.hasBattleItemType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"battleItemType", [NSNumber numberWithInteger:self.battleItemType]];
  }
  if (self.hasBattleItemCategory) {
    [output appendFormat:@"%@%@: %@\n", indent, @"battleItemCategory", [NSNumber numberWithInteger:self.battleItemCategory]];
  }
  if (self.hasCreateResourceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createResourceType", [NSNumber numberWithInteger:self.createResourceType]];
  }
  if (self.hasCreateCost) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createCost", [NSNumber numberWithInteger:self.createCost]];
  }
  if (self.hasDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"description", self.description];
  }
  if (self.hasPowerAmount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"powerAmount", [NSNumber numberWithInteger:self.powerAmount]];
  }
  if (self.hasPriority) {
    [output appendFormat:@"%@%@: %@\n", indent, @"priority", [NSNumber numberWithInteger:self.priority]];
  }
  if (self.hasMinutesToCreate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"minutesToCreate", [NSNumber numberWithInteger:self.minutesToCreate]];
  }
  if (self.hasInBattleGemCost) {
    [output appendFormat:@"%@%@: %@\n", indent, @"inBattleGemCost", [NSNumber numberWithInteger:self.inBattleGemCost]];
  }
  if (self.hasAmount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"amount", [NSNumber numberWithInteger:self.amount]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BattleItemProto class]]) {
    return NO;
  }
  BattleItemProto *otherMessage = other;
  return
      self.hasBattleItemId == otherMessage.hasBattleItemId &&
      (!self.hasBattleItemId || self.battleItemId == otherMessage.battleItemId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasImgName == otherMessage.hasImgName &&
      (!self.hasImgName || [self.imgName isEqual:otherMessage.imgName]) &&
      self.hasBattleItemType == otherMessage.hasBattleItemType &&
      (!self.hasBattleItemType || self.battleItemType == otherMessage.battleItemType) &&
      self.hasBattleItemCategory == otherMessage.hasBattleItemCategory &&
      (!self.hasBattleItemCategory || self.battleItemCategory == otherMessage.battleItemCategory) &&
      self.hasCreateResourceType == otherMessage.hasCreateResourceType &&
      (!self.hasCreateResourceType || self.createResourceType == otherMessage.createResourceType) &&
      self.hasCreateCost == otherMessage.hasCreateCost &&
      (!self.hasCreateCost || self.createCost == otherMessage.createCost) &&
      self.hasDescription == otherMessage.hasDescription &&
      (!self.hasDescription || [self.description isEqual:otherMessage.description]) &&
      self.hasPowerAmount == otherMessage.hasPowerAmount &&
      (!self.hasPowerAmount || self.powerAmount == otherMessage.powerAmount) &&
      self.hasPriority == otherMessage.hasPriority &&
      (!self.hasPriority || self.priority == otherMessage.priority) &&
      self.hasMinutesToCreate == otherMessage.hasMinutesToCreate &&
      (!self.hasMinutesToCreate || self.minutesToCreate == otherMessage.minutesToCreate) &&
      self.hasInBattleGemCost == otherMessage.hasInBattleGemCost &&
      (!self.hasInBattleGemCost || self.inBattleGemCost == otherMessage.inBattleGemCost) &&
      self.hasAmount == otherMessage.hasAmount &&
      (!self.hasAmount || self.amount == otherMessage.amount) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBattleItemId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.battleItemId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasImgName) {
    hashCode = hashCode * 31 + [self.imgName hash];
  }
  if (self.hasBattleItemType) {
    hashCode = hashCode * 31 + self.battleItemType;
  }
  if (self.hasBattleItemCategory) {
    hashCode = hashCode * 31 + self.battleItemCategory;
  }
  if (self.hasCreateResourceType) {
    hashCode = hashCode * 31 + self.createResourceType;
  }
  if (self.hasCreateCost) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.createCost] hash];
  }
  if (self.hasDescription) {
    hashCode = hashCode * 31 + [self.description hash];
  }
  if (self.hasPowerAmount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.powerAmount] hash];
  }
  if (self.hasPriority) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.priority] hash];
  }
  if (self.hasMinutesToCreate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.minutesToCreate] hash];
  }
  if (self.hasInBattleGemCost) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.inBattleGemCost] hash];
  }
  if (self.hasAmount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.amount] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BattleItemProto_Builder()
@property (strong) BattleItemProto* result;
@end

@implementation BattleItemProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BattleItemProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BattleItemProto_Builder*) clear {
  self.result = [[BattleItemProto alloc] init];
  return self;
}
- (BattleItemProto_Builder*) clone {
  return [BattleItemProto builderWithPrototype:result];
}
- (BattleItemProto*) defaultInstance {
  return [BattleItemProto defaultInstance];
}
- (BattleItemProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BattleItemProto*) buildPartial {
  BattleItemProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BattleItemProto_Builder*) mergeFrom:(BattleItemProto*) other {
  if (other == [BattleItemProto defaultInstance]) {
    return self;
  }
  if (other.hasBattleItemId) {
    [self setBattleItemId:other.battleItemId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasImgName) {
    [self setImgName:other.imgName];
  }
  if (other.hasBattleItemType) {
    [self setBattleItemType:other.battleItemType];
  }
  if (other.hasBattleItemCategory) {
    [self setBattleItemCategory:other.battleItemCategory];
  }
  if (other.hasCreateResourceType) {
    [self setCreateResourceType:other.createResourceType];
  }
  if (other.hasCreateCost) {
    [self setCreateCost:other.createCost];
  }
  if (other.hasDescription) {
    [self setDescription:other.description];
  }
  if (other.hasPowerAmount) {
    [self setPowerAmount:other.powerAmount];
  }
  if (other.hasPriority) {
    [self setPriority:other.priority];
  }
  if (other.hasMinutesToCreate) {
    [self setMinutesToCreate:other.minutesToCreate];
  }
  if (other.hasInBattleGemCost) {
    [self setInBattleGemCost:other.inBattleGemCost];
  }
  if (other.hasAmount) {
    [self setAmount:other.amount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BattleItemProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BattleItemProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBattleItemId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setImgName:[input readString]];
        break;
      }
      case 32: {
        BattleItemType value = (BattleItemType)[input readEnum];
        if (BattleItemTypeIsValidValue(value)) {
          [self setBattleItemType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        BattleItemCategory value = (BattleItemCategory)[input readEnum];
        if (BattleItemCategoryIsValidValue(value)) {
          [self setBattleItemCategory:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 48: {
        ResourceType value = (ResourceType)[input readEnum];
        if (ResourceTypeIsValidValue(value)) {
          [self setCreateResourceType:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
      case 56: {
        [self setCreateCost:[input readInt32]];
        break;
      }
      case 66: {
        [self setDescription:[input readString]];
        break;
      }
      case 72: {
        [self setPowerAmount:[input readInt32]];
        break;
      }
      case 88: {
        [self setPriority:[input readInt32]];
        break;
      }
      case 96: {
        [self setMinutesToCreate:[input readInt32]];
        break;
      }
      case 104: {
        [self setInBattleGemCost:[input readInt32]];
        break;
      }
      case 112: {
        [self setAmount:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasBattleItemId {
  return result.hasBattleItemId;
}
- (int32_t) battleItemId {
  return result.battleItemId;
}
- (BattleItemProto_Builder*) setBattleItemId:(int32_t) value {
  result.hasBattleItemId = YES;
  result.battleItemId = value;
  return self;
}
- (BattleItemProto_Builder*) clearBattleItemId {
  result.hasBattleItemId = NO;
  result.battleItemId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (BattleItemProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (BattleItemProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasImgName {
  return result.hasImgName;
}
- (NSString*) imgName {
  return result.imgName;
}
- (BattleItemProto_Builder*) setImgName:(NSString*) value {
  result.hasImgName = YES;
  result.imgName = value;
  return self;
}
- (BattleItemProto_Builder*) clearImgName {
  result.hasImgName = NO;
  result.imgName = @"";
  return self;
}
- (BOOL) hasBattleItemType {
  return result.hasBattleItemType;
}
- (BattleItemType) battleItemType {
  return result.battleItemType;
}
- (BattleItemProto_Builder*) setBattleItemType:(BattleItemType) value {
  result.hasBattleItemType = YES;
  result.battleItemType = value;
  return self;
}
- (BattleItemProto_Builder*) clearBattleItemTypeList {
  result.hasBattleItemType = NO;
  result.battleItemType = BattleItemTypeHealingPotion;
  return self;
}
- (BOOL) hasBattleItemCategory {
  return result.hasBattleItemCategory;
}
- (BattleItemCategory) battleItemCategory {
  return result.battleItemCategory;
}
- (BattleItemProto_Builder*) setBattleItemCategory:(BattleItemCategory) value {
  result.hasBattleItemCategory = YES;
  result.battleItemCategory = value;
  return self;
}
- (BattleItemProto_Builder*) clearBattleItemCategoryList {
  result.hasBattleItemCategory = NO;
  result.battleItemCategory = BattleItemCategoryPotion;
  return self;
}
- (BOOL) hasCreateResourceType {
  return result.hasCreateResourceType;
}
- (ResourceType) createResourceType {
  return result.createResourceType;
}
- (BattleItemProto_Builder*) setCreateResourceType:(ResourceType) value {
  result.hasCreateResourceType = YES;
  result.createResourceType = value;
  return self;
}
- (BattleItemProto_Builder*) clearCreateResourceTypeList {
  result.hasCreateResourceType = NO;
  result.createResourceType = ResourceTypeNoResource;
  return self;
}
- (BOOL) hasCreateCost {
  return result.hasCreateCost;
}
- (int32_t) createCost {
  return result.createCost;
}
- (BattleItemProto_Builder*) setCreateCost:(int32_t) value {
  result.hasCreateCost = YES;
  result.createCost = value;
  return self;
}
- (BattleItemProto_Builder*) clearCreateCost {
  result.hasCreateCost = NO;
  result.createCost = 0;
  return self;
}
- (BOOL) hasDescription {
  return result.hasDescription;
}
- (NSString*) description {
  return result.description;
}
- (BattleItemProto_Builder*) setDescription:(NSString*) value {
  result.hasDescription = YES;
  result.description = value;
  return self;
}
- (BattleItemProto_Builder*) clearDescription {
  result.hasDescription = NO;
  result.description = @"";
  return self;
}
- (BOOL) hasPowerAmount {
  return result.hasPowerAmount;
}
- (int32_t) powerAmount {
  return result.powerAmount;
}
- (BattleItemProto_Builder*) setPowerAmount:(int32_t) value {
  result.hasPowerAmount = YES;
  result.powerAmount = value;
  return self;
}
- (BattleItemProto_Builder*) clearPowerAmount {
  result.hasPowerAmount = NO;
  result.powerAmount = 0;
  return self;
}
- (BOOL) hasPriority {
  return result.hasPriority;
}
- (int32_t) priority {
  return result.priority;
}
- (BattleItemProto_Builder*) setPriority:(int32_t) value {
  result.hasPriority = YES;
  result.priority = value;
  return self;
}
- (BattleItemProto_Builder*) clearPriority {
  result.hasPriority = NO;
  result.priority = 0;
  return self;
}
- (BOOL) hasMinutesToCreate {
  return result.hasMinutesToCreate;
}
- (int32_t) minutesToCreate {
  return result.minutesToCreate;
}
- (BattleItemProto_Builder*) setMinutesToCreate:(int32_t) value {
  result.hasMinutesToCreate = YES;
  result.minutesToCreate = value;
  return self;
}
- (BattleItemProto_Builder*) clearMinutesToCreate {
  result.hasMinutesToCreate = NO;
  result.minutesToCreate = 0;
  return self;
}
- (BOOL) hasInBattleGemCost {
  return result.hasInBattleGemCost;
}
- (int32_t) inBattleGemCost {
  return result.inBattleGemCost;
}
- (BattleItemProto_Builder*) setInBattleGemCost:(int32_t) value {
  result.hasInBattleGemCost = YES;
  result.inBattleGemCost = value;
  return self;
}
- (BattleItemProto_Builder*) clearInBattleGemCost {
  result.hasInBattleGemCost = NO;
  result.inBattleGemCost = 0;
  return self;
}
- (BOOL) hasAmount {
  return result.hasAmount;
}
- (int32_t) amount {
  return result.amount;
}
- (BattleItemProto_Builder*) setAmount:(int32_t) value {
  result.hasAmount = YES;
  result.amount = value;
  return self;
}
- (BattleItemProto_Builder*) clearAmount {
  result.hasAmount = NO;
  result.amount = 0;
  return self;
}
@end

@interface BattleItemQueueForUserProto ()
@property int32_t priority;
@property (strong) NSString* userUuid;
@property int32_t battleItemId;
@property int64_t expectedStartTime;
@property Float32 elapsedTime;
@end

@implementation BattleItemQueueForUserProto

- (BOOL) hasPriority {
  return !!hasPriority_;
}
- (void) setHasPriority:(BOOL) value_ {
  hasPriority_ = !!value_;
}
@synthesize priority;
- (BOOL) hasUserUuid {
  return !!hasUserUuid_;
}
- (void) setHasUserUuid:(BOOL) value_ {
  hasUserUuid_ = !!value_;
}
@synthesize userUuid;
- (BOOL) hasBattleItemId {
  return !!hasBattleItemId_;
}
- (void) setHasBattleItemId:(BOOL) value_ {
  hasBattleItemId_ = !!value_;
}
@synthesize battleItemId;
- (BOOL) hasExpectedStartTime {
  return !!hasExpectedStartTime_;
}
- (void) setHasExpectedStartTime:(BOOL) value_ {
  hasExpectedStartTime_ = !!value_;
}
@synthesize expectedStartTime;
- (BOOL) hasElapsedTime {
  return !!hasElapsedTime_;
}
- (void) setHasElapsedTime:(BOOL) value_ {
  hasElapsedTime_ = !!value_;
}
@synthesize elapsedTime;
- (id) init {
  if ((self = [super init])) {
    self.priority = 0;
    self.userUuid = @"";
    self.battleItemId = 0;
    self.expectedStartTime = 0L;
    self.elapsedTime = 0;
  }
  return self;
}
static BattleItemQueueForUserProto* defaultBattleItemQueueForUserProtoInstance = nil;
+ (void) initialize {
  if (self == [BattleItemQueueForUserProto class]) {
    defaultBattleItemQueueForUserProtoInstance = [[BattleItemQueueForUserProto alloc] init];
  }
}
+ (BattleItemQueueForUserProto*) defaultInstance {
  return defaultBattleItemQueueForUserProtoInstance;
}
- (BattleItemQueueForUserProto*) defaultInstance {
  return defaultBattleItemQueueForUserProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPriority) {
    [output writeInt32:1 value:self.priority];
  }
  if (self.hasUserUuid) {
    [output writeString:2 value:self.userUuid];
  }
  if (self.hasBattleItemId) {
    [output writeInt32:3 value:self.battleItemId];
  }
  if (self.hasExpectedStartTime) {
    [output writeInt64:4 value:self.expectedStartTime];
  }
  if (self.hasElapsedTime) {
    [output writeFloat:5 value:self.elapsedTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPriority) {
    size_ += computeInt32Size(1, self.priority);
  }
  if (self.hasUserUuid) {
    size_ += computeStringSize(2, self.userUuid);
  }
  if (self.hasBattleItemId) {
    size_ += computeInt32Size(3, self.battleItemId);
  }
  if (self.hasExpectedStartTime) {
    size_ += computeInt64Size(4, self.expectedStartTime);
  }
  if (self.hasElapsedTime) {
    size_ += computeFloatSize(5, self.elapsedTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BattleItemQueueForUserProto*) parseFromData:(NSData*) data {
  return (BattleItemQueueForUserProto*)[[[BattleItemQueueForUserProto builder] mergeFromData:data] build];
}
+ (BattleItemQueueForUserProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BattleItemQueueForUserProto*)[[[BattleItemQueueForUserProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BattleItemQueueForUserProto*) parseFromInputStream:(NSInputStream*) input {
  return (BattleItemQueueForUserProto*)[[[BattleItemQueueForUserProto builder] mergeFromInputStream:input] build];
}
+ (BattleItemQueueForUserProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BattleItemQueueForUserProto*)[[[BattleItemQueueForUserProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BattleItemQueueForUserProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BattleItemQueueForUserProto*)[[[BattleItemQueueForUserProto builder] mergeFromCodedInputStream:input] build];
}
+ (BattleItemQueueForUserProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BattleItemQueueForUserProto*)[[[BattleItemQueueForUserProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BattleItemQueueForUserProto_Builder*) builder {
  return [[BattleItemQueueForUserProto_Builder alloc] init];
}
+ (BattleItemQueueForUserProto_Builder*) builderWithPrototype:(BattleItemQueueForUserProto*) prototype {
  return [[BattleItemQueueForUserProto builder] mergeFrom:prototype];
}
- (BattleItemQueueForUserProto_Builder*) builder {
  return [BattleItemQueueForUserProto builder];
}
- (BattleItemQueueForUserProto_Builder*) toBuilder {
  return [BattleItemQueueForUserProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPriority) {
    [output appendFormat:@"%@%@: %@\n", indent, @"priority", [NSNumber numberWithInteger:self.priority]];
  }
  if (self.hasUserUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userUuid", self.userUuid];
  }
  if (self.hasBattleItemId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"battleItemId", [NSNumber numberWithInteger:self.battleItemId]];
  }
  if (self.hasExpectedStartTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"expectedStartTime", [NSNumber numberWithLongLong:self.expectedStartTime]];
  }
  if (self.hasElapsedTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"elapsedTime", [NSNumber numberWithFloat:self.elapsedTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BattleItemQueueForUserProto class]]) {
    return NO;
  }
  BattleItemQueueForUserProto *otherMessage = other;
  return
      self.hasPriority == otherMessage.hasPriority &&
      (!self.hasPriority || self.priority == otherMessage.priority) &&
      self.hasUserUuid == otherMessage.hasUserUuid &&
      (!self.hasUserUuid || [self.userUuid isEqual:otherMessage.userUuid]) &&
      self.hasBattleItemId == otherMessage.hasBattleItemId &&
      (!self.hasBattleItemId || self.battleItemId == otherMessage.battleItemId) &&
      self.hasExpectedStartTime == otherMessage.hasExpectedStartTime &&
      (!self.hasExpectedStartTime || self.expectedStartTime == otherMessage.expectedStartTime) &&
      self.hasElapsedTime == otherMessage.hasElapsedTime &&
      (!self.hasElapsedTime || self.elapsedTime == otherMessage.elapsedTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPriority) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.priority] hash];
  }
  if (self.hasUserUuid) {
    hashCode = hashCode * 31 + [self.userUuid hash];
  }
  if (self.hasBattleItemId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.battleItemId] hash];
  }
  if (self.hasExpectedStartTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.expectedStartTime] hash];
  }
  if (self.hasElapsedTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.elapsedTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BattleItemQueueForUserProto_Builder()
@property (strong) BattleItemQueueForUserProto* result;
@end

@implementation BattleItemQueueForUserProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BattleItemQueueForUserProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BattleItemQueueForUserProto_Builder*) clear {
  self.result = [[BattleItemQueueForUserProto alloc] init];
  return self;
}
- (BattleItemQueueForUserProto_Builder*) clone {
  return [BattleItemQueueForUserProto builderWithPrototype:result];
}
- (BattleItemQueueForUserProto*) defaultInstance {
  return [BattleItemQueueForUserProto defaultInstance];
}
- (BattleItemQueueForUserProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BattleItemQueueForUserProto*) buildPartial {
  BattleItemQueueForUserProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BattleItemQueueForUserProto_Builder*) mergeFrom:(BattleItemQueueForUserProto*) other {
  if (other == [BattleItemQueueForUserProto defaultInstance]) {
    return self;
  }
  if (other.hasPriority) {
    [self setPriority:other.priority];
  }
  if (other.hasUserUuid) {
    [self setUserUuid:other.userUuid];
  }
  if (other.hasBattleItemId) {
    [self setBattleItemId:other.battleItemId];
  }
  if (other.hasExpectedStartTime) {
    [self setExpectedStartTime:other.expectedStartTime];
  }
  if (other.hasElapsedTime) {
    [self setElapsedTime:other.elapsedTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BattleItemQueueForUserProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BattleItemQueueForUserProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPriority:[input readInt32]];
        break;
      }
      case 18: {
        [self setUserUuid:[input readString]];
        break;
      }
      case 24: {
        [self setBattleItemId:[input readInt32]];
        break;
      }
      case 32: {
        [self setExpectedStartTime:[input readInt64]];
        break;
      }
      case 45: {
        [self setElapsedTime:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasPriority {
  return result.hasPriority;
}
- (int32_t) priority {
  return result.priority;
}
- (BattleItemQueueForUserProto_Builder*) setPriority:(int32_t) value {
  result.hasPriority = YES;
  result.priority = value;
  return self;
}
- (BattleItemQueueForUserProto_Builder*) clearPriority {
  result.hasPriority = NO;
  result.priority = 0;
  return self;
}
- (BOOL) hasUserUuid {
  return result.hasUserUuid;
}
- (NSString*) userUuid {
  return result.userUuid;
}
- (BattleItemQueueForUserProto_Builder*) setUserUuid:(NSString*) value {
  result.hasUserUuid = YES;
  result.userUuid = value;
  return self;
}
- (BattleItemQueueForUserProto_Builder*) clearUserUuid {
  result.hasUserUuid = NO;
  result.userUuid = @"";
  return self;
}
- (BOOL) hasBattleItemId {
  return result.hasBattleItemId;
}
- (int32_t) battleItemId {
  return result.battleItemId;
}
- (BattleItemQueueForUserProto_Builder*) setBattleItemId:(int32_t) value {
  result.hasBattleItemId = YES;
  result.battleItemId = value;
  return self;
}
- (BattleItemQueueForUserProto_Builder*) clearBattleItemId {
  result.hasBattleItemId = NO;
  result.battleItemId = 0;
  return self;
}
- (BOOL) hasExpectedStartTime {
  return result.hasExpectedStartTime;
}
- (int64_t) expectedStartTime {
  return result.expectedStartTime;
}
- (BattleItemQueueForUserProto_Builder*) setExpectedStartTime:(int64_t) value {
  result.hasExpectedStartTime = YES;
  result.expectedStartTime = value;
  return self;
}
- (BattleItemQueueForUserProto_Builder*) clearExpectedStartTime {
  result.hasExpectedStartTime = NO;
  result.expectedStartTime = 0L;
  return self;
}
- (BOOL) hasElapsedTime {
  return result.hasElapsedTime;
}
- (Float32) elapsedTime {
  return result.elapsedTime;
}
- (BattleItemQueueForUserProto_Builder*) setElapsedTime:(Float32) value {
  result.hasElapsedTime = YES;
  result.elapsedTime = value;
  return self;
}
- (BattleItemQueueForUserProto_Builder*) clearElapsedTime {
  result.hasElapsedTime = NO;
  result.elapsedTime = 0;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
