// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "MonsterStuff.pb.h"
#import "Item.pb.h"
// @@protoc_insertion_point(imports)

@class ClanMemberTeamDonationProto;
@class ClanMemberTeamDonationProto_Builder;
@class FullUserMonsterProto;
@class FullUserMonsterProto_Builder;
@class FullUserProto;
@class FullUserProto_Builder;
@class ItemProto;
@class ItemProto_Builder;
@class MinimumClanProto;
@class MinimumClanProto_Builder;
@class MinimumUserMonsterProto;
@class MinimumUserMonsterProto_Builder;
@class MinimumUserMonsterSellProto;
@class MinimumUserMonsterSellProto_Builder;
@class MinimumUserProto;
@class MinimumUserProtoWithFacebookId;
@class MinimumUserProtoWithFacebookId_Builder;
@class MinimumUserProtoWithLevel;
@class MinimumUserProtoWithLevel_Builder;
@class MinimumUserProtoWithMaxResources;
@class MinimumUserProtoWithMaxResources_Builder;
@class MinimumUserProto_Builder;
@class MonsterBattleDialogueProto;
@class MonsterBattleDialogueProto_Builder;
@class MonsterLevelInfoProto;
@class MonsterLevelInfoProto_Builder;
@class MonsterProto;
@class MonsterProto_Builder;
@class RewardProto;
@class RewardProto_Builder;
@class StaticUserLevelInfoProto;
@class StaticUserLevelInfoProto_Builder;
@class UserCurrentMonsterTeamProto;
@class UserCurrentMonsterTeamProto_Builder;
@class UserEnhancementItemProto;
@class UserEnhancementItemProto_Builder;
@class UserEnhancementProto;
@class UserEnhancementProto_Builder;
@class UserFacebookInviteForSlotProto;
@class UserFacebookInviteForSlotProto_Builder;
@class UserItemProto;
@class UserItemProto_Builder;
@class UserItemSecretGiftProto;
@class UserItemSecretGiftProto_Builder;
@class UserItemUsageProto;
@class UserItemUsageProto_Builder;
@class UserMonsterCurrentExpProto;
@class UserMonsterCurrentExpProto_Builder;
@class UserMonsterCurrentHealthProto;
@class UserMonsterCurrentHealthProto_Builder;
@class UserMonsterEvolutionProto;
@class UserMonsterEvolutionProto_Builder;
@class UserMonsterHealingProto;
@class UserMonsterHealingProto_Builder;
@class UserMonsterSnapshotProto;
@class UserMonsterSnapshotProto_Builder;
@class UserPvpLeagueProto;
@class UserPvpLeagueProto_Builder;
@class UserRewardProto;
@class UserRewardProto_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef NS_ENUM(SInt32, RewardProto_RewardType) {
  RewardProto_RewardTypeNoReward = 1,
  RewardProto_RewardTypeItem = 2,
  RewardProto_RewardTypeGems = 3,
  RewardProto_RewardTypeCash = 4,
  RewardProto_RewardTypeOil = 5,
  RewardProto_RewardTypeMonster = 6,
};

BOOL RewardProto_RewardTypeIsValidValue(RewardProto_RewardType value);


@interface RewardRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface RewardProto : PBGeneratedMessage {
@private
  BOOL hasRewardId_:1;
  BOOL hasStaticDataId_:1;
  BOOL hasAmt_:1;
  BOOL hasTyp_:1;
  int32_t rewardId;
  int32_t staticDataId;
  int32_t amt;
  RewardProto_RewardType typ;
}
- (BOOL) hasRewardId;
- (BOOL) hasStaticDataId;
- (BOOL) hasTyp;
- (BOOL) hasAmt;
@property (readonly) int32_t rewardId;
@property (readonly) int32_t staticDataId;
@property (readonly) RewardProto_RewardType typ;
@property (readonly) int32_t amt;

+ (RewardProto*) defaultInstance;
- (RewardProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RewardProto_Builder*) builder;
+ (RewardProto_Builder*) builder;
+ (RewardProto_Builder*) builderWithPrototype:(RewardProto*) prototype;
- (RewardProto_Builder*) toBuilder;

+ (RewardProto*) parseFromData:(NSData*) data;
+ (RewardProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RewardProto*) parseFromInputStream:(NSInputStream*) input;
+ (RewardProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RewardProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RewardProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RewardProto_Builder : PBGeneratedMessageBuilder {
@private
  RewardProto* result;
}

- (RewardProto*) defaultInstance;

- (RewardProto_Builder*) clear;
- (RewardProto_Builder*) clone;

- (RewardProto*) build;
- (RewardProto*) buildPartial;

- (RewardProto_Builder*) mergeFrom:(RewardProto*) other;
- (RewardProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RewardProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRewardId;
- (int32_t) rewardId;
- (RewardProto_Builder*) setRewardId:(int32_t) value;
- (RewardProto_Builder*) clearRewardId;

- (BOOL) hasStaticDataId;
- (int32_t) staticDataId;
- (RewardProto_Builder*) setStaticDataId:(int32_t) value;
- (RewardProto_Builder*) clearStaticDataId;

- (BOOL) hasTyp;
- (RewardProto_RewardType) typ;
- (RewardProto_Builder*) setTyp:(RewardProto_RewardType) value;
- (RewardProto_Builder*) clearTypList;

- (BOOL) hasAmt;
- (int32_t) amt;
- (RewardProto_Builder*) setAmt:(int32_t) value;
- (RewardProto_Builder*) clearAmt;
@end

@interface UserRewardProto : PBGeneratedMessage {
@private
  BOOL hasGems_:1;
  BOOL hasCash_:1;
  BOOL hasOil_:1;
  int32_t gems;
  int32_t cash;
  int32_t oil;
  NSMutableArray * mutableUpdatedOrNewMonstersList;
  NSMutableArray * mutableUpdatedUserItemsList;
}
- (BOOL) hasGems;
- (BOOL) hasCash;
- (BOOL) hasOil;
@property (readonly, strong) NSArray * updatedOrNewMonstersList;
@property (readonly, strong) NSArray * updatedUserItemsList;
@property (readonly) int32_t gems;
@property (readonly) int32_t cash;
@property (readonly) int32_t oil;
- (FullUserMonsterProto*)updatedOrNewMonstersAtIndex:(NSUInteger)index;
- (UserItemProto*)updatedUserItemsAtIndex:(NSUInteger)index;

+ (UserRewardProto*) defaultInstance;
- (UserRewardProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserRewardProto_Builder*) builder;
+ (UserRewardProto_Builder*) builder;
+ (UserRewardProto_Builder*) builderWithPrototype:(UserRewardProto*) prototype;
- (UserRewardProto_Builder*) toBuilder;

+ (UserRewardProto*) parseFromData:(NSData*) data;
+ (UserRewardProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserRewardProto*) parseFromInputStream:(NSInputStream*) input;
+ (UserRewardProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserRewardProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserRewardProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserRewardProto_Builder : PBGeneratedMessageBuilder {
@private
  UserRewardProto* result;
}

- (UserRewardProto*) defaultInstance;

- (UserRewardProto_Builder*) clear;
- (UserRewardProto_Builder*) clone;

- (UserRewardProto*) build;
- (UserRewardProto*) buildPartial;

- (UserRewardProto_Builder*) mergeFrom:(UserRewardProto*) other;
- (UserRewardProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserRewardProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)updatedOrNewMonstersList;
- (FullUserMonsterProto*)updatedOrNewMonstersAtIndex:(NSUInteger)index;
- (UserRewardProto_Builder *)addUpdatedOrNewMonsters:(FullUserMonsterProto*)value;
- (UserRewardProto_Builder *)addAllUpdatedOrNewMonsters:(NSArray *)array;
- (UserRewardProto_Builder *)clearUpdatedOrNewMonsters;

- (NSMutableArray *)updatedUserItemsList;
- (UserItemProto*)updatedUserItemsAtIndex:(NSUInteger)index;
- (UserRewardProto_Builder *)addUpdatedUserItems:(UserItemProto*)value;
- (UserRewardProto_Builder *)addAllUpdatedUserItems:(NSArray *)array;
- (UserRewardProto_Builder *)clearUpdatedUserItems;

- (BOOL) hasGems;
- (int32_t) gems;
- (UserRewardProto_Builder*) setGems:(int32_t) value;
- (UserRewardProto_Builder*) clearGems;

- (BOOL) hasCash;
- (int32_t) cash;
- (UserRewardProto_Builder*) setCash:(int32_t) value;
- (UserRewardProto_Builder*) clearCash;

- (BOOL) hasOil;
- (int32_t) oil;
- (UserRewardProto_Builder*) setOil:(int32_t) value;
- (UserRewardProto_Builder*) clearOil;
@end


// @@protoc_insertion_point(global_scope)
