// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Reward.pb.h"
// @@protoc_insertion_point(imports)

@implementation RewardRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [RewardRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ItemRoot registerAllExtensions:registry];
    [MonsterStuffRoot registerAllExtensions:registry];
    [SharedEnumConfigRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface RewardProto ()
@property int32_t rewardId;
@property int32_t staticDataId;
@property RewardProto_RewardType typ;
@property int32_t amt;
@property (strong) RewardProto* actualReward;
@end

@implementation RewardProto

- (BOOL) hasRewardId {
  return !!hasRewardId_;
}
- (void) setHasRewardId:(BOOL) value_ {
  hasRewardId_ = !!value_;
}
@synthesize rewardId;
- (BOOL) hasStaticDataId {
  return !!hasStaticDataId_;
}
- (void) setHasStaticDataId:(BOOL) value_ {
  hasStaticDataId_ = !!value_;
}
@synthesize staticDataId;
- (BOOL) hasTyp {
  return !!hasTyp_;
}
- (void) setHasTyp:(BOOL) value_ {
  hasTyp_ = !!value_;
}
@synthesize typ;
- (BOOL) hasAmt {
  return !!hasAmt_;
}
- (void) setHasAmt:(BOOL) value_ {
  hasAmt_ = !!value_;
}
@synthesize amt;
- (BOOL) hasActualReward {
  return !!hasActualReward_;
}
- (void) setHasActualReward:(BOOL) value_ {
  hasActualReward_ = !!value_;
}
@synthesize actualReward;
- (id) init {
  if ((self = [super init])) {
    self.rewardId = 0;
    self.staticDataId = 0;
    self.typ = RewardProto_RewardTypeNoReward;
    self.amt = 0;
    self.actualReward = [RewardProto defaultInstance];
  }
  return self;
}
static RewardProto* defaultRewardProtoInstance = nil;
+ (void) initialize {
  if (self == [RewardProto class]) {
    defaultRewardProtoInstance = [[RewardProto alloc] init];
  }
}
+ (RewardProto*) defaultInstance {
  return defaultRewardProtoInstance;
}
- (RewardProto*) defaultInstance {
  return defaultRewardProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRewardId) {
    [output writeInt32:1 value:self.rewardId];
  }
  if (self.hasStaticDataId) {
    [output writeInt32:2 value:self.staticDataId];
  }
  if (self.hasTyp) {
    [output writeEnum:3 value:self.typ];
  }
  if (self.hasAmt) {
    [output writeInt32:4 value:self.amt];
  }
  if (self.hasActualReward) {
    [output writeMessage:5 value:self.actualReward];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRewardId) {
    size_ += computeInt32Size(1, self.rewardId);
  }
  if (self.hasStaticDataId) {
    size_ += computeInt32Size(2, self.staticDataId);
  }
  if (self.hasTyp) {
    size_ += computeEnumSize(3, self.typ);
  }
  if (self.hasAmt) {
    size_ += computeInt32Size(4, self.amt);
  }
  if (self.hasActualReward) {
    size_ += computeMessageSize(5, self.actualReward);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RewardProto*) parseFromData:(NSData*) data {
  return (RewardProto*)[[[RewardProto builder] mergeFromData:data] build];
}
+ (RewardProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RewardProto*)[[[RewardProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RewardProto*) parseFromInputStream:(NSInputStream*) input {
  return (RewardProto*)[[[RewardProto builder] mergeFromInputStream:input] build];
}
+ (RewardProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RewardProto*)[[[RewardProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RewardProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RewardProto*)[[[RewardProto builder] mergeFromCodedInputStream:input] build];
}
+ (RewardProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RewardProto*)[[[RewardProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RewardProto_Builder*) builder {
  return [[RewardProto_Builder alloc] init];
}
+ (RewardProto_Builder*) builderWithPrototype:(RewardProto*) prototype {
  return [[RewardProto builder] mergeFrom:prototype];
}
- (RewardProto_Builder*) builder {
  return [RewardProto builder];
}
- (RewardProto_Builder*) toBuilder {
  return [RewardProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRewardId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"rewardId", [NSNumber numberWithInteger:self.rewardId]];
  }
  if (self.hasStaticDataId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"staticDataId", [NSNumber numberWithInteger:self.staticDataId]];
  }
  if (self.hasTyp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"typ", [NSNumber numberWithInteger:self.typ]];
  }
  if (self.hasAmt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"amt", [NSNumber numberWithInteger:self.amt]];
  }
  if (self.hasActualReward) {
    [output appendFormat:@"%@%@ {\n", indent, @"actualReward"];
    [self.actualReward writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RewardProto class]]) {
    return NO;
  }
  RewardProto *otherMessage = other;
  return
      self.hasRewardId == otherMessage.hasRewardId &&
      (!self.hasRewardId || self.rewardId == otherMessage.rewardId) &&
      self.hasStaticDataId == otherMessage.hasStaticDataId &&
      (!self.hasStaticDataId || self.staticDataId == otherMessage.staticDataId) &&
      self.hasTyp == otherMessage.hasTyp &&
      (!self.hasTyp || self.typ == otherMessage.typ) &&
      self.hasAmt == otherMessage.hasAmt &&
      (!self.hasAmt || self.amt == otherMessage.amt) &&
      self.hasActualReward == otherMessage.hasActualReward &&
      (!self.hasActualReward || [self.actualReward isEqual:otherMessage.actualReward]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasRewardId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.rewardId] hash];
  }
  if (self.hasStaticDataId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.staticDataId] hash];
  }
  if (self.hasTyp) {
    hashCode = hashCode * 31 + self.typ;
  }
  if (self.hasAmt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.amt] hash];
  }
  if (self.hasActualReward) {
    hashCode = hashCode * 31 + [self.actualReward hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL RewardProto_RewardTypeIsValidValue(RewardProto_RewardType value) {
  switch (value) {
    case RewardProto_RewardTypeNoReward:
    case RewardProto_RewardTypeItem:
    case RewardProto_RewardTypeGems:
    case RewardProto_RewardTypeCash:
    case RewardProto_RewardTypeOil:
    case RewardProto_RewardTypeGachaCredits:
    case RewardProto_RewardTypeMonster:
    case RewardProto_RewardTypeGift:
    case RewardProto_RewardTypeReward:
      return YES;
    default:
      return NO;
  }
}
@interface RewardProto_Builder()
@property (strong) RewardProto* result;
@end

@implementation RewardProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RewardProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RewardProto_Builder*) clear {
  self.result = [[RewardProto alloc] init];
  return self;
}
- (RewardProto_Builder*) clone {
  return [RewardProto builderWithPrototype:result];
}
- (RewardProto*) defaultInstance {
  return [RewardProto defaultInstance];
}
- (RewardProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RewardProto*) buildPartial {
  RewardProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RewardProto_Builder*) mergeFrom:(RewardProto*) other {
  if (other == [RewardProto defaultInstance]) {
    return self;
  }
  if (other.hasRewardId) {
    [self setRewardId:other.rewardId];
  }
  if (other.hasStaticDataId) {
    [self setStaticDataId:other.staticDataId];
  }
  if (other.hasTyp) {
    [self setTyp:other.typ];
  }
  if (other.hasAmt) {
    [self setAmt:other.amt];
  }
  if (other.hasActualReward) {
    [self mergeActualReward:other.actualReward];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RewardProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RewardProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRewardId:[input readInt32]];
        break;
      }
      case 16: {
        [self setStaticDataId:[input readInt32]];
        break;
      }
      case 24: {
        RewardProto_RewardType value = (RewardProto_RewardType)[input readEnum];
        if (RewardProto_RewardTypeIsValidValue(value)) {
          [self setTyp:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        [self setAmt:[input readInt32]];
        break;
      }
      case 42: {
        RewardProto_Builder* subBuilder = [RewardProto builder];
        if (self.hasActualReward) {
          [subBuilder mergeFrom:self.actualReward];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setActualReward:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasRewardId {
  return result.hasRewardId;
}
- (int32_t) rewardId {
  return result.rewardId;
}
- (RewardProto_Builder*) setRewardId:(int32_t) value {
  result.hasRewardId = YES;
  result.rewardId = value;
  return self;
}
- (RewardProto_Builder*) clearRewardId {
  result.hasRewardId = NO;
  result.rewardId = 0;
  return self;
}
- (BOOL) hasStaticDataId {
  return result.hasStaticDataId;
}
- (int32_t) staticDataId {
  return result.staticDataId;
}
- (RewardProto_Builder*) setStaticDataId:(int32_t) value {
  result.hasStaticDataId = YES;
  result.staticDataId = value;
  return self;
}
- (RewardProto_Builder*) clearStaticDataId {
  result.hasStaticDataId = NO;
  result.staticDataId = 0;
  return self;
}
- (BOOL) hasTyp {
  return result.hasTyp;
}
- (RewardProto_RewardType) typ {
  return result.typ;
}
- (RewardProto_Builder*) setTyp:(RewardProto_RewardType) value {
  result.hasTyp = YES;
  result.typ = value;
  return self;
}
- (RewardProto_Builder*) clearTypList {
  result.hasTyp = NO;
  result.typ = RewardProto_RewardTypeNoReward;
  return self;
}
- (BOOL) hasAmt {
  return result.hasAmt;
}
- (int32_t) amt {
  return result.amt;
}
- (RewardProto_Builder*) setAmt:(int32_t) value {
  result.hasAmt = YES;
  result.amt = value;
  return self;
}
- (RewardProto_Builder*) clearAmt {
  result.hasAmt = NO;
  result.amt = 0;
  return self;
}
- (BOOL) hasActualReward {
  return result.hasActualReward;
}
- (RewardProto*) actualReward {
  return result.actualReward;
}
- (RewardProto_Builder*) setActualReward:(RewardProto*) value {
  result.hasActualReward = YES;
  result.actualReward = value;
  return self;
}
- (RewardProto_Builder*) setActualReward_Builder:(RewardProto_Builder*) builderForValue {
  return [self setActualReward:[builderForValue build]];
}
- (RewardProto_Builder*) mergeActualReward:(RewardProto*) value {
  if (result.hasActualReward &&
      result.actualReward != [RewardProto defaultInstance]) {
    result.actualReward =
      [[[RewardProto builderWithPrototype:result.actualReward] mergeFrom:value] buildPartial];
  } else {
    result.actualReward = value;
  }
  result.hasActualReward = YES;
  return self;
}
- (RewardProto_Builder*) clearActualReward {
  result.hasActualReward = NO;
  result.actualReward = [RewardProto defaultInstance];
  return self;
}
@end

@interface UserRewardProto ()
@property (strong) NSMutableArray * mutableUpdatedOrNewMonstersList;
@property (strong) NSMutableArray * mutableUpdatedUserItemsList;
@property int32_t gems;
@property int32_t cash;
@property int32_t oil;
@property int32_t gachaCredits;
@property (strong) NSMutableArray * mutableGiftList;
@end

@implementation UserRewardProto

@synthesize mutableUpdatedOrNewMonstersList;
@dynamic updatedOrNewMonstersList;
@synthesize mutableUpdatedUserItemsList;
@dynamic updatedUserItemsList;
- (BOOL) hasGems {
  return !!hasGems_;
}
- (void) setHasGems:(BOOL) value_ {
  hasGems_ = !!value_;
}
@synthesize gems;
- (BOOL) hasCash {
  return !!hasCash_;
}
- (void) setHasCash:(BOOL) value_ {
  hasCash_ = !!value_;
}
@synthesize cash;
- (BOOL) hasOil {
  return !!hasOil_;
}
- (void) setHasOil:(BOOL) value_ {
  hasOil_ = !!value_;
}
@synthesize oil;
- (BOOL) hasGachaCredits {
  return !!hasGachaCredits_;
}
- (void) setHasGachaCredits:(BOOL) value_ {
  hasGachaCredits_ = !!value_;
}
@synthesize gachaCredits;
@synthesize mutableGiftList;
@dynamic giftList;
- (id) init {
  if ((self = [super init])) {
    self.gems = 0;
    self.cash = 0;
    self.oil = 0;
    self.gachaCredits = 0;
  }
  return self;
}
static UserRewardProto* defaultUserRewardProtoInstance = nil;
+ (void) initialize {
  if (self == [UserRewardProto class]) {
    defaultUserRewardProtoInstance = [[UserRewardProto alloc] init];
  }
}
+ (UserRewardProto*) defaultInstance {
  return defaultUserRewardProtoInstance;
}
- (UserRewardProto*) defaultInstance {
  return defaultUserRewardProtoInstance;
}
- (NSArray *)updatedOrNewMonstersList {
  return mutableUpdatedOrNewMonstersList;
}
- (FullUserMonsterProto*)updatedOrNewMonstersAtIndex:(NSUInteger)index {
  return [mutableUpdatedOrNewMonstersList objectAtIndex:index];
}
- (NSArray *)updatedUserItemsList {
  return mutableUpdatedUserItemsList;
}
- (UserItemProto*)updatedUserItemsAtIndex:(NSUInteger)index {
  return [mutableUpdatedUserItemsList objectAtIndex:index];
}
- (NSArray *)giftList {
  return mutableGiftList;
}
- (UserGiftProto*)giftAtIndex:(NSUInteger)index {
  return [mutableGiftList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.updatedOrNewMonstersList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.updatedUserItemsList enumerateObjectsUsingBlock:^(UserItemProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasGems) {
    [output writeInt32:3 value:self.gems];
  }
  if (self.hasCash) {
    [output writeInt32:4 value:self.cash];
  }
  if (self.hasOil) {
    [output writeInt32:5 value:self.oil];
  }
  if (self.hasGachaCredits) {
    [output writeInt32:6 value:self.gachaCredits];
  }
  [self.giftList enumerateObjectsUsingBlock:^(UserGiftProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:7 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.updatedOrNewMonstersList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  [self.updatedUserItemsList enumerateObjectsUsingBlock:^(UserItemProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasGems) {
    size_ += computeInt32Size(3, self.gems);
  }
  if (self.hasCash) {
    size_ += computeInt32Size(4, self.cash);
  }
  if (self.hasOil) {
    size_ += computeInt32Size(5, self.oil);
  }
  if (self.hasGachaCredits) {
    size_ += computeInt32Size(6, self.gachaCredits);
  }
  [self.giftList enumerateObjectsUsingBlock:^(UserGiftProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(7, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UserRewardProto*) parseFromData:(NSData*) data {
  return (UserRewardProto*)[[[UserRewardProto builder] mergeFromData:data] build];
}
+ (UserRewardProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserRewardProto*)[[[UserRewardProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserRewardProto*) parseFromInputStream:(NSInputStream*) input {
  return (UserRewardProto*)[[[UserRewardProto builder] mergeFromInputStream:input] build];
}
+ (UserRewardProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserRewardProto*)[[[UserRewardProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserRewardProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserRewardProto*)[[[UserRewardProto builder] mergeFromCodedInputStream:input] build];
}
+ (UserRewardProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserRewardProto*)[[[UserRewardProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserRewardProto_Builder*) builder {
  return [[UserRewardProto_Builder alloc] init];
}
+ (UserRewardProto_Builder*) builderWithPrototype:(UserRewardProto*) prototype {
  return [[UserRewardProto builder] mergeFrom:prototype];
}
- (UserRewardProto_Builder*) builder {
  return [UserRewardProto builder];
}
- (UserRewardProto_Builder*) toBuilder {
  return [UserRewardProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.updatedOrNewMonstersList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"updatedOrNewMonsters"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.updatedUserItemsList enumerateObjectsUsingBlock:^(UserItemProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"updatedUserItems"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasGems) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gems", [NSNumber numberWithInteger:self.gems]];
  }
  if (self.hasCash) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cash", [NSNumber numberWithInteger:self.cash]];
  }
  if (self.hasOil) {
    [output appendFormat:@"%@%@: %@\n", indent, @"oil", [NSNumber numberWithInteger:self.oil]];
  }
  if (self.hasGachaCredits) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gachaCredits", [NSNumber numberWithInteger:self.gachaCredits]];
  }
  [self.giftList enumerateObjectsUsingBlock:^(UserGiftProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"gift"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UserRewardProto class]]) {
    return NO;
  }
  UserRewardProto *otherMessage = other;
  return
      [self.updatedOrNewMonstersList isEqualToArray:otherMessage.updatedOrNewMonstersList] &&
      [self.updatedUserItemsList isEqualToArray:otherMessage.updatedUserItemsList] &&
      self.hasGems == otherMessage.hasGems &&
      (!self.hasGems || self.gems == otherMessage.gems) &&
      self.hasCash == otherMessage.hasCash &&
      (!self.hasCash || self.cash == otherMessage.cash) &&
      self.hasOil == otherMessage.hasOil &&
      (!self.hasOil || self.oil == otherMessage.oil) &&
      self.hasGachaCredits == otherMessage.hasGachaCredits &&
      (!self.hasGachaCredits || self.gachaCredits == otherMessage.gachaCredits) &&
      [self.giftList isEqualToArray:otherMessage.giftList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.updatedOrNewMonstersList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.updatedUserItemsList enumerateObjectsUsingBlock:^(UserItemProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasGems) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.gems] hash];
  }
  if (self.hasCash) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cash] hash];
  }
  if (self.hasOil) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.oil] hash];
  }
  if (self.hasGachaCredits) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.gachaCredits] hash];
  }
  [self.giftList enumerateObjectsUsingBlock:^(UserGiftProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UserRewardProto_Builder()
@property (strong) UserRewardProto* result;
@end

@implementation UserRewardProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[UserRewardProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserRewardProto_Builder*) clear {
  self.result = [[UserRewardProto alloc] init];
  return self;
}
- (UserRewardProto_Builder*) clone {
  return [UserRewardProto builderWithPrototype:result];
}
- (UserRewardProto*) defaultInstance {
  return [UserRewardProto defaultInstance];
}
- (UserRewardProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserRewardProto*) buildPartial {
  UserRewardProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (UserRewardProto_Builder*) mergeFrom:(UserRewardProto*) other {
  if (other == [UserRewardProto defaultInstance]) {
    return self;
  }
  if (other.mutableUpdatedOrNewMonstersList.count > 0) {
    if (result.mutableUpdatedOrNewMonstersList == nil) {
      result.mutableUpdatedOrNewMonstersList = [[NSMutableArray alloc] initWithArray:other.mutableUpdatedOrNewMonstersList];
    } else {
      [result.mutableUpdatedOrNewMonstersList addObjectsFromArray:other.mutableUpdatedOrNewMonstersList];
    }
  }
  if (other.mutableUpdatedUserItemsList.count > 0) {
    if (result.mutableUpdatedUserItemsList == nil) {
      result.mutableUpdatedUserItemsList = [[NSMutableArray alloc] initWithArray:other.mutableUpdatedUserItemsList];
    } else {
      [result.mutableUpdatedUserItemsList addObjectsFromArray:other.mutableUpdatedUserItemsList];
    }
  }
  if (other.hasGems) {
    [self setGems:other.gems];
  }
  if (other.hasCash) {
    [self setCash:other.cash];
  }
  if (other.hasOil) {
    [self setOil:other.oil];
  }
  if (other.hasGachaCredits) {
    [self setGachaCredits:other.gachaCredits];
  }
  if (other.mutableGiftList.count > 0) {
    if (result.mutableGiftList == nil) {
      result.mutableGiftList = [[NSMutableArray alloc] initWithArray:other.mutableGiftList];
    } else {
      [result.mutableGiftList addObjectsFromArray:other.mutableGiftList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserRewardProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserRewardProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUpdatedOrNewMonsters:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        UserItemProto_Builder* subBuilder = [UserItemProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUpdatedUserItems:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setGems:[input readInt32]];
        break;
      }
      case 32: {
        [self setCash:[input readInt32]];
        break;
      }
      case 40: {
        [self setOil:[input readInt32]];
        break;
      }
      case 48: {
        [self setGachaCredits:[input readInt32]];
        break;
      }
      case 58: {
        UserGiftProto_Builder* subBuilder = [UserGiftProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGift:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)updatedOrNewMonstersList {
  return result.mutableUpdatedOrNewMonstersList;
}
- (FullUserMonsterProto*)updatedOrNewMonstersAtIndex:(NSUInteger)index {
  return [result updatedOrNewMonstersAtIndex:index];
}
- (UserRewardProto_Builder *)addUpdatedOrNewMonsters:(FullUserMonsterProto*)value {
  if (result.mutableUpdatedOrNewMonstersList == nil) {
    result.mutableUpdatedOrNewMonstersList = [[NSMutableArray alloc]init];
  }
  [result.mutableUpdatedOrNewMonstersList addObject:value];
  return self;
}
- (UserRewardProto_Builder *)addAllUpdatedOrNewMonsters:(NSArray *)array {
  if (result.mutableUpdatedOrNewMonstersList == nil) {
    result.mutableUpdatedOrNewMonstersList = [NSMutableArray array];
  }
  [result.mutableUpdatedOrNewMonstersList addObjectsFromArray:array];
  return self;
}
- (UserRewardProto_Builder *)clearUpdatedOrNewMonsters {
  result.mutableUpdatedOrNewMonstersList = nil;
  return self;
}
- (NSMutableArray *)updatedUserItemsList {
  return result.mutableUpdatedUserItemsList;
}
- (UserItemProto*)updatedUserItemsAtIndex:(NSUInteger)index {
  return [result updatedUserItemsAtIndex:index];
}
- (UserRewardProto_Builder *)addUpdatedUserItems:(UserItemProto*)value {
  if (result.mutableUpdatedUserItemsList == nil) {
    result.mutableUpdatedUserItemsList = [[NSMutableArray alloc]init];
  }
  [result.mutableUpdatedUserItemsList addObject:value];
  return self;
}
- (UserRewardProto_Builder *)addAllUpdatedUserItems:(NSArray *)array {
  if (result.mutableUpdatedUserItemsList == nil) {
    result.mutableUpdatedUserItemsList = [NSMutableArray array];
  }
  [result.mutableUpdatedUserItemsList addObjectsFromArray:array];
  return self;
}
- (UserRewardProto_Builder *)clearUpdatedUserItems {
  result.mutableUpdatedUserItemsList = nil;
  return self;
}
- (BOOL) hasGems {
  return result.hasGems;
}
- (int32_t) gems {
  return result.gems;
}
- (UserRewardProto_Builder*) setGems:(int32_t) value {
  result.hasGems = YES;
  result.gems = value;
  return self;
}
- (UserRewardProto_Builder*) clearGems {
  result.hasGems = NO;
  result.gems = 0;
  return self;
}
- (BOOL) hasCash {
  return result.hasCash;
}
- (int32_t) cash {
  return result.cash;
}
- (UserRewardProto_Builder*) setCash:(int32_t) value {
  result.hasCash = YES;
  result.cash = value;
  return self;
}
- (UserRewardProto_Builder*) clearCash {
  result.hasCash = NO;
  result.cash = 0;
  return self;
}
- (BOOL) hasOil {
  return result.hasOil;
}
- (int32_t) oil {
  return result.oil;
}
- (UserRewardProto_Builder*) setOil:(int32_t) value {
  result.hasOil = YES;
  result.oil = value;
  return self;
}
- (UserRewardProto_Builder*) clearOil {
  result.hasOil = NO;
  result.oil = 0;
  return self;
}
- (BOOL) hasGachaCredits {
  return result.hasGachaCredits;
}
- (int32_t) gachaCredits {
  return result.gachaCredits;
}
- (UserRewardProto_Builder*) setGachaCredits:(int32_t) value {
  result.hasGachaCredits = YES;
  result.gachaCredits = value;
  return self;
}
- (UserRewardProto_Builder*) clearGachaCredits {
  result.hasGachaCredits = NO;
  result.gachaCredits = 0;
  return self;
}
- (NSMutableArray *)giftList {
  return result.mutableGiftList;
}
- (UserGiftProto*)giftAtIndex:(NSUInteger)index {
  return [result giftAtIndex:index];
}
- (UserRewardProto_Builder *)addGift:(UserGiftProto*)value {
  if (result.mutableGiftList == nil) {
    result.mutableGiftList = [[NSMutableArray alloc]init];
  }
  [result.mutableGiftList addObject:value];
  return self;
}
- (UserRewardProto_Builder *)addAllGift:(NSArray *)array {
  if (result.mutableGiftList == nil) {
    result.mutableGiftList = [NSMutableArray array];
  }
  [result.mutableGiftList addObjectsFromArray:array];
  return self;
}
- (UserRewardProto_Builder *)clearGift {
  result.mutableGiftList = nil;
  return self;
}
@end

@interface GiftProto ()
@property int32_t giftId;
@property (strong) NSString* name;
@property int32_t hoursUntilExpiration;
@property (strong) NSString* imageName;
@property GiftProto_GiftType giftType;
@end

@implementation GiftProto

- (BOOL) hasGiftId {
  return !!hasGiftId_;
}
- (void) setHasGiftId:(BOOL) value_ {
  hasGiftId_ = !!value_;
}
@synthesize giftId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasHoursUntilExpiration {
  return !!hasHoursUntilExpiration_;
}
- (void) setHasHoursUntilExpiration:(BOOL) value_ {
  hasHoursUntilExpiration_ = !!value_;
}
@synthesize hoursUntilExpiration;
- (BOOL) hasImageName {
  return !!hasImageName_;
}
- (void) setHasImageName:(BOOL) value_ {
  hasImageName_ = !!value_;
}
@synthesize imageName;
- (BOOL) hasGiftType {
  return !!hasGiftType_;
}
- (void) setHasGiftType:(BOOL) value_ {
  hasGiftType_ = !!value_;
}
@synthesize giftType;
- (id) init {
  if ((self = [super init])) {
    self.giftId = 0;
    self.name = @"";
    self.hoursUntilExpiration = 0;
    self.imageName = @"";
    self.giftType = GiftProto_GiftTypeNoGift;
  }
  return self;
}
static GiftProto* defaultGiftProtoInstance = nil;
+ (void) initialize {
  if (self == [GiftProto class]) {
    defaultGiftProtoInstance = [[GiftProto alloc] init];
  }
}
+ (GiftProto*) defaultInstance {
  return defaultGiftProtoInstance;
}
- (GiftProto*) defaultInstance {
  return defaultGiftProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGiftId) {
    [output writeInt32:1 value:self.giftId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasHoursUntilExpiration) {
    [output writeInt32:3 value:self.hoursUntilExpiration];
  }
  if (self.hasImageName) {
    [output writeString:4 value:self.imageName];
  }
  if (self.hasGiftType) {
    [output writeEnum:5 value:self.giftType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGiftId) {
    size_ += computeInt32Size(1, self.giftId);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasHoursUntilExpiration) {
    size_ += computeInt32Size(3, self.hoursUntilExpiration);
  }
  if (self.hasImageName) {
    size_ += computeStringSize(4, self.imageName);
  }
  if (self.hasGiftType) {
    size_ += computeEnumSize(5, self.giftType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GiftProto*) parseFromData:(NSData*) data {
  return (GiftProto*)[[[GiftProto builder] mergeFromData:data] build];
}
+ (GiftProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftProto*)[[[GiftProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GiftProto*) parseFromInputStream:(NSInputStream*) input {
  return (GiftProto*)[[[GiftProto builder] mergeFromInputStream:input] build];
}
+ (GiftProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftProto*)[[[GiftProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GiftProto*)[[[GiftProto builder] mergeFromCodedInputStream:input] build];
}
+ (GiftProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiftProto*)[[[GiftProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiftProto_Builder*) builder {
  return [[GiftProto_Builder alloc] init];
}
+ (GiftProto_Builder*) builderWithPrototype:(GiftProto*) prototype {
  return [[GiftProto builder] mergeFrom:prototype];
}
- (GiftProto_Builder*) builder {
  return [GiftProto builder];
}
- (GiftProto_Builder*) toBuilder {
  return [GiftProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGiftId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"giftId", [NSNumber numberWithInteger:self.giftId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasHoursUntilExpiration) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hoursUntilExpiration", [NSNumber numberWithInteger:self.hoursUntilExpiration]];
  }
  if (self.hasImageName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imageName", self.imageName];
  }
  if (self.hasGiftType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"giftType", [NSNumber numberWithInteger:self.giftType]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GiftProto class]]) {
    return NO;
  }
  GiftProto *otherMessage = other;
  return
      self.hasGiftId == otherMessage.hasGiftId &&
      (!self.hasGiftId || self.giftId == otherMessage.giftId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasHoursUntilExpiration == otherMessage.hasHoursUntilExpiration &&
      (!self.hasHoursUntilExpiration || self.hoursUntilExpiration == otherMessage.hoursUntilExpiration) &&
      self.hasImageName == otherMessage.hasImageName &&
      (!self.hasImageName || [self.imageName isEqual:otherMessage.imageName]) &&
      self.hasGiftType == otherMessage.hasGiftType &&
      (!self.hasGiftType || self.giftType == otherMessage.giftType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGiftId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.giftId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasHoursUntilExpiration) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.hoursUntilExpiration] hash];
  }
  if (self.hasImageName) {
    hashCode = hashCode * 31 + [self.imageName hash];
  }
  if (self.hasGiftType) {
    hashCode = hashCode * 31 + self.giftType;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL GiftProto_GiftTypeIsValidValue(GiftProto_GiftType value) {
  switch (value) {
    case GiftProto_GiftTypeNoGift:
    case GiftProto_GiftTypeClanGift:
    case GiftProto_GiftTypeTangoGift:
      return YES;
    default:
      return NO;
  }
}
@interface GiftProto_Builder()
@property (strong) GiftProto* result;
@end

@implementation GiftProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[GiftProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GiftProto_Builder*) clear {
  self.result = [[GiftProto alloc] init];
  return self;
}
- (GiftProto_Builder*) clone {
  return [GiftProto builderWithPrototype:result];
}
- (GiftProto*) defaultInstance {
  return [GiftProto defaultInstance];
}
- (GiftProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GiftProto*) buildPartial {
  GiftProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (GiftProto_Builder*) mergeFrom:(GiftProto*) other {
  if (other == [GiftProto defaultInstance]) {
    return self;
  }
  if (other.hasGiftId) {
    [self setGiftId:other.giftId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasHoursUntilExpiration) {
    [self setHoursUntilExpiration:other.hoursUntilExpiration];
  }
  if (other.hasImageName) {
    [self setImageName:other.imageName];
  }
  if (other.hasGiftType) {
    [self setGiftType:other.giftType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GiftProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GiftProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGiftId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setHoursUntilExpiration:[input readInt32]];
        break;
      }
      case 34: {
        [self setImageName:[input readString]];
        break;
      }
      case 40: {
        GiftProto_GiftType value = (GiftProto_GiftType)[input readEnum];
        if (GiftProto_GiftTypeIsValidValue(value)) {
          [self setGiftType:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasGiftId {
  return result.hasGiftId;
}
- (int32_t) giftId {
  return result.giftId;
}
- (GiftProto_Builder*) setGiftId:(int32_t) value {
  result.hasGiftId = YES;
  result.giftId = value;
  return self;
}
- (GiftProto_Builder*) clearGiftId {
  result.hasGiftId = NO;
  result.giftId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (GiftProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (GiftProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasHoursUntilExpiration {
  return result.hasHoursUntilExpiration;
}
- (int32_t) hoursUntilExpiration {
  return result.hoursUntilExpiration;
}
- (GiftProto_Builder*) setHoursUntilExpiration:(int32_t) value {
  result.hasHoursUntilExpiration = YES;
  result.hoursUntilExpiration = value;
  return self;
}
- (GiftProto_Builder*) clearHoursUntilExpiration {
  result.hasHoursUntilExpiration = NO;
  result.hoursUntilExpiration = 0;
  return self;
}
- (BOOL) hasImageName {
  return result.hasImageName;
}
- (NSString*) imageName {
  return result.imageName;
}
- (GiftProto_Builder*) setImageName:(NSString*) value {
  result.hasImageName = YES;
  result.imageName = value;
  return self;
}
- (GiftProto_Builder*) clearImageName {
  result.hasImageName = NO;
  result.imageName = @"";
  return self;
}
- (BOOL) hasGiftType {
  return result.hasGiftType;
}
- (GiftProto_GiftType) giftType {
  return result.giftType;
}
- (GiftProto_Builder*) setGiftType:(GiftProto_GiftType) value {
  result.hasGiftType = YES;
  result.giftType = value;
  return self;
}
- (GiftProto_Builder*) clearGiftTypeList {
  result.hasGiftType = NO;
  result.giftType = GiftProto_GiftTypeNoGift;
  return self;
}
@end

@interface UserGiftProto ()
@property (strong) NSString* ugUuid;
@property (strong) NSString* receiverUserUuid;
@property (strong) MinimumUserProto* gifterUser;
@property (strong) GiftProto* gift;
@property int64_t timeReceived;
@property (strong) RewardProto* reward;
@property BOOL hasBeenCollected;
@property int32_t minutesTillExpiration;
@property (strong) UserTangoGiftProto* tangoGift;
@end

@implementation UserGiftProto

- (BOOL) hasUgUuid {
  return !!hasUgUuid_;
}
- (void) setHasUgUuid:(BOOL) value_ {
  hasUgUuid_ = !!value_;
}
@synthesize ugUuid;
- (BOOL) hasReceiverUserUuid {
  return !!hasReceiverUserUuid_;
}
- (void) setHasReceiverUserUuid:(BOOL) value_ {
  hasReceiverUserUuid_ = !!value_;
}
@synthesize receiverUserUuid;
- (BOOL) hasGifterUser {
  return !!hasGifterUser_;
}
- (void) setHasGifterUser:(BOOL) value_ {
  hasGifterUser_ = !!value_;
}
@synthesize gifterUser;
- (BOOL) hasGift {
  return !!hasGift_;
}
- (void) setHasGift:(BOOL) value_ {
  hasGift_ = !!value_;
}
@synthesize gift;
- (BOOL) hasTimeReceived {
  return !!hasTimeReceived_;
}
- (void) setHasTimeReceived:(BOOL) value_ {
  hasTimeReceived_ = !!value_;
}
@synthesize timeReceived;
- (BOOL) hasReward {
  return !!hasReward_;
}
- (void) setHasReward:(BOOL) value_ {
  hasReward_ = !!value_;
}
@synthesize reward;
- (BOOL) hasHasBeenCollected {
  return !!hasHasBeenCollected_;
}
- (void) setHasHasBeenCollected:(BOOL) value_ {
  hasHasBeenCollected_ = !!value_;
}
- (BOOL) hasBeenCollected {
  return !!hasBeenCollected_;
}
- (void) setHasBeenCollected:(BOOL) value_ {
  hasBeenCollected_ = !!value_;
}
- (BOOL) hasMinutesTillExpiration {
  return !!hasMinutesTillExpiration_;
}
- (void) setHasMinutesTillExpiration:(BOOL) value_ {
  hasMinutesTillExpiration_ = !!value_;
}
@synthesize minutesTillExpiration;
- (BOOL) hasTangoGift {
  return !!hasTangoGift_;
}
- (void) setHasTangoGift:(BOOL) value_ {
  hasTangoGift_ = !!value_;
}
@synthesize tangoGift;
- (id) init {
  if ((self = [super init])) {
    self.ugUuid = @"";
    self.receiverUserUuid = @"";
    self.gifterUser = [MinimumUserProto defaultInstance];
    self.gift = [GiftProto defaultInstance];
    self.timeReceived = 0L;
    self.reward = [RewardProto defaultInstance];
    self.hasBeenCollected = NO;
    self.minutesTillExpiration = 0;
    self.tangoGift = [UserTangoGiftProto defaultInstance];
  }
  return self;
}
static UserGiftProto* defaultUserGiftProtoInstance = nil;
+ (void) initialize {
  if (self == [UserGiftProto class]) {
    defaultUserGiftProtoInstance = [[UserGiftProto alloc] init];
  }
}
+ (UserGiftProto*) defaultInstance {
  return defaultUserGiftProtoInstance;
}
- (UserGiftProto*) defaultInstance {
  return defaultUserGiftProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUgUuid) {
    [output writeString:1 value:self.ugUuid];
  }
  if (self.hasReceiverUserUuid) {
    [output writeString:2 value:self.receiverUserUuid];
  }
  if (self.hasGifterUser) {
    [output writeMessage:3 value:self.gifterUser];
  }
  if (self.hasGift) {
    [output writeMessage:4 value:self.gift];
  }
  if (self.hasTimeReceived) {
    [output writeInt64:5 value:self.timeReceived];
  }
  if (self.hasReward) {
    [output writeMessage:6 value:self.reward];
  }
  if (self.hasHasBeenCollected) {
    [output writeBool:7 value:self.hasBeenCollected];
  }
  if (self.hasMinutesTillExpiration) {
    [output writeInt32:8 value:self.minutesTillExpiration];
  }
  if (self.hasTangoGift) {
    [output writeMessage:9 value:self.tangoGift];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUgUuid) {
    size_ += computeStringSize(1, self.ugUuid);
  }
  if (self.hasReceiverUserUuid) {
    size_ += computeStringSize(2, self.receiverUserUuid);
  }
  if (self.hasGifterUser) {
    size_ += computeMessageSize(3, self.gifterUser);
  }
  if (self.hasGift) {
    size_ += computeMessageSize(4, self.gift);
  }
  if (self.hasTimeReceived) {
    size_ += computeInt64Size(5, self.timeReceived);
  }
  if (self.hasReward) {
    size_ += computeMessageSize(6, self.reward);
  }
  if (self.hasHasBeenCollected) {
    size_ += computeBoolSize(7, self.hasBeenCollected);
  }
  if (self.hasMinutesTillExpiration) {
    size_ += computeInt32Size(8, self.minutesTillExpiration);
  }
  if (self.hasTangoGift) {
    size_ += computeMessageSize(9, self.tangoGift);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UserGiftProto*) parseFromData:(NSData*) data {
  return (UserGiftProto*)[[[UserGiftProto builder] mergeFromData:data] build];
}
+ (UserGiftProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserGiftProto*)[[[UserGiftProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserGiftProto*) parseFromInputStream:(NSInputStream*) input {
  return (UserGiftProto*)[[[UserGiftProto builder] mergeFromInputStream:input] build];
}
+ (UserGiftProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserGiftProto*)[[[UserGiftProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserGiftProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserGiftProto*)[[[UserGiftProto builder] mergeFromCodedInputStream:input] build];
}
+ (UserGiftProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserGiftProto*)[[[UserGiftProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserGiftProto_Builder*) builder {
  return [[UserGiftProto_Builder alloc] init];
}
+ (UserGiftProto_Builder*) builderWithPrototype:(UserGiftProto*) prototype {
  return [[UserGiftProto builder] mergeFrom:prototype];
}
- (UserGiftProto_Builder*) builder {
  return [UserGiftProto builder];
}
- (UserGiftProto_Builder*) toBuilder {
  return [UserGiftProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUgUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ugUuid", self.ugUuid];
  }
  if (self.hasReceiverUserUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"receiverUserUuid", self.receiverUserUuid];
  }
  if (self.hasGifterUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"gifterUser"];
    [self.gifterUser writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGift) {
    [output appendFormat:@"%@%@ {\n", indent, @"gift"];
    [self.gift writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTimeReceived) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timeReceived", [NSNumber numberWithLongLong:self.timeReceived]];
  }
  if (self.hasReward) {
    [output appendFormat:@"%@%@ {\n", indent, @"reward"];
    [self.reward writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasHasBeenCollected) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasBeenCollected", [NSNumber numberWithBool:self.hasBeenCollected]];
  }
  if (self.hasMinutesTillExpiration) {
    [output appendFormat:@"%@%@: %@\n", indent, @"minutesTillExpiration", [NSNumber numberWithInteger:self.minutesTillExpiration]];
  }
  if (self.hasTangoGift) {
    [output appendFormat:@"%@%@ {\n", indent, @"tangoGift"];
    [self.tangoGift writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UserGiftProto class]]) {
    return NO;
  }
  UserGiftProto *otherMessage = other;
  return
      self.hasUgUuid == otherMessage.hasUgUuid &&
      (!self.hasUgUuid || [self.ugUuid isEqual:otherMessage.ugUuid]) &&
      self.hasReceiverUserUuid == otherMessage.hasReceiverUserUuid &&
      (!self.hasReceiverUserUuid || [self.receiverUserUuid isEqual:otherMessage.receiverUserUuid]) &&
      self.hasGifterUser == otherMessage.hasGifterUser &&
      (!self.hasGifterUser || [self.gifterUser isEqual:otherMessage.gifterUser]) &&
      self.hasGift == otherMessage.hasGift &&
      (!self.hasGift || [self.gift isEqual:otherMessage.gift]) &&
      self.hasTimeReceived == otherMessage.hasTimeReceived &&
      (!self.hasTimeReceived || self.timeReceived == otherMessage.timeReceived) &&
      self.hasReward == otherMessage.hasReward &&
      (!self.hasReward || [self.reward isEqual:otherMessage.reward]) &&
      self.hasHasBeenCollected == otherMessage.hasHasBeenCollected &&
      (!self.hasHasBeenCollected || self.hasBeenCollected == otherMessage.hasBeenCollected) &&
      self.hasMinutesTillExpiration == otherMessage.hasMinutesTillExpiration &&
      (!self.hasMinutesTillExpiration || self.minutesTillExpiration == otherMessage.minutesTillExpiration) &&
      self.hasTangoGift == otherMessage.hasTangoGift &&
      (!self.hasTangoGift || [self.tangoGift isEqual:otherMessage.tangoGift]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUgUuid) {
    hashCode = hashCode * 31 + [self.ugUuid hash];
  }
  if (self.hasReceiverUserUuid) {
    hashCode = hashCode * 31 + [self.receiverUserUuid hash];
  }
  if (self.hasGifterUser) {
    hashCode = hashCode * 31 + [self.gifterUser hash];
  }
  if (self.hasGift) {
    hashCode = hashCode * 31 + [self.gift hash];
  }
  if (self.hasTimeReceived) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.timeReceived] hash];
  }
  if (self.hasReward) {
    hashCode = hashCode * 31 + [self.reward hash];
  }
  if (self.hasHasBeenCollected) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasBeenCollected] hash];
  }
  if (self.hasMinutesTillExpiration) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.minutesTillExpiration] hash];
  }
  if (self.hasTangoGift) {
    hashCode = hashCode * 31 + [self.tangoGift hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UserGiftProto_Builder()
@property (strong) UserGiftProto* result;
@end

@implementation UserGiftProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[UserGiftProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserGiftProto_Builder*) clear {
  self.result = [[UserGiftProto alloc] init];
  return self;
}
- (UserGiftProto_Builder*) clone {
  return [UserGiftProto builderWithPrototype:result];
}
- (UserGiftProto*) defaultInstance {
  return [UserGiftProto defaultInstance];
}
- (UserGiftProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserGiftProto*) buildPartial {
  UserGiftProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (UserGiftProto_Builder*) mergeFrom:(UserGiftProto*) other {
  if (other == [UserGiftProto defaultInstance]) {
    return self;
  }
  if (other.hasUgUuid) {
    [self setUgUuid:other.ugUuid];
  }
  if (other.hasReceiverUserUuid) {
    [self setReceiverUserUuid:other.receiverUserUuid];
  }
  if (other.hasGifterUser) {
    [self mergeGifterUser:other.gifterUser];
  }
  if (other.hasGift) {
    [self mergeGift:other.gift];
  }
  if (other.hasTimeReceived) {
    [self setTimeReceived:other.timeReceived];
  }
  if (other.hasReward) {
    [self mergeReward:other.reward];
  }
  if (other.hasHasBeenCollected) {
    [self setHasBeenCollected:other.hasBeenCollected];
  }
  if (other.hasMinutesTillExpiration) {
    [self setMinutesTillExpiration:other.minutesTillExpiration];
  }
  if (other.hasTangoGift) {
    [self mergeTangoGift:other.tangoGift];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserGiftProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserGiftProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUgUuid:[input readString]];
        break;
      }
      case 18: {
        [self setReceiverUserUuid:[input readString]];
        break;
      }
      case 26: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasGifterUser) {
          [subBuilder mergeFrom:self.gifterUser];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGifterUser:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        GiftProto_Builder* subBuilder = [GiftProto builder];
        if (self.hasGift) {
          [subBuilder mergeFrom:self.gift];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGift:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setTimeReceived:[input readInt64]];
        break;
      }
      case 50: {
        RewardProto_Builder* subBuilder = [RewardProto builder];
        if (self.hasReward) {
          [subBuilder mergeFrom:self.reward];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setReward:[subBuilder buildPartial]];
        break;
      }
      case 56: {
        [self setHasBeenCollected:[input readBool]];
        break;
      }
      case 64: {
        [self setMinutesTillExpiration:[input readInt32]];
        break;
      }
      case 74: {
        UserTangoGiftProto_Builder* subBuilder = [UserTangoGiftProto builder];
        if (self.hasTangoGift) {
          [subBuilder mergeFrom:self.tangoGift];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTangoGift:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUgUuid {
  return result.hasUgUuid;
}
- (NSString*) ugUuid {
  return result.ugUuid;
}
- (UserGiftProto_Builder*) setUgUuid:(NSString*) value {
  result.hasUgUuid = YES;
  result.ugUuid = value;
  return self;
}
- (UserGiftProto_Builder*) clearUgUuid {
  result.hasUgUuid = NO;
  result.ugUuid = @"";
  return self;
}
- (BOOL) hasReceiverUserUuid {
  return result.hasReceiverUserUuid;
}
- (NSString*) receiverUserUuid {
  return result.receiverUserUuid;
}
- (UserGiftProto_Builder*) setReceiverUserUuid:(NSString*) value {
  result.hasReceiverUserUuid = YES;
  result.receiverUserUuid = value;
  return self;
}
- (UserGiftProto_Builder*) clearReceiverUserUuid {
  result.hasReceiverUserUuid = NO;
  result.receiverUserUuid = @"";
  return self;
}
- (BOOL) hasGifterUser {
  return result.hasGifterUser;
}
- (MinimumUserProto*) gifterUser {
  return result.gifterUser;
}
- (UserGiftProto_Builder*) setGifterUser:(MinimumUserProto*) value {
  result.hasGifterUser = YES;
  result.gifterUser = value;
  return self;
}
- (UserGiftProto_Builder*) setGifterUser_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setGifterUser:[builderForValue build]];
}
- (UserGiftProto_Builder*) mergeGifterUser:(MinimumUserProto*) value {
  if (result.hasGifterUser &&
      result.gifterUser != [MinimumUserProto defaultInstance]) {
    result.gifterUser =
      [[[MinimumUserProto builderWithPrototype:result.gifterUser] mergeFrom:value] buildPartial];
  } else {
    result.gifterUser = value;
  }
  result.hasGifterUser = YES;
  return self;
}
- (UserGiftProto_Builder*) clearGifterUser {
  result.hasGifterUser = NO;
  result.gifterUser = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasGift {
  return result.hasGift;
}
- (GiftProto*) gift {
  return result.gift;
}
- (UserGiftProto_Builder*) setGift:(GiftProto*) value {
  result.hasGift = YES;
  result.gift = value;
  return self;
}
- (UserGiftProto_Builder*) setGift_Builder:(GiftProto_Builder*) builderForValue {
  return [self setGift:[builderForValue build]];
}
- (UserGiftProto_Builder*) mergeGift:(GiftProto*) value {
  if (result.hasGift &&
      result.gift != [GiftProto defaultInstance]) {
    result.gift =
      [[[GiftProto builderWithPrototype:result.gift] mergeFrom:value] buildPartial];
  } else {
    result.gift = value;
  }
  result.hasGift = YES;
  return self;
}
- (UserGiftProto_Builder*) clearGift {
  result.hasGift = NO;
  result.gift = [GiftProto defaultInstance];
  return self;
}
- (BOOL) hasTimeReceived {
  return result.hasTimeReceived;
}
- (int64_t) timeReceived {
  return result.timeReceived;
}
- (UserGiftProto_Builder*) setTimeReceived:(int64_t) value {
  result.hasTimeReceived = YES;
  result.timeReceived = value;
  return self;
}
- (UserGiftProto_Builder*) clearTimeReceived {
  result.hasTimeReceived = NO;
  result.timeReceived = 0L;
  return self;
}
- (BOOL) hasReward {
  return result.hasReward;
}
- (RewardProto*) reward {
  return result.reward;
}
- (UserGiftProto_Builder*) setReward:(RewardProto*) value {
  result.hasReward = YES;
  result.reward = value;
  return self;
}
- (UserGiftProto_Builder*) setReward_Builder:(RewardProto_Builder*) builderForValue {
  return [self setReward:[builderForValue build]];
}
- (UserGiftProto_Builder*) mergeReward:(RewardProto*) value {
  if (result.hasReward &&
      result.reward != [RewardProto defaultInstance]) {
    result.reward =
      [[[RewardProto builderWithPrototype:result.reward] mergeFrom:value] buildPartial];
  } else {
    result.reward = value;
  }
  result.hasReward = YES;
  return self;
}
- (UserGiftProto_Builder*) clearReward {
  result.hasReward = NO;
  result.reward = [RewardProto defaultInstance];
  return self;
}
- (BOOL) hasHasBeenCollected {
  return result.hasHasBeenCollected;
}
- (BOOL) hasBeenCollected {
  return result.hasBeenCollected;
}
- (UserGiftProto_Builder*) setHasBeenCollected:(BOOL) value {
  result.hasHasBeenCollected = YES;
  result.hasBeenCollected = value;
  return self;
}
- (UserGiftProto_Builder*) clearHasBeenCollected {
  result.hasHasBeenCollected = NO;
  result.hasBeenCollected = NO;
  return self;
}
- (BOOL) hasMinutesTillExpiration {
  return result.hasMinutesTillExpiration;
}
- (int32_t) minutesTillExpiration {
  return result.minutesTillExpiration;
}
- (UserGiftProto_Builder*) setMinutesTillExpiration:(int32_t) value {
  result.hasMinutesTillExpiration = YES;
  result.minutesTillExpiration = value;
  return self;
}
- (UserGiftProto_Builder*) clearMinutesTillExpiration {
  result.hasMinutesTillExpiration = NO;
  result.minutesTillExpiration = 0;
  return self;
}
- (BOOL) hasTangoGift {
  return result.hasTangoGift;
}
- (UserTangoGiftProto*) tangoGift {
  return result.tangoGift;
}
- (UserGiftProto_Builder*) setTangoGift:(UserTangoGiftProto*) value {
  result.hasTangoGift = YES;
  result.tangoGift = value;
  return self;
}
- (UserGiftProto_Builder*) setTangoGift_Builder:(UserTangoGiftProto_Builder*) builderForValue {
  return [self setTangoGift:[builderForValue build]];
}
- (UserGiftProto_Builder*) mergeTangoGift:(UserTangoGiftProto*) value {
  if (result.hasTangoGift &&
      result.tangoGift != [UserTangoGiftProto defaultInstance]) {
    result.tangoGift =
      [[[UserTangoGiftProto builderWithPrototype:result.tangoGift] mergeFrom:value] buildPartial];
  } else {
    result.tangoGift = value;
  }
  result.hasTangoGift = YES;
  return self;
}
- (UserGiftProto_Builder*) clearTangoGift {
  result.hasTangoGift = NO;
  result.tangoGift = [UserTangoGiftProto defaultInstance];
  return self;
}
@end

@interface UserTangoGiftProto ()
@property (strong) NSString* userGiftUuid;
@property (strong) NSString* gifterTangoName;
@end

@implementation UserTangoGiftProto

- (BOOL) hasUserGiftUuid {
  return !!hasUserGiftUuid_;
}
- (void) setHasUserGiftUuid:(BOOL) value_ {
  hasUserGiftUuid_ = !!value_;
}
@synthesize userGiftUuid;
- (BOOL) hasGifterTangoName {
  return !!hasGifterTangoName_;
}
- (void) setHasGifterTangoName:(BOOL) value_ {
  hasGifterTangoName_ = !!value_;
}
@synthesize gifterTangoName;
- (id) init {
  if ((self = [super init])) {
    self.userGiftUuid = @"";
    self.gifterTangoName = @"";
  }
  return self;
}
static UserTangoGiftProto* defaultUserTangoGiftProtoInstance = nil;
+ (void) initialize {
  if (self == [UserTangoGiftProto class]) {
    defaultUserTangoGiftProtoInstance = [[UserTangoGiftProto alloc] init];
  }
}
+ (UserTangoGiftProto*) defaultInstance {
  return defaultUserTangoGiftProtoInstance;
}
- (UserTangoGiftProto*) defaultInstance {
  return defaultUserTangoGiftProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserGiftUuid) {
    [output writeString:1 value:self.userGiftUuid];
  }
  if (self.hasGifterTangoName) {
    [output writeString:2 value:self.gifterTangoName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserGiftUuid) {
    size_ += computeStringSize(1, self.userGiftUuid);
  }
  if (self.hasGifterTangoName) {
    size_ += computeStringSize(2, self.gifterTangoName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UserTangoGiftProto*) parseFromData:(NSData*) data {
  return (UserTangoGiftProto*)[[[UserTangoGiftProto builder] mergeFromData:data] build];
}
+ (UserTangoGiftProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserTangoGiftProto*)[[[UserTangoGiftProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserTangoGiftProto*) parseFromInputStream:(NSInputStream*) input {
  return (UserTangoGiftProto*)[[[UserTangoGiftProto builder] mergeFromInputStream:input] build];
}
+ (UserTangoGiftProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserTangoGiftProto*)[[[UserTangoGiftProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserTangoGiftProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserTangoGiftProto*)[[[UserTangoGiftProto builder] mergeFromCodedInputStream:input] build];
}
+ (UserTangoGiftProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserTangoGiftProto*)[[[UserTangoGiftProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserTangoGiftProto_Builder*) builder {
  return [[UserTangoGiftProto_Builder alloc] init];
}
+ (UserTangoGiftProto_Builder*) builderWithPrototype:(UserTangoGiftProto*) prototype {
  return [[UserTangoGiftProto builder] mergeFrom:prototype];
}
- (UserTangoGiftProto_Builder*) builder {
  return [UserTangoGiftProto builder];
}
- (UserTangoGiftProto_Builder*) toBuilder {
  return [UserTangoGiftProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserGiftUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userGiftUuid", self.userGiftUuid];
  }
  if (self.hasGifterTangoName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gifterTangoName", self.gifterTangoName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UserTangoGiftProto class]]) {
    return NO;
  }
  UserTangoGiftProto *otherMessage = other;
  return
      self.hasUserGiftUuid == otherMessage.hasUserGiftUuid &&
      (!self.hasUserGiftUuid || [self.userGiftUuid isEqual:otherMessage.userGiftUuid]) &&
      self.hasGifterTangoName == otherMessage.hasGifterTangoName &&
      (!self.hasGifterTangoName || [self.gifterTangoName isEqual:otherMessage.gifterTangoName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserGiftUuid) {
    hashCode = hashCode * 31 + [self.userGiftUuid hash];
  }
  if (self.hasGifterTangoName) {
    hashCode = hashCode * 31 + [self.gifterTangoName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UserTangoGiftProto_Builder()
@property (strong) UserTangoGiftProto* result;
@end

@implementation UserTangoGiftProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[UserTangoGiftProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserTangoGiftProto_Builder*) clear {
  self.result = [[UserTangoGiftProto alloc] init];
  return self;
}
- (UserTangoGiftProto_Builder*) clone {
  return [UserTangoGiftProto builderWithPrototype:result];
}
- (UserTangoGiftProto*) defaultInstance {
  return [UserTangoGiftProto defaultInstance];
}
- (UserTangoGiftProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserTangoGiftProto*) buildPartial {
  UserTangoGiftProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (UserTangoGiftProto_Builder*) mergeFrom:(UserTangoGiftProto*) other {
  if (other == [UserTangoGiftProto defaultInstance]) {
    return self;
  }
  if (other.hasUserGiftUuid) {
    [self setUserGiftUuid:other.userGiftUuid];
  }
  if (other.hasGifterTangoName) {
    [self setGifterTangoName:other.gifterTangoName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserTangoGiftProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserTangoGiftProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserGiftUuid:[input readString]];
        break;
      }
      case 18: {
        [self setGifterTangoName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserGiftUuid {
  return result.hasUserGiftUuid;
}
- (NSString*) userGiftUuid {
  return result.userGiftUuid;
}
- (UserTangoGiftProto_Builder*) setUserGiftUuid:(NSString*) value {
  result.hasUserGiftUuid = YES;
  result.userGiftUuid = value;
  return self;
}
- (UserTangoGiftProto_Builder*) clearUserGiftUuid {
  result.hasUserGiftUuid = NO;
  result.userGiftUuid = @"";
  return self;
}
- (BOOL) hasGifterTangoName {
  return result.hasGifterTangoName;
}
- (NSString*) gifterTangoName {
  return result.gifterTangoName;
}
- (UserTangoGiftProto_Builder*) setGifterTangoName:(NSString*) value {
  result.hasGifterTangoName = YES;
  result.gifterTangoName = value;
  return self;
}
- (UserTangoGiftProto_Builder*) clearGifterTangoName {
  result.hasGifterTangoName = NO;
  result.gifterTangoName = @"";
  return self;
}
@end

@interface UserSecretGiftProto ()
@property (strong) NSString* uisgUuid;
@property (strong) NSString* userUuid;
@property int32_t secsTillCollection;
@property (strong) RewardProto* reward;
@property int64_t createTime;
@end

@implementation UserSecretGiftProto

- (BOOL) hasUisgUuid {
  return !!hasUisgUuid_;
}
- (void) setHasUisgUuid:(BOOL) value_ {
  hasUisgUuid_ = !!value_;
}
@synthesize uisgUuid;
- (BOOL) hasUserUuid {
  return !!hasUserUuid_;
}
- (void) setHasUserUuid:(BOOL) value_ {
  hasUserUuid_ = !!value_;
}
@synthesize userUuid;
- (BOOL) hasSecsTillCollection {
  return !!hasSecsTillCollection_;
}
- (void) setHasSecsTillCollection:(BOOL) value_ {
  hasSecsTillCollection_ = !!value_;
}
@synthesize secsTillCollection;
- (BOOL) hasReward {
  return !!hasReward_;
}
- (void) setHasReward:(BOOL) value_ {
  hasReward_ = !!value_;
}
@synthesize reward;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) value_ {
  hasCreateTime_ = !!value_;
}
@synthesize createTime;
- (id) init {
  if ((self = [super init])) {
    self.uisgUuid = @"";
    self.userUuid = @"";
    self.secsTillCollection = 0;
    self.reward = [RewardProto defaultInstance];
    self.createTime = 0L;
  }
  return self;
}
static UserSecretGiftProto* defaultUserSecretGiftProtoInstance = nil;
+ (void) initialize {
  if (self == [UserSecretGiftProto class]) {
    defaultUserSecretGiftProtoInstance = [[UserSecretGiftProto alloc] init];
  }
}
+ (UserSecretGiftProto*) defaultInstance {
  return defaultUserSecretGiftProtoInstance;
}
- (UserSecretGiftProto*) defaultInstance {
  return defaultUserSecretGiftProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUisgUuid) {
    [output writeString:1 value:self.uisgUuid];
  }
  if (self.hasUserUuid) {
    [output writeString:2 value:self.userUuid];
  }
  if (self.hasSecsTillCollection) {
    [output writeInt32:3 value:self.secsTillCollection];
  }
  if (self.hasReward) {
    [output writeMessage:4 value:self.reward];
  }
  if (self.hasCreateTime) {
    [output writeInt64:5 value:self.createTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUisgUuid) {
    size_ += computeStringSize(1, self.uisgUuid);
  }
  if (self.hasUserUuid) {
    size_ += computeStringSize(2, self.userUuid);
  }
  if (self.hasSecsTillCollection) {
    size_ += computeInt32Size(3, self.secsTillCollection);
  }
  if (self.hasReward) {
    size_ += computeMessageSize(4, self.reward);
  }
  if (self.hasCreateTime) {
    size_ += computeInt64Size(5, self.createTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UserSecretGiftProto*) parseFromData:(NSData*) data {
  return (UserSecretGiftProto*)[[[UserSecretGiftProto builder] mergeFromData:data] build];
}
+ (UserSecretGiftProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserSecretGiftProto*)[[[UserSecretGiftProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserSecretGiftProto*) parseFromInputStream:(NSInputStream*) input {
  return (UserSecretGiftProto*)[[[UserSecretGiftProto builder] mergeFromInputStream:input] build];
}
+ (UserSecretGiftProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserSecretGiftProto*)[[[UserSecretGiftProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserSecretGiftProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserSecretGiftProto*)[[[UserSecretGiftProto builder] mergeFromCodedInputStream:input] build];
}
+ (UserSecretGiftProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserSecretGiftProto*)[[[UserSecretGiftProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserSecretGiftProto_Builder*) builder {
  return [[UserSecretGiftProto_Builder alloc] init];
}
+ (UserSecretGiftProto_Builder*) builderWithPrototype:(UserSecretGiftProto*) prototype {
  return [[UserSecretGiftProto builder] mergeFrom:prototype];
}
- (UserSecretGiftProto_Builder*) builder {
  return [UserSecretGiftProto builder];
}
- (UserSecretGiftProto_Builder*) toBuilder {
  return [UserSecretGiftProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUisgUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uisgUuid", self.uisgUuid];
  }
  if (self.hasUserUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userUuid", self.userUuid];
  }
  if (self.hasSecsTillCollection) {
    [output appendFormat:@"%@%@: %@\n", indent, @"secsTillCollection", [NSNumber numberWithInteger:self.secsTillCollection]];
  }
  if (self.hasReward) {
    [output appendFormat:@"%@%@ {\n", indent, @"reward"];
    [self.reward writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCreateTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createTime", [NSNumber numberWithLongLong:self.createTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UserSecretGiftProto class]]) {
    return NO;
  }
  UserSecretGiftProto *otherMessage = other;
  return
      self.hasUisgUuid == otherMessage.hasUisgUuid &&
      (!self.hasUisgUuid || [self.uisgUuid isEqual:otherMessage.uisgUuid]) &&
      self.hasUserUuid == otherMessage.hasUserUuid &&
      (!self.hasUserUuid || [self.userUuid isEqual:otherMessage.userUuid]) &&
      self.hasSecsTillCollection == otherMessage.hasSecsTillCollection &&
      (!self.hasSecsTillCollection || self.secsTillCollection == otherMessage.secsTillCollection) &&
      self.hasReward == otherMessage.hasReward &&
      (!self.hasReward || [self.reward isEqual:otherMessage.reward]) &&
      self.hasCreateTime == otherMessage.hasCreateTime &&
      (!self.hasCreateTime || self.createTime == otherMessage.createTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUisgUuid) {
    hashCode = hashCode * 31 + [self.uisgUuid hash];
  }
  if (self.hasUserUuid) {
    hashCode = hashCode * 31 + [self.userUuid hash];
  }
  if (self.hasSecsTillCollection) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.secsTillCollection] hash];
  }
  if (self.hasReward) {
    hashCode = hashCode * 31 + [self.reward hash];
  }
  if (self.hasCreateTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UserSecretGiftProto_Builder()
@property (strong) UserSecretGiftProto* result;
@end

@implementation UserSecretGiftProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[UserSecretGiftProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserSecretGiftProto_Builder*) clear {
  self.result = [[UserSecretGiftProto alloc] init];
  return self;
}
- (UserSecretGiftProto_Builder*) clone {
  return [UserSecretGiftProto builderWithPrototype:result];
}
- (UserSecretGiftProto*) defaultInstance {
  return [UserSecretGiftProto defaultInstance];
}
- (UserSecretGiftProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserSecretGiftProto*) buildPartial {
  UserSecretGiftProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (UserSecretGiftProto_Builder*) mergeFrom:(UserSecretGiftProto*) other {
  if (other == [UserSecretGiftProto defaultInstance]) {
    return self;
  }
  if (other.hasUisgUuid) {
    [self setUisgUuid:other.uisgUuid];
  }
  if (other.hasUserUuid) {
    [self setUserUuid:other.userUuid];
  }
  if (other.hasSecsTillCollection) {
    [self setSecsTillCollection:other.secsTillCollection];
  }
  if (other.hasReward) {
    [self mergeReward:other.reward];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserSecretGiftProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserSecretGiftProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUisgUuid:[input readString]];
        break;
      }
      case 18: {
        [self setUserUuid:[input readString]];
        break;
      }
      case 24: {
        [self setSecsTillCollection:[input readInt32]];
        break;
      }
      case 34: {
        RewardProto_Builder* subBuilder = [RewardProto builder];
        if (self.hasReward) {
          [subBuilder mergeFrom:self.reward];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setReward:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setCreateTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUisgUuid {
  return result.hasUisgUuid;
}
- (NSString*) uisgUuid {
  return result.uisgUuid;
}
- (UserSecretGiftProto_Builder*) setUisgUuid:(NSString*) value {
  result.hasUisgUuid = YES;
  result.uisgUuid = value;
  return self;
}
- (UserSecretGiftProto_Builder*) clearUisgUuid {
  result.hasUisgUuid = NO;
  result.uisgUuid = @"";
  return self;
}
- (BOOL) hasUserUuid {
  return result.hasUserUuid;
}
- (NSString*) userUuid {
  return result.userUuid;
}
- (UserSecretGiftProto_Builder*) setUserUuid:(NSString*) value {
  result.hasUserUuid = YES;
  result.userUuid = value;
  return self;
}
- (UserSecretGiftProto_Builder*) clearUserUuid {
  result.hasUserUuid = NO;
  result.userUuid = @"";
  return self;
}
- (BOOL) hasSecsTillCollection {
  return result.hasSecsTillCollection;
}
- (int32_t) secsTillCollection {
  return result.secsTillCollection;
}
- (UserSecretGiftProto_Builder*) setSecsTillCollection:(int32_t) value {
  result.hasSecsTillCollection = YES;
  result.secsTillCollection = value;
  return self;
}
- (UserSecretGiftProto_Builder*) clearSecsTillCollection {
  result.hasSecsTillCollection = NO;
  result.secsTillCollection = 0;
  return self;
}
- (BOOL) hasReward {
  return result.hasReward;
}
- (RewardProto*) reward {
  return result.reward;
}
- (UserSecretGiftProto_Builder*) setReward:(RewardProto*) value {
  result.hasReward = YES;
  result.reward = value;
  return self;
}
- (UserSecretGiftProto_Builder*) setReward_Builder:(RewardProto_Builder*) builderForValue {
  return [self setReward:[builderForValue build]];
}
- (UserSecretGiftProto_Builder*) mergeReward:(RewardProto*) value {
  if (result.hasReward &&
      result.reward != [RewardProto defaultInstance]) {
    result.reward =
      [[[RewardProto builderWithPrototype:result.reward] mergeFrom:value] buildPartial];
  } else {
    result.reward = value;
  }
  result.hasReward = YES;
  return self;
}
- (UserSecretGiftProto_Builder*) clearReward {
  result.hasReward = NO;
  result.reward = [RewardProto defaultInstance];
  return self;
}
- (BOOL) hasCreateTime {
  return result.hasCreateTime;
}
- (int64_t) createTime {
  return result.createTime;
}
- (UserSecretGiftProto_Builder*) setCreateTime:(int64_t) value {
  result.hasCreateTime = YES;
  result.createTime = value;
  return self;
}
- (UserSecretGiftProto_Builder*) clearCreateTime {
  result.hasCreateTime = NO;
  result.createTime = 0L;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
