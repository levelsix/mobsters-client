// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Structure.pb.h"
// @@protoc_insertion_point(imports)

@implementation StructureRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [StructureRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [SharedEnumConfigRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL ResourceTypeIsValidValue(ResourceType value) {
  switch (value) {
    case ResourceTypeNoResource:
    case ResourceTypeCash:
    case ResourceTypeOil:
    case ResourceTypeGems:
    case ResourceTypeMonster:
      return YES;
    default:
      return NO;
  }
}
BOOL StructOrientationIsValidValue(StructOrientation value) {
  switch (value) {
    case StructOrientationNoOrientation:
    case StructOrientationPosition1:
    case StructOrientationPosition2:
      return YES;
    default:
      return NO;
  }
}
BOOL BoardObstacleTypeIsValidValue(BoardObstacleType value) {
  switch (value) {
    case BoardObstacleTypeCloud:
    case BoardObstacleTypeLock:
    case BoardObstacleTypeHole:
      return YES;
    default:
      return NO;
  }
}
@interface StructureInfoProto ()
@property int32_t structId;
@property (strong) NSString* name;
@property int32_t level;
@property StructureInfoProto_StructType structType;
@property ResourceType buildResourceType;
@property int32_t buildCost;
@property int32_t minutesToBuild;
@property int32_t width;
@property int32_t height;
@property int32_t predecessorStructId;
@property int32_t successorStructId;
@property (strong) NSString* imgName;
@property Float32 imgVerticalPixelOffset;
@property Float32 imgHorizontalPixelOffset;
@property (strong) NSString* description;
@property (strong) NSString* shortDescription;
@property (strong) NSString* shadowImgName;
@property Float32 shadowVerticalOffset;
@property Float32 shadowHorizontalOfffset;
@property Float32 shadowScale;
@end

@implementation StructureInfoProto

- (BOOL) hasStructId {
  return !!hasStructId_;
}
- (void) setHasStructId:(BOOL) value_ {
  hasStructId_ = !!value_;
}
@synthesize structId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasLevel {
  return !!hasLevel_;
}
- (void) setHasLevel:(BOOL) value_ {
  hasLevel_ = !!value_;
}
@synthesize level;
- (BOOL) hasStructType {
  return !!hasStructType_;
}
- (void) setHasStructType:(BOOL) value_ {
  hasStructType_ = !!value_;
}
@synthesize structType;
- (BOOL) hasBuildResourceType {
  return !!hasBuildResourceType_;
}
- (void) setHasBuildResourceType:(BOOL) value_ {
  hasBuildResourceType_ = !!value_;
}
@synthesize buildResourceType;
- (BOOL) hasBuildCost {
  return !!hasBuildCost_;
}
- (void) setHasBuildCost:(BOOL) value_ {
  hasBuildCost_ = !!value_;
}
@synthesize buildCost;
- (BOOL) hasMinutesToBuild {
  return !!hasMinutesToBuild_;
}
- (void) setHasMinutesToBuild:(BOOL) value_ {
  hasMinutesToBuild_ = !!value_;
}
@synthesize minutesToBuild;
- (BOOL) hasWidth {
  return !!hasWidth_;
}
- (void) setHasWidth:(BOOL) value_ {
  hasWidth_ = !!value_;
}
@synthesize width;
- (BOOL) hasHeight {
  return !!hasHeight_;
}
- (void) setHasHeight:(BOOL) value_ {
  hasHeight_ = !!value_;
}
@synthesize height;
- (BOOL) hasPredecessorStructId {
  return !!hasPredecessorStructId_;
}
- (void) setHasPredecessorStructId:(BOOL) value_ {
  hasPredecessorStructId_ = !!value_;
}
@synthesize predecessorStructId;
- (BOOL) hasSuccessorStructId {
  return !!hasSuccessorStructId_;
}
- (void) setHasSuccessorStructId:(BOOL) value_ {
  hasSuccessorStructId_ = !!value_;
}
@synthesize successorStructId;
- (BOOL) hasImgName {
  return !!hasImgName_;
}
- (void) setHasImgName:(BOOL) value_ {
  hasImgName_ = !!value_;
}
@synthesize imgName;
- (BOOL) hasImgVerticalPixelOffset {
  return !!hasImgVerticalPixelOffset_;
}
- (void) setHasImgVerticalPixelOffset:(BOOL) value_ {
  hasImgVerticalPixelOffset_ = !!value_;
}
@synthesize imgVerticalPixelOffset;
- (BOOL) hasImgHorizontalPixelOffset {
  return !!hasImgHorizontalPixelOffset_;
}
- (void) setHasImgHorizontalPixelOffset:(BOOL) value_ {
  hasImgHorizontalPixelOffset_ = !!value_;
}
@synthesize imgHorizontalPixelOffset;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) value_ {
  hasDescription_ = !!value_;
}
@synthesize description;
- (BOOL) hasShortDescription {
  return !!hasShortDescription_;
}
- (void) setHasShortDescription:(BOOL) value_ {
  hasShortDescription_ = !!value_;
}
@synthesize shortDescription;
- (BOOL) hasShadowImgName {
  return !!hasShadowImgName_;
}
- (void) setHasShadowImgName:(BOOL) value_ {
  hasShadowImgName_ = !!value_;
}
@synthesize shadowImgName;
- (BOOL) hasShadowVerticalOffset {
  return !!hasShadowVerticalOffset_;
}
- (void) setHasShadowVerticalOffset:(BOOL) value_ {
  hasShadowVerticalOffset_ = !!value_;
}
@synthesize shadowVerticalOffset;
- (BOOL) hasShadowHorizontalOfffset {
  return !!hasShadowHorizontalOfffset_;
}
- (void) setHasShadowHorizontalOfffset:(BOOL) value_ {
  hasShadowHorizontalOfffset_ = !!value_;
}
@synthesize shadowHorizontalOfffset;
- (BOOL) hasShadowScale {
  return !!hasShadowScale_;
}
- (void) setHasShadowScale:(BOOL) value_ {
  hasShadowScale_ = !!value_;
}
@synthesize shadowScale;
- (id) init {
  if ((self = [super init])) {
    self.structId = 0;
    self.name = @"";
    self.level = 0;
    self.structType = StructureInfoProto_StructTypeNoStruct;
    self.buildResourceType = ResourceTypeNoResource;
    self.buildCost = 0;
    self.minutesToBuild = 0;
    self.width = 0;
    self.height = 0;
    self.predecessorStructId = 0;
    self.successorStructId = 0;
    self.imgName = @"";
    self.imgVerticalPixelOffset = 0;
    self.imgHorizontalPixelOffset = 0;
    self.description = @"";
    self.shortDescription = @"";
    self.shadowImgName = @"";
    self.shadowVerticalOffset = 0;
    self.shadowHorizontalOfffset = 0;
    self.shadowScale = 0;
  }
  return self;
}
static StructureInfoProto* defaultStructureInfoProtoInstance = nil;
+ (void) initialize {
  if (self == [StructureInfoProto class]) {
    defaultStructureInfoProtoInstance = [[StructureInfoProto alloc] init];
  }
}
+ (StructureInfoProto*) defaultInstance {
  return defaultStructureInfoProtoInstance;
}
- (StructureInfoProto*) defaultInstance {
  return defaultStructureInfoProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructId) {
    [output writeInt32:1 value:self.structId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasLevel) {
    [output writeInt32:3 value:self.level];
  }
  if (self.hasStructType) {
    [output writeEnum:4 value:self.structType];
  }
  if (self.hasBuildResourceType) {
    [output writeEnum:5 value:self.buildResourceType];
  }
  if (self.hasBuildCost) {
    [output writeInt32:6 value:self.buildCost];
  }
  if (self.hasMinutesToBuild) {
    [output writeInt32:7 value:self.minutesToBuild];
  }
  if (self.hasWidth) {
    [output writeInt32:8 value:self.width];
  }
  if (self.hasHeight) {
    [output writeInt32:9 value:self.height];
  }
  if (self.hasPredecessorStructId) {
    [output writeInt32:10 value:self.predecessorStructId];
  }
  if (self.hasSuccessorStructId) {
    [output writeInt32:11 value:self.successorStructId];
  }
  if (self.hasImgName) {
    [output writeString:12 value:self.imgName];
  }
  if (self.hasImgVerticalPixelOffset) {
    [output writeFloat:13 value:self.imgVerticalPixelOffset];
  }
  if (self.hasImgHorizontalPixelOffset) {
    [output writeFloat:14 value:self.imgHorizontalPixelOffset];
  }
  if (self.hasDescription) {
    [output writeString:15 value:self.description];
  }
  if (self.hasShortDescription) {
    [output writeString:16 value:self.shortDescription];
  }
  if (self.hasShadowImgName) {
    [output writeString:18 value:self.shadowImgName];
  }
  if (self.hasShadowVerticalOffset) {
    [output writeFloat:19 value:self.shadowVerticalOffset];
  }
  if (self.hasShadowHorizontalOfffset) {
    [output writeFloat:20 value:self.shadowHorizontalOfffset];
  }
  if (self.hasShadowScale) {
    [output writeFloat:21 value:self.shadowScale];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStructId) {
    size_ += computeInt32Size(1, self.structId);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasLevel) {
    size_ += computeInt32Size(3, self.level);
  }
  if (self.hasStructType) {
    size_ += computeEnumSize(4, self.structType);
  }
  if (self.hasBuildResourceType) {
    size_ += computeEnumSize(5, self.buildResourceType);
  }
  if (self.hasBuildCost) {
    size_ += computeInt32Size(6, self.buildCost);
  }
  if (self.hasMinutesToBuild) {
    size_ += computeInt32Size(7, self.minutesToBuild);
  }
  if (self.hasWidth) {
    size_ += computeInt32Size(8, self.width);
  }
  if (self.hasHeight) {
    size_ += computeInt32Size(9, self.height);
  }
  if (self.hasPredecessorStructId) {
    size_ += computeInt32Size(10, self.predecessorStructId);
  }
  if (self.hasSuccessorStructId) {
    size_ += computeInt32Size(11, self.successorStructId);
  }
  if (self.hasImgName) {
    size_ += computeStringSize(12, self.imgName);
  }
  if (self.hasImgVerticalPixelOffset) {
    size_ += computeFloatSize(13, self.imgVerticalPixelOffset);
  }
  if (self.hasImgHorizontalPixelOffset) {
    size_ += computeFloatSize(14, self.imgHorizontalPixelOffset);
  }
  if (self.hasDescription) {
    size_ += computeStringSize(15, self.description);
  }
  if (self.hasShortDescription) {
    size_ += computeStringSize(16, self.shortDescription);
  }
  if (self.hasShadowImgName) {
    size_ += computeStringSize(18, self.shadowImgName);
  }
  if (self.hasShadowVerticalOffset) {
    size_ += computeFloatSize(19, self.shadowVerticalOffset);
  }
  if (self.hasShadowHorizontalOfffset) {
    size_ += computeFloatSize(20, self.shadowHorizontalOfffset);
  }
  if (self.hasShadowScale) {
    size_ += computeFloatSize(21, self.shadowScale);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (StructureInfoProto*) parseFromData:(NSData*) data {
  return (StructureInfoProto*)[[[StructureInfoProto builder] mergeFromData:data] build];
}
+ (StructureInfoProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StructureInfoProto*)[[[StructureInfoProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StructureInfoProto*) parseFromInputStream:(NSInputStream*) input {
  return (StructureInfoProto*)[[[StructureInfoProto builder] mergeFromInputStream:input] build];
}
+ (StructureInfoProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StructureInfoProto*)[[[StructureInfoProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StructureInfoProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StructureInfoProto*)[[[StructureInfoProto builder] mergeFromCodedInputStream:input] build];
}
+ (StructureInfoProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StructureInfoProto*)[[[StructureInfoProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StructureInfoProto_Builder*) builder {
  return [[StructureInfoProto_Builder alloc] init];
}
+ (StructureInfoProto_Builder*) builderWithPrototype:(StructureInfoProto*) prototype {
  return [[StructureInfoProto builder] mergeFrom:prototype];
}
- (StructureInfoProto_Builder*) builder {
  return [StructureInfoProto builder];
}
- (StructureInfoProto_Builder*) toBuilder {
  return [StructureInfoProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStructId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"structId", [NSNumber numberWithInteger:self.structId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasLevel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"level", [NSNumber numberWithInteger:self.level]];
  }
  if (self.hasStructType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"structType", [NSNumber numberWithInteger:self.structType]];
  }
  if (self.hasBuildResourceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"buildResourceType", [NSNumber numberWithInteger:self.buildResourceType]];
  }
  if (self.hasBuildCost) {
    [output appendFormat:@"%@%@: %@\n", indent, @"buildCost", [NSNumber numberWithInteger:self.buildCost]];
  }
  if (self.hasMinutesToBuild) {
    [output appendFormat:@"%@%@: %@\n", indent, @"minutesToBuild", [NSNumber numberWithInteger:self.minutesToBuild]];
  }
  if (self.hasWidth) {
    [output appendFormat:@"%@%@: %@\n", indent, @"width", [NSNumber numberWithInteger:self.width]];
  }
  if (self.hasHeight) {
    [output appendFormat:@"%@%@: %@\n", indent, @"height", [NSNumber numberWithInteger:self.height]];
  }
  if (self.hasPredecessorStructId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"predecessorStructId", [NSNumber numberWithInteger:self.predecessorStructId]];
  }
  if (self.hasSuccessorStructId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"successorStructId", [NSNumber numberWithInteger:self.successorStructId]];
  }
  if (self.hasImgName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imgName", self.imgName];
  }
  if (self.hasImgVerticalPixelOffset) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imgVerticalPixelOffset", [NSNumber numberWithFloat:self.imgVerticalPixelOffset]];
  }
  if (self.hasImgHorizontalPixelOffset) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imgHorizontalPixelOffset", [NSNumber numberWithFloat:self.imgHorizontalPixelOffset]];
  }
  if (self.hasDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"description", self.description];
  }
  if (self.hasShortDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"shortDescription", self.shortDescription];
  }
  if (self.hasShadowImgName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"shadowImgName", self.shadowImgName];
  }
  if (self.hasShadowVerticalOffset) {
    [output appendFormat:@"%@%@: %@\n", indent, @"shadowVerticalOffset", [NSNumber numberWithFloat:self.shadowVerticalOffset]];
  }
  if (self.hasShadowHorizontalOfffset) {
    [output appendFormat:@"%@%@: %@\n", indent, @"shadowHorizontalOfffset", [NSNumber numberWithFloat:self.shadowHorizontalOfffset]];
  }
  if (self.hasShadowScale) {
    [output appendFormat:@"%@%@: %@\n", indent, @"shadowScale", [NSNumber numberWithFloat:self.shadowScale]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[StructureInfoProto class]]) {
    return NO;
  }
  StructureInfoProto *otherMessage = other;
  return
      self.hasStructId == otherMessage.hasStructId &&
      (!self.hasStructId || self.structId == otherMessage.structId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasLevel == otherMessage.hasLevel &&
      (!self.hasLevel || self.level == otherMessage.level) &&
      self.hasStructType == otherMessage.hasStructType &&
      (!self.hasStructType || self.structType == otherMessage.structType) &&
      self.hasBuildResourceType == otherMessage.hasBuildResourceType &&
      (!self.hasBuildResourceType || self.buildResourceType == otherMessage.buildResourceType) &&
      self.hasBuildCost == otherMessage.hasBuildCost &&
      (!self.hasBuildCost || self.buildCost == otherMessage.buildCost) &&
      self.hasMinutesToBuild == otherMessage.hasMinutesToBuild &&
      (!self.hasMinutesToBuild || self.minutesToBuild == otherMessage.minutesToBuild) &&
      self.hasWidth == otherMessage.hasWidth &&
      (!self.hasWidth || self.width == otherMessage.width) &&
      self.hasHeight == otherMessage.hasHeight &&
      (!self.hasHeight || self.height == otherMessage.height) &&
      self.hasPredecessorStructId == otherMessage.hasPredecessorStructId &&
      (!self.hasPredecessorStructId || self.predecessorStructId == otherMessage.predecessorStructId) &&
      self.hasSuccessorStructId == otherMessage.hasSuccessorStructId &&
      (!self.hasSuccessorStructId || self.successorStructId == otherMessage.successorStructId) &&
      self.hasImgName == otherMessage.hasImgName &&
      (!self.hasImgName || [self.imgName isEqual:otherMessage.imgName]) &&
      self.hasImgVerticalPixelOffset == otherMessage.hasImgVerticalPixelOffset &&
      (!self.hasImgVerticalPixelOffset || self.imgVerticalPixelOffset == otherMessage.imgVerticalPixelOffset) &&
      self.hasImgHorizontalPixelOffset == otherMessage.hasImgHorizontalPixelOffset &&
      (!self.hasImgHorizontalPixelOffset || self.imgHorizontalPixelOffset == otherMessage.imgHorizontalPixelOffset) &&
      self.hasDescription == otherMessage.hasDescription &&
      (!self.hasDescription || [self.description isEqual:otherMessage.description]) &&
      self.hasShortDescription == otherMessage.hasShortDescription &&
      (!self.hasShortDescription || [self.shortDescription isEqual:otherMessage.shortDescription]) &&
      self.hasShadowImgName == otherMessage.hasShadowImgName &&
      (!self.hasShadowImgName || [self.shadowImgName isEqual:otherMessage.shadowImgName]) &&
      self.hasShadowVerticalOffset == otherMessage.hasShadowVerticalOffset &&
      (!self.hasShadowVerticalOffset || self.shadowVerticalOffset == otherMessage.shadowVerticalOffset) &&
      self.hasShadowHorizontalOfffset == otherMessage.hasShadowHorizontalOfffset &&
      (!self.hasShadowHorizontalOfffset || self.shadowHorizontalOfffset == otherMessage.shadowHorizontalOfffset) &&
      self.hasShadowScale == otherMessage.hasShadowScale &&
      (!self.hasShadowScale || self.shadowScale == otherMessage.shadowScale) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStructId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.structId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasLevel) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.level] hash];
  }
  if (self.hasStructType) {
    hashCode = hashCode * 31 + self.structType;
  }
  if (self.hasBuildResourceType) {
    hashCode = hashCode * 31 + self.buildResourceType;
  }
  if (self.hasBuildCost) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.buildCost] hash];
  }
  if (self.hasMinutesToBuild) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.minutesToBuild] hash];
  }
  if (self.hasWidth) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.width] hash];
  }
  if (self.hasHeight) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.height] hash];
  }
  if (self.hasPredecessorStructId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.predecessorStructId] hash];
  }
  if (self.hasSuccessorStructId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.successorStructId] hash];
  }
  if (self.hasImgName) {
    hashCode = hashCode * 31 + [self.imgName hash];
  }
  if (self.hasImgVerticalPixelOffset) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.imgVerticalPixelOffset] hash];
  }
  if (self.hasImgHorizontalPixelOffset) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.imgHorizontalPixelOffset] hash];
  }
  if (self.hasDescription) {
    hashCode = hashCode * 31 + [self.description hash];
  }
  if (self.hasShortDescription) {
    hashCode = hashCode * 31 + [self.shortDescription hash];
  }
  if (self.hasShadowImgName) {
    hashCode = hashCode * 31 + [self.shadowImgName hash];
  }
  if (self.hasShadowVerticalOffset) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.shadowVerticalOffset] hash];
  }
  if (self.hasShadowHorizontalOfffset) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.shadowHorizontalOfffset] hash];
  }
  if (self.hasShadowScale) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.shadowScale] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL StructureInfoProto_StructTypeIsValidValue(StructureInfoProto_StructType value) {
  switch (value) {
    case StructureInfoProto_StructTypeNoStruct:
    case StructureInfoProto_StructTypeResourceGenerator:
    case StructureInfoProto_StructTypeResourceStorage:
    case StructureInfoProto_StructTypeHospital:
    case StructureInfoProto_StructTypeResidence:
    case StructureInfoProto_StructTypeTownHall:
    case StructureInfoProto_StructTypeLab:
    case StructureInfoProto_StructTypeEvo:
    case StructureInfoProto_StructTypeMiniJob:
    case StructureInfoProto_StructTypeTeamCenter:
    case StructureInfoProto_StructTypeClan:
    case StructureInfoProto_StructTypeMoneyTree:
    case StructureInfoProto_StructTypePvpBoard:
    case StructureInfoProto_StructTypeResearchHouse:
    case StructureInfoProto_StructTypeBattleItemFactory:
      return YES;
    default:
      return NO;
  }
}
@interface StructureInfoProto_Builder()
@property (strong) StructureInfoProto* result;
@end

@implementation StructureInfoProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[StructureInfoProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StructureInfoProto_Builder*) clear {
  self.result = [[StructureInfoProto alloc] init];
  return self;
}
- (StructureInfoProto_Builder*) clone {
  return [StructureInfoProto builderWithPrototype:result];
}
- (StructureInfoProto*) defaultInstance {
  return [StructureInfoProto defaultInstance];
}
- (StructureInfoProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StructureInfoProto*) buildPartial {
  StructureInfoProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (StructureInfoProto_Builder*) mergeFrom:(StructureInfoProto*) other {
  if (other == [StructureInfoProto defaultInstance]) {
    return self;
  }
  if (other.hasStructId) {
    [self setStructId:other.structId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasLevel) {
    [self setLevel:other.level];
  }
  if (other.hasStructType) {
    [self setStructType:other.structType];
  }
  if (other.hasBuildResourceType) {
    [self setBuildResourceType:other.buildResourceType];
  }
  if (other.hasBuildCost) {
    [self setBuildCost:other.buildCost];
  }
  if (other.hasMinutesToBuild) {
    [self setMinutesToBuild:other.minutesToBuild];
  }
  if (other.hasWidth) {
    [self setWidth:other.width];
  }
  if (other.hasHeight) {
    [self setHeight:other.height];
  }
  if (other.hasPredecessorStructId) {
    [self setPredecessorStructId:other.predecessorStructId];
  }
  if (other.hasSuccessorStructId) {
    [self setSuccessorStructId:other.successorStructId];
  }
  if (other.hasImgName) {
    [self setImgName:other.imgName];
  }
  if (other.hasImgVerticalPixelOffset) {
    [self setImgVerticalPixelOffset:other.imgVerticalPixelOffset];
  }
  if (other.hasImgHorizontalPixelOffset) {
    [self setImgHorizontalPixelOffset:other.imgHorizontalPixelOffset];
  }
  if (other.hasDescription) {
    [self setDescription:other.description];
  }
  if (other.hasShortDescription) {
    [self setShortDescription:other.shortDescription];
  }
  if (other.hasShadowImgName) {
    [self setShadowImgName:other.shadowImgName];
  }
  if (other.hasShadowVerticalOffset) {
    [self setShadowVerticalOffset:other.shadowVerticalOffset];
  }
  if (other.hasShadowHorizontalOfffset) {
    [self setShadowHorizontalOfffset:other.shadowHorizontalOfffset];
  }
  if (other.hasShadowScale) {
    [self setShadowScale:other.shadowScale];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StructureInfoProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StructureInfoProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStructId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setLevel:[input readInt32]];
        break;
      }
      case 32: {
        StructureInfoProto_StructType value = (StructureInfoProto_StructType)[input readEnum];
        if (StructureInfoProto_StructTypeIsValidValue(value)) {
          [self setStructType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        ResourceType value = (ResourceType)[input readEnum];
        if (ResourceTypeIsValidValue(value)) {
          [self setBuildResourceType:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 48: {
        [self setBuildCost:[input readInt32]];
        break;
      }
      case 56: {
        [self setMinutesToBuild:[input readInt32]];
        break;
      }
      case 64: {
        [self setWidth:[input readInt32]];
        break;
      }
      case 72: {
        [self setHeight:[input readInt32]];
        break;
      }
      case 80: {
        [self setPredecessorStructId:[input readInt32]];
        break;
      }
      case 88: {
        [self setSuccessorStructId:[input readInt32]];
        break;
      }
      case 98: {
        [self setImgName:[input readString]];
        break;
      }
      case 109: {
        [self setImgVerticalPixelOffset:[input readFloat]];
        break;
      }
      case 117: {
        [self setImgHorizontalPixelOffset:[input readFloat]];
        break;
      }
      case 122: {
        [self setDescription:[input readString]];
        break;
      }
      case 130: {
        [self setShortDescription:[input readString]];
        break;
      }
      case 146: {
        [self setShadowImgName:[input readString]];
        break;
      }
      case 157: {
        [self setShadowVerticalOffset:[input readFloat]];
        break;
      }
      case 165: {
        [self setShadowHorizontalOfffset:[input readFloat]];
        break;
      }
      case 173: {
        [self setShadowScale:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasStructId {
  return result.hasStructId;
}
- (int32_t) structId {
  return result.structId;
}
- (StructureInfoProto_Builder*) setStructId:(int32_t) value {
  result.hasStructId = YES;
  result.structId = value;
  return self;
}
- (StructureInfoProto_Builder*) clearStructId {
  result.hasStructId = NO;
  result.structId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (StructureInfoProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (StructureInfoProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasLevel {
  return result.hasLevel;
}
- (int32_t) level {
  return result.level;
}
- (StructureInfoProto_Builder*) setLevel:(int32_t) value {
  result.hasLevel = YES;
  result.level = value;
  return self;
}
- (StructureInfoProto_Builder*) clearLevel {
  result.hasLevel = NO;
  result.level = 0;
  return self;
}
- (BOOL) hasStructType {
  return result.hasStructType;
}
- (StructureInfoProto_StructType) structType {
  return result.structType;
}
- (StructureInfoProto_Builder*) setStructType:(StructureInfoProto_StructType) value {
  result.hasStructType = YES;
  result.structType = value;
  return self;
}
- (StructureInfoProto_Builder*) clearStructTypeList {
  result.hasStructType = NO;
  result.structType = StructureInfoProto_StructTypeNoStruct;
  return self;
}
- (BOOL) hasBuildResourceType {
  return result.hasBuildResourceType;
}
- (ResourceType) buildResourceType {
  return result.buildResourceType;
}
- (StructureInfoProto_Builder*) setBuildResourceType:(ResourceType) value {
  result.hasBuildResourceType = YES;
  result.buildResourceType = value;
  return self;
}
- (StructureInfoProto_Builder*) clearBuildResourceTypeList {
  result.hasBuildResourceType = NO;
  result.buildResourceType = ResourceTypeNoResource;
  return self;
}
- (BOOL) hasBuildCost {
  return result.hasBuildCost;
}
- (int32_t) buildCost {
  return result.buildCost;
}
- (StructureInfoProto_Builder*) setBuildCost:(int32_t) value {
  result.hasBuildCost = YES;
  result.buildCost = value;
  return self;
}
- (StructureInfoProto_Builder*) clearBuildCost {
  result.hasBuildCost = NO;
  result.buildCost = 0;
  return self;
}
- (BOOL) hasMinutesToBuild {
  return result.hasMinutesToBuild;
}
- (int32_t) minutesToBuild {
  return result.minutesToBuild;
}
- (StructureInfoProto_Builder*) setMinutesToBuild:(int32_t) value {
  result.hasMinutesToBuild = YES;
  result.minutesToBuild = value;
  return self;
}
- (StructureInfoProto_Builder*) clearMinutesToBuild {
  result.hasMinutesToBuild = NO;
  result.minutesToBuild = 0;
  return self;
}
- (BOOL) hasWidth {
  return result.hasWidth;
}
- (int32_t) width {
  return result.width;
}
- (StructureInfoProto_Builder*) setWidth:(int32_t) value {
  result.hasWidth = YES;
  result.width = value;
  return self;
}
- (StructureInfoProto_Builder*) clearWidth {
  result.hasWidth = NO;
  result.width = 0;
  return self;
}
- (BOOL) hasHeight {
  return result.hasHeight;
}
- (int32_t) height {
  return result.height;
}
- (StructureInfoProto_Builder*) setHeight:(int32_t) value {
  result.hasHeight = YES;
  result.height = value;
  return self;
}
- (StructureInfoProto_Builder*) clearHeight {
  result.hasHeight = NO;
  result.height = 0;
  return self;
}
- (BOOL) hasPredecessorStructId {
  return result.hasPredecessorStructId;
}
- (int32_t) predecessorStructId {
  return result.predecessorStructId;
}
- (StructureInfoProto_Builder*) setPredecessorStructId:(int32_t) value {
  result.hasPredecessorStructId = YES;
  result.predecessorStructId = value;
  return self;
}
- (StructureInfoProto_Builder*) clearPredecessorStructId {
  result.hasPredecessorStructId = NO;
  result.predecessorStructId = 0;
  return self;
}
- (BOOL) hasSuccessorStructId {
  return result.hasSuccessorStructId;
}
- (int32_t) successorStructId {
  return result.successorStructId;
}
- (StructureInfoProto_Builder*) setSuccessorStructId:(int32_t) value {
  result.hasSuccessorStructId = YES;
  result.successorStructId = value;
  return self;
}
- (StructureInfoProto_Builder*) clearSuccessorStructId {
  result.hasSuccessorStructId = NO;
  result.successorStructId = 0;
  return self;
}
- (BOOL) hasImgName {
  return result.hasImgName;
}
- (NSString*) imgName {
  return result.imgName;
}
- (StructureInfoProto_Builder*) setImgName:(NSString*) value {
  result.hasImgName = YES;
  result.imgName = value;
  return self;
}
- (StructureInfoProto_Builder*) clearImgName {
  result.hasImgName = NO;
  result.imgName = @"";
  return self;
}
- (BOOL) hasImgVerticalPixelOffset {
  return result.hasImgVerticalPixelOffset;
}
- (Float32) imgVerticalPixelOffset {
  return result.imgVerticalPixelOffset;
}
- (StructureInfoProto_Builder*) setImgVerticalPixelOffset:(Float32) value {
  result.hasImgVerticalPixelOffset = YES;
  result.imgVerticalPixelOffset = value;
  return self;
}
- (StructureInfoProto_Builder*) clearImgVerticalPixelOffset {
  result.hasImgVerticalPixelOffset = NO;
  result.imgVerticalPixelOffset = 0;
  return self;
}
- (BOOL) hasImgHorizontalPixelOffset {
  return result.hasImgHorizontalPixelOffset;
}
- (Float32) imgHorizontalPixelOffset {
  return result.imgHorizontalPixelOffset;
}
- (StructureInfoProto_Builder*) setImgHorizontalPixelOffset:(Float32) value {
  result.hasImgHorizontalPixelOffset = YES;
  result.imgHorizontalPixelOffset = value;
  return self;
}
- (StructureInfoProto_Builder*) clearImgHorizontalPixelOffset {
  result.hasImgHorizontalPixelOffset = NO;
  result.imgHorizontalPixelOffset = 0;
  return self;
}
- (BOOL) hasDescription {
  return result.hasDescription;
}
- (NSString*) description {
  return result.description;
}
- (StructureInfoProto_Builder*) setDescription:(NSString*) value {
  result.hasDescription = YES;
  result.description = value;
  return self;
}
- (StructureInfoProto_Builder*) clearDescription {
  result.hasDescription = NO;
  result.description = @"";
  return self;
}
- (BOOL) hasShortDescription {
  return result.hasShortDescription;
}
- (NSString*) shortDescription {
  return result.shortDescription;
}
- (StructureInfoProto_Builder*) setShortDescription:(NSString*) value {
  result.hasShortDescription = YES;
  result.shortDescription = value;
  return self;
}
- (StructureInfoProto_Builder*) clearShortDescription {
  result.hasShortDescription = NO;
  result.shortDescription = @"";
  return self;
}
- (BOOL) hasShadowImgName {
  return result.hasShadowImgName;
}
- (NSString*) shadowImgName {
  return result.shadowImgName;
}
- (StructureInfoProto_Builder*) setShadowImgName:(NSString*) value {
  result.hasShadowImgName = YES;
  result.shadowImgName = value;
  return self;
}
- (StructureInfoProto_Builder*) clearShadowImgName {
  result.hasShadowImgName = NO;
  result.shadowImgName = @"";
  return self;
}
- (BOOL) hasShadowVerticalOffset {
  return result.hasShadowVerticalOffset;
}
- (Float32) shadowVerticalOffset {
  return result.shadowVerticalOffset;
}
- (StructureInfoProto_Builder*) setShadowVerticalOffset:(Float32) value {
  result.hasShadowVerticalOffset = YES;
  result.shadowVerticalOffset = value;
  return self;
}
- (StructureInfoProto_Builder*) clearShadowVerticalOffset {
  result.hasShadowVerticalOffset = NO;
  result.shadowVerticalOffset = 0;
  return self;
}
- (BOOL) hasShadowHorizontalOfffset {
  return result.hasShadowHorizontalOfffset;
}
- (Float32) shadowHorizontalOfffset {
  return result.shadowHorizontalOfffset;
}
- (StructureInfoProto_Builder*) setShadowHorizontalOfffset:(Float32) value {
  result.hasShadowHorizontalOfffset = YES;
  result.shadowHorizontalOfffset = value;
  return self;
}
- (StructureInfoProto_Builder*) clearShadowHorizontalOfffset {
  result.hasShadowHorizontalOfffset = NO;
  result.shadowHorizontalOfffset = 0;
  return self;
}
- (BOOL) hasShadowScale {
  return result.hasShadowScale;
}
- (Float32) shadowScale {
  return result.shadowScale;
}
- (StructureInfoProto_Builder*) setShadowScale:(Float32) value {
  result.hasShadowScale = YES;
  result.shadowScale = value;
  return self;
}
- (StructureInfoProto_Builder*) clearShadowScale {
  result.hasShadowScale = NO;
  result.shadowScale = 0;
  return self;
}
@end

@interface ResourceGeneratorProto ()
@property (strong) StructureInfoProto* structInfo;
@property ResourceType resourceType;
@property Float32 productionRate;
@property int32_t capacity;
@end

@implementation ResourceGeneratorProto

- (BOOL) hasStructInfo {
  return !!hasStructInfo_;
}
- (void) setHasStructInfo:(BOOL) value_ {
  hasStructInfo_ = !!value_;
}
@synthesize structInfo;
- (BOOL) hasResourceType {
  return !!hasResourceType_;
}
- (void) setHasResourceType:(BOOL) value_ {
  hasResourceType_ = !!value_;
}
@synthesize resourceType;
- (BOOL) hasProductionRate {
  return !!hasProductionRate_;
}
- (void) setHasProductionRate:(BOOL) value_ {
  hasProductionRate_ = !!value_;
}
@synthesize productionRate;
- (BOOL) hasCapacity {
  return !!hasCapacity_;
}
- (void) setHasCapacity:(BOOL) value_ {
  hasCapacity_ = !!value_;
}
@synthesize capacity;
- (id) init {
  if ((self = [super init])) {
    self.structInfo = [StructureInfoProto defaultInstance];
    self.resourceType = ResourceTypeNoResource;
    self.productionRate = 0;
    self.capacity = 0;
  }
  return self;
}
static ResourceGeneratorProto* defaultResourceGeneratorProtoInstance = nil;
+ (void) initialize {
  if (self == [ResourceGeneratorProto class]) {
    defaultResourceGeneratorProtoInstance = [[ResourceGeneratorProto alloc] init];
  }
}
+ (ResourceGeneratorProto*) defaultInstance {
  return defaultResourceGeneratorProtoInstance;
}
- (ResourceGeneratorProto*) defaultInstance {
  return defaultResourceGeneratorProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructInfo) {
    [output writeMessage:1 value:self.structInfo];
  }
  if (self.hasResourceType) {
    [output writeEnum:2 value:self.resourceType];
  }
  if (self.hasProductionRate) {
    [output writeFloat:3 value:self.productionRate];
  }
  if (self.hasCapacity) {
    [output writeInt32:4 value:self.capacity];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStructInfo) {
    size_ += computeMessageSize(1, self.structInfo);
  }
  if (self.hasResourceType) {
    size_ += computeEnumSize(2, self.resourceType);
  }
  if (self.hasProductionRate) {
    size_ += computeFloatSize(3, self.productionRate);
  }
  if (self.hasCapacity) {
    size_ += computeInt32Size(4, self.capacity);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ResourceGeneratorProto*) parseFromData:(NSData*) data {
  return (ResourceGeneratorProto*)[[[ResourceGeneratorProto builder] mergeFromData:data] build];
}
+ (ResourceGeneratorProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResourceGeneratorProto*)[[[ResourceGeneratorProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ResourceGeneratorProto*) parseFromInputStream:(NSInputStream*) input {
  return (ResourceGeneratorProto*)[[[ResourceGeneratorProto builder] mergeFromInputStream:input] build];
}
+ (ResourceGeneratorProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResourceGeneratorProto*)[[[ResourceGeneratorProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResourceGeneratorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ResourceGeneratorProto*)[[[ResourceGeneratorProto builder] mergeFromCodedInputStream:input] build];
}
+ (ResourceGeneratorProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResourceGeneratorProto*)[[[ResourceGeneratorProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResourceGeneratorProto_Builder*) builder {
  return [[ResourceGeneratorProto_Builder alloc] init];
}
+ (ResourceGeneratorProto_Builder*) builderWithPrototype:(ResourceGeneratorProto*) prototype {
  return [[ResourceGeneratorProto builder] mergeFrom:prototype];
}
- (ResourceGeneratorProto_Builder*) builder {
  return [ResourceGeneratorProto builder];
}
- (ResourceGeneratorProto_Builder*) toBuilder {
  return [ResourceGeneratorProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStructInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"structInfo"];
    [self.structInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasResourceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resourceType", [NSNumber numberWithInteger:self.resourceType]];
  }
  if (self.hasProductionRate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"productionRate", [NSNumber numberWithFloat:self.productionRate]];
  }
  if (self.hasCapacity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"capacity", [NSNumber numberWithInteger:self.capacity]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ResourceGeneratorProto class]]) {
    return NO;
  }
  ResourceGeneratorProto *otherMessage = other;
  return
      self.hasStructInfo == otherMessage.hasStructInfo &&
      (!self.hasStructInfo || [self.structInfo isEqual:otherMessage.structInfo]) &&
      self.hasResourceType == otherMessage.hasResourceType &&
      (!self.hasResourceType || self.resourceType == otherMessage.resourceType) &&
      self.hasProductionRate == otherMessage.hasProductionRate &&
      (!self.hasProductionRate || self.productionRate == otherMessage.productionRate) &&
      self.hasCapacity == otherMessage.hasCapacity &&
      (!self.hasCapacity || self.capacity == otherMessage.capacity) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStructInfo) {
    hashCode = hashCode * 31 + [self.structInfo hash];
  }
  if (self.hasResourceType) {
    hashCode = hashCode * 31 + self.resourceType;
  }
  if (self.hasProductionRate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.productionRate] hash];
  }
  if (self.hasCapacity) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.capacity] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ResourceGeneratorProto_Builder()
@property (strong) ResourceGeneratorProto* result;
@end

@implementation ResourceGeneratorProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ResourceGeneratorProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ResourceGeneratorProto_Builder*) clear {
  self.result = [[ResourceGeneratorProto alloc] init];
  return self;
}
- (ResourceGeneratorProto_Builder*) clone {
  return [ResourceGeneratorProto builderWithPrototype:result];
}
- (ResourceGeneratorProto*) defaultInstance {
  return [ResourceGeneratorProto defaultInstance];
}
- (ResourceGeneratorProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ResourceGeneratorProto*) buildPartial {
  ResourceGeneratorProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ResourceGeneratorProto_Builder*) mergeFrom:(ResourceGeneratorProto*) other {
  if (other == [ResourceGeneratorProto defaultInstance]) {
    return self;
  }
  if (other.hasStructInfo) {
    [self mergeStructInfo:other.structInfo];
  }
  if (other.hasResourceType) {
    [self setResourceType:other.resourceType];
  }
  if (other.hasProductionRate) {
    [self setProductionRate:other.productionRate];
  }
  if (other.hasCapacity) {
    [self setCapacity:other.capacity];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ResourceGeneratorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ResourceGeneratorProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        StructureInfoProto_Builder* subBuilder = [StructureInfoProto builder];
        if (self.hasStructInfo) {
          [subBuilder mergeFrom:self.structInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStructInfo:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        ResourceType value = (ResourceType)[input readEnum];
        if (ResourceTypeIsValidValue(value)) {
          [self setResourceType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 29: {
        [self setProductionRate:[input readFloat]];
        break;
      }
      case 32: {
        [self setCapacity:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasStructInfo {
  return result.hasStructInfo;
}
- (StructureInfoProto*) structInfo {
  return result.structInfo;
}
- (ResourceGeneratorProto_Builder*) setStructInfo:(StructureInfoProto*) value {
  result.hasStructInfo = YES;
  result.structInfo = value;
  return self;
}
- (ResourceGeneratorProto_Builder*) setStructInfo_Builder:(StructureInfoProto_Builder*) builderForValue {
  return [self setStructInfo:[builderForValue build]];
}
- (ResourceGeneratorProto_Builder*) mergeStructInfo:(StructureInfoProto*) value {
  if (result.hasStructInfo &&
      result.structInfo != [StructureInfoProto defaultInstance]) {
    result.structInfo =
      [[[StructureInfoProto builderWithPrototype:result.structInfo] mergeFrom:value] buildPartial];
  } else {
    result.structInfo = value;
  }
  result.hasStructInfo = YES;
  return self;
}
- (ResourceGeneratorProto_Builder*) clearStructInfo {
  result.hasStructInfo = NO;
  result.structInfo = [StructureInfoProto defaultInstance];
  return self;
}
- (BOOL) hasResourceType {
  return result.hasResourceType;
}
- (ResourceType) resourceType {
  return result.resourceType;
}
- (ResourceGeneratorProto_Builder*) setResourceType:(ResourceType) value {
  result.hasResourceType = YES;
  result.resourceType = value;
  return self;
}
- (ResourceGeneratorProto_Builder*) clearResourceTypeList {
  result.hasResourceType = NO;
  result.resourceType = ResourceTypeNoResource;
  return self;
}
- (BOOL) hasProductionRate {
  return result.hasProductionRate;
}
- (Float32) productionRate {
  return result.productionRate;
}
- (ResourceGeneratorProto_Builder*) setProductionRate:(Float32) value {
  result.hasProductionRate = YES;
  result.productionRate = value;
  return self;
}
- (ResourceGeneratorProto_Builder*) clearProductionRate {
  result.hasProductionRate = NO;
  result.productionRate = 0;
  return self;
}
- (BOOL) hasCapacity {
  return result.hasCapacity;
}
- (int32_t) capacity {
  return result.capacity;
}
- (ResourceGeneratorProto_Builder*) setCapacity:(int32_t) value {
  result.hasCapacity = YES;
  result.capacity = value;
  return self;
}
- (ResourceGeneratorProto_Builder*) clearCapacity {
  result.hasCapacity = NO;
  result.capacity = 0;
  return self;
}
@end

@interface ResourceStorageProto ()
@property (strong) StructureInfoProto* structInfo;
@property ResourceType resourceType;
@property int32_t capacity;
@end

@implementation ResourceStorageProto

- (BOOL) hasStructInfo {
  return !!hasStructInfo_;
}
- (void) setHasStructInfo:(BOOL) value_ {
  hasStructInfo_ = !!value_;
}
@synthesize structInfo;
- (BOOL) hasResourceType {
  return !!hasResourceType_;
}
- (void) setHasResourceType:(BOOL) value_ {
  hasResourceType_ = !!value_;
}
@synthesize resourceType;
- (BOOL) hasCapacity {
  return !!hasCapacity_;
}
- (void) setHasCapacity:(BOOL) value_ {
  hasCapacity_ = !!value_;
}
@synthesize capacity;
- (id) init {
  if ((self = [super init])) {
    self.structInfo = [StructureInfoProto defaultInstance];
    self.resourceType = ResourceTypeNoResource;
    self.capacity = 0;
  }
  return self;
}
static ResourceStorageProto* defaultResourceStorageProtoInstance = nil;
+ (void) initialize {
  if (self == [ResourceStorageProto class]) {
    defaultResourceStorageProtoInstance = [[ResourceStorageProto alloc] init];
  }
}
+ (ResourceStorageProto*) defaultInstance {
  return defaultResourceStorageProtoInstance;
}
- (ResourceStorageProto*) defaultInstance {
  return defaultResourceStorageProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructInfo) {
    [output writeMessage:1 value:self.structInfo];
  }
  if (self.hasResourceType) {
    [output writeEnum:2 value:self.resourceType];
  }
  if (self.hasCapacity) {
    [output writeInt32:3 value:self.capacity];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStructInfo) {
    size_ += computeMessageSize(1, self.structInfo);
  }
  if (self.hasResourceType) {
    size_ += computeEnumSize(2, self.resourceType);
  }
  if (self.hasCapacity) {
    size_ += computeInt32Size(3, self.capacity);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ResourceStorageProto*) parseFromData:(NSData*) data {
  return (ResourceStorageProto*)[[[ResourceStorageProto builder] mergeFromData:data] build];
}
+ (ResourceStorageProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResourceStorageProto*)[[[ResourceStorageProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ResourceStorageProto*) parseFromInputStream:(NSInputStream*) input {
  return (ResourceStorageProto*)[[[ResourceStorageProto builder] mergeFromInputStream:input] build];
}
+ (ResourceStorageProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResourceStorageProto*)[[[ResourceStorageProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResourceStorageProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ResourceStorageProto*)[[[ResourceStorageProto builder] mergeFromCodedInputStream:input] build];
}
+ (ResourceStorageProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResourceStorageProto*)[[[ResourceStorageProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResourceStorageProto_Builder*) builder {
  return [[ResourceStorageProto_Builder alloc] init];
}
+ (ResourceStorageProto_Builder*) builderWithPrototype:(ResourceStorageProto*) prototype {
  return [[ResourceStorageProto builder] mergeFrom:prototype];
}
- (ResourceStorageProto_Builder*) builder {
  return [ResourceStorageProto builder];
}
- (ResourceStorageProto_Builder*) toBuilder {
  return [ResourceStorageProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStructInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"structInfo"];
    [self.structInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasResourceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resourceType", [NSNumber numberWithInteger:self.resourceType]];
  }
  if (self.hasCapacity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"capacity", [NSNumber numberWithInteger:self.capacity]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ResourceStorageProto class]]) {
    return NO;
  }
  ResourceStorageProto *otherMessage = other;
  return
      self.hasStructInfo == otherMessage.hasStructInfo &&
      (!self.hasStructInfo || [self.structInfo isEqual:otherMessage.structInfo]) &&
      self.hasResourceType == otherMessage.hasResourceType &&
      (!self.hasResourceType || self.resourceType == otherMessage.resourceType) &&
      self.hasCapacity == otherMessage.hasCapacity &&
      (!self.hasCapacity || self.capacity == otherMessage.capacity) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStructInfo) {
    hashCode = hashCode * 31 + [self.structInfo hash];
  }
  if (self.hasResourceType) {
    hashCode = hashCode * 31 + self.resourceType;
  }
  if (self.hasCapacity) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.capacity] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ResourceStorageProto_Builder()
@property (strong) ResourceStorageProto* result;
@end

@implementation ResourceStorageProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ResourceStorageProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ResourceStorageProto_Builder*) clear {
  self.result = [[ResourceStorageProto alloc] init];
  return self;
}
- (ResourceStorageProto_Builder*) clone {
  return [ResourceStorageProto builderWithPrototype:result];
}
- (ResourceStorageProto*) defaultInstance {
  return [ResourceStorageProto defaultInstance];
}
- (ResourceStorageProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ResourceStorageProto*) buildPartial {
  ResourceStorageProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ResourceStorageProto_Builder*) mergeFrom:(ResourceStorageProto*) other {
  if (other == [ResourceStorageProto defaultInstance]) {
    return self;
  }
  if (other.hasStructInfo) {
    [self mergeStructInfo:other.structInfo];
  }
  if (other.hasResourceType) {
    [self setResourceType:other.resourceType];
  }
  if (other.hasCapacity) {
    [self setCapacity:other.capacity];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ResourceStorageProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ResourceStorageProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        StructureInfoProto_Builder* subBuilder = [StructureInfoProto builder];
        if (self.hasStructInfo) {
          [subBuilder mergeFrom:self.structInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStructInfo:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        ResourceType value = (ResourceType)[input readEnum];
        if (ResourceTypeIsValidValue(value)) {
          [self setResourceType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setCapacity:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasStructInfo {
  return result.hasStructInfo;
}
- (StructureInfoProto*) structInfo {
  return result.structInfo;
}
- (ResourceStorageProto_Builder*) setStructInfo:(StructureInfoProto*) value {
  result.hasStructInfo = YES;
  result.structInfo = value;
  return self;
}
- (ResourceStorageProto_Builder*) setStructInfo_Builder:(StructureInfoProto_Builder*) builderForValue {
  return [self setStructInfo:[builderForValue build]];
}
- (ResourceStorageProto_Builder*) mergeStructInfo:(StructureInfoProto*) value {
  if (result.hasStructInfo &&
      result.structInfo != [StructureInfoProto defaultInstance]) {
    result.structInfo =
      [[[StructureInfoProto builderWithPrototype:result.structInfo] mergeFrom:value] buildPartial];
  } else {
    result.structInfo = value;
  }
  result.hasStructInfo = YES;
  return self;
}
- (ResourceStorageProto_Builder*) clearStructInfo {
  result.hasStructInfo = NO;
  result.structInfo = [StructureInfoProto defaultInstance];
  return self;
}
- (BOOL) hasResourceType {
  return result.hasResourceType;
}
- (ResourceType) resourceType {
  return result.resourceType;
}
- (ResourceStorageProto_Builder*) setResourceType:(ResourceType) value {
  result.hasResourceType = YES;
  result.resourceType = value;
  return self;
}
- (ResourceStorageProto_Builder*) clearResourceTypeList {
  result.hasResourceType = NO;
  result.resourceType = ResourceTypeNoResource;
  return self;
}
- (BOOL) hasCapacity {
  return result.hasCapacity;
}
- (int32_t) capacity {
  return result.capacity;
}
- (ResourceStorageProto_Builder*) setCapacity:(int32_t) value {
  result.hasCapacity = YES;
  result.capacity = value;
  return self;
}
- (ResourceStorageProto_Builder*) clearCapacity {
  result.hasCapacity = NO;
  result.capacity = 0;
  return self;
}
@end

@interface MoneyTreeProto ()
@property (strong) StructureInfoProto* structInfo;
@property Float32 productionRate;
@property int32_t capacity;
@property int32_t daysOfDuration;
@property int32_t daysForRenewal;
@property (strong) NSString* iapProductId;
@property (strong) NSString* fakeIapproductId;
@end

@implementation MoneyTreeProto

- (BOOL) hasStructInfo {
  return !!hasStructInfo_;
}
- (void) setHasStructInfo:(BOOL) value_ {
  hasStructInfo_ = !!value_;
}
@synthesize structInfo;
- (BOOL) hasProductionRate {
  return !!hasProductionRate_;
}
- (void) setHasProductionRate:(BOOL) value_ {
  hasProductionRate_ = !!value_;
}
@synthesize productionRate;
- (BOOL) hasCapacity {
  return !!hasCapacity_;
}
- (void) setHasCapacity:(BOOL) value_ {
  hasCapacity_ = !!value_;
}
@synthesize capacity;
- (BOOL) hasDaysOfDuration {
  return !!hasDaysOfDuration_;
}
- (void) setHasDaysOfDuration:(BOOL) value_ {
  hasDaysOfDuration_ = !!value_;
}
@synthesize daysOfDuration;
- (BOOL) hasDaysForRenewal {
  return !!hasDaysForRenewal_;
}
- (void) setHasDaysForRenewal:(BOOL) value_ {
  hasDaysForRenewal_ = !!value_;
}
@synthesize daysForRenewal;
- (BOOL) hasIapProductId {
  return !!hasIapProductId_;
}
- (void) setHasIapProductId:(BOOL) value_ {
  hasIapProductId_ = !!value_;
}
@synthesize iapProductId;
- (BOOL) hasFakeIapproductId {
  return !!hasFakeIapproductId_;
}
- (void) setHasFakeIapproductId:(BOOL) value_ {
  hasFakeIapproductId_ = !!value_;
}
@synthesize fakeIapproductId;
- (id) init {
  if ((self = [super init])) {
    self.structInfo = [StructureInfoProto defaultInstance];
    self.productionRate = 0;
    self.capacity = 0;
    self.daysOfDuration = 0;
    self.daysForRenewal = 0;
    self.iapProductId = @"";
    self.fakeIapproductId = @"";
  }
  return self;
}
static MoneyTreeProto* defaultMoneyTreeProtoInstance = nil;
+ (void) initialize {
  if (self == [MoneyTreeProto class]) {
    defaultMoneyTreeProtoInstance = [[MoneyTreeProto alloc] init];
  }
}
+ (MoneyTreeProto*) defaultInstance {
  return defaultMoneyTreeProtoInstance;
}
- (MoneyTreeProto*) defaultInstance {
  return defaultMoneyTreeProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructInfo) {
    [output writeMessage:1 value:self.structInfo];
  }
  if (self.hasProductionRate) {
    [output writeFloat:2 value:self.productionRate];
  }
  if (self.hasCapacity) {
    [output writeInt32:3 value:self.capacity];
  }
  if (self.hasDaysOfDuration) {
    [output writeInt32:4 value:self.daysOfDuration];
  }
  if (self.hasDaysForRenewal) {
    [output writeInt32:5 value:self.daysForRenewal];
  }
  if (self.hasIapProductId) {
    [output writeString:6 value:self.iapProductId];
  }
  if (self.hasFakeIapproductId) {
    [output writeString:7 value:self.fakeIapproductId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStructInfo) {
    size_ += computeMessageSize(1, self.structInfo);
  }
  if (self.hasProductionRate) {
    size_ += computeFloatSize(2, self.productionRate);
  }
  if (self.hasCapacity) {
    size_ += computeInt32Size(3, self.capacity);
  }
  if (self.hasDaysOfDuration) {
    size_ += computeInt32Size(4, self.daysOfDuration);
  }
  if (self.hasDaysForRenewal) {
    size_ += computeInt32Size(5, self.daysForRenewal);
  }
  if (self.hasIapProductId) {
    size_ += computeStringSize(6, self.iapProductId);
  }
  if (self.hasFakeIapproductId) {
    size_ += computeStringSize(7, self.fakeIapproductId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MoneyTreeProto*) parseFromData:(NSData*) data {
  return (MoneyTreeProto*)[[[MoneyTreeProto builder] mergeFromData:data] build];
}
+ (MoneyTreeProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MoneyTreeProto*)[[[MoneyTreeProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MoneyTreeProto*) parseFromInputStream:(NSInputStream*) input {
  return (MoneyTreeProto*)[[[MoneyTreeProto builder] mergeFromInputStream:input] build];
}
+ (MoneyTreeProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MoneyTreeProto*)[[[MoneyTreeProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MoneyTreeProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MoneyTreeProto*)[[[MoneyTreeProto builder] mergeFromCodedInputStream:input] build];
}
+ (MoneyTreeProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MoneyTreeProto*)[[[MoneyTreeProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MoneyTreeProto_Builder*) builder {
  return [[MoneyTreeProto_Builder alloc] init];
}
+ (MoneyTreeProto_Builder*) builderWithPrototype:(MoneyTreeProto*) prototype {
  return [[MoneyTreeProto builder] mergeFrom:prototype];
}
- (MoneyTreeProto_Builder*) builder {
  return [MoneyTreeProto builder];
}
- (MoneyTreeProto_Builder*) toBuilder {
  return [MoneyTreeProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStructInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"structInfo"];
    [self.structInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasProductionRate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"productionRate", [NSNumber numberWithFloat:self.productionRate]];
  }
  if (self.hasCapacity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"capacity", [NSNumber numberWithInteger:self.capacity]];
  }
  if (self.hasDaysOfDuration) {
    [output appendFormat:@"%@%@: %@\n", indent, @"daysOfDuration", [NSNumber numberWithInteger:self.daysOfDuration]];
  }
  if (self.hasDaysForRenewal) {
    [output appendFormat:@"%@%@: %@\n", indent, @"daysForRenewal", [NSNumber numberWithInteger:self.daysForRenewal]];
  }
  if (self.hasIapProductId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"iapProductId", self.iapProductId];
  }
  if (self.hasFakeIapproductId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fakeIapproductId", self.fakeIapproductId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MoneyTreeProto class]]) {
    return NO;
  }
  MoneyTreeProto *otherMessage = other;
  return
      self.hasStructInfo == otherMessage.hasStructInfo &&
      (!self.hasStructInfo || [self.structInfo isEqual:otherMessage.structInfo]) &&
      self.hasProductionRate == otherMessage.hasProductionRate &&
      (!self.hasProductionRate || self.productionRate == otherMessage.productionRate) &&
      self.hasCapacity == otherMessage.hasCapacity &&
      (!self.hasCapacity || self.capacity == otherMessage.capacity) &&
      self.hasDaysOfDuration == otherMessage.hasDaysOfDuration &&
      (!self.hasDaysOfDuration || self.daysOfDuration == otherMessage.daysOfDuration) &&
      self.hasDaysForRenewal == otherMessage.hasDaysForRenewal &&
      (!self.hasDaysForRenewal || self.daysForRenewal == otherMessage.daysForRenewal) &&
      self.hasIapProductId == otherMessage.hasIapProductId &&
      (!self.hasIapProductId || [self.iapProductId isEqual:otherMessage.iapProductId]) &&
      self.hasFakeIapproductId == otherMessage.hasFakeIapproductId &&
      (!self.hasFakeIapproductId || [self.fakeIapproductId isEqual:otherMessage.fakeIapproductId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStructInfo) {
    hashCode = hashCode * 31 + [self.structInfo hash];
  }
  if (self.hasProductionRate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.productionRate] hash];
  }
  if (self.hasCapacity) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.capacity] hash];
  }
  if (self.hasDaysOfDuration) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.daysOfDuration] hash];
  }
  if (self.hasDaysForRenewal) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.daysForRenewal] hash];
  }
  if (self.hasIapProductId) {
    hashCode = hashCode * 31 + [self.iapProductId hash];
  }
  if (self.hasFakeIapproductId) {
    hashCode = hashCode * 31 + [self.fakeIapproductId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MoneyTreeProto_Builder()
@property (strong) MoneyTreeProto* result;
@end

@implementation MoneyTreeProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[MoneyTreeProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MoneyTreeProto_Builder*) clear {
  self.result = [[MoneyTreeProto alloc] init];
  return self;
}
- (MoneyTreeProto_Builder*) clone {
  return [MoneyTreeProto builderWithPrototype:result];
}
- (MoneyTreeProto*) defaultInstance {
  return [MoneyTreeProto defaultInstance];
}
- (MoneyTreeProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MoneyTreeProto*) buildPartial {
  MoneyTreeProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (MoneyTreeProto_Builder*) mergeFrom:(MoneyTreeProto*) other {
  if (other == [MoneyTreeProto defaultInstance]) {
    return self;
  }
  if (other.hasStructInfo) {
    [self mergeStructInfo:other.structInfo];
  }
  if (other.hasProductionRate) {
    [self setProductionRate:other.productionRate];
  }
  if (other.hasCapacity) {
    [self setCapacity:other.capacity];
  }
  if (other.hasDaysOfDuration) {
    [self setDaysOfDuration:other.daysOfDuration];
  }
  if (other.hasDaysForRenewal) {
    [self setDaysForRenewal:other.daysForRenewal];
  }
  if (other.hasIapProductId) {
    [self setIapProductId:other.iapProductId];
  }
  if (other.hasFakeIapproductId) {
    [self setFakeIapproductId:other.fakeIapproductId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MoneyTreeProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MoneyTreeProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        StructureInfoProto_Builder* subBuilder = [StructureInfoProto builder];
        if (self.hasStructInfo) {
          [subBuilder mergeFrom:self.structInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStructInfo:[subBuilder buildPartial]];
        break;
      }
      case 21: {
        [self setProductionRate:[input readFloat]];
        break;
      }
      case 24: {
        [self setCapacity:[input readInt32]];
        break;
      }
      case 32: {
        [self setDaysOfDuration:[input readInt32]];
        break;
      }
      case 40: {
        [self setDaysForRenewal:[input readInt32]];
        break;
      }
      case 50: {
        [self setIapProductId:[input readString]];
        break;
      }
      case 58: {
        [self setFakeIapproductId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasStructInfo {
  return result.hasStructInfo;
}
- (StructureInfoProto*) structInfo {
  return result.structInfo;
}
- (MoneyTreeProto_Builder*) setStructInfo:(StructureInfoProto*) value {
  result.hasStructInfo = YES;
  result.structInfo = value;
  return self;
}
- (MoneyTreeProto_Builder*) setStructInfo_Builder:(StructureInfoProto_Builder*) builderForValue {
  return [self setStructInfo:[builderForValue build]];
}
- (MoneyTreeProto_Builder*) mergeStructInfo:(StructureInfoProto*) value {
  if (result.hasStructInfo &&
      result.structInfo != [StructureInfoProto defaultInstance]) {
    result.structInfo =
      [[[StructureInfoProto builderWithPrototype:result.structInfo] mergeFrom:value] buildPartial];
  } else {
    result.structInfo = value;
  }
  result.hasStructInfo = YES;
  return self;
}
- (MoneyTreeProto_Builder*) clearStructInfo {
  result.hasStructInfo = NO;
  result.structInfo = [StructureInfoProto defaultInstance];
  return self;
}
- (BOOL) hasProductionRate {
  return result.hasProductionRate;
}
- (Float32) productionRate {
  return result.productionRate;
}
- (MoneyTreeProto_Builder*) setProductionRate:(Float32) value {
  result.hasProductionRate = YES;
  result.productionRate = value;
  return self;
}
- (MoneyTreeProto_Builder*) clearProductionRate {
  result.hasProductionRate = NO;
  result.productionRate = 0;
  return self;
}
- (BOOL) hasCapacity {
  return result.hasCapacity;
}
- (int32_t) capacity {
  return result.capacity;
}
- (MoneyTreeProto_Builder*) setCapacity:(int32_t) value {
  result.hasCapacity = YES;
  result.capacity = value;
  return self;
}
- (MoneyTreeProto_Builder*) clearCapacity {
  result.hasCapacity = NO;
  result.capacity = 0;
  return self;
}
- (BOOL) hasDaysOfDuration {
  return result.hasDaysOfDuration;
}
- (int32_t) daysOfDuration {
  return result.daysOfDuration;
}
- (MoneyTreeProto_Builder*) setDaysOfDuration:(int32_t) value {
  result.hasDaysOfDuration = YES;
  result.daysOfDuration = value;
  return self;
}
- (MoneyTreeProto_Builder*) clearDaysOfDuration {
  result.hasDaysOfDuration = NO;
  result.daysOfDuration = 0;
  return self;
}
- (BOOL) hasDaysForRenewal {
  return result.hasDaysForRenewal;
}
- (int32_t) daysForRenewal {
  return result.daysForRenewal;
}
- (MoneyTreeProto_Builder*) setDaysForRenewal:(int32_t) value {
  result.hasDaysForRenewal = YES;
  result.daysForRenewal = value;
  return self;
}
- (MoneyTreeProto_Builder*) clearDaysForRenewal {
  result.hasDaysForRenewal = NO;
  result.daysForRenewal = 0;
  return self;
}
- (BOOL) hasIapProductId {
  return result.hasIapProductId;
}
- (NSString*) iapProductId {
  return result.iapProductId;
}
- (MoneyTreeProto_Builder*) setIapProductId:(NSString*) value {
  result.hasIapProductId = YES;
  result.iapProductId = value;
  return self;
}
- (MoneyTreeProto_Builder*) clearIapProductId {
  result.hasIapProductId = NO;
  result.iapProductId = @"";
  return self;
}
- (BOOL) hasFakeIapproductId {
  return result.hasFakeIapproductId;
}
- (NSString*) fakeIapproductId {
  return result.fakeIapproductId;
}
- (MoneyTreeProto_Builder*) setFakeIapproductId:(NSString*) value {
  result.hasFakeIapproductId = YES;
  result.fakeIapproductId = value;
  return self;
}
- (MoneyTreeProto_Builder*) clearFakeIapproductId {
  result.hasFakeIapproductId = NO;
  result.fakeIapproductId = @"";
  return self;
}
@end

@interface ResearchHouseProto ()
@property (strong) StructureInfoProto* structInfo;
@end

@implementation ResearchHouseProto

- (BOOL) hasStructInfo {
  return !!hasStructInfo_;
}
- (void) setHasStructInfo:(BOOL) value_ {
  hasStructInfo_ = !!value_;
}
@synthesize structInfo;
- (id) init {
  if ((self = [super init])) {
    self.structInfo = [StructureInfoProto defaultInstance];
  }
  return self;
}
static ResearchHouseProto* defaultResearchHouseProtoInstance = nil;
+ (void) initialize {
  if (self == [ResearchHouseProto class]) {
    defaultResearchHouseProtoInstance = [[ResearchHouseProto alloc] init];
  }
}
+ (ResearchHouseProto*) defaultInstance {
  return defaultResearchHouseProtoInstance;
}
- (ResearchHouseProto*) defaultInstance {
  return defaultResearchHouseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructInfo) {
    [output writeMessage:1 value:self.structInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStructInfo) {
    size_ += computeMessageSize(1, self.structInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ResearchHouseProto*) parseFromData:(NSData*) data {
  return (ResearchHouseProto*)[[[ResearchHouseProto builder] mergeFromData:data] build];
}
+ (ResearchHouseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResearchHouseProto*)[[[ResearchHouseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ResearchHouseProto*) parseFromInputStream:(NSInputStream*) input {
  return (ResearchHouseProto*)[[[ResearchHouseProto builder] mergeFromInputStream:input] build];
}
+ (ResearchHouseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResearchHouseProto*)[[[ResearchHouseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResearchHouseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ResearchHouseProto*)[[[ResearchHouseProto builder] mergeFromCodedInputStream:input] build];
}
+ (ResearchHouseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResearchHouseProto*)[[[ResearchHouseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResearchHouseProto_Builder*) builder {
  return [[ResearchHouseProto_Builder alloc] init];
}
+ (ResearchHouseProto_Builder*) builderWithPrototype:(ResearchHouseProto*) prototype {
  return [[ResearchHouseProto builder] mergeFrom:prototype];
}
- (ResearchHouseProto_Builder*) builder {
  return [ResearchHouseProto builder];
}
- (ResearchHouseProto_Builder*) toBuilder {
  return [ResearchHouseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStructInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"structInfo"];
    [self.structInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ResearchHouseProto class]]) {
    return NO;
  }
  ResearchHouseProto *otherMessage = other;
  return
      self.hasStructInfo == otherMessage.hasStructInfo &&
      (!self.hasStructInfo || [self.structInfo isEqual:otherMessage.structInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStructInfo) {
    hashCode = hashCode * 31 + [self.structInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ResearchHouseProto_Builder()
@property (strong) ResearchHouseProto* result;
@end

@implementation ResearchHouseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ResearchHouseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ResearchHouseProto_Builder*) clear {
  self.result = [[ResearchHouseProto alloc] init];
  return self;
}
- (ResearchHouseProto_Builder*) clone {
  return [ResearchHouseProto builderWithPrototype:result];
}
- (ResearchHouseProto*) defaultInstance {
  return [ResearchHouseProto defaultInstance];
}
- (ResearchHouseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ResearchHouseProto*) buildPartial {
  ResearchHouseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ResearchHouseProto_Builder*) mergeFrom:(ResearchHouseProto*) other {
  if (other == [ResearchHouseProto defaultInstance]) {
    return self;
  }
  if (other.hasStructInfo) {
    [self mergeStructInfo:other.structInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ResearchHouseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ResearchHouseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        StructureInfoProto_Builder* subBuilder = [StructureInfoProto builder];
        if (self.hasStructInfo) {
          [subBuilder mergeFrom:self.structInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStructInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasStructInfo {
  return result.hasStructInfo;
}
- (StructureInfoProto*) structInfo {
  return result.structInfo;
}
- (ResearchHouseProto_Builder*) setStructInfo:(StructureInfoProto*) value {
  result.hasStructInfo = YES;
  result.structInfo = value;
  return self;
}
- (ResearchHouseProto_Builder*) setStructInfo_Builder:(StructureInfoProto_Builder*) builderForValue {
  return [self setStructInfo:[builderForValue build]];
}
- (ResearchHouseProto_Builder*) mergeStructInfo:(StructureInfoProto*) value {
  if (result.hasStructInfo &&
      result.structInfo != [StructureInfoProto defaultInstance]) {
    result.structInfo =
      [[[StructureInfoProto builderWithPrototype:result.structInfo] mergeFrom:value] buildPartial];
  } else {
    result.structInfo = value;
  }
  result.hasStructInfo = YES;
  return self;
}
- (ResearchHouseProto_Builder*) clearStructInfo {
  result.hasStructInfo = NO;
  result.structInfo = [StructureInfoProto defaultInstance];
  return self;
}
@end

@interface HospitalProto ()
@property (strong) StructureInfoProto* structInfo;
@property int32_t queueSize;
@property Float32 healthPerSecond;
@property Float32 secsToFullyHealMultiplier;
@end

@implementation HospitalProto

- (BOOL) hasStructInfo {
  return !!hasStructInfo_;
}
- (void) setHasStructInfo:(BOOL) value_ {
  hasStructInfo_ = !!value_;
}
@synthesize structInfo;
- (BOOL) hasQueueSize {
  return !!hasQueueSize_;
}
- (void) setHasQueueSize:(BOOL) value_ {
  hasQueueSize_ = !!value_;
}
@synthesize queueSize;
- (BOOL) hasHealthPerSecond {
  return !!hasHealthPerSecond_;
}
- (void) setHasHealthPerSecond:(BOOL) value_ {
  hasHealthPerSecond_ = !!value_;
}
@synthesize healthPerSecond;
- (BOOL) hasSecsToFullyHealMultiplier {
  return !!hasSecsToFullyHealMultiplier_;
}
- (void) setHasSecsToFullyHealMultiplier:(BOOL) value_ {
  hasSecsToFullyHealMultiplier_ = !!value_;
}
@synthesize secsToFullyHealMultiplier;
- (id) init {
  if ((self = [super init])) {
    self.structInfo = [StructureInfoProto defaultInstance];
    self.queueSize = 0;
    self.healthPerSecond = 0;
    self.secsToFullyHealMultiplier = 0;
  }
  return self;
}
static HospitalProto* defaultHospitalProtoInstance = nil;
+ (void) initialize {
  if (self == [HospitalProto class]) {
    defaultHospitalProtoInstance = [[HospitalProto alloc] init];
  }
}
+ (HospitalProto*) defaultInstance {
  return defaultHospitalProtoInstance;
}
- (HospitalProto*) defaultInstance {
  return defaultHospitalProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructInfo) {
    [output writeMessage:1 value:self.structInfo];
  }
  if (self.hasQueueSize) {
    [output writeInt32:2 value:self.queueSize];
  }
  if (self.hasHealthPerSecond) {
    [output writeFloat:3 value:self.healthPerSecond];
  }
  if (self.hasSecsToFullyHealMultiplier) {
    [output writeFloat:4 value:self.secsToFullyHealMultiplier];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStructInfo) {
    size_ += computeMessageSize(1, self.structInfo);
  }
  if (self.hasQueueSize) {
    size_ += computeInt32Size(2, self.queueSize);
  }
  if (self.hasHealthPerSecond) {
    size_ += computeFloatSize(3, self.healthPerSecond);
  }
  if (self.hasSecsToFullyHealMultiplier) {
    size_ += computeFloatSize(4, self.secsToFullyHealMultiplier);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (HospitalProto*) parseFromData:(NSData*) data {
  return (HospitalProto*)[[[HospitalProto builder] mergeFromData:data] build];
}
+ (HospitalProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HospitalProto*)[[[HospitalProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (HospitalProto*) parseFromInputStream:(NSInputStream*) input {
  return (HospitalProto*)[[[HospitalProto builder] mergeFromInputStream:input] build];
}
+ (HospitalProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HospitalProto*)[[[HospitalProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HospitalProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (HospitalProto*)[[[HospitalProto builder] mergeFromCodedInputStream:input] build];
}
+ (HospitalProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HospitalProto*)[[[HospitalProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HospitalProto_Builder*) builder {
  return [[HospitalProto_Builder alloc] init];
}
+ (HospitalProto_Builder*) builderWithPrototype:(HospitalProto*) prototype {
  return [[HospitalProto builder] mergeFrom:prototype];
}
- (HospitalProto_Builder*) builder {
  return [HospitalProto builder];
}
- (HospitalProto_Builder*) toBuilder {
  return [HospitalProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStructInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"structInfo"];
    [self.structInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasQueueSize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"queueSize", [NSNumber numberWithInteger:self.queueSize]];
  }
  if (self.hasHealthPerSecond) {
    [output appendFormat:@"%@%@: %@\n", indent, @"healthPerSecond", [NSNumber numberWithFloat:self.healthPerSecond]];
  }
  if (self.hasSecsToFullyHealMultiplier) {
    [output appendFormat:@"%@%@: %@\n", indent, @"secsToFullyHealMultiplier", [NSNumber numberWithFloat:self.secsToFullyHealMultiplier]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[HospitalProto class]]) {
    return NO;
  }
  HospitalProto *otherMessage = other;
  return
      self.hasStructInfo == otherMessage.hasStructInfo &&
      (!self.hasStructInfo || [self.structInfo isEqual:otherMessage.structInfo]) &&
      self.hasQueueSize == otherMessage.hasQueueSize &&
      (!self.hasQueueSize || self.queueSize == otherMessage.queueSize) &&
      self.hasHealthPerSecond == otherMessage.hasHealthPerSecond &&
      (!self.hasHealthPerSecond || self.healthPerSecond == otherMessage.healthPerSecond) &&
      self.hasSecsToFullyHealMultiplier == otherMessage.hasSecsToFullyHealMultiplier &&
      (!self.hasSecsToFullyHealMultiplier || self.secsToFullyHealMultiplier == otherMessage.secsToFullyHealMultiplier) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStructInfo) {
    hashCode = hashCode * 31 + [self.structInfo hash];
  }
  if (self.hasQueueSize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.queueSize] hash];
  }
  if (self.hasHealthPerSecond) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.healthPerSecond] hash];
  }
  if (self.hasSecsToFullyHealMultiplier) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.secsToFullyHealMultiplier] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface HospitalProto_Builder()
@property (strong) HospitalProto* result;
@end

@implementation HospitalProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[HospitalProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (HospitalProto_Builder*) clear {
  self.result = [[HospitalProto alloc] init];
  return self;
}
- (HospitalProto_Builder*) clone {
  return [HospitalProto builderWithPrototype:result];
}
- (HospitalProto*) defaultInstance {
  return [HospitalProto defaultInstance];
}
- (HospitalProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (HospitalProto*) buildPartial {
  HospitalProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (HospitalProto_Builder*) mergeFrom:(HospitalProto*) other {
  if (other == [HospitalProto defaultInstance]) {
    return self;
  }
  if (other.hasStructInfo) {
    [self mergeStructInfo:other.structInfo];
  }
  if (other.hasQueueSize) {
    [self setQueueSize:other.queueSize];
  }
  if (other.hasHealthPerSecond) {
    [self setHealthPerSecond:other.healthPerSecond];
  }
  if (other.hasSecsToFullyHealMultiplier) {
    [self setSecsToFullyHealMultiplier:other.secsToFullyHealMultiplier];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (HospitalProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (HospitalProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        StructureInfoProto_Builder* subBuilder = [StructureInfoProto builder];
        if (self.hasStructInfo) {
          [subBuilder mergeFrom:self.structInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStructInfo:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setQueueSize:[input readInt32]];
        break;
      }
      case 29: {
        [self setHealthPerSecond:[input readFloat]];
        break;
      }
      case 37: {
        [self setSecsToFullyHealMultiplier:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasStructInfo {
  return result.hasStructInfo;
}
- (StructureInfoProto*) structInfo {
  return result.structInfo;
}
- (HospitalProto_Builder*) setStructInfo:(StructureInfoProto*) value {
  result.hasStructInfo = YES;
  result.structInfo = value;
  return self;
}
- (HospitalProto_Builder*) setStructInfo_Builder:(StructureInfoProto_Builder*) builderForValue {
  return [self setStructInfo:[builderForValue build]];
}
- (HospitalProto_Builder*) mergeStructInfo:(StructureInfoProto*) value {
  if (result.hasStructInfo &&
      result.structInfo != [StructureInfoProto defaultInstance]) {
    result.structInfo =
      [[[StructureInfoProto builderWithPrototype:result.structInfo] mergeFrom:value] buildPartial];
  } else {
    result.structInfo = value;
  }
  result.hasStructInfo = YES;
  return self;
}
- (HospitalProto_Builder*) clearStructInfo {
  result.hasStructInfo = NO;
  result.structInfo = [StructureInfoProto defaultInstance];
  return self;
}
- (BOOL) hasQueueSize {
  return result.hasQueueSize;
}
- (int32_t) queueSize {
  return result.queueSize;
}
- (HospitalProto_Builder*) setQueueSize:(int32_t) value {
  result.hasQueueSize = YES;
  result.queueSize = value;
  return self;
}
- (HospitalProto_Builder*) clearQueueSize {
  result.hasQueueSize = NO;
  result.queueSize = 0;
  return self;
}
- (BOOL) hasHealthPerSecond {
  return result.hasHealthPerSecond;
}
- (Float32) healthPerSecond {
  return result.healthPerSecond;
}
- (HospitalProto_Builder*) setHealthPerSecond:(Float32) value {
  result.hasHealthPerSecond = YES;
  result.healthPerSecond = value;
  return self;
}
- (HospitalProto_Builder*) clearHealthPerSecond {
  result.hasHealthPerSecond = NO;
  result.healthPerSecond = 0;
  return self;
}
- (BOOL) hasSecsToFullyHealMultiplier {
  return result.hasSecsToFullyHealMultiplier;
}
- (Float32) secsToFullyHealMultiplier {
  return result.secsToFullyHealMultiplier;
}
- (HospitalProto_Builder*) setSecsToFullyHealMultiplier:(Float32) value {
  result.hasSecsToFullyHealMultiplier = YES;
  result.secsToFullyHealMultiplier = value;
  return self;
}
- (HospitalProto_Builder*) clearSecsToFullyHealMultiplier {
  result.hasSecsToFullyHealMultiplier = NO;
  result.secsToFullyHealMultiplier = 0;
  return self;
}
@end

@interface LabProto ()
@property (strong) StructureInfoProto* structInfo;
@property int32_t queueSize;
@property Float32 pointsMultiplier;
@end

@implementation LabProto

- (BOOL) hasStructInfo {
  return !!hasStructInfo_;
}
- (void) setHasStructInfo:(BOOL) value_ {
  hasStructInfo_ = !!value_;
}
@synthesize structInfo;
- (BOOL) hasQueueSize {
  return !!hasQueueSize_;
}
- (void) setHasQueueSize:(BOOL) value_ {
  hasQueueSize_ = !!value_;
}
@synthesize queueSize;
- (BOOL) hasPointsMultiplier {
  return !!hasPointsMultiplier_;
}
- (void) setHasPointsMultiplier:(BOOL) value_ {
  hasPointsMultiplier_ = !!value_;
}
@synthesize pointsMultiplier;
- (id) init {
  if ((self = [super init])) {
    self.structInfo = [StructureInfoProto defaultInstance];
    self.queueSize = 0;
    self.pointsMultiplier = 0;
  }
  return self;
}
static LabProto* defaultLabProtoInstance = nil;
+ (void) initialize {
  if (self == [LabProto class]) {
    defaultLabProtoInstance = [[LabProto alloc] init];
  }
}
+ (LabProto*) defaultInstance {
  return defaultLabProtoInstance;
}
- (LabProto*) defaultInstance {
  return defaultLabProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructInfo) {
    [output writeMessage:1 value:self.structInfo];
  }
  if (self.hasQueueSize) {
    [output writeInt32:2 value:self.queueSize];
  }
  if (self.hasPointsMultiplier) {
    [output writeFloat:4 value:self.pointsMultiplier];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStructInfo) {
    size_ += computeMessageSize(1, self.structInfo);
  }
  if (self.hasQueueSize) {
    size_ += computeInt32Size(2, self.queueSize);
  }
  if (self.hasPointsMultiplier) {
    size_ += computeFloatSize(4, self.pointsMultiplier);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LabProto*) parseFromData:(NSData*) data {
  return (LabProto*)[[[LabProto builder] mergeFromData:data] build];
}
+ (LabProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LabProto*)[[[LabProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LabProto*) parseFromInputStream:(NSInputStream*) input {
  return (LabProto*)[[[LabProto builder] mergeFromInputStream:input] build];
}
+ (LabProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LabProto*)[[[LabProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LabProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LabProto*)[[[LabProto builder] mergeFromCodedInputStream:input] build];
}
+ (LabProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LabProto*)[[[LabProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LabProto_Builder*) builder {
  return [[LabProto_Builder alloc] init];
}
+ (LabProto_Builder*) builderWithPrototype:(LabProto*) prototype {
  return [[LabProto builder] mergeFrom:prototype];
}
- (LabProto_Builder*) builder {
  return [LabProto builder];
}
- (LabProto_Builder*) toBuilder {
  return [LabProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStructInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"structInfo"];
    [self.structInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasQueueSize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"queueSize", [NSNumber numberWithInteger:self.queueSize]];
  }
  if (self.hasPointsMultiplier) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pointsMultiplier", [NSNumber numberWithFloat:self.pointsMultiplier]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LabProto class]]) {
    return NO;
  }
  LabProto *otherMessage = other;
  return
      self.hasStructInfo == otherMessage.hasStructInfo &&
      (!self.hasStructInfo || [self.structInfo isEqual:otherMessage.structInfo]) &&
      self.hasQueueSize == otherMessage.hasQueueSize &&
      (!self.hasQueueSize || self.queueSize == otherMessage.queueSize) &&
      self.hasPointsMultiplier == otherMessage.hasPointsMultiplier &&
      (!self.hasPointsMultiplier || self.pointsMultiplier == otherMessage.pointsMultiplier) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStructInfo) {
    hashCode = hashCode * 31 + [self.structInfo hash];
  }
  if (self.hasQueueSize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.queueSize] hash];
  }
  if (self.hasPointsMultiplier) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.pointsMultiplier] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface LabProto_Builder()
@property (strong) LabProto* result;
@end

@implementation LabProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[LabProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LabProto_Builder*) clear {
  self.result = [[LabProto alloc] init];
  return self;
}
- (LabProto_Builder*) clone {
  return [LabProto builderWithPrototype:result];
}
- (LabProto*) defaultInstance {
  return [LabProto defaultInstance];
}
- (LabProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LabProto*) buildPartial {
  LabProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (LabProto_Builder*) mergeFrom:(LabProto*) other {
  if (other == [LabProto defaultInstance]) {
    return self;
  }
  if (other.hasStructInfo) {
    [self mergeStructInfo:other.structInfo];
  }
  if (other.hasQueueSize) {
    [self setQueueSize:other.queueSize];
  }
  if (other.hasPointsMultiplier) {
    [self setPointsMultiplier:other.pointsMultiplier];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LabProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LabProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        StructureInfoProto_Builder* subBuilder = [StructureInfoProto builder];
        if (self.hasStructInfo) {
          [subBuilder mergeFrom:self.structInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStructInfo:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setQueueSize:[input readInt32]];
        break;
      }
      case 37: {
        [self setPointsMultiplier:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasStructInfo {
  return result.hasStructInfo;
}
- (StructureInfoProto*) structInfo {
  return result.structInfo;
}
- (LabProto_Builder*) setStructInfo:(StructureInfoProto*) value {
  result.hasStructInfo = YES;
  result.structInfo = value;
  return self;
}
- (LabProto_Builder*) setStructInfo_Builder:(StructureInfoProto_Builder*) builderForValue {
  return [self setStructInfo:[builderForValue build]];
}
- (LabProto_Builder*) mergeStructInfo:(StructureInfoProto*) value {
  if (result.hasStructInfo &&
      result.structInfo != [StructureInfoProto defaultInstance]) {
    result.structInfo =
      [[[StructureInfoProto builderWithPrototype:result.structInfo] mergeFrom:value] buildPartial];
  } else {
    result.structInfo = value;
  }
  result.hasStructInfo = YES;
  return self;
}
- (LabProto_Builder*) clearStructInfo {
  result.hasStructInfo = NO;
  result.structInfo = [StructureInfoProto defaultInstance];
  return self;
}
- (BOOL) hasQueueSize {
  return result.hasQueueSize;
}
- (int32_t) queueSize {
  return result.queueSize;
}
- (LabProto_Builder*) setQueueSize:(int32_t) value {
  result.hasQueueSize = YES;
  result.queueSize = value;
  return self;
}
- (LabProto_Builder*) clearQueueSize {
  result.hasQueueSize = NO;
  result.queueSize = 0;
  return self;
}
- (BOOL) hasPointsMultiplier {
  return result.hasPointsMultiplier;
}
- (Float32) pointsMultiplier {
  return result.pointsMultiplier;
}
- (LabProto_Builder*) setPointsMultiplier:(Float32) value {
  result.hasPointsMultiplier = YES;
  result.pointsMultiplier = value;
  return self;
}
- (LabProto_Builder*) clearPointsMultiplier {
  result.hasPointsMultiplier = NO;
  result.pointsMultiplier = 0;
  return self;
}
@end

@interface ResidenceProto ()
@property (strong) StructureInfoProto* structInfo;
@property int32_t numMonsterSlots;
@property int32_t numBonusMonsterSlots;
@property int32_t numGemsRequired;
@property int32_t numAcceptedFbInvites;
@property (strong) NSString* occupationName;
@property (strong) NSString* imgSuffix;
@end

@implementation ResidenceProto

- (BOOL) hasStructInfo {
  return !!hasStructInfo_;
}
- (void) setHasStructInfo:(BOOL) value_ {
  hasStructInfo_ = !!value_;
}
@synthesize structInfo;
- (BOOL) hasNumMonsterSlots {
  return !!hasNumMonsterSlots_;
}
- (void) setHasNumMonsterSlots:(BOOL) value_ {
  hasNumMonsterSlots_ = !!value_;
}
@synthesize numMonsterSlots;
- (BOOL) hasNumBonusMonsterSlots {
  return !!hasNumBonusMonsterSlots_;
}
- (void) setHasNumBonusMonsterSlots:(BOOL) value_ {
  hasNumBonusMonsterSlots_ = !!value_;
}
@synthesize numBonusMonsterSlots;
- (BOOL) hasNumGemsRequired {
  return !!hasNumGemsRequired_;
}
- (void) setHasNumGemsRequired:(BOOL) value_ {
  hasNumGemsRequired_ = !!value_;
}
@synthesize numGemsRequired;
- (BOOL) hasNumAcceptedFbInvites {
  return !!hasNumAcceptedFbInvites_;
}
- (void) setHasNumAcceptedFbInvites:(BOOL) value_ {
  hasNumAcceptedFbInvites_ = !!value_;
}
@synthesize numAcceptedFbInvites;
- (BOOL) hasOccupationName {
  return !!hasOccupationName_;
}
- (void) setHasOccupationName:(BOOL) value_ {
  hasOccupationName_ = !!value_;
}
@synthesize occupationName;
- (BOOL) hasImgSuffix {
  return !!hasImgSuffix_;
}
- (void) setHasImgSuffix:(BOOL) value_ {
  hasImgSuffix_ = !!value_;
}
@synthesize imgSuffix;
- (id) init {
  if ((self = [super init])) {
    self.structInfo = [StructureInfoProto defaultInstance];
    self.numMonsterSlots = 0;
    self.numBonusMonsterSlots = 0;
    self.numGemsRequired = 0;
    self.numAcceptedFbInvites = 0;
    self.occupationName = @"";
    self.imgSuffix = @"";
  }
  return self;
}
static ResidenceProto* defaultResidenceProtoInstance = nil;
+ (void) initialize {
  if (self == [ResidenceProto class]) {
    defaultResidenceProtoInstance = [[ResidenceProto alloc] init];
  }
}
+ (ResidenceProto*) defaultInstance {
  return defaultResidenceProtoInstance;
}
- (ResidenceProto*) defaultInstance {
  return defaultResidenceProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructInfo) {
    [output writeMessage:1 value:self.structInfo];
  }
  if (self.hasNumMonsterSlots) {
    [output writeInt32:2 value:self.numMonsterSlots];
  }
  if (self.hasNumBonusMonsterSlots) {
    [output writeInt32:3 value:self.numBonusMonsterSlots];
  }
  if (self.hasNumGemsRequired) {
    [output writeInt32:4 value:self.numGemsRequired];
  }
  if (self.hasNumAcceptedFbInvites) {
    [output writeInt32:5 value:self.numAcceptedFbInvites];
  }
  if (self.hasOccupationName) {
    [output writeString:6 value:self.occupationName];
  }
  if (self.hasImgSuffix) {
    [output writeString:7 value:self.imgSuffix];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStructInfo) {
    size_ += computeMessageSize(1, self.structInfo);
  }
  if (self.hasNumMonsterSlots) {
    size_ += computeInt32Size(2, self.numMonsterSlots);
  }
  if (self.hasNumBonusMonsterSlots) {
    size_ += computeInt32Size(3, self.numBonusMonsterSlots);
  }
  if (self.hasNumGemsRequired) {
    size_ += computeInt32Size(4, self.numGemsRequired);
  }
  if (self.hasNumAcceptedFbInvites) {
    size_ += computeInt32Size(5, self.numAcceptedFbInvites);
  }
  if (self.hasOccupationName) {
    size_ += computeStringSize(6, self.occupationName);
  }
  if (self.hasImgSuffix) {
    size_ += computeStringSize(7, self.imgSuffix);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ResidenceProto*) parseFromData:(NSData*) data {
  return (ResidenceProto*)[[[ResidenceProto builder] mergeFromData:data] build];
}
+ (ResidenceProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResidenceProto*)[[[ResidenceProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ResidenceProto*) parseFromInputStream:(NSInputStream*) input {
  return (ResidenceProto*)[[[ResidenceProto builder] mergeFromInputStream:input] build];
}
+ (ResidenceProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResidenceProto*)[[[ResidenceProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResidenceProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ResidenceProto*)[[[ResidenceProto builder] mergeFromCodedInputStream:input] build];
}
+ (ResidenceProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResidenceProto*)[[[ResidenceProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResidenceProto_Builder*) builder {
  return [[ResidenceProto_Builder alloc] init];
}
+ (ResidenceProto_Builder*) builderWithPrototype:(ResidenceProto*) prototype {
  return [[ResidenceProto builder] mergeFrom:prototype];
}
- (ResidenceProto_Builder*) builder {
  return [ResidenceProto builder];
}
- (ResidenceProto_Builder*) toBuilder {
  return [ResidenceProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStructInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"structInfo"];
    [self.structInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasNumMonsterSlots) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numMonsterSlots", [NSNumber numberWithInteger:self.numMonsterSlots]];
  }
  if (self.hasNumBonusMonsterSlots) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numBonusMonsterSlots", [NSNumber numberWithInteger:self.numBonusMonsterSlots]];
  }
  if (self.hasNumGemsRequired) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numGemsRequired", [NSNumber numberWithInteger:self.numGemsRequired]];
  }
  if (self.hasNumAcceptedFbInvites) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numAcceptedFbInvites", [NSNumber numberWithInteger:self.numAcceptedFbInvites]];
  }
  if (self.hasOccupationName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"occupationName", self.occupationName];
  }
  if (self.hasImgSuffix) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imgSuffix", self.imgSuffix];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ResidenceProto class]]) {
    return NO;
  }
  ResidenceProto *otherMessage = other;
  return
      self.hasStructInfo == otherMessage.hasStructInfo &&
      (!self.hasStructInfo || [self.structInfo isEqual:otherMessage.structInfo]) &&
      self.hasNumMonsterSlots == otherMessage.hasNumMonsterSlots &&
      (!self.hasNumMonsterSlots || self.numMonsterSlots == otherMessage.numMonsterSlots) &&
      self.hasNumBonusMonsterSlots == otherMessage.hasNumBonusMonsterSlots &&
      (!self.hasNumBonusMonsterSlots || self.numBonusMonsterSlots == otherMessage.numBonusMonsterSlots) &&
      self.hasNumGemsRequired == otherMessage.hasNumGemsRequired &&
      (!self.hasNumGemsRequired || self.numGemsRequired == otherMessage.numGemsRequired) &&
      self.hasNumAcceptedFbInvites == otherMessage.hasNumAcceptedFbInvites &&
      (!self.hasNumAcceptedFbInvites || self.numAcceptedFbInvites == otherMessage.numAcceptedFbInvites) &&
      self.hasOccupationName == otherMessage.hasOccupationName &&
      (!self.hasOccupationName || [self.occupationName isEqual:otherMessage.occupationName]) &&
      self.hasImgSuffix == otherMessage.hasImgSuffix &&
      (!self.hasImgSuffix || [self.imgSuffix isEqual:otherMessage.imgSuffix]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStructInfo) {
    hashCode = hashCode * 31 + [self.structInfo hash];
  }
  if (self.hasNumMonsterSlots) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numMonsterSlots] hash];
  }
  if (self.hasNumBonusMonsterSlots) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numBonusMonsterSlots] hash];
  }
  if (self.hasNumGemsRequired) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numGemsRequired] hash];
  }
  if (self.hasNumAcceptedFbInvites) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numAcceptedFbInvites] hash];
  }
  if (self.hasOccupationName) {
    hashCode = hashCode * 31 + [self.occupationName hash];
  }
  if (self.hasImgSuffix) {
    hashCode = hashCode * 31 + [self.imgSuffix hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ResidenceProto_Builder()
@property (strong) ResidenceProto* result;
@end

@implementation ResidenceProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ResidenceProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ResidenceProto_Builder*) clear {
  self.result = [[ResidenceProto alloc] init];
  return self;
}
- (ResidenceProto_Builder*) clone {
  return [ResidenceProto builderWithPrototype:result];
}
- (ResidenceProto*) defaultInstance {
  return [ResidenceProto defaultInstance];
}
- (ResidenceProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ResidenceProto*) buildPartial {
  ResidenceProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ResidenceProto_Builder*) mergeFrom:(ResidenceProto*) other {
  if (other == [ResidenceProto defaultInstance]) {
    return self;
  }
  if (other.hasStructInfo) {
    [self mergeStructInfo:other.structInfo];
  }
  if (other.hasNumMonsterSlots) {
    [self setNumMonsterSlots:other.numMonsterSlots];
  }
  if (other.hasNumBonusMonsterSlots) {
    [self setNumBonusMonsterSlots:other.numBonusMonsterSlots];
  }
  if (other.hasNumGemsRequired) {
    [self setNumGemsRequired:other.numGemsRequired];
  }
  if (other.hasNumAcceptedFbInvites) {
    [self setNumAcceptedFbInvites:other.numAcceptedFbInvites];
  }
  if (other.hasOccupationName) {
    [self setOccupationName:other.occupationName];
  }
  if (other.hasImgSuffix) {
    [self setImgSuffix:other.imgSuffix];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ResidenceProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ResidenceProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        StructureInfoProto_Builder* subBuilder = [StructureInfoProto builder];
        if (self.hasStructInfo) {
          [subBuilder mergeFrom:self.structInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStructInfo:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setNumMonsterSlots:[input readInt32]];
        break;
      }
      case 24: {
        [self setNumBonusMonsterSlots:[input readInt32]];
        break;
      }
      case 32: {
        [self setNumGemsRequired:[input readInt32]];
        break;
      }
      case 40: {
        [self setNumAcceptedFbInvites:[input readInt32]];
        break;
      }
      case 50: {
        [self setOccupationName:[input readString]];
        break;
      }
      case 58: {
        [self setImgSuffix:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasStructInfo {
  return result.hasStructInfo;
}
- (StructureInfoProto*) structInfo {
  return result.structInfo;
}
- (ResidenceProto_Builder*) setStructInfo:(StructureInfoProto*) value {
  result.hasStructInfo = YES;
  result.structInfo = value;
  return self;
}
- (ResidenceProto_Builder*) setStructInfo_Builder:(StructureInfoProto_Builder*) builderForValue {
  return [self setStructInfo:[builderForValue build]];
}
- (ResidenceProto_Builder*) mergeStructInfo:(StructureInfoProto*) value {
  if (result.hasStructInfo &&
      result.structInfo != [StructureInfoProto defaultInstance]) {
    result.structInfo =
      [[[StructureInfoProto builderWithPrototype:result.structInfo] mergeFrom:value] buildPartial];
  } else {
    result.structInfo = value;
  }
  result.hasStructInfo = YES;
  return self;
}
- (ResidenceProto_Builder*) clearStructInfo {
  result.hasStructInfo = NO;
  result.structInfo = [StructureInfoProto defaultInstance];
  return self;
}
- (BOOL) hasNumMonsterSlots {
  return result.hasNumMonsterSlots;
}
- (int32_t) numMonsterSlots {
  return result.numMonsterSlots;
}
- (ResidenceProto_Builder*) setNumMonsterSlots:(int32_t) value {
  result.hasNumMonsterSlots = YES;
  result.numMonsterSlots = value;
  return self;
}
- (ResidenceProto_Builder*) clearNumMonsterSlots {
  result.hasNumMonsterSlots = NO;
  result.numMonsterSlots = 0;
  return self;
}
- (BOOL) hasNumBonusMonsterSlots {
  return result.hasNumBonusMonsterSlots;
}
- (int32_t) numBonusMonsterSlots {
  return result.numBonusMonsterSlots;
}
- (ResidenceProto_Builder*) setNumBonusMonsterSlots:(int32_t) value {
  result.hasNumBonusMonsterSlots = YES;
  result.numBonusMonsterSlots = value;
  return self;
}
- (ResidenceProto_Builder*) clearNumBonusMonsterSlots {
  result.hasNumBonusMonsterSlots = NO;
  result.numBonusMonsterSlots = 0;
  return self;
}
- (BOOL) hasNumGemsRequired {
  return result.hasNumGemsRequired;
}
- (int32_t) numGemsRequired {
  return result.numGemsRequired;
}
- (ResidenceProto_Builder*) setNumGemsRequired:(int32_t) value {
  result.hasNumGemsRequired = YES;
  result.numGemsRequired = value;
  return self;
}
- (ResidenceProto_Builder*) clearNumGemsRequired {
  result.hasNumGemsRequired = NO;
  result.numGemsRequired = 0;
  return self;
}
- (BOOL) hasNumAcceptedFbInvites {
  return result.hasNumAcceptedFbInvites;
}
- (int32_t) numAcceptedFbInvites {
  return result.numAcceptedFbInvites;
}
- (ResidenceProto_Builder*) setNumAcceptedFbInvites:(int32_t) value {
  result.hasNumAcceptedFbInvites = YES;
  result.numAcceptedFbInvites = value;
  return self;
}
- (ResidenceProto_Builder*) clearNumAcceptedFbInvites {
  result.hasNumAcceptedFbInvites = NO;
  result.numAcceptedFbInvites = 0;
  return self;
}
- (BOOL) hasOccupationName {
  return result.hasOccupationName;
}
- (NSString*) occupationName {
  return result.occupationName;
}
- (ResidenceProto_Builder*) setOccupationName:(NSString*) value {
  result.hasOccupationName = YES;
  result.occupationName = value;
  return self;
}
- (ResidenceProto_Builder*) clearOccupationName {
  result.hasOccupationName = NO;
  result.occupationName = @"";
  return self;
}
- (BOOL) hasImgSuffix {
  return result.hasImgSuffix;
}
- (NSString*) imgSuffix {
  return result.imgSuffix;
}
- (ResidenceProto_Builder*) setImgSuffix:(NSString*) value {
  result.hasImgSuffix = YES;
  result.imgSuffix = value;
  return self;
}
- (ResidenceProto_Builder*) clearImgSuffix {
  result.hasImgSuffix = NO;
  result.imgSuffix = @"";
  return self;
}
@end

@interface TownHallProto ()
@property (strong) StructureInfoProto* structInfo;
@property int32_t numResourceOneGenerators;
@property int32_t numResourceOneStorages;
@property int32_t numResourceTwoGenerators;
@property int32_t numResourceTwoStorages;
@property int32_t numHospitals;
@property int32_t numResidences;
@property int32_t numMonsterSlots;
@property int32_t numLabs;
@property int32_t pvpQueueCashCost;
@property int32_t resourceCapacity;
@property int32_t numEvoChambers;
@end

@implementation TownHallProto

- (BOOL) hasStructInfo {
  return !!hasStructInfo_;
}
- (void) setHasStructInfo:(BOOL) value_ {
  hasStructInfo_ = !!value_;
}
@synthesize structInfo;
- (BOOL) hasNumResourceOneGenerators {
  return !!hasNumResourceOneGenerators_;
}
- (void) setHasNumResourceOneGenerators:(BOOL) value_ {
  hasNumResourceOneGenerators_ = !!value_;
}
@synthesize numResourceOneGenerators;
- (BOOL) hasNumResourceOneStorages {
  return !!hasNumResourceOneStorages_;
}
- (void) setHasNumResourceOneStorages:(BOOL) value_ {
  hasNumResourceOneStorages_ = !!value_;
}
@synthesize numResourceOneStorages;
- (BOOL) hasNumResourceTwoGenerators {
  return !!hasNumResourceTwoGenerators_;
}
- (void) setHasNumResourceTwoGenerators:(BOOL) value_ {
  hasNumResourceTwoGenerators_ = !!value_;
}
@synthesize numResourceTwoGenerators;
- (BOOL) hasNumResourceTwoStorages {
  return !!hasNumResourceTwoStorages_;
}
- (void) setHasNumResourceTwoStorages:(BOOL) value_ {
  hasNumResourceTwoStorages_ = !!value_;
}
@synthesize numResourceTwoStorages;
- (BOOL) hasNumHospitals {
  return !!hasNumHospitals_;
}
- (void) setHasNumHospitals:(BOOL) value_ {
  hasNumHospitals_ = !!value_;
}
@synthesize numHospitals;
- (BOOL) hasNumResidences {
  return !!hasNumResidences_;
}
- (void) setHasNumResidences:(BOOL) value_ {
  hasNumResidences_ = !!value_;
}
@synthesize numResidences;
- (BOOL) hasNumMonsterSlots {
  return !!hasNumMonsterSlots_;
}
- (void) setHasNumMonsterSlots:(BOOL) value_ {
  hasNumMonsterSlots_ = !!value_;
}
@synthesize numMonsterSlots;
- (BOOL) hasNumLabs {
  return !!hasNumLabs_;
}
- (void) setHasNumLabs:(BOOL) value_ {
  hasNumLabs_ = !!value_;
}
@synthesize numLabs;
- (BOOL) hasPvpQueueCashCost {
  return !!hasPvpQueueCashCost_;
}
- (void) setHasPvpQueueCashCost:(BOOL) value_ {
  hasPvpQueueCashCost_ = !!value_;
}
@synthesize pvpQueueCashCost;
- (BOOL) hasResourceCapacity {
  return !!hasResourceCapacity_;
}
- (void) setHasResourceCapacity:(BOOL) value_ {
  hasResourceCapacity_ = !!value_;
}
@synthesize resourceCapacity;
- (BOOL) hasNumEvoChambers {
  return !!hasNumEvoChambers_;
}
- (void) setHasNumEvoChambers:(BOOL) value_ {
  hasNumEvoChambers_ = !!value_;
}
@synthesize numEvoChambers;
- (id) init {
  if ((self = [super init])) {
    self.structInfo = [StructureInfoProto defaultInstance];
    self.numResourceOneGenerators = 0;
    self.numResourceOneStorages = 0;
    self.numResourceTwoGenerators = 0;
    self.numResourceTwoStorages = 0;
    self.numHospitals = 0;
    self.numResidences = 0;
    self.numMonsterSlots = 0;
    self.numLabs = 0;
    self.pvpQueueCashCost = 0;
    self.resourceCapacity = 0;
    self.numEvoChambers = 0;
  }
  return self;
}
static TownHallProto* defaultTownHallProtoInstance = nil;
+ (void) initialize {
  if (self == [TownHallProto class]) {
    defaultTownHallProtoInstance = [[TownHallProto alloc] init];
  }
}
+ (TownHallProto*) defaultInstance {
  return defaultTownHallProtoInstance;
}
- (TownHallProto*) defaultInstance {
  return defaultTownHallProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructInfo) {
    [output writeMessage:1 value:self.structInfo];
  }
  if (self.hasNumResourceOneGenerators) {
    [output writeInt32:2 value:self.numResourceOneGenerators];
  }
  if (self.hasNumResourceOneStorages) {
    [output writeInt32:3 value:self.numResourceOneStorages];
  }
  if (self.hasNumResourceTwoGenerators) {
    [output writeInt32:4 value:self.numResourceTwoGenerators];
  }
  if (self.hasNumResourceTwoStorages) {
    [output writeInt32:5 value:self.numResourceTwoStorages];
  }
  if (self.hasNumHospitals) {
    [output writeInt32:6 value:self.numHospitals];
  }
  if (self.hasNumResidences) {
    [output writeInt32:7 value:self.numResidences];
  }
  if (self.hasNumMonsterSlots) {
    [output writeInt32:8 value:self.numMonsterSlots];
  }
  if (self.hasNumLabs) {
    [output writeInt32:9 value:self.numLabs];
  }
  if (self.hasPvpQueueCashCost) {
    [output writeInt32:10 value:self.pvpQueueCashCost];
  }
  if (self.hasResourceCapacity) {
    [output writeInt32:11 value:self.resourceCapacity];
  }
  if (self.hasNumEvoChambers) {
    [output writeInt32:12 value:self.numEvoChambers];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStructInfo) {
    size_ += computeMessageSize(1, self.structInfo);
  }
  if (self.hasNumResourceOneGenerators) {
    size_ += computeInt32Size(2, self.numResourceOneGenerators);
  }
  if (self.hasNumResourceOneStorages) {
    size_ += computeInt32Size(3, self.numResourceOneStorages);
  }
  if (self.hasNumResourceTwoGenerators) {
    size_ += computeInt32Size(4, self.numResourceTwoGenerators);
  }
  if (self.hasNumResourceTwoStorages) {
    size_ += computeInt32Size(5, self.numResourceTwoStorages);
  }
  if (self.hasNumHospitals) {
    size_ += computeInt32Size(6, self.numHospitals);
  }
  if (self.hasNumResidences) {
    size_ += computeInt32Size(7, self.numResidences);
  }
  if (self.hasNumMonsterSlots) {
    size_ += computeInt32Size(8, self.numMonsterSlots);
  }
  if (self.hasNumLabs) {
    size_ += computeInt32Size(9, self.numLabs);
  }
  if (self.hasPvpQueueCashCost) {
    size_ += computeInt32Size(10, self.pvpQueueCashCost);
  }
  if (self.hasResourceCapacity) {
    size_ += computeInt32Size(11, self.resourceCapacity);
  }
  if (self.hasNumEvoChambers) {
    size_ += computeInt32Size(12, self.numEvoChambers);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TownHallProto*) parseFromData:(NSData*) data {
  return (TownHallProto*)[[[TownHallProto builder] mergeFromData:data] build];
}
+ (TownHallProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TownHallProto*)[[[TownHallProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TownHallProto*) parseFromInputStream:(NSInputStream*) input {
  return (TownHallProto*)[[[TownHallProto builder] mergeFromInputStream:input] build];
}
+ (TownHallProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TownHallProto*)[[[TownHallProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TownHallProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TownHallProto*)[[[TownHallProto builder] mergeFromCodedInputStream:input] build];
}
+ (TownHallProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TownHallProto*)[[[TownHallProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TownHallProto_Builder*) builder {
  return [[TownHallProto_Builder alloc] init];
}
+ (TownHallProto_Builder*) builderWithPrototype:(TownHallProto*) prototype {
  return [[TownHallProto builder] mergeFrom:prototype];
}
- (TownHallProto_Builder*) builder {
  return [TownHallProto builder];
}
- (TownHallProto_Builder*) toBuilder {
  return [TownHallProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStructInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"structInfo"];
    [self.structInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasNumResourceOneGenerators) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numResourceOneGenerators", [NSNumber numberWithInteger:self.numResourceOneGenerators]];
  }
  if (self.hasNumResourceOneStorages) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numResourceOneStorages", [NSNumber numberWithInteger:self.numResourceOneStorages]];
  }
  if (self.hasNumResourceTwoGenerators) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numResourceTwoGenerators", [NSNumber numberWithInteger:self.numResourceTwoGenerators]];
  }
  if (self.hasNumResourceTwoStorages) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numResourceTwoStorages", [NSNumber numberWithInteger:self.numResourceTwoStorages]];
  }
  if (self.hasNumHospitals) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numHospitals", [NSNumber numberWithInteger:self.numHospitals]];
  }
  if (self.hasNumResidences) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numResidences", [NSNumber numberWithInteger:self.numResidences]];
  }
  if (self.hasNumMonsterSlots) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numMonsterSlots", [NSNumber numberWithInteger:self.numMonsterSlots]];
  }
  if (self.hasNumLabs) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numLabs", [NSNumber numberWithInteger:self.numLabs]];
  }
  if (self.hasPvpQueueCashCost) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pvpQueueCashCost", [NSNumber numberWithInteger:self.pvpQueueCashCost]];
  }
  if (self.hasResourceCapacity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resourceCapacity", [NSNumber numberWithInteger:self.resourceCapacity]];
  }
  if (self.hasNumEvoChambers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numEvoChambers", [NSNumber numberWithInteger:self.numEvoChambers]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TownHallProto class]]) {
    return NO;
  }
  TownHallProto *otherMessage = other;
  return
      self.hasStructInfo == otherMessage.hasStructInfo &&
      (!self.hasStructInfo || [self.structInfo isEqual:otherMessage.structInfo]) &&
      self.hasNumResourceOneGenerators == otherMessage.hasNumResourceOneGenerators &&
      (!self.hasNumResourceOneGenerators || self.numResourceOneGenerators == otherMessage.numResourceOneGenerators) &&
      self.hasNumResourceOneStorages == otherMessage.hasNumResourceOneStorages &&
      (!self.hasNumResourceOneStorages || self.numResourceOneStorages == otherMessage.numResourceOneStorages) &&
      self.hasNumResourceTwoGenerators == otherMessage.hasNumResourceTwoGenerators &&
      (!self.hasNumResourceTwoGenerators || self.numResourceTwoGenerators == otherMessage.numResourceTwoGenerators) &&
      self.hasNumResourceTwoStorages == otherMessage.hasNumResourceTwoStorages &&
      (!self.hasNumResourceTwoStorages || self.numResourceTwoStorages == otherMessage.numResourceTwoStorages) &&
      self.hasNumHospitals == otherMessage.hasNumHospitals &&
      (!self.hasNumHospitals || self.numHospitals == otherMessage.numHospitals) &&
      self.hasNumResidences == otherMessage.hasNumResidences &&
      (!self.hasNumResidences || self.numResidences == otherMessage.numResidences) &&
      self.hasNumMonsterSlots == otherMessage.hasNumMonsterSlots &&
      (!self.hasNumMonsterSlots || self.numMonsterSlots == otherMessage.numMonsterSlots) &&
      self.hasNumLabs == otherMessage.hasNumLabs &&
      (!self.hasNumLabs || self.numLabs == otherMessage.numLabs) &&
      self.hasPvpQueueCashCost == otherMessage.hasPvpQueueCashCost &&
      (!self.hasPvpQueueCashCost || self.pvpQueueCashCost == otherMessage.pvpQueueCashCost) &&
      self.hasResourceCapacity == otherMessage.hasResourceCapacity &&
      (!self.hasResourceCapacity || self.resourceCapacity == otherMessage.resourceCapacity) &&
      self.hasNumEvoChambers == otherMessage.hasNumEvoChambers &&
      (!self.hasNumEvoChambers || self.numEvoChambers == otherMessage.numEvoChambers) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStructInfo) {
    hashCode = hashCode * 31 + [self.structInfo hash];
  }
  if (self.hasNumResourceOneGenerators) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numResourceOneGenerators] hash];
  }
  if (self.hasNumResourceOneStorages) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numResourceOneStorages] hash];
  }
  if (self.hasNumResourceTwoGenerators) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numResourceTwoGenerators] hash];
  }
  if (self.hasNumResourceTwoStorages) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numResourceTwoStorages] hash];
  }
  if (self.hasNumHospitals) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numHospitals] hash];
  }
  if (self.hasNumResidences) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numResidences] hash];
  }
  if (self.hasNumMonsterSlots) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numMonsterSlots] hash];
  }
  if (self.hasNumLabs) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numLabs] hash];
  }
  if (self.hasPvpQueueCashCost) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pvpQueueCashCost] hash];
  }
  if (self.hasResourceCapacity) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.resourceCapacity] hash];
  }
  if (self.hasNumEvoChambers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numEvoChambers] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TownHallProto_Builder()
@property (strong) TownHallProto* result;
@end

@implementation TownHallProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[TownHallProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (TownHallProto_Builder*) clear {
  self.result = [[TownHallProto alloc] init];
  return self;
}
- (TownHallProto_Builder*) clone {
  return [TownHallProto builderWithPrototype:result];
}
- (TownHallProto*) defaultInstance {
  return [TownHallProto defaultInstance];
}
- (TownHallProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TownHallProto*) buildPartial {
  TownHallProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (TownHallProto_Builder*) mergeFrom:(TownHallProto*) other {
  if (other == [TownHallProto defaultInstance]) {
    return self;
  }
  if (other.hasStructInfo) {
    [self mergeStructInfo:other.structInfo];
  }
  if (other.hasNumResourceOneGenerators) {
    [self setNumResourceOneGenerators:other.numResourceOneGenerators];
  }
  if (other.hasNumResourceOneStorages) {
    [self setNumResourceOneStorages:other.numResourceOneStorages];
  }
  if (other.hasNumResourceTwoGenerators) {
    [self setNumResourceTwoGenerators:other.numResourceTwoGenerators];
  }
  if (other.hasNumResourceTwoStorages) {
    [self setNumResourceTwoStorages:other.numResourceTwoStorages];
  }
  if (other.hasNumHospitals) {
    [self setNumHospitals:other.numHospitals];
  }
  if (other.hasNumResidences) {
    [self setNumResidences:other.numResidences];
  }
  if (other.hasNumMonsterSlots) {
    [self setNumMonsterSlots:other.numMonsterSlots];
  }
  if (other.hasNumLabs) {
    [self setNumLabs:other.numLabs];
  }
  if (other.hasPvpQueueCashCost) {
    [self setPvpQueueCashCost:other.pvpQueueCashCost];
  }
  if (other.hasResourceCapacity) {
    [self setResourceCapacity:other.resourceCapacity];
  }
  if (other.hasNumEvoChambers) {
    [self setNumEvoChambers:other.numEvoChambers];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TownHallProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TownHallProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        StructureInfoProto_Builder* subBuilder = [StructureInfoProto builder];
        if (self.hasStructInfo) {
          [subBuilder mergeFrom:self.structInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStructInfo:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setNumResourceOneGenerators:[input readInt32]];
        break;
      }
      case 24: {
        [self setNumResourceOneStorages:[input readInt32]];
        break;
      }
      case 32: {
        [self setNumResourceTwoGenerators:[input readInt32]];
        break;
      }
      case 40: {
        [self setNumResourceTwoStorages:[input readInt32]];
        break;
      }
      case 48: {
        [self setNumHospitals:[input readInt32]];
        break;
      }
      case 56: {
        [self setNumResidences:[input readInt32]];
        break;
      }
      case 64: {
        [self setNumMonsterSlots:[input readInt32]];
        break;
      }
      case 72: {
        [self setNumLabs:[input readInt32]];
        break;
      }
      case 80: {
        [self setPvpQueueCashCost:[input readInt32]];
        break;
      }
      case 88: {
        [self setResourceCapacity:[input readInt32]];
        break;
      }
      case 96: {
        [self setNumEvoChambers:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasStructInfo {
  return result.hasStructInfo;
}
- (StructureInfoProto*) structInfo {
  return result.structInfo;
}
- (TownHallProto_Builder*) setStructInfo:(StructureInfoProto*) value {
  result.hasStructInfo = YES;
  result.structInfo = value;
  return self;
}
- (TownHallProto_Builder*) setStructInfo_Builder:(StructureInfoProto_Builder*) builderForValue {
  return [self setStructInfo:[builderForValue build]];
}
- (TownHallProto_Builder*) mergeStructInfo:(StructureInfoProto*) value {
  if (result.hasStructInfo &&
      result.structInfo != [StructureInfoProto defaultInstance]) {
    result.structInfo =
      [[[StructureInfoProto builderWithPrototype:result.structInfo] mergeFrom:value] buildPartial];
  } else {
    result.structInfo = value;
  }
  result.hasStructInfo = YES;
  return self;
}
- (TownHallProto_Builder*) clearStructInfo {
  result.hasStructInfo = NO;
  result.structInfo = [StructureInfoProto defaultInstance];
  return self;
}
- (BOOL) hasNumResourceOneGenerators {
  return result.hasNumResourceOneGenerators;
}
- (int32_t) numResourceOneGenerators {
  return result.numResourceOneGenerators;
}
- (TownHallProto_Builder*) setNumResourceOneGenerators:(int32_t) value {
  result.hasNumResourceOneGenerators = YES;
  result.numResourceOneGenerators = value;
  return self;
}
- (TownHallProto_Builder*) clearNumResourceOneGenerators {
  result.hasNumResourceOneGenerators = NO;
  result.numResourceOneGenerators = 0;
  return self;
}
- (BOOL) hasNumResourceOneStorages {
  return result.hasNumResourceOneStorages;
}
- (int32_t) numResourceOneStorages {
  return result.numResourceOneStorages;
}
- (TownHallProto_Builder*) setNumResourceOneStorages:(int32_t) value {
  result.hasNumResourceOneStorages = YES;
  result.numResourceOneStorages = value;
  return self;
}
- (TownHallProto_Builder*) clearNumResourceOneStorages {
  result.hasNumResourceOneStorages = NO;
  result.numResourceOneStorages = 0;
  return self;
}
- (BOOL) hasNumResourceTwoGenerators {
  return result.hasNumResourceTwoGenerators;
}
- (int32_t) numResourceTwoGenerators {
  return result.numResourceTwoGenerators;
}
- (TownHallProto_Builder*) setNumResourceTwoGenerators:(int32_t) value {
  result.hasNumResourceTwoGenerators = YES;
  result.numResourceTwoGenerators = value;
  return self;
}
- (TownHallProto_Builder*) clearNumResourceTwoGenerators {
  result.hasNumResourceTwoGenerators = NO;
  result.numResourceTwoGenerators = 0;
  return self;
}
- (BOOL) hasNumResourceTwoStorages {
  return result.hasNumResourceTwoStorages;
}
- (int32_t) numResourceTwoStorages {
  return result.numResourceTwoStorages;
}
- (TownHallProto_Builder*) setNumResourceTwoStorages:(int32_t) value {
  result.hasNumResourceTwoStorages = YES;
  result.numResourceTwoStorages = value;
  return self;
}
- (TownHallProto_Builder*) clearNumResourceTwoStorages {
  result.hasNumResourceTwoStorages = NO;
  result.numResourceTwoStorages = 0;
  return self;
}
- (BOOL) hasNumHospitals {
  return result.hasNumHospitals;
}
- (int32_t) numHospitals {
  return result.numHospitals;
}
- (TownHallProto_Builder*) setNumHospitals:(int32_t) value {
  result.hasNumHospitals = YES;
  result.numHospitals = value;
  return self;
}
- (TownHallProto_Builder*) clearNumHospitals {
  result.hasNumHospitals = NO;
  result.numHospitals = 0;
  return self;
}
- (BOOL) hasNumResidences {
  return result.hasNumResidences;
}
- (int32_t) numResidences {
  return result.numResidences;
}
- (TownHallProto_Builder*) setNumResidences:(int32_t) value {
  result.hasNumResidences = YES;
  result.numResidences = value;
  return self;
}
- (TownHallProto_Builder*) clearNumResidences {
  result.hasNumResidences = NO;
  result.numResidences = 0;
  return self;
}
- (BOOL) hasNumMonsterSlots {
  return result.hasNumMonsterSlots;
}
- (int32_t) numMonsterSlots {
  return result.numMonsterSlots;
}
- (TownHallProto_Builder*) setNumMonsterSlots:(int32_t) value {
  result.hasNumMonsterSlots = YES;
  result.numMonsterSlots = value;
  return self;
}
- (TownHallProto_Builder*) clearNumMonsterSlots {
  result.hasNumMonsterSlots = NO;
  result.numMonsterSlots = 0;
  return self;
}
- (BOOL) hasNumLabs {
  return result.hasNumLabs;
}
- (int32_t) numLabs {
  return result.numLabs;
}
- (TownHallProto_Builder*) setNumLabs:(int32_t) value {
  result.hasNumLabs = YES;
  result.numLabs = value;
  return self;
}
- (TownHallProto_Builder*) clearNumLabs {
  result.hasNumLabs = NO;
  result.numLabs = 0;
  return self;
}
- (BOOL) hasPvpQueueCashCost {
  return result.hasPvpQueueCashCost;
}
- (int32_t) pvpQueueCashCost {
  return result.pvpQueueCashCost;
}
- (TownHallProto_Builder*) setPvpQueueCashCost:(int32_t) value {
  result.hasPvpQueueCashCost = YES;
  result.pvpQueueCashCost = value;
  return self;
}
- (TownHallProto_Builder*) clearPvpQueueCashCost {
  result.hasPvpQueueCashCost = NO;
  result.pvpQueueCashCost = 0;
  return self;
}
- (BOOL) hasResourceCapacity {
  return result.hasResourceCapacity;
}
- (int32_t) resourceCapacity {
  return result.resourceCapacity;
}
- (TownHallProto_Builder*) setResourceCapacity:(int32_t) value {
  result.hasResourceCapacity = YES;
  result.resourceCapacity = value;
  return self;
}
- (TownHallProto_Builder*) clearResourceCapacity {
  result.hasResourceCapacity = NO;
  result.resourceCapacity = 0;
  return self;
}
- (BOOL) hasNumEvoChambers {
  return result.hasNumEvoChambers;
}
- (int32_t) numEvoChambers {
  return result.numEvoChambers;
}
- (TownHallProto_Builder*) setNumEvoChambers:(int32_t) value {
  result.hasNumEvoChambers = YES;
  result.numEvoChambers = value;
  return self;
}
- (TownHallProto_Builder*) clearNumEvoChambers {
  result.hasNumEvoChambers = NO;
  result.numEvoChambers = 0;
  return self;
}
@end

@interface MiniJobCenterProto ()
@property (strong) StructureInfoProto* structInfo;
@property int32_t generatedJobLimit;
@property int32_t hoursBetweenJobGeneration;
@end

@implementation MiniJobCenterProto

- (BOOL) hasStructInfo {
  return !!hasStructInfo_;
}
- (void) setHasStructInfo:(BOOL) value_ {
  hasStructInfo_ = !!value_;
}
@synthesize structInfo;
- (BOOL) hasGeneratedJobLimit {
  return !!hasGeneratedJobLimit_;
}
- (void) setHasGeneratedJobLimit:(BOOL) value_ {
  hasGeneratedJobLimit_ = !!value_;
}
@synthesize generatedJobLimit;
- (BOOL) hasHoursBetweenJobGeneration {
  return !!hasHoursBetweenJobGeneration_;
}
- (void) setHasHoursBetweenJobGeneration:(BOOL) value_ {
  hasHoursBetweenJobGeneration_ = !!value_;
}
@synthesize hoursBetweenJobGeneration;
- (id) init {
  if ((self = [super init])) {
    self.structInfo = [StructureInfoProto defaultInstance];
    self.generatedJobLimit = 0;
    self.hoursBetweenJobGeneration = 0;
  }
  return self;
}
static MiniJobCenterProto* defaultMiniJobCenterProtoInstance = nil;
+ (void) initialize {
  if (self == [MiniJobCenterProto class]) {
    defaultMiniJobCenterProtoInstance = [[MiniJobCenterProto alloc] init];
  }
}
+ (MiniJobCenterProto*) defaultInstance {
  return defaultMiniJobCenterProtoInstance;
}
- (MiniJobCenterProto*) defaultInstance {
  return defaultMiniJobCenterProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructInfo) {
    [output writeMessage:1 value:self.structInfo];
  }
  if (self.hasGeneratedJobLimit) {
    [output writeInt32:2 value:self.generatedJobLimit];
  }
  if (self.hasHoursBetweenJobGeneration) {
    [output writeInt32:3 value:self.hoursBetweenJobGeneration];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStructInfo) {
    size_ += computeMessageSize(1, self.structInfo);
  }
  if (self.hasGeneratedJobLimit) {
    size_ += computeInt32Size(2, self.generatedJobLimit);
  }
  if (self.hasHoursBetweenJobGeneration) {
    size_ += computeInt32Size(3, self.hoursBetweenJobGeneration);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MiniJobCenterProto*) parseFromData:(NSData*) data {
  return (MiniJobCenterProto*)[[[MiniJobCenterProto builder] mergeFromData:data] build];
}
+ (MiniJobCenterProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MiniJobCenterProto*)[[[MiniJobCenterProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MiniJobCenterProto*) parseFromInputStream:(NSInputStream*) input {
  return (MiniJobCenterProto*)[[[MiniJobCenterProto builder] mergeFromInputStream:input] build];
}
+ (MiniJobCenterProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MiniJobCenterProto*)[[[MiniJobCenterProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MiniJobCenterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MiniJobCenterProto*)[[[MiniJobCenterProto builder] mergeFromCodedInputStream:input] build];
}
+ (MiniJobCenterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MiniJobCenterProto*)[[[MiniJobCenterProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MiniJobCenterProto_Builder*) builder {
  return [[MiniJobCenterProto_Builder alloc] init];
}
+ (MiniJobCenterProto_Builder*) builderWithPrototype:(MiniJobCenterProto*) prototype {
  return [[MiniJobCenterProto builder] mergeFrom:prototype];
}
- (MiniJobCenterProto_Builder*) builder {
  return [MiniJobCenterProto builder];
}
- (MiniJobCenterProto_Builder*) toBuilder {
  return [MiniJobCenterProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStructInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"structInfo"];
    [self.structInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGeneratedJobLimit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"generatedJobLimit", [NSNumber numberWithInteger:self.generatedJobLimit]];
  }
  if (self.hasHoursBetweenJobGeneration) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hoursBetweenJobGeneration", [NSNumber numberWithInteger:self.hoursBetweenJobGeneration]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MiniJobCenterProto class]]) {
    return NO;
  }
  MiniJobCenterProto *otherMessage = other;
  return
      self.hasStructInfo == otherMessage.hasStructInfo &&
      (!self.hasStructInfo || [self.structInfo isEqual:otherMessage.structInfo]) &&
      self.hasGeneratedJobLimit == otherMessage.hasGeneratedJobLimit &&
      (!self.hasGeneratedJobLimit || self.generatedJobLimit == otherMessage.generatedJobLimit) &&
      self.hasHoursBetweenJobGeneration == otherMessage.hasHoursBetweenJobGeneration &&
      (!self.hasHoursBetweenJobGeneration || self.hoursBetweenJobGeneration == otherMessage.hoursBetweenJobGeneration) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStructInfo) {
    hashCode = hashCode * 31 + [self.structInfo hash];
  }
  if (self.hasGeneratedJobLimit) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.generatedJobLimit] hash];
  }
  if (self.hasHoursBetweenJobGeneration) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.hoursBetweenJobGeneration] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MiniJobCenterProto_Builder()
@property (strong) MiniJobCenterProto* result;
@end

@implementation MiniJobCenterProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[MiniJobCenterProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MiniJobCenterProto_Builder*) clear {
  self.result = [[MiniJobCenterProto alloc] init];
  return self;
}
- (MiniJobCenterProto_Builder*) clone {
  return [MiniJobCenterProto builderWithPrototype:result];
}
- (MiniJobCenterProto*) defaultInstance {
  return [MiniJobCenterProto defaultInstance];
}
- (MiniJobCenterProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MiniJobCenterProto*) buildPartial {
  MiniJobCenterProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (MiniJobCenterProto_Builder*) mergeFrom:(MiniJobCenterProto*) other {
  if (other == [MiniJobCenterProto defaultInstance]) {
    return self;
  }
  if (other.hasStructInfo) {
    [self mergeStructInfo:other.structInfo];
  }
  if (other.hasGeneratedJobLimit) {
    [self setGeneratedJobLimit:other.generatedJobLimit];
  }
  if (other.hasHoursBetweenJobGeneration) {
    [self setHoursBetweenJobGeneration:other.hoursBetweenJobGeneration];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MiniJobCenterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MiniJobCenterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        StructureInfoProto_Builder* subBuilder = [StructureInfoProto builder];
        if (self.hasStructInfo) {
          [subBuilder mergeFrom:self.structInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStructInfo:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setGeneratedJobLimit:[input readInt32]];
        break;
      }
      case 24: {
        [self setHoursBetweenJobGeneration:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasStructInfo {
  return result.hasStructInfo;
}
- (StructureInfoProto*) structInfo {
  return result.structInfo;
}
- (MiniJobCenterProto_Builder*) setStructInfo:(StructureInfoProto*) value {
  result.hasStructInfo = YES;
  result.structInfo = value;
  return self;
}
- (MiniJobCenterProto_Builder*) setStructInfo_Builder:(StructureInfoProto_Builder*) builderForValue {
  return [self setStructInfo:[builderForValue build]];
}
- (MiniJobCenterProto_Builder*) mergeStructInfo:(StructureInfoProto*) value {
  if (result.hasStructInfo &&
      result.structInfo != [StructureInfoProto defaultInstance]) {
    result.structInfo =
      [[[StructureInfoProto builderWithPrototype:result.structInfo] mergeFrom:value] buildPartial];
  } else {
    result.structInfo = value;
  }
  result.hasStructInfo = YES;
  return self;
}
- (MiniJobCenterProto_Builder*) clearStructInfo {
  result.hasStructInfo = NO;
  result.structInfo = [StructureInfoProto defaultInstance];
  return self;
}
- (BOOL) hasGeneratedJobLimit {
  return result.hasGeneratedJobLimit;
}
- (int32_t) generatedJobLimit {
  return result.generatedJobLimit;
}
- (MiniJobCenterProto_Builder*) setGeneratedJobLimit:(int32_t) value {
  result.hasGeneratedJobLimit = YES;
  result.generatedJobLimit = value;
  return self;
}
- (MiniJobCenterProto_Builder*) clearGeneratedJobLimit {
  result.hasGeneratedJobLimit = NO;
  result.generatedJobLimit = 0;
  return self;
}
- (BOOL) hasHoursBetweenJobGeneration {
  return result.hasHoursBetweenJobGeneration;
}
- (int32_t) hoursBetweenJobGeneration {
  return result.hoursBetweenJobGeneration;
}
- (MiniJobCenterProto_Builder*) setHoursBetweenJobGeneration:(int32_t) value {
  result.hasHoursBetweenJobGeneration = YES;
  result.hoursBetweenJobGeneration = value;
  return self;
}
- (MiniJobCenterProto_Builder*) clearHoursBetweenJobGeneration {
  result.hasHoursBetweenJobGeneration = NO;
  result.hoursBetweenJobGeneration = 0;
  return self;
}
@end

@interface FullUserStructureProto ()
@property (strong) NSString* userStructUuid;
@property (strong) NSString* userUuid;
@property int32_t structId;
@property int64_t lastRetrieved;
@property int64_t purchaseTime;
@property BOOL isComplete;
@property (strong) CoordinateProto* coordinates;
@property StructOrientation orientation;
@property int32_t fbInviteStructLvl;
@end

@implementation FullUserStructureProto

- (BOOL) hasUserStructUuid {
  return !!hasUserStructUuid_;
}
- (void) setHasUserStructUuid:(BOOL) value_ {
  hasUserStructUuid_ = !!value_;
}
@synthesize userStructUuid;
- (BOOL) hasUserUuid {
  return !!hasUserUuid_;
}
- (void) setHasUserUuid:(BOOL) value_ {
  hasUserUuid_ = !!value_;
}
@synthesize userUuid;
- (BOOL) hasStructId {
  return !!hasStructId_;
}
- (void) setHasStructId:(BOOL) value_ {
  hasStructId_ = !!value_;
}
@synthesize structId;
- (BOOL) hasLastRetrieved {
  return !!hasLastRetrieved_;
}
- (void) setHasLastRetrieved:(BOOL) value_ {
  hasLastRetrieved_ = !!value_;
}
@synthesize lastRetrieved;
- (BOOL) hasPurchaseTime {
  return !!hasPurchaseTime_;
}
- (void) setHasPurchaseTime:(BOOL) value_ {
  hasPurchaseTime_ = !!value_;
}
@synthesize purchaseTime;
- (BOOL) hasIsComplete {
  return !!hasIsComplete_;
}
- (void) setHasIsComplete:(BOOL) value_ {
  hasIsComplete_ = !!value_;
}
- (BOOL) isComplete {
  return !!isComplete_;
}
- (void) setIsComplete:(BOOL) value_ {
  isComplete_ = !!value_;
}
- (BOOL) hasCoordinates {
  return !!hasCoordinates_;
}
- (void) setHasCoordinates:(BOOL) value_ {
  hasCoordinates_ = !!value_;
}
@synthesize coordinates;
- (BOOL) hasOrientation {
  return !!hasOrientation_;
}
- (void) setHasOrientation:(BOOL) value_ {
  hasOrientation_ = !!value_;
}
@synthesize orientation;
- (BOOL) hasFbInviteStructLvl {
  return !!hasFbInviteStructLvl_;
}
- (void) setHasFbInviteStructLvl:(BOOL) value_ {
  hasFbInviteStructLvl_ = !!value_;
}
@synthesize fbInviteStructLvl;
- (id) init {
  if ((self = [super init])) {
    self.userStructUuid = @"";
    self.userUuid = @"";
    self.structId = 0;
    self.lastRetrieved = 0L;
    self.purchaseTime = 0L;
    self.isComplete = NO;
    self.coordinates = [CoordinateProto defaultInstance];
    self.orientation = StructOrientationNoOrientation;
    self.fbInviteStructLvl = 0;
  }
  return self;
}
static FullUserStructureProto* defaultFullUserStructureProtoInstance = nil;
+ (void) initialize {
  if (self == [FullUserStructureProto class]) {
    defaultFullUserStructureProtoInstance = [[FullUserStructureProto alloc] init];
  }
}
+ (FullUserStructureProto*) defaultInstance {
  return defaultFullUserStructureProtoInstance;
}
- (FullUserStructureProto*) defaultInstance {
  return defaultFullUserStructureProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserStructUuid) {
    [output writeString:1 value:self.userStructUuid];
  }
  if (self.hasUserUuid) {
    [output writeString:2 value:self.userUuid];
  }
  if (self.hasStructId) {
    [output writeInt32:3 value:self.structId];
  }
  if (self.hasLastRetrieved) {
    [output writeInt64:4 value:self.lastRetrieved];
  }
  if (self.hasPurchaseTime) {
    [output writeInt64:5 value:self.purchaseTime];
  }
  if (self.hasIsComplete) {
    [output writeBool:6 value:self.isComplete];
  }
  if (self.hasCoordinates) {
    [output writeMessage:7 value:self.coordinates];
  }
  if (self.hasOrientation) {
    [output writeEnum:8 value:self.orientation];
  }
  if (self.hasFbInviteStructLvl) {
    [output writeInt32:9 value:self.fbInviteStructLvl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserStructUuid) {
    size_ += computeStringSize(1, self.userStructUuid);
  }
  if (self.hasUserUuid) {
    size_ += computeStringSize(2, self.userUuid);
  }
  if (self.hasStructId) {
    size_ += computeInt32Size(3, self.structId);
  }
  if (self.hasLastRetrieved) {
    size_ += computeInt64Size(4, self.lastRetrieved);
  }
  if (self.hasPurchaseTime) {
    size_ += computeInt64Size(5, self.purchaseTime);
  }
  if (self.hasIsComplete) {
    size_ += computeBoolSize(6, self.isComplete);
  }
  if (self.hasCoordinates) {
    size_ += computeMessageSize(7, self.coordinates);
  }
  if (self.hasOrientation) {
    size_ += computeEnumSize(8, self.orientation);
  }
  if (self.hasFbInviteStructLvl) {
    size_ += computeInt32Size(9, self.fbInviteStructLvl);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FullUserStructureProto*) parseFromData:(NSData*) data {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromData:data] build];
}
+ (FullUserStructureProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullUserStructureProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromInputStream:input] build];
}
+ (FullUserStructureProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserStructureProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullUserStructureProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserStructureProto_Builder*) builder {
  return [[FullUserStructureProto_Builder alloc] init];
}
+ (FullUserStructureProto_Builder*) builderWithPrototype:(FullUserStructureProto*) prototype {
  return [[FullUserStructureProto builder] mergeFrom:prototype];
}
- (FullUserStructureProto_Builder*) builder {
  return [FullUserStructureProto builder];
}
- (FullUserStructureProto_Builder*) toBuilder {
  return [FullUserStructureProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserStructUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userStructUuid", self.userStructUuid];
  }
  if (self.hasUserUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userUuid", self.userUuid];
  }
  if (self.hasStructId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"structId", [NSNumber numberWithInteger:self.structId]];
  }
  if (self.hasLastRetrieved) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastRetrieved", [NSNumber numberWithLongLong:self.lastRetrieved]];
  }
  if (self.hasPurchaseTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"purchaseTime", [NSNumber numberWithLongLong:self.purchaseTime]];
  }
  if (self.hasIsComplete) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isComplete", [NSNumber numberWithBool:self.isComplete]];
  }
  if (self.hasCoordinates) {
    [output appendFormat:@"%@%@ {\n", indent, @"coordinates"];
    [self.coordinates writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasOrientation) {
    [output appendFormat:@"%@%@: %@\n", indent, @"orientation", [NSNumber numberWithInteger:self.orientation]];
  }
  if (self.hasFbInviteStructLvl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fbInviteStructLvl", [NSNumber numberWithInteger:self.fbInviteStructLvl]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FullUserStructureProto class]]) {
    return NO;
  }
  FullUserStructureProto *otherMessage = other;
  return
      self.hasUserStructUuid == otherMessage.hasUserStructUuid &&
      (!self.hasUserStructUuid || [self.userStructUuid isEqual:otherMessage.userStructUuid]) &&
      self.hasUserUuid == otherMessage.hasUserUuid &&
      (!self.hasUserUuid || [self.userUuid isEqual:otherMessage.userUuid]) &&
      self.hasStructId == otherMessage.hasStructId &&
      (!self.hasStructId || self.structId == otherMessage.structId) &&
      self.hasLastRetrieved == otherMessage.hasLastRetrieved &&
      (!self.hasLastRetrieved || self.lastRetrieved == otherMessage.lastRetrieved) &&
      self.hasPurchaseTime == otherMessage.hasPurchaseTime &&
      (!self.hasPurchaseTime || self.purchaseTime == otherMessage.purchaseTime) &&
      self.hasIsComplete == otherMessage.hasIsComplete &&
      (!self.hasIsComplete || self.isComplete == otherMessage.isComplete) &&
      self.hasCoordinates == otherMessage.hasCoordinates &&
      (!self.hasCoordinates || [self.coordinates isEqual:otherMessage.coordinates]) &&
      self.hasOrientation == otherMessage.hasOrientation &&
      (!self.hasOrientation || self.orientation == otherMessage.orientation) &&
      self.hasFbInviteStructLvl == otherMessage.hasFbInviteStructLvl &&
      (!self.hasFbInviteStructLvl || self.fbInviteStructLvl == otherMessage.fbInviteStructLvl) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserStructUuid) {
    hashCode = hashCode * 31 + [self.userStructUuid hash];
  }
  if (self.hasUserUuid) {
    hashCode = hashCode * 31 + [self.userUuid hash];
  }
  if (self.hasStructId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.structId] hash];
  }
  if (self.hasLastRetrieved) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastRetrieved] hash];
  }
  if (self.hasPurchaseTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.purchaseTime] hash];
  }
  if (self.hasIsComplete) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isComplete] hash];
  }
  if (self.hasCoordinates) {
    hashCode = hashCode * 31 + [self.coordinates hash];
  }
  if (self.hasOrientation) {
    hashCode = hashCode * 31 + self.orientation;
  }
  if (self.hasFbInviteStructLvl) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.fbInviteStructLvl] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FullUserStructureProto_Builder()
@property (strong) FullUserStructureProto* result;
@end

@implementation FullUserStructureProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[FullUserStructureProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullUserStructureProto_Builder*) clear {
  self.result = [[FullUserStructureProto alloc] init];
  return self;
}
- (FullUserStructureProto_Builder*) clone {
  return [FullUserStructureProto builderWithPrototype:result];
}
- (FullUserStructureProto*) defaultInstance {
  return [FullUserStructureProto defaultInstance];
}
- (FullUserStructureProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullUserStructureProto*) buildPartial {
  FullUserStructureProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (FullUserStructureProto_Builder*) mergeFrom:(FullUserStructureProto*) other {
  if (other == [FullUserStructureProto defaultInstance]) {
    return self;
  }
  if (other.hasUserStructUuid) {
    [self setUserStructUuid:other.userStructUuid];
  }
  if (other.hasUserUuid) {
    [self setUserUuid:other.userUuid];
  }
  if (other.hasStructId) {
    [self setStructId:other.structId];
  }
  if (other.hasLastRetrieved) {
    [self setLastRetrieved:other.lastRetrieved];
  }
  if (other.hasPurchaseTime) {
    [self setPurchaseTime:other.purchaseTime];
  }
  if (other.hasIsComplete) {
    [self setIsComplete:other.isComplete];
  }
  if (other.hasCoordinates) {
    [self mergeCoordinates:other.coordinates];
  }
  if (other.hasOrientation) {
    [self setOrientation:other.orientation];
  }
  if (other.hasFbInviteStructLvl) {
    [self setFbInviteStructLvl:other.fbInviteStructLvl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullUserStructureProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullUserStructureProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserStructUuid:[input readString]];
        break;
      }
      case 18: {
        [self setUserUuid:[input readString]];
        break;
      }
      case 24: {
        [self setStructId:[input readInt32]];
        break;
      }
      case 32: {
        [self setLastRetrieved:[input readInt64]];
        break;
      }
      case 40: {
        [self setPurchaseTime:[input readInt64]];
        break;
      }
      case 48: {
        [self setIsComplete:[input readBool]];
        break;
      }
      case 58: {
        CoordinateProto_Builder* subBuilder = [CoordinateProto builder];
        if (self.hasCoordinates) {
          [subBuilder mergeFrom:self.coordinates];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCoordinates:[subBuilder buildPartial]];
        break;
      }
      case 64: {
        StructOrientation value = (StructOrientation)[input readEnum];
        if (StructOrientationIsValidValue(value)) {
          [self setOrientation:value];
        } else {
          [unknownFields mergeVarintField:8 value:value];
        }
        break;
      }
      case 72: {
        [self setFbInviteStructLvl:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserStructUuid {
  return result.hasUserStructUuid;
}
- (NSString*) userStructUuid {
  return result.userStructUuid;
}
- (FullUserStructureProto_Builder*) setUserStructUuid:(NSString*) value {
  result.hasUserStructUuid = YES;
  result.userStructUuid = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearUserStructUuid {
  result.hasUserStructUuid = NO;
  result.userStructUuid = @"";
  return self;
}
- (BOOL) hasUserUuid {
  return result.hasUserUuid;
}
- (NSString*) userUuid {
  return result.userUuid;
}
- (FullUserStructureProto_Builder*) setUserUuid:(NSString*) value {
  result.hasUserUuid = YES;
  result.userUuid = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearUserUuid {
  result.hasUserUuid = NO;
  result.userUuid = @"";
  return self;
}
- (BOOL) hasStructId {
  return result.hasStructId;
}
- (int32_t) structId {
  return result.structId;
}
- (FullUserStructureProto_Builder*) setStructId:(int32_t) value {
  result.hasStructId = YES;
  result.structId = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearStructId {
  result.hasStructId = NO;
  result.structId = 0;
  return self;
}
- (BOOL) hasLastRetrieved {
  return result.hasLastRetrieved;
}
- (int64_t) lastRetrieved {
  return result.lastRetrieved;
}
- (FullUserStructureProto_Builder*) setLastRetrieved:(int64_t) value {
  result.hasLastRetrieved = YES;
  result.lastRetrieved = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearLastRetrieved {
  result.hasLastRetrieved = NO;
  result.lastRetrieved = 0L;
  return self;
}
- (BOOL) hasPurchaseTime {
  return result.hasPurchaseTime;
}
- (int64_t) purchaseTime {
  return result.purchaseTime;
}
- (FullUserStructureProto_Builder*) setPurchaseTime:(int64_t) value {
  result.hasPurchaseTime = YES;
  result.purchaseTime = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearPurchaseTime {
  result.hasPurchaseTime = NO;
  result.purchaseTime = 0L;
  return self;
}
- (BOOL) hasIsComplete {
  return result.hasIsComplete;
}
- (BOOL) isComplete {
  return result.isComplete;
}
- (FullUserStructureProto_Builder*) setIsComplete:(BOOL) value {
  result.hasIsComplete = YES;
  result.isComplete = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearIsComplete {
  result.hasIsComplete = NO;
  result.isComplete = NO;
  return self;
}
- (BOOL) hasCoordinates {
  return result.hasCoordinates;
}
- (CoordinateProto*) coordinates {
  return result.coordinates;
}
- (FullUserStructureProto_Builder*) setCoordinates:(CoordinateProto*) value {
  result.hasCoordinates = YES;
  result.coordinates = value;
  return self;
}
- (FullUserStructureProto_Builder*) setCoordinates_Builder:(CoordinateProto_Builder*) builderForValue {
  return [self setCoordinates:[builderForValue build]];
}
- (FullUserStructureProto_Builder*) mergeCoordinates:(CoordinateProto*) value {
  if (result.hasCoordinates &&
      result.coordinates != [CoordinateProto defaultInstance]) {
    result.coordinates =
      [[[CoordinateProto builderWithPrototype:result.coordinates] mergeFrom:value] buildPartial];
  } else {
    result.coordinates = value;
  }
  result.hasCoordinates = YES;
  return self;
}
- (FullUserStructureProto_Builder*) clearCoordinates {
  result.hasCoordinates = NO;
  result.coordinates = [CoordinateProto defaultInstance];
  return self;
}
- (BOOL) hasOrientation {
  return result.hasOrientation;
}
- (StructOrientation) orientation {
  return result.orientation;
}
- (FullUserStructureProto_Builder*) setOrientation:(StructOrientation) value {
  result.hasOrientation = YES;
  result.orientation = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearOrientationList {
  result.hasOrientation = NO;
  result.orientation = StructOrientationNoOrientation;
  return self;
}
- (BOOL) hasFbInviteStructLvl {
  return result.hasFbInviteStructLvl;
}
- (int32_t) fbInviteStructLvl {
  return result.fbInviteStructLvl;
}
- (FullUserStructureProto_Builder*) setFbInviteStructLvl:(int32_t) value {
  result.hasFbInviteStructLvl = YES;
  result.fbInviteStructLvl = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearFbInviteStructLvl {
  result.hasFbInviteStructLvl = NO;
  result.fbInviteStructLvl = 0;
  return self;
}
@end

@interface CoordinateProto ()
@property Float32 x;
@property Float32 y;
@end

@implementation CoordinateProto

- (BOOL) hasX {
  return !!hasX_;
}
- (void) setHasX:(BOOL) value_ {
  hasX_ = !!value_;
}
@synthesize x;
- (BOOL) hasY {
  return !!hasY_;
}
- (void) setHasY:(BOOL) value_ {
  hasY_ = !!value_;
}
@synthesize y;
- (id) init {
  if ((self = [super init])) {
    self.x = 0;
    self.y = 0;
  }
  return self;
}
static CoordinateProto* defaultCoordinateProtoInstance = nil;
+ (void) initialize {
  if (self == [CoordinateProto class]) {
    defaultCoordinateProtoInstance = [[CoordinateProto alloc] init];
  }
}
+ (CoordinateProto*) defaultInstance {
  return defaultCoordinateProtoInstance;
}
- (CoordinateProto*) defaultInstance {
  return defaultCoordinateProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasX) {
    [output writeFloat:1 value:self.x];
  }
  if (self.hasY) {
    [output writeFloat:2 value:self.y];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasX) {
    size_ += computeFloatSize(1, self.x);
  }
  if (self.hasY) {
    size_ += computeFloatSize(2, self.y);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CoordinateProto*) parseFromData:(NSData*) data {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromData:data] build];
}
+ (CoordinateProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CoordinateProto*) parseFromInputStream:(NSInputStream*) input {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromInputStream:input] build];
}
+ (CoordinateProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CoordinateProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromCodedInputStream:input] build];
}
+ (CoordinateProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CoordinateProto_Builder*) builder {
  return [[CoordinateProto_Builder alloc] init];
}
+ (CoordinateProto_Builder*) builderWithPrototype:(CoordinateProto*) prototype {
  return [[CoordinateProto builder] mergeFrom:prototype];
}
- (CoordinateProto_Builder*) builder {
  return [CoordinateProto builder];
}
- (CoordinateProto_Builder*) toBuilder {
  return [CoordinateProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasX) {
    [output appendFormat:@"%@%@: %@\n", indent, @"x", [NSNumber numberWithFloat:self.x]];
  }
  if (self.hasY) {
    [output appendFormat:@"%@%@: %@\n", indent, @"y", [NSNumber numberWithFloat:self.y]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CoordinateProto class]]) {
    return NO;
  }
  CoordinateProto *otherMessage = other;
  return
      self.hasX == otherMessage.hasX &&
      (!self.hasX || self.x == otherMessage.x) &&
      self.hasY == otherMessage.hasY &&
      (!self.hasY || self.y == otherMessage.y) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasX) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.x] hash];
  }
  if (self.hasY) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.y] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CoordinateProto_Builder()
@property (strong) CoordinateProto* result;
@end

@implementation CoordinateProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[CoordinateProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CoordinateProto_Builder*) clear {
  self.result = [[CoordinateProto alloc] init];
  return self;
}
- (CoordinateProto_Builder*) clone {
  return [CoordinateProto builderWithPrototype:result];
}
- (CoordinateProto*) defaultInstance {
  return [CoordinateProto defaultInstance];
}
- (CoordinateProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CoordinateProto*) buildPartial {
  CoordinateProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (CoordinateProto_Builder*) mergeFrom:(CoordinateProto*) other {
  if (other == [CoordinateProto defaultInstance]) {
    return self;
  }
  if (other.hasX) {
    [self setX:other.x];
  }
  if (other.hasY) {
    [self setY:other.y];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CoordinateProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CoordinateProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 13: {
        [self setX:[input readFloat]];
        break;
      }
      case 21: {
        [self setY:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasX {
  return result.hasX;
}
- (Float32) x {
  return result.x;
}
- (CoordinateProto_Builder*) setX:(Float32) value {
  result.hasX = YES;
  result.x = value;
  return self;
}
- (CoordinateProto_Builder*) clearX {
  result.hasX = NO;
  result.x = 0;
  return self;
}
- (BOOL) hasY {
  return result.hasY;
}
- (Float32) y {
  return result.y;
}
- (CoordinateProto_Builder*) setY:(Float32) value {
  result.hasY = YES;
  result.y = value;
  return self;
}
- (CoordinateProto_Builder*) clearY {
  result.hasY = NO;
  result.y = 0;
  return self;
}
@end

@interface TutorialStructProto ()
@property int32_t structId;
@property (strong) CoordinateProto* coordinate;
@end

@implementation TutorialStructProto

- (BOOL) hasStructId {
  return !!hasStructId_;
}
- (void) setHasStructId:(BOOL) value_ {
  hasStructId_ = !!value_;
}
@synthesize structId;
- (BOOL) hasCoordinate {
  return !!hasCoordinate_;
}
- (void) setHasCoordinate:(BOOL) value_ {
  hasCoordinate_ = !!value_;
}
@synthesize coordinate;
- (id) init {
  if ((self = [super init])) {
    self.structId = 0;
    self.coordinate = [CoordinateProto defaultInstance];
  }
  return self;
}
static TutorialStructProto* defaultTutorialStructProtoInstance = nil;
+ (void) initialize {
  if (self == [TutorialStructProto class]) {
    defaultTutorialStructProtoInstance = [[TutorialStructProto alloc] init];
  }
}
+ (TutorialStructProto*) defaultInstance {
  return defaultTutorialStructProtoInstance;
}
- (TutorialStructProto*) defaultInstance {
  return defaultTutorialStructProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructId) {
    [output writeInt32:1 value:self.structId];
  }
  if (self.hasCoordinate) {
    [output writeMessage:2 value:self.coordinate];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStructId) {
    size_ += computeInt32Size(1, self.structId);
  }
  if (self.hasCoordinate) {
    size_ += computeMessageSize(2, self.coordinate);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TutorialStructProto*) parseFromData:(NSData*) data {
  return (TutorialStructProto*)[[[TutorialStructProto builder] mergeFromData:data] build];
}
+ (TutorialStructProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TutorialStructProto*)[[[TutorialStructProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TutorialStructProto*) parseFromInputStream:(NSInputStream*) input {
  return (TutorialStructProto*)[[[TutorialStructProto builder] mergeFromInputStream:input] build];
}
+ (TutorialStructProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TutorialStructProto*)[[[TutorialStructProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TutorialStructProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TutorialStructProto*)[[[TutorialStructProto builder] mergeFromCodedInputStream:input] build];
}
+ (TutorialStructProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TutorialStructProto*)[[[TutorialStructProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TutorialStructProto_Builder*) builder {
  return [[TutorialStructProto_Builder alloc] init];
}
+ (TutorialStructProto_Builder*) builderWithPrototype:(TutorialStructProto*) prototype {
  return [[TutorialStructProto builder] mergeFrom:prototype];
}
- (TutorialStructProto_Builder*) builder {
  return [TutorialStructProto builder];
}
- (TutorialStructProto_Builder*) toBuilder {
  return [TutorialStructProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStructId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"structId", [NSNumber numberWithInteger:self.structId]];
  }
  if (self.hasCoordinate) {
    [output appendFormat:@"%@%@ {\n", indent, @"coordinate"];
    [self.coordinate writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TutorialStructProto class]]) {
    return NO;
  }
  TutorialStructProto *otherMessage = other;
  return
      self.hasStructId == otherMessage.hasStructId &&
      (!self.hasStructId || self.structId == otherMessage.structId) &&
      self.hasCoordinate == otherMessage.hasCoordinate &&
      (!self.hasCoordinate || [self.coordinate isEqual:otherMessage.coordinate]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStructId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.structId] hash];
  }
  if (self.hasCoordinate) {
    hashCode = hashCode * 31 + [self.coordinate hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TutorialStructProto_Builder()
@property (strong) TutorialStructProto* result;
@end

@implementation TutorialStructProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[TutorialStructProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (TutorialStructProto_Builder*) clear {
  self.result = [[TutorialStructProto alloc] init];
  return self;
}
- (TutorialStructProto_Builder*) clone {
  return [TutorialStructProto builderWithPrototype:result];
}
- (TutorialStructProto*) defaultInstance {
  return [TutorialStructProto defaultInstance];
}
- (TutorialStructProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TutorialStructProto*) buildPartial {
  TutorialStructProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (TutorialStructProto_Builder*) mergeFrom:(TutorialStructProto*) other {
  if (other == [TutorialStructProto defaultInstance]) {
    return self;
  }
  if (other.hasStructId) {
    [self setStructId:other.structId];
  }
  if (other.hasCoordinate) {
    [self mergeCoordinate:other.coordinate];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TutorialStructProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TutorialStructProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStructId:[input readInt32]];
        break;
      }
      case 18: {
        CoordinateProto_Builder* subBuilder = [CoordinateProto builder];
        if (self.hasCoordinate) {
          [subBuilder mergeFrom:self.coordinate];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCoordinate:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasStructId {
  return result.hasStructId;
}
- (int32_t) structId {
  return result.structId;
}
- (TutorialStructProto_Builder*) setStructId:(int32_t) value {
  result.hasStructId = YES;
  result.structId = value;
  return self;
}
- (TutorialStructProto_Builder*) clearStructId {
  result.hasStructId = NO;
  result.structId = 0;
  return self;
}
- (BOOL) hasCoordinate {
  return result.hasCoordinate;
}
- (CoordinateProto*) coordinate {
  return result.coordinate;
}
- (TutorialStructProto_Builder*) setCoordinate:(CoordinateProto*) value {
  result.hasCoordinate = YES;
  result.coordinate = value;
  return self;
}
- (TutorialStructProto_Builder*) setCoordinate_Builder:(CoordinateProto_Builder*) builderForValue {
  return [self setCoordinate:[builderForValue build]];
}
- (TutorialStructProto_Builder*) mergeCoordinate:(CoordinateProto*) value {
  if (result.hasCoordinate &&
      result.coordinate != [CoordinateProto defaultInstance]) {
    result.coordinate =
      [[[CoordinateProto builderWithPrototype:result.coordinate] mergeFrom:value] buildPartial];
  } else {
    result.coordinate = value;
  }
  result.hasCoordinate = YES;
  return self;
}
- (TutorialStructProto_Builder*) clearCoordinate {
  result.hasCoordinate = NO;
  result.coordinate = [CoordinateProto defaultInstance];
  return self;
}
@end

@interface ObstacleProto ()
@property int32_t obstacleId;
@property (strong) NSString* name;
@property ResourceType removalCostType;
@property int32_t cost;
@property int32_t secondsToRemove;
@property int32_t width;
@property int32_t height;
@property (strong) NSString* imgName;
@property Float32 imgVerticalPixelOffset;
@property (strong) NSString* description;
@property Float32 chanceToAppear;
@property (strong) NSString* shadowImgName;
@property Float32 shadowVerticalOffset;
@property Float32 shadowHorizontalOfffset;
@end

@implementation ObstacleProto

- (BOOL) hasObstacleId {
  return !!hasObstacleId_;
}
- (void) setHasObstacleId:(BOOL) value_ {
  hasObstacleId_ = !!value_;
}
@synthesize obstacleId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasRemovalCostType {
  return !!hasRemovalCostType_;
}
- (void) setHasRemovalCostType:(BOOL) value_ {
  hasRemovalCostType_ = !!value_;
}
@synthesize removalCostType;
- (BOOL) hasCost {
  return !!hasCost_;
}
- (void) setHasCost:(BOOL) value_ {
  hasCost_ = !!value_;
}
@synthesize cost;
- (BOOL) hasSecondsToRemove {
  return !!hasSecondsToRemove_;
}
- (void) setHasSecondsToRemove:(BOOL) value_ {
  hasSecondsToRemove_ = !!value_;
}
@synthesize secondsToRemove;
- (BOOL) hasWidth {
  return !!hasWidth_;
}
- (void) setHasWidth:(BOOL) value_ {
  hasWidth_ = !!value_;
}
@synthesize width;
- (BOOL) hasHeight {
  return !!hasHeight_;
}
- (void) setHasHeight:(BOOL) value_ {
  hasHeight_ = !!value_;
}
@synthesize height;
- (BOOL) hasImgName {
  return !!hasImgName_;
}
- (void) setHasImgName:(BOOL) value_ {
  hasImgName_ = !!value_;
}
@synthesize imgName;
- (BOOL) hasImgVerticalPixelOffset {
  return !!hasImgVerticalPixelOffset_;
}
- (void) setHasImgVerticalPixelOffset:(BOOL) value_ {
  hasImgVerticalPixelOffset_ = !!value_;
}
@synthesize imgVerticalPixelOffset;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) value_ {
  hasDescription_ = !!value_;
}
@synthesize description;
- (BOOL) hasChanceToAppear {
  return !!hasChanceToAppear_;
}
- (void) setHasChanceToAppear:(BOOL) value_ {
  hasChanceToAppear_ = !!value_;
}
@synthesize chanceToAppear;
- (BOOL) hasShadowImgName {
  return !!hasShadowImgName_;
}
- (void) setHasShadowImgName:(BOOL) value_ {
  hasShadowImgName_ = !!value_;
}
@synthesize shadowImgName;
- (BOOL) hasShadowVerticalOffset {
  return !!hasShadowVerticalOffset_;
}
- (void) setHasShadowVerticalOffset:(BOOL) value_ {
  hasShadowVerticalOffset_ = !!value_;
}
@synthesize shadowVerticalOffset;
- (BOOL) hasShadowHorizontalOfffset {
  return !!hasShadowHorizontalOfffset_;
}
- (void) setHasShadowHorizontalOfffset:(BOOL) value_ {
  hasShadowHorizontalOfffset_ = !!value_;
}
@synthesize shadowHorizontalOfffset;
- (id) init {
  if ((self = [super init])) {
    self.obstacleId = 0;
    self.name = @"";
    self.removalCostType = ResourceTypeNoResource;
    self.cost = 0;
    self.secondsToRemove = 0;
    self.width = 0;
    self.height = 0;
    self.imgName = @"";
    self.imgVerticalPixelOffset = 0;
    self.description = @"";
    self.chanceToAppear = 0;
    self.shadowImgName = @"";
    self.shadowVerticalOffset = 0;
    self.shadowHorizontalOfffset = 0;
  }
  return self;
}
static ObstacleProto* defaultObstacleProtoInstance = nil;
+ (void) initialize {
  if (self == [ObstacleProto class]) {
    defaultObstacleProtoInstance = [[ObstacleProto alloc] init];
  }
}
+ (ObstacleProto*) defaultInstance {
  return defaultObstacleProtoInstance;
}
- (ObstacleProto*) defaultInstance {
  return defaultObstacleProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasObstacleId) {
    [output writeInt32:1 value:self.obstacleId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasRemovalCostType) {
    [output writeEnum:3 value:self.removalCostType];
  }
  if (self.hasCost) {
    [output writeInt32:4 value:self.cost];
  }
  if (self.hasSecondsToRemove) {
    [output writeInt32:5 value:self.secondsToRemove];
  }
  if (self.hasWidth) {
    [output writeInt32:6 value:self.width];
  }
  if (self.hasHeight) {
    [output writeInt32:7 value:self.height];
  }
  if (self.hasImgName) {
    [output writeString:8 value:self.imgName];
  }
  if (self.hasImgVerticalPixelOffset) {
    [output writeFloat:9 value:self.imgVerticalPixelOffset];
  }
  if (self.hasDescription) {
    [output writeString:10 value:self.description];
  }
  if (self.hasChanceToAppear) {
    [output writeFloat:11 value:self.chanceToAppear];
  }
  if (self.hasShadowImgName) {
    [output writeString:12 value:self.shadowImgName];
  }
  if (self.hasShadowVerticalOffset) {
    [output writeFloat:13 value:self.shadowVerticalOffset];
  }
  if (self.hasShadowHorizontalOfffset) {
    [output writeFloat:14 value:self.shadowHorizontalOfffset];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasObstacleId) {
    size_ += computeInt32Size(1, self.obstacleId);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasRemovalCostType) {
    size_ += computeEnumSize(3, self.removalCostType);
  }
  if (self.hasCost) {
    size_ += computeInt32Size(4, self.cost);
  }
  if (self.hasSecondsToRemove) {
    size_ += computeInt32Size(5, self.secondsToRemove);
  }
  if (self.hasWidth) {
    size_ += computeInt32Size(6, self.width);
  }
  if (self.hasHeight) {
    size_ += computeInt32Size(7, self.height);
  }
  if (self.hasImgName) {
    size_ += computeStringSize(8, self.imgName);
  }
  if (self.hasImgVerticalPixelOffset) {
    size_ += computeFloatSize(9, self.imgVerticalPixelOffset);
  }
  if (self.hasDescription) {
    size_ += computeStringSize(10, self.description);
  }
  if (self.hasChanceToAppear) {
    size_ += computeFloatSize(11, self.chanceToAppear);
  }
  if (self.hasShadowImgName) {
    size_ += computeStringSize(12, self.shadowImgName);
  }
  if (self.hasShadowVerticalOffset) {
    size_ += computeFloatSize(13, self.shadowVerticalOffset);
  }
  if (self.hasShadowHorizontalOfffset) {
    size_ += computeFloatSize(14, self.shadowHorizontalOfffset);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ObstacleProto*) parseFromData:(NSData*) data {
  return (ObstacleProto*)[[[ObstacleProto builder] mergeFromData:data] build];
}
+ (ObstacleProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ObstacleProto*)[[[ObstacleProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ObstacleProto*) parseFromInputStream:(NSInputStream*) input {
  return (ObstacleProto*)[[[ObstacleProto builder] mergeFromInputStream:input] build];
}
+ (ObstacleProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ObstacleProto*)[[[ObstacleProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ObstacleProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ObstacleProto*)[[[ObstacleProto builder] mergeFromCodedInputStream:input] build];
}
+ (ObstacleProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ObstacleProto*)[[[ObstacleProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ObstacleProto_Builder*) builder {
  return [[ObstacleProto_Builder alloc] init];
}
+ (ObstacleProto_Builder*) builderWithPrototype:(ObstacleProto*) prototype {
  return [[ObstacleProto builder] mergeFrom:prototype];
}
- (ObstacleProto_Builder*) builder {
  return [ObstacleProto builder];
}
- (ObstacleProto_Builder*) toBuilder {
  return [ObstacleProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasObstacleId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"obstacleId", [NSNumber numberWithInteger:self.obstacleId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasRemovalCostType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"removalCostType", [NSNumber numberWithInteger:self.removalCostType]];
  }
  if (self.hasCost) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cost", [NSNumber numberWithInteger:self.cost]];
  }
  if (self.hasSecondsToRemove) {
    [output appendFormat:@"%@%@: %@\n", indent, @"secondsToRemove", [NSNumber numberWithInteger:self.secondsToRemove]];
  }
  if (self.hasWidth) {
    [output appendFormat:@"%@%@: %@\n", indent, @"width", [NSNumber numberWithInteger:self.width]];
  }
  if (self.hasHeight) {
    [output appendFormat:@"%@%@: %@\n", indent, @"height", [NSNumber numberWithInteger:self.height]];
  }
  if (self.hasImgName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imgName", self.imgName];
  }
  if (self.hasImgVerticalPixelOffset) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imgVerticalPixelOffset", [NSNumber numberWithFloat:self.imgVerticalPixelOffset]];
  }
  if (self.hasDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"description", self.description];
  }
  if (self.hasChanceToAppear) {
    [output appendFormat:@"%@%@: %@\n", indent, @"chanceToAppear", [NSNumber numberWithFloat:self.chanceToAppear]];
  }
  if (self.hasShadowImgName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"shadowImgName", self.shadowImgName];
  }
  if (self.hasShadowVerticalOffset) {
    [output appendFormat:@"%@%@: %@\n", indent, @"shadowVerticalOffset", [NSNumber numberWithFloat:self.shadowVerticalOffset]];
  }
  if (self.hasShadowHorizontalOfffset) {
    [output appendFormat:@"%@%@: %@\n", indent, @"shadowHorizontalOfffset", [NSNumber numberWithFloat:self.shadowHorizontalOfffset]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ObstacleProto class]]) {
    return NO;
  }
  ObstacleProto *otherMessage = other;
  return
      self.hasObstacleId == otherMessage.hasObstacleId &&
      (!self.hasObstacleId || self.obstacleId == otherMessage.obstacleId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasRemovalCostType == otherMessage.hasRemovalCostType &&
      (!self.hasRemovalCostType || self.removalCostType == otherMessage.removalCostType) &&
      self.hasCost == otherMessage.hasCost &&
      (!self.hasCost || self.cost == otherMessage.cost) &&
      self.hasSecondsToRemove == otherMessage.hasSecondsToRemove &&
      (!self.hasSecondsToRemove || self.secondsToRemove == otherMessage.secondsToRemove) &&
      self.hasWidth == otherMessage.hasWidth &&
      (!self.hasWidth || self.width == otherMessage.width) &&
      self.hasHeight == otherMessage.hasHeight &&
      (!self.hasHeight || self.height == otherMessage.height) &&
      self.hasImgName == otherMessage.hasImgName &&
      (!self.hasImgName || [self.imgName isEqual:otherMessage.imgName]) &&
      self.hasImgVerticalPixelOffset == otherMessage.hasImgVerticalPixelOffset &&
      (!self.hasImgVerticalPixelOffset || self.imgVerticalPixelOffset == otherMessage.imgVerticalPixelOffset) &&
      self.hasDescription == otherMessage.hasDescription &&
      (!self.hasDescription || [self.description isEqual:otherMessage.description]) &&
      self.hasChanceToAppear == otherMessage.hasChanceToAppear &&
      (!self.hasChanceToAppear || self.chanceToAppear == otherMessage.chanceToAppear) &&
      self.hasShadowImgName == otherMessage.hasShadowImgName &&
      (!self.hasShadowImgName || [self.shadowImgName isEqual:otherMessage.shadowImgName]) &&
      self.hasShadowVerticalOffset == otherMessage.hasShadowVerticalOffset &&
      (!self.hasShadowVerticalOffset || self.shadowVerticalOffset == otherMessage.shadowVerticalOffset) &&
      self.hasShadowHorizontalOfffset == otherMessage.hasShadowHorizontalOfffset &&
      (!self.hasShadowHorizontalOfffset || self.shadowHorizontalOfffset == otherMessage.shadowHorizontalOfffset) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasObstacleId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.obstacleId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasRemovalCostType) {
    hashCode = hashCode * 31 + self.removalCostType;
  }
  if (self.hasCost) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cost] hash];
  }
  if (self.hasSecondsToRemove) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.secondsToRemove] hash];
  }
  if (self.hasWidth) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.width] hash];
  }
  if (self.hasHeight) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.height] hash];
  }
  if (self.hasImgName) {
    hashCode = hashCode * 31 + [self.imgName hash];
  }
  if (self.hasImgVerticalPixelOffset) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.imgVerticalPixelOffset] hash];
  }
  if (self.hasDescription) {
    hashCode = hashCode * 31 + [self.description hash];
  }
  if (self.hasChanceToAppear) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.chanceToAppear] hash];
  }
  if (self.hasShadowImgName) {
    hashCode = hashCode * 31 + [self.shadowImgName hash];
  }
  if (self.hasShadowVerticalOffset) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.shadowVerticalOffset] hash];
  }
  if (self.hasShadowHorizontalOfffset) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.shadowHorizontalOfffset] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ObstacleProto_Builder()
@property (strong) ObstacleProto* result;
@end

@implementation ObstacleProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ObstacleProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ObstacleProto_Builder*) clear {
  self.result = [[ObstacleProto alloc] init];
  return self;
}
- (ObstacleProto_Builder*) clone {
  return [ObstacleProto builderWithPrototype:result];
}
- (ObstacleProto*) defaultInstance {
  return [ObstacleProto defaultInstance];
}
- (ObstacleProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ObstacleProto*) buildPartial {
  ObstacleProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ObstacleProto_Builder*) mergeFrom:(ObstacleProto*) other {
  if (other == [ObstacleProto defaultInstance]) {
    return self;
  }
  if (other.hasObstacleId) {
    [self setObstacleId:other.obstacleId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasRemovalCostType) {
    [self setRemovalCostType:other.removalCostType];
  }
  if (other.hasCost) {
    [self setCost:other.cost];
  }
  if (other.hasSecondsToRemove) {
    [self setSecondsToRemove:other.secondsToRemove];
  }
  if (other.hasWidth) {
    [self setWidth:other.width];
  }
  if (other.hasHeight) {
    [self setHeight:other.height];
  }
  if (other.hasImgName) {
    [self setImgName:other.imgName];
  }
  if (other.hasImgVerticalPixelOffset) {
    [self setImgVerticalPixelOffset:other.imgVerticalPixelOffset];
  }
  if (other.hasDescription) {
    [self setDescription:other.description];
  }
  if (other.hasChanceToAppear) {
    [self setChanceToAppear:other.chanceToAppear];
  }
  if (other.hasShadowImgName) {
    [self setShadowImgName:other.shadowImgName];
  }
  if (other.hasShadowVerticalOffset) {
    [self setShadowVerticalOffset:other.shadowVerticalOffset];
  }
  if (other.hasShadowHorizontalOfffset) {
    [self setShadowHorizontalOfffset:other.shadowHorizontalOfffset];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ObstacleProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ObstacleProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setObstacleId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        ResourceType value = (ResourceType)[input readEnum];
        if (ResourceTypeIsValidValue(value)) {
          [self setRemovalCostType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        [self setCost:[input readInt32]];
        break;
      }
      case 40: {
        [self setSecondsToRemove:[input readInt32]];
        break;
      }
      case 48: {
        [self setWidth:[input readInt32]];
        break;
      }
      case 56: {
        [self setHeight:[input readInt32]];
        break;
      }
      case 66: {
        [self setImgName:[input readString]];
        break;
      }
      case 77: {
        [self setImgVerticalPixelOffset:[input readFloat]];
        break;
      }
      case 82: {
        [self setDescription:[input readString]];
        break;
      }
      case 93: {
        [self setChanceToAppear:[input readFloat]];
        break;
      }
      case 98: {
        [self setShadowImgName:[input readString]];
        break;
      }
      case 109: {
        [self setShadowVerticalOffset:[input readFloat]];
        break;
      }
      case 117: {
        [self setShadowHorizontalOfffset:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasObstacleId {
  return result.hasObstacleId;
}
- (int32_t) obstacleId {
  return result.obstacleId;
}
- (ObstacleProto_Builder*) setObstacleId:(int32_t) value {
  result.hasObstacleId = YES;
  result.obstacleId = value;
  return self;
}
- (ObstacleProto_Builder*) clearObstacleId {
  result.hasObstacleId = NO;
  result.obstacleId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (ObstacleProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (ObstacleProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasRemovalCostType {
  return result.hasRemovalCostType;
}
- (ResourceType) removalCostType {
  return result.removalCostType;
}
- (ObstacleProto_Builder*) setRemovalCostType:(ResourceType) value {
  result.hasRemovalCostType = YES;
  result.removalCostType = value;
  return self;
}
- (ObstacleProto_Builder*) clearRemovalCostTypeList {
  result.hasRemovalCostType = NO;
  result.removalCostType = ResourceTypeNoResource;
  return self;
}
- (BOOL) hasCost {
  return result.hasCost;
}
- (int32_t) cost {
  return result.cost;
}
- (ObstacleProto_Builder*) setCost:(int32_t) value {
  result.hasCost = YES;
  result.cost = value;
  return self;
}
- (ObstacleProto_Builder*) clearCost {
  result.hasCost = NO;
  result.cost = 0;
  return self;
}
- (BOOL) hasSecondsToRemove {
  return result.hasSecondsToRemove;
}
- (int32_t) secondsToRemove {
  return result.secondsToRemove;
}
- (ObstacleProto_Builder*) setSecondsToRemove:(int32_t) value {
  result.hasSecondsToRemove = YES;
  result.secondsToRemove = value;
  return self;
}
- (ObstacleProto_Builder*) clearSecondsToRemove {
  result.hasSecondsToRemove = NO;
  result.secondsToRemove = 0;
  return self;
}
- (BOOL) hasWidth {
  return result.hasWidth;
}
- (int32_t) width {
  return result.width;
}
- (ObstacleProto_Builder*) setWidth:(int32_t) value {
  result.hasWidth = YES;
  result.width = value;
  return self;
}
- (ObstacleProto_Builder*) clearWidth {
  result.hasWidth = NO;
  result.width = 0;
  return self;
}
- (BOOL) hasHeight {
  return result.hasHeight;
}
- (int32_t) height {
  return result.height;
}
- (ObstacleProto_Builder*) setHeight:(int32_t) value {
  result.hasHeight = YES;
  result.height = value;
  return self;
}
- (ObstacleProto_Builder*) clearHeight {
  result.hasHeight = NO;
  result.height = 0;
  return self;
}
- (BOOL) hasImgName {
  return result.hasImgName;
}
- (NSString*) imgName {
  return result.imgName;
}
- (ObstacleProto_Builder*) setImgName:(NSString*) value {
  result.hasImgName = YES;
  result.imgName = value;
  return self;
}
- (ObstacleProto_Builder*) clearImgName {
  result.hasImgName = NO;
  result.imgName = @"";
  return self;
}
- (BOOL) hasImgVerticalPixelOffset {
  return result.hasImgVerticalPixelOffset;
}
- (Float32) imgVerticalPixelOffset {
  return result.imgVerticalPixelOffset;
}
- (ObstacleProto_Builder*) setImgVerticalPixelOffset:(Float32) value {
  result.hasImgVerticalPixelOffset = YES;
  result.imgVerticalPixelOffset = value;
  return self;
}
- (ObstacleProto_Builder*) clearImgVerticalPixelOffset {
  result.hasImgVerticalPixelOffset = NO;
  result.imgVerticalPixelOffset = 0;
  return self;
}
- (BOOL) hasDescription {
  return result.hasDescription;
}
- (NSString*) description {
  return result.description;
}
- (ObstacleProto_Builder*) setDescription:(NSString*) value {
  result.hasDescription = YES;
  result.description = value;
  return self;
}
- (ObstacleProto_Builder*) clearDescription {
  result.hasDescription = NO;
  result.description = @"";
  return self;
}
- (BOOL) hasChanceToAppear {
  return result.hasChanceToAppear;
}
- (Float32) chanceToAppear {
  return result.chanceToAppear;
}
- (ObstacleProto_Builder*) setChanceToAppear:(Float32) value {
  result.hasChanceToAppear = YES;
  result.chanceToAppear = value;
  return self;
}
- (ObstacleProto_Builder*) clearChanceToAppear {
  result.hasChanceToAppear = NO;
  result.chanceToAppear = 0;
  return self;
}
- (BOOL) hasShadowImgName {
  return result.hasShadowImgName;
}
- (NSString*) shadowImgName {
  return result.shadowImgName;
}
- (ObstacleProto_Builder*) setShadowImgName:(NSString*) value {
  result.hasShadowImgName = YES;
  result.shadowImgName = value;
  return self;
}
- (ObstacleProto_Builder*) clearShadowImgName {
  result.hasShadowImgName = NO;
  result.shadowImgName = @"";
  return self;
}
- (BOOL) hasShadowVerticalOffset {
  return result.hasShadowVerticalOffset;
}
- (Float32) shadowVerticalOffset {
  return result.shadowVerticalOffset;
}
- (ObstacleProto_Builder*) setShadowVerticalOffset:(Float32) value {
  result.hasShadowVerticalOffset = YES;
  result.shadowVerticalOffset = value;
  return self;
}
- (ObstacleProto_Builder*) clearShadowVerticalOffset {
  result.hasShadowVerticalOffset = NO;
  result.shadowVerticalOffset = 0;
  return self;
}
- (BOOL) hasShadowHorizontalOfffset {
  return result.hasShadowHorizontalOfffset;
}
- (Float32) shadowHorizontalOfffset {
  return result.shadowHorizontalOfffset;
}
- (ObstacleProto_Builder*) setShadowHorizontalOfffset:(Float32) value {
  result.hasShadowHorizontalOfffset = YES;
  result.shadowHorizontalOfffset = value;
  return self;
}
- (ObstacleProto_Builder*) clearShadowHorizontalOfffset {
  result.hasShadowHorizontalOfffset = NO;
  result.shadowHorizontalOfffset = 0;
  return self;
}
@end

@interface MinimumObstacleProto ()
@property int32_t obstacleId;
@property (strong) CoordinateProto* coordinate;
@property StructOrientation orientation;
@end

@implementation MinimumObstacleProto

- (BOOL) hasObstacleId {
  return !!hasObstacleId_;
}
- (void) setHasObstacleId:(BOOL) value_ {
  hasObstacleId_ = !!value_;
}
@synthesize obstacleId;
- (BOOL) hasCoordinate {
  return !!hasCoordinate_;
}
- (void) setHasCoordinate:(BOOL) value_ {
  hasCoordinate_ = !!value_;
}
@synthesize coordinate;
- (BOOL) hasOrientation {
  return !!hasOrientation_;
}
- (void) setHasOrientation:(BOOL) value_ {
  hasOrientation_ = !!value_;
}
@synthesize orientation;
- (id) init {
  if ((self = [super init])) {
    self.obstacleId = 0;
    self.coordinate = [CoordinateProto defaultInstance];
    self.orientation = StructOrientationNoOrientation;
  }
  return self;
}
static MinimumObstacleProto* defaultMinimumObstacleProtoInstance = nil;
+ (void) initialize {
  if (self == [MinimumObstacleProto class]) {
    defaultMinimumObstacleProtoInstance = [[MinimumObstacleProto alloc] init];
  }
}
+ (MinimumObstacleProto*) defaultInstance {
  return defaultMinimumObstacleProtoInstance;
}
- (MinimumObstacleProto*) defaultInstance {
  return defaultMinimumObstacleProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasObstacleId) {
    [output writeInt32:1 value:self.obstacleId];
  }
  if (self.hasCoordinate) {
    [output writeMessage:2 value:self.coordinate];
  }
  if (self.hasOrientation) {
    [output writeEnum:5 value:self.orientation];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasObstacleId) {
    size_ += computeInt32Size(1, self.obstacleId);
  }
  if (self.hasCoordinate) {
    size_ += computeMessageSize(2, self.coordinate);
  }
  if (self.hasOrientation) {
    size_ += computeEnumSize(5, self.orientation);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MinimumObstacleProto*) parseFromData:(NSData*) data {
  return (MinimumObstacleProto*)[[[MinimumObstacleProto builder] mergeFromData:data] build];
}
+ (MinimumObstacleProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumObstacleProto*)[[[MinimumObstacleProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MinimumObstacleProto*) parseFromInputStream:(NSInputStream*) input {
  return (MinimumObstacleProto*)[[[MinimumObstacleProto builder] mergeFromInputStream:input] build];
}
+ (MinimumObstacleProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumObstacleProto*)[[[MinimumObstacleProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumObstacleProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MinimumObstacleProto*)[[[MinimumObstacleProto builder] mergeFromCodedInputStream:input] build];
}
+ (MinimumObstacleProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumObstacleProto*)[[[MinimumObstacleProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumObstacleProto_Builder*) builder {
  return [[MinimumObstacleProto_Builder alloc] init];
}
+ (MinimumObstacleProto_Builder*) builderWithPrototype:(MinimumObstacleProto*) prototype {
  return [[MinimumObstacleProto builder] mergeFrom:prototype];
}
- (MinimumObstacleProto_Builder*) builder {
  return [MinimumObstacleProto builder];
}
- (MinimumObstacleProto_Builder*) toBuilder {
  return [MinimumObstacleProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasObstacleId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"obstacleId", [NSNumber numberWithInteger:self.obstacleId]];
  }
  if (self.hasCoordinate) {
    [output appendFormat:@"%@%@ {\n", indent, @"coordinate"];
    [self.coordinate writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasOrientation) {
    [output appendFormat:@"%@%@: %@\n", indent, @"orientation", [NSNumber numberWithInteger:self.orientation]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MinimumObstacleProto class]]) {
    return NO;
  }
  MinimumObstacleProto *otherMessage = other;
  return
      self.hasObstacleId == otherMessage.hasObstacleId &&
      (!self.hasObstacleId || self.obstacleId == otherMessage.obstacleId) &&
      self.hasCoordinate == otherMessage.hasCoordinate &&
      (!self.hasCoordinate || [self.coordinate isEqual:otherMessage.coordinate]) &&
      self.hasOrientation == otherMessage.hasOrientation &&
      (!self.hasOrientation || self.orientation == otherMessage.orientation) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasObstacleId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.obstacleId] hash];
  }
  if (self.hasCoordinate) {
    hashCode = hashCode * 31 + [self.coordinate hash];
  }
  if (self.hasOrientation) {
    hashCode = hashCode * 31 + self.orientation;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MinimumObstacleProto_Builder()
@property (strong) MinimumObstacleProto* result;
@end

@implementation MinimumObstacleProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[MinimumObstacleProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MinimumObstacleProto_Builder*) clear {
  self.result = [[MinimumObstacleProto alloc] init];
  return self;
}
- (MinimumObstacleProto_Builder*) clone {
  return [MinimumObstacleProto builderWithPrototype:result];
}
- (MinimumObstacleProto*) defaultInstance {
  return [MinimumObstacleProto defaultInstance];
}
- (MinimumObstacleProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MinimumObstacleProto*) buildPartial {
  MinimumObstacleProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (MinimumObstacleProto_Builder*) mergeFrom:(MinimumObstacleProto*) other {
  if (other == [MinimumObstacleProto defaultInstance]) {
    return self;
  }
  if (other.hasObstacleId) {
    [self setObstacleId:other.obstacleId];
  }
  if (other.hasCoordinate) {
    [self mergeCoordinate:other.coordinate];
  }
  if (other.hasOrientation) {
    [self setOrientation:other.orientation];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MinimumObstacleProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MinimumObstacleProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setObstacleId:[input readInt32]];
        break;
      }
      case 18: {
        CoordinateProto_Builder* subBuilder = [CoordinateProto builder];
        if (self.hasCoordinate) {
          [subBuilder mergeFrom:self.coordinate];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCoordinate:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        StructOrientation value = (StructOrientation)[input readEnum];
        if (StructOrientationIsValidValue(value)) {
          [self setOrientation:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasObstacleId {
  return result.hasObstacleId;
}
- (int32_t) obstacleId {
  return result.obstacleId;
}
- (MinimumObstacleProto_Builder*) setObstacleId:(int32_t) value {
  result.hasObstacleId = YES;
  result.obstacleId = value;
  return self;
}
- (MinimumObstacleProto_Builder*) clearObstacleId {
  result.hasObstacleId = NO;
  result.obstacleId = 0;
  return self;
}
- (BOOL) hasCoordinate {
  return result.hasCoordinate;
}
- (CoordinateProto*) coordinate {
  return result.coordinate;
}
- (MinimumObstacleProto_Builder*) setCoordinate:(CoordinateProto*) value {
  result.hasCoordinate = YES;
  result.coordinate = value;
  return self;
}
- (MinimumObstacleProto_Builder*) setCoordinate_Builder:(CoordinateProto_Builder*) builderForValue {
  return [self setCoordinate:[builderForValue build]];
}
- (MinimumObstacleProto_Builder*) mergeCoordinate:(CoordinateProto*) value {
  if (result.hasCoordinate &&
      result.coordinate != [CoordinateProto defaultInstance]) {
    result.coordinate =
      [[[CoordinateProto builderWithPrototype:result.coordinate] mergeFrom:value] buildPartial];
  } else {
    result.coordinate = value;
  }
  result.hasCoordinate = YES;
  return self;
}
- (MinimumObstacleProto_Builder*) clearCoordinate {
  result.hasCoordinate = NO;
  result.coordinate = [CoordinateProto defaultInstance];
  return self;
}
- (BOOL) hasOrientation {
  return result.hasOrientation;
}
- (StructOrientation) orientation {
  return result.orientation;
}
- (MinimumObstacleProto_Builder*) setOrientation:(StructOrientation) value {
  result.hasOrientation = YES;
  result.orientation = value;
  return self;
}
- (MinimumObstacleProto_Builder*) clearOrientationList {
  result.hasOrientation = NO;
  result.orientation = StructOrientationNoOrientation;
  return self;
}
@end

@interface UserObstacleProto ()
@property (strong) NSString* userObstacleUuid;
@property (strong) NSString* userUuid;
@property int32_t obstacleId;
@property (strong) CoordinateProto* coordinates;
@property StructOrientation orientation;
@property int64_t removalStartTime;
@end

@implementation UserObstacleProto

- (BOOL) hasUserObstacleUuid {
  return !!hasUserObstacleUuid_;
}
- (void) setHasUserObstacleUuid:(BOOL) value_ {
  hasUserObstacleUuid_ = !!value_;
}
@synthesize userObstacleUuid;
- (BOOL) hasUserUuid {
  return !!hasUserUuid_;
}
- (void) setHasUserUuid:(BOOL) value_ {
  hasUserUuid_ = !!value_;
}
@synthesize userUuid;
- (BOOL) hasObstacleId {
  return !!hasObstacleId_;
}
- (void) setHasObstacleId:(BOOL) value_ {
  hasObstacleId_ = !!value_;
}
@synthesize obstacleId;
- (BOOL) hasCoordinates {
  return !!hasCoordinates_;
}
- (void) setHasCoordinates:(BOOL) value_ {
  hasCoordinates_ = !!value_;
}
@synthesize coordinates;
- (BOOL) hasOrientation {
  return !!hasOrientation_;
}
- (void) setHasOrientation:(BOOL) value_ {
  hasOrientation_ = !!value_;
}
@synthesize orientation;
- (BOOL) hasRemovalStartTime {
  return !!hasRemovalStartTime_;
}
- (void) setHasRemovalStartTime:(BOOL) value_ {
  hasRemovalStartTime_ = !!value_;
}
@synthesize removalStartTime;
- (id) init {
  if ((self = [super init])) {
    self.userObstacleUuid = @"";
    self.userUuid = @"";
    self.obstacleId = 0;
    self.coordinates = [CoordinateProto defaultInstance];
    self.orientation = StructOrientationNoOrientation;
    self.removalStartTime = 0L;
  }
  return self;
}
static UserObstacleProto* defaultUserObstacleProtoInstance = nil;
+ (void) initialize {
  if (self == [UserObstacleProto class]) {
    defaultUserObstacleProtoInstance = [[UserObstacleProto alloc] init];
  }
}
+ (UserObstacleProto*) defaultInstance {
  return defaultUserObstacleProtoInstance;
}
- (UserObstacleProto*) defaultInstance {
  return defaultUserObstacleProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserObstacleUuid) {
    [output writeString:1 value:self.userObstacleUuid];
  }
  if (self.hasUserUuid) {
    [output writeString:2 value:self.userUuid];
  }
  if (self.hasObstacleId) {
    [output writeInt32:3 value:self.obstacleId];
  }
  if (self.hasCoordinates) {
    [output writeMessage:4 value:self.coordinates];
  }
  if (self.hasOrientation) {
    [output writeEnum:5 value:self.orientation];
  }
  if (self.hasRemovalStartTime) {
    [output writeInt64:6 value:self.removalStartTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserObstacleUuid) {
    size_ += computeStringSize(1, self.userObstacleUuid);
  }
  if (self.hasUserUuid) {
    size_ += computeStringSize(2, self.userUuid);
  }
  if (self.hasObstacleId) {
    size_ += computeInt32Size(3, self.obstacleId);
  }
  if (self.hasCoordinates) {
    size_ += computeMessageSize(4, self.coordinates);
  }
  if (self.hasOrientation) {
    size_ += computeEnumSize(5, self.orientation);
  }
  if (self.hasRemovalStartTime) {
    size_ += computeInt64Size(6, self.removalStartTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UserObstacleProto*) parseFromData:(NSData*) data {
  return (UserObstacleProto*)[[[UserObstacleProto builder] mergeFromData:data] build];
}
+ (UserObstacleProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserObstacleProto*)[[[UserObstacleProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserObstacleProto*) parseFromInputStream:(NSInputStream*) input {
  return (UserObstacleProto*)[[[UserObstacleProto builder] mergeFromInputStream:input] build];
}
+ (UserObstacleProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserObstacleProto*)[[[UserObstacleProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserObstacleProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserObstacleProto*)[[[UserObstacleProto builder] mergeFromCodedInputStream:input] build];
}
+ (UserObstacleProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserObstacleProto*)[[[UserObstacleProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserObstacleProto_Builder*) builder {
  return [[UserObstacleProto_Builder alloc] init];
}
+ (UserObstacleProto_Builder*) builderWithPrototype:(UserObstacleProto*) prototype {
  return [[UserObstacleProto builder] mergeFrom:prototype];
}
- (UserObstacleProto_Builder*) builder {
  return [UserObstacleProto builder];
}
- (UserObstacleProto_Builder*) toBuilder {
  return [UserObstacleProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserObstacleUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userObstacleUuid", self.userObstacleUuid];
  }
  if (self.hasUserUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userUuid", self.userUuid];
  }
  if (self.hasObstacleId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"obstacleId", [NSNumber numberWithInteger:self.obstacleId]];
  }
  if (self.hasCoordinates) {
    [output appendFormat:@"%@%@ {\n", indent, @"coordinates"];
    [self.coordinates writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasOrientation) {
    [output appendFormat:@"%@%@: %@\n", indent, @"orientation", [NSNumber numberWithInteger:self.orientation]];
  }
  if (self.hasRemovalStartTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"removalStartTime", [NSNumber numberWithLongLong:self.removalStartTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UserObstacleProto class]]) {
    return NO;
  }
  UserObstacleProto *otherMessage = other;
  return
      self.hasUserObstacleUuid == otherMessage.hasUserObstacleUuid &&
      (!self.hasUserObstacleUuid || [self.userObstacleUuid isEqual:otherMessage.userObstacleUuid]) &&
      self.hasUserUuid == otherMessage.hasUserUuid &&
      (!self.hasUserUuid || [self.userUuid isEqual:otherMessage.userUuid]) &&
      self.hasObstacleId == otherMessage.hasObstacleId &&
      (!self.hasObstacleId || self.obstacleId == otherMessage.obstacleId) &&
      self.hasCoordinates == otherMessage.hasCoordinates &&
      (!self.hasCoordinates || [self.coordinates isEqual:otherMessage.coordinates]) &&
      self.hasOrientation == otherMessage.hasOrientation &&
      (!self.hasOrientation || self.orientation == otherMessage.orientation) &&
      self.hasRemovalStartTime == otherMessage.hasRemovalStartTime &&
      (!self.hasRemovalStartTime || self.removalStartTime == otherMessage.removalStartTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserObstacleUuid) {
    hashCode = hashCode * 31 + [self.userObstacleUuid hash];
  }
  if (self.hasUserUuid) {
    hashCode = hashCode * 31 + [self.userUuid hash];
  }
  if (self.hasObstacleId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.obstacleId] hash];
  }
  if (self.hasCoordinates) {
    hashCode = hashCode * 31 + [self.coordinates hash];
  }
  if (self.hasOrientation) {
    hashCode = hashCode * 31 + self.orientation;
  }
  if (self.hasRemovalStartTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.removalStartTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UserObstacleProto_Builder()
@property (strong) UserObstacleProto* result;
@end

@implementation UserObstacleProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[UserObstacleProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserObstacleProto_Builder*) clear {
  self.result = [[UserObstacleProto alloc] init];
  return self;
}
- (UserObstacleProto_Builder*) clone {
  return [UserObstacleProto builderWithPrototype:result];
}
- (UserObstacleProto*) defaultInstance {
  return [UserObstacleProto defaultInstance];
}
- (UserObstacleProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserObstacleProto*) buildPartial {
  UserObstacleProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (UserObstacleProto_Builder*) mergeFrom:(UserObstacleProto*) other {
  if (other == [UserObstacleProto defaultInstance]) {
    return self;
  }
  if (other.hasUserObstacleUuid) {
    [self setUserObstacleUuid:other.userObstacleUuid];
  }
  if (other.hasUserUuid) {
    [self setUserUuid:other.userUuid];
  }
  if (other.hasObstacleId) {
    [self setObstacleId:other.obstacleId];
  }
  if (other.hasCoordinates) {
    [self mergeCoordinates:other.coordinates];
  }
  if (other.hasOrientation) {
    [self setOrientation:other.orientation];
  }
  if (other.hasRemovalStartTime) {
    [self setRemovalStartTime:other.removalStartTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserObstacleProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserObstacleProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserObstacleUuid:[input readString]];
        break;
      }
      case 18: {
        [self setUserUuid:[input readString]];
        break;
      }
      case 24: {
        [self setObstacleId:[input readInt32]];
        break;
      }
      case 34: {
        CoordinateProto_Builder* subBuilder = [CoordinateProto builder];
        if (self.hasCoordinates) {
          [subBuilder mergeFrom:self.coordinates];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCoordinates:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        StructOrientation value = (StructOrientation)[input readEnum];
        if (StructOrientationIsValidValue(value)) {
          [self setOrientation:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 48: {
        [self setRemovalStartTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUserObstacleUuid {
  return result.hasUserObstacleUuid;
}
- (NSString*) userObstacleUuid {
  return result.userObstacleUuid;
}
- (UserObstacleProto_Builder*) setUserObstacleUuid:(NSString*) value {
  result.hasUserObstacleUuid = YES;
  result.userObstacleUuid = value;
  return self;
}
- (UserObstacleProto_Builder*) clearUserObstacleUuid {
  result.hasUserObstacleUuid = NO;
  result.userObstacleUuid = @"";
  return self;
}
- (BOOL) hasUserUuid {
  return result.hasUserUuid;
}
- (NSString*) userUuid {
  return result.userUuid;
}
- (UserObstacleProto_Builder*) setUserUuid:(NSString*) value {
  result.hasUserUuid = YES;
  result.userUuid = value;
  return self;
}
- (UserObstacleProto_Builder*) clearUserUuid {
  result.hasUserUuid = NO;
  result.userUuid = @"";
  return self;
}
- (BOOL) hasObstacleId {
  return result.hasObstacleId;
}
- (int32_t) obstacleId {
  return result.obstacleId;
}
- (UserObstacleProto_Builder*) setObstacleId:(int32_t) value {
  result.hasObstacleId = YES;
  result.obstacleId = value;
  return self;
}
- (UserObstacleProto_Builder*) clearObstacleId {
  result.hasObstacleId = NO;
  result.obstacleId = 0;
  return self;
}
- (BOOL) hasCoordinates {
  return result.hasCoordinates;
}
- (CoordinateProto*) coordinates {
  return result.coordinates;
}
- (UserObstacleProto_Builder*) setCoordinates:(CoordinateProto*) value {
  result.hasCoordinates = YES;
  result.coordinates = value;
  return self;
}
- (UserObstacleProto_Builder*) setCoordinates_Builder:(CoordinateProto_Builder*) builderForValue {
  return [self setCoordinates:[builderForValue build]];
}
- (UserObstacleProto_Builder*) mergeCoordinates:(CoordinateProto*) value {
  if (result.hasCoordinates &&
      result.coordinates != [CoordinateProto defaultInstance]) {
    result.coordinates =
      [[[CoordinateProto builderWithPrototype:result.coordinates] mergeFrom:value] buildPartial];
  } else {
    result.coordinates = value;
  }
  result.hasCoordinates = YES;
  return self;
}
- (UserObstacleProto_Builder*) clearCoordinates {
  result.hasCoordinates = NO;
  result.coordinates = [CoordinateProto defaultInstance];
  return self;
}
- (BOOL) hasOrientation {
  return result.hasOrientation;
}
- (StructOrientation) orientation {
  return result.orientation;
}
- (UserObstacleProto_Builder*) setOrientation:(StructOrientation) value {
  result.hasOrientation = YES;
  result.orientation = value;
  return self;
}
- (UserObstacleProto_Builder*) clearOrientationList {
  result.hasOrientation = NO;
  result.orientation = StructOrientationNoOrientation;
  return self;
}
- (BOOL) hasRemovalStartTime {
  return result.hasRemovalStartTime;
}
- (int64_t) removalStartTime {
  return result.removalStartTime;
}
- (UserObstacleProto_Builder*) setRemovalStartTime:(int64_t) value {
  result.hasRemovalStartTime = YES;
  result.removalStartTime = value;
  return self;
}
- (UserObstacleProto_Builder*) clearRemovalStartTime {
  result.hasRemovalStartTime = NO;
  result.removalStartTime = 0L;
  return self;
}
@end

@interface EvoChamberProto ()
@property (strong) StructureInfoProto* structInfo;
@property Quality qualityUnlocked;
@property int32_t evoTierUnlocked;
@end

@implementation EvoChamberProto

- (BOOL) hasStructInfo {
  return !!hasStructInfo_;
}
- (void) setHasStructInfo:(BOOL) value_ {
  hasStructInfo_ = !!value_;
}
@synthesize structInfo;
- (BOOL) hasQualityUnlocked {
  return !!hasQualityUnlocked_;
}
- (void) setHasQualityUnlocked:(BOOL) value_ {
  hasQualityUnlocked_ = !!value_;
}
@synthesize qualityUnlocked;
- (BOOL) hasEvoTierUnlocked {
  return !!hasEvoTierUnlocked_;
}
- (void) setHasEvoTierUnlocked:(BOOL) value_ {
  hasEvoTierUnlocked_ = !!value_;
}
@synthesize evoTierUnlocked;
- (id) init {
  if ((self = [super init])) {
    self.structInfo = [StructureInfoProto defaultInstance];
    self.qualityUnlocked = QualityCommon;
    self.evoTierUnlocked = 0;
  }
  return self;
}
static EvoChamberProto* defaultEvoChamberProtoInstance = nil;
+ (void) initialize {
  if (self == [EvoChamberProto class]) {
    defaultEvoChamberProtoInstance = [[EvoChamberProto alloc] init];
  }
}
+ (EvoChamberProto*) defaultInstance {
  return defaultEvoChamberProtoInstance;
}
- (EvoChamberProto*) defaultInstance {
  return defaultEvoChamberProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructInfo) {
    [output writeMessage:1 value:self.structInfo];
  }
  if (self.hasQualityUnlocked) {
    [output writeEnum:2 value:self.qualityUnlocked];
  }
  if (self.hasEvoTierUnlocked) {
    [output writeInt32:3 value:self.evoTierUnlocked];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStructInfo) {
    size_ += computeMessageSize(1, self.structInfo);
  }
  if (self.hasQualityUnlocked) {
    size_ += computeEnumSize(2, self.qualityUnlocked);
  }
  if (self.hasEvoTierUnlocked) {
    size_ += computeInt32Size(3, self.evoTierUnlocked);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (EvoChamberProto*) parseFromData:(NSData*) data {
  return (EvoChamberProto*)[[[EvoChamberProto builder] mergeFromData:data] build];
}
+ (EvoChamberProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EvoChamberProto*)[[[EvoChamberProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EvoChamberProto*) parseFromInputStream:(NSInputStream*) input {
  return (EvoChamberProto*)[[[EvoChamberProto builder] mergeFromInputStream:input] build];
}
+ (EvoChamberProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EvoChamberProto*)[[[EvoChamberProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EvoChamberProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EvoChamberProto*)[[[EvoChamberProto builder] mergeFromCodedInputStream:input] build];
}
+ (EvoChamberProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EvoChamberProto*)[[[EvoChamberProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EvoChamberProto_Builder*) builder {
  return [[EvoChamberProto_Builder alloc] init];
}
+ (EvoChamberProto_Builder*) builderWithPrototype:(EvoChamberProto*) prototype {
  return [[EvoChamberProto builder] mergeFrom:prototype];
}
- (EvoChamberProto_Builder*) builder {
  return [EvoChamberProto builder];
}
- (EvoChamberProto_Builder*) toBuilder {
  return [EvoChamberProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStructInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"structInfo"];
    [self.structInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasQualityUnlocked) {
    [output appendFormat:@"%@%@: %@\n", indent, @"qualityUnlocked", [NSNumber numberWithInteger:self.qualityUnlocked]];
  }
  if (self.hasEvoTierUnlocked) {
    [output appendFormat:@"%@%@: %@\n", indent, @"evoTierUnlocked", [NSNumber numberWithInteger:self.evoTierUnlocked]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[EvoChamberProto class]]) {
    return NO;
  }
  EvoChamberProto *otherMessage = other;
  return
      self.hasStructInfo == otherMessage.hasStructInfo &&
      (!self.hasStructInfo || [self.structInfo isEqual:otherMessage.structInfo]) &&
      self.hasQualityUnlocked == otherMessage.hasQualityUnlocked &&
      (!self.hasQualityUnlocked || self.qualityUnlocked == otherMessage.qualityUnlocked) &&
      self.hasEvoTierUnlocked == otherMessage.hasEvoTierUnlocked &&
      (!self.hasEvoTierUnlocked || self.evoTierUnlocked == otherMessage.evoTierUnlocked) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStructInfo) {
    hashCode = hashCode * 31 + [self.structInfo hash];
  }
  if (self.hasQualityUnlocked) {
    hashCode = hashCode * 31 + self.qualityUnlocked;
  }
  if (self.hasEvoTierUnlocked) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.evoTierUnlocked] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface EvoChamberProto_Builder()
@property (strong) EvoChamberProto* result;
@end

@implementation EvoChamberProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[EvoChamberProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EvoChamberProto_Builder*) clear {
  self.result = [[EvoChamberProto alloc] init];
  return self;
}
- (EvoChamberProto_Builder*) clone {
  return [EvoChamberProto builderWithPrototype:result];
}
- (EvoChamberProto*) defaultInstance {
  return [EvoChamberProto defaultInstance];
}
- (EvoChamberProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EvoChamberProto*) buildPartial {
  EvoChamberProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (EvoChamberProto_Builder*) mergeFrom:(EvoChamberProto*) other {
  if (other == [EvoChamberProto defaultInstance]) {
    return self;
  }
  if (other.hasStructInfo) {
    [self mergeStructInfo:other.structInfo];
  }
  if (other.hasQualityUnlocked) {
    [self setQualityUnlocked:other.qualityUnlocked];
  }
  if (other.hasEvoTierUnlocked) {
    [self setEvoTierUnlocked:other.evoTierUnlocked];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EvoChamberProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EvoChamberProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        StructureInfoProto_Builder* subBuilder = [StructureInfoProto builder];
        if (self.hasStructInfo) {
          [subBuilder mergeFrom:self.structInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStructInfo:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        Quality value = (Quality)[input readEnum];
        if (QualityIsValidValue(value)) {
          [self setQualityUnlocked:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setEvoTierUnlocked:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasStructInfo {
  return result.hasStructInfo;
}
- (StructureInfoProto*) structInfo {
  return result.structInfo;
}
- (EvoChamberProto_Builder*) setStructInfo:(StructureInfoProto*) value {
  result.hasStructInfo = YES;
  result.structInfo = value;
  return self;
}
- (EvoChamberProto_Builder*) setStructInfo_Builder:(StructureInfoProto_Builder*) builderForValue {
  return [self setStructInfo:[builderForValue build]];
}
- (EvoChamberProto_Builder*) mergeStructInfo:(StructureInfoProto*) value {
  if (result.hasStructInfo &&
      result.structInfo != [StructureInfoProto defaultInstance]) {
    result.structInfo =
      [[[StructureInfoProto builderWithPrototype:result.structInfo] mergeFrom:value] buildPartial];
  } else {
    result.structInfo = value;
  }
  result.hasStructInfo = YES;
  return self;
}
- (EvoChamberProto_Builder*) clearStructInfo {
  result.hasStructInfo = NO;
  result.structInfo = [StructureInfoProto defaultInstance];
  return self;
}
- (BOOL) hasQualityUnlocked {
  return result.hasQualityUnlocked;
}
- (Quality) qualityUnlocked {
  return result.qualityUnlocked;
}
- (EvoChamberProto_Builder*) setQualityUnlocked:(Quality) value {
  result.hasQualityUnlocked = YES;
  result.qualityUnlocked = value;
  return self;
}
- (EvoChamberProto_Builder*) clearQualityUnlockedList {
  result.hasQualityUnlocked = NO;
  result.qualityUnlocked = QualityCommon;
  return self;
}
- (BOOL) hasEvoTierUnlocked {
  return result.hasEvoTierUnlocked;
}
- (int32_t) evoTierUnlocked {
  return result.evoTierUnlocked;
}
- (EvoChamberProto_Builder*) setEvoTierUnlocked:(int32_t) value {
  result.hasEvoTierUnlocked = YES;
  result.evoTierUnlocked = value;
  return self;
}
- (EvoChamberProto_Builder*) clearEvoTierUnlocked {
  result.hasEvoTierUnlocked = NO;
  result.evoTierUnlocked = 0;
  return self;
}
@end

@interface TeamCenterProto ()
@property (strong) StructureInfoProto* structInfo;
@property int32_t teamCostLimit;
@end

@implementation TeamCenterProto

- (BOOL) hasStructInfo {
  return !!hasStructInfo_;
}
- (void) setHasStructInfo:(BOOL) value_ {
  hasStructInfo_ = !!value_;
}
@synthesize structInfo;
- (BOOL) hasTeamCostLimit {
  return !!hasTeamCostLimit_;
}
- (void) setHasTeamCostLimit:(BOOL) value_ {
  hasTeamCostLimit_ = !!value_;
}
@synthesize teamCostLimit;
- (id) init {
  if ((self = [super init])) {
    self.structInfo = [StructureInfoProto defaultInstance];
    self.teamCostLimit = 0;
  }
  return self;
}
static TeamCenterProto* defaultTeamCenterProtoInstance = nil;
+ (void) initialize {
  if (self == [TeamCenterProto class]) {
    defaultTeamCenterProtoInstance = [[TeamCenterProto alloc] init];
  }
}
+ (TeamCenterProto*) defaultInstance {
  return defaultTeamCenterProtoInstance;
}
- (TeamCenterProto*) defaultInstance {
  return defaultTeamCenterProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructInfo) {
    [output writeMessage:1 value:self.structInfo];
  }
  if (self.hasTeamCostLimit) {
    [output writeInt32:2 value:self.teamCostLimit];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStructInfo) {
    size_ += computeMessageSize(1, self.structInfo);
  }
  if (self.hasTeamCostLimit) {
    size_ += computeInt32Size(2, self.teamCostLimit);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TeamCenterProto*) parseFromData:(NSData*) data {
  return (TeamCenterProto*)[[[TeamCenterProto builder] mergeFromData:data] build];
}
+ (TeamCenterProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TeamCenterProto*)[[[TeamCenterProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TeamCenterProto*) parseFromInputStream:(NSInputStream*) input {
  return (TeamCenterProto*)[[[TeamCenterProto builder] mergeFromInputStream:input] build];
}
+ (TeamCenterProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TeamCenterProto*)[[[TeamCenterProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TeamCenterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TeamCenterProto*)[[[TeamCenterProto builder] mergeFromCodedInputStream:input] build];
}
+ (TeamCenterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TeamCenterProto*)[[[TeamCenterProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TeamCenterProto_Builder*) builder {
  return [[TeamCenterProto_Builder alloc] init];
}
+ (TeamCenterProto_Builder*) builderWithPrototype:(TeamCenterProto*) prototype {
  return [[TeamCenterProto builder] mergeFrom:prototype];
}
- (TeamCenterProto_Builder*) builder {
  return [TeamCenterProto builder];
}
- (TeamCenterProto_Builder*) toBuilder {
  return [TeamCenterProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStructInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"structInfo"];
    [self.structInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTeamCostLimit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"teamCostLimit", [NSNumber numberWithInteger:self.teamCostLimit]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TeamCenterProto class]]) {
    return NO;
  }
  TeamCenterProto *otherMessage = other;
  return
      self.hasStructInfo == otherMessage.hasStructInfo &&
      (!self.hasStructInfo || [self.structInfo isEqual:otherMessage.structInfo]) &&
      self.hasTeamCostLimit == otherMessage.hasTeamCostLimit &&
      (!self.hasTeamCostLimit || self.teamCostLimit == otherMessage.teamCostLimit) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStructInfo) {
    hashCode = hashCode * 31 + [self.structInfo hash];
  }
  if (self.hasTeamCostLimit) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.teamCostLimit] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TeamCenterProto_Builder()
@property (strong) TeamCenterProto* result;
@end

@implementation TeamCenterProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[TeamCenterProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (TeamCenterProto_Builder*) clear {
  self.result = [[TeamCenterProto alloc] init];
  return self;
}
- (TeamCenterProto_Builder*) clone {
  return [TeamCenterProto builderWithPrototype:result];
}
- (TeamCenterProto*) defaultInstance {
  return [TeamCenterProto defaultInstance];
}
- (TeamCenterProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TeamCenterProto*) buildPartial {
  TeamCenterProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (TeamCenterProto_Builder*) mergeFrom:(TeamCenterProto*) other {
  if (other == [TeamCenterProto defaultInstance]) {
    return self;
  }
  if (other.hasStructInfo) {
    [self mergeStructInfo:other.structInfo];
  }
  if (other.hasTeamCostLimit) {
    [self setTeamCostLimit:other.teamCostLimit];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TeamCenterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TeamCenterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        StructureInfoProto_Builder* subBuilder = [StructureInfoProto builder];
        if (self.hasStructInfo) {
          [subBuilder mergeFrom:self.structInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStructInfo:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setTeamCostLimit:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasStructInfo {
  return result.hasStructInfo;
}
- (StructureInfoProto*) structInfo {
  return result.structInfo;
}
- (TeamCenterProto_Builder*) setStructInfo:(StructureInfoProto*) value {
  result.hasStructInfo = YES;
  result.structInfo = value;
  return self;
}
- (TeamCenterProto_Builder*) setStructInfo_Builder:(StructureInfoProto_Builder*) builderForValue {
  return [self setStructInfo:[builderForValue build]];
}
- (TeamCenterProto_Builder*) mergeStructInfo:(StructureInfoProto*) value {
  if (result.hasStructInfo &&
      result.structInfo != [StructureInfoProto defaultInstance]) {
    result.structInfo =
      [[[StructureInfoProto builderWithPrototype:result.structInfo] mergeFrom:value] buildPartial];
  } else {
    result.structInfo = value;
  }
  result.hasStructInfo = YES;
  return self;
}
- (TeamCenterProto_Builder*) clearStructInfo {
  result.hasStructInfo = NO;
  result.structInfo = [StructureInfoProto defaultInstance];
  return self;
}
- (BOOL) hasTeamCostLimit {
  return result.hasTeamCostLimit;
}
- (int32_t) teamCostLimit {
  return result.teamCostLimit;
}
- (TeamCenterProto_Builder*) setTeamCostLimit:(int32_t) value {
  result.hasTeamCostLimit = YES;
  result.teamCostLimit = value;
  return self;
}
- (TeamCenterProto_Builder*) clearTeamCostLimit {
  result.hasTeamCostLimit = NO;
  result.teamCostLimit = 0;
  return self;
}
@end

@interface ClanHouseProto ()
@property (strong) StructureInfoProto* structInfo;
@property int32_t maxHelpersPerSolicitation;
@property int32_t teamDonationPowerLimit;
@end

@implementation ClanHouseProto

- (BOOL) hasStructInfo {
  return !!hasStructInfo_;
}
- (void) setHasStructInfo:(BOOL) value_ {
  hasStructInfo_ = !!value_;
}
@synthesize structInfo;
- (BOOL) hasMaxHelpersPerSolicitation {
  return !!hasMaxHelpersPerSolicitation_;
}
- (void) setHasMaxHelpersPerSolicitation:(BOOL) value_ {
  hasMaxHelpersPerSolicitation_ = !!value_;
}
@synthesize maxHelpersPerSolicitation;
- (BOOL) hasTeamDonationPowerLimit {
  return !!hasTeamDonationPowerLimit_;
}
- (void) setHasTeamDonationPowerLimit:(BOOL) value_ {
  hasTeamDonationPowerLimit_ = !!value_;
}
@synthesize teamDonationPowerLimit;
- (id) init {
  if ((self = [super init])) {
    self.structInfo = [StructureInfoProto defaultInstance];
    self.maxHelpersPerSolicitation = 0;
    self.teamDonationPowerLimit = 0;
  }
  return self;
}
static ClanHouseProto* defaultClanHouseProtoInstance = nil;
+ (void) initialize {
  if (self == [ClanHouseProto class]) {
    defaultClanHouseProtoInstance = [[ClanHouseProto alloc] init];
  }
}
+ (ClanHouseProto*) defaultInstance {
  return defaultClanHouseProtoInstance;
}
- (ClanHouseProto*) defaultInstance {
  return defaultClanHouseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructInfo) {
    [output writeMessage:1 value:self.structInfo];
  }
  if (self.hasMaxHelpersPerSolicitation) {
    [output writeInt32:2 value:self.maxHelpersPerSolicitation];
  }
  if (self.hasTeamDonationPowerLimit) {
    [output writeInt32:3 value:self.teamDonationPowerLimit];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStructInfo) {
    size_ += computeMessageSize(1, self.structInfo);
  }
  if (self.hasMaxHelpersPerSolicitation) {
    size_ += computeInt32Size(2, self.maxHelpersPerSolicitation);
  }
  if (self.hasTeamDonationPowerLimit) {
    size_ += computeInt32Size(3, self.teamDonationPowerLimit);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ClanHouseProto*) parseFromData:(NSData*) data {
  return (ClanHouseProto*)[[[ClanHouseProto builder] mergeFromData:data] build];
}
+ (ClanHouseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanHouseProto*)[[[ClanHouseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClanHouseProto*) parseFromInputStream:(NSInputStream*) input {
  return (ClanHouseProto*)[[[ClanHouseProto builder] mergeFromInputStream:input] build];
}
+ (ClanHouseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanHouseProto*)[[[ClanHouseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanHouseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClanHouseProto*)[[[ClanHouseProto builder] mergeFromCodedInputStream:input] build];
}
+ (ClanHouseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanHouseProto*)[[[ClanHouseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanHouseProto_Builder*) builder {
  return [[ClanHouseProto_Builder alloc] init];
}
+ (ClanHouseProto_Builder*) builderWithPrototype:(ClanHouseProto*) prototype {
  return [[ClanHouseProto builder] mergeFrom:prototype];
}
- (ClanHouseProto_Builder*) builder {
  return [ClanHouseProto builder];
}
- (ClanHouseProto_Builder*) toBuilder {
  return [ClanHouseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStructInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"structInfo"];
    [self.structInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMaxHelpersPerSolicitation) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxHelpersPerSolicitation", [NSNumber numberWithInteger:self.maxHelpersPerSolicitation]];
  }
  if (self.hasTeamDonationPowerLimit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"teamDonationPowerLimit", [NSNumber numberWithInteger:self.teamDonationPowerLimit]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ClanHouseProto class]]) {
    return NO;
  }
  ClanHouseProto *otherMessage = other;
  return
      self.hasStructInfo == otherMessage.hasStructInfo &&
      (!self.hasStructInfo || [self.structInfo isEqual:otherMessage.structInfo]) &&
      self.hasMaxHelpersPerSolicitation == otherMessage.hasMaxHelpersPerSolicitation &&
      (!self.hasMaxHelpersPerSolicitation || self.maxHelpersPerSolicitation == otherMessage.maxHelpersPerSolicitation) &&
      self.hasTeamDonationPowerLimit == otherMessage.hasTeamDonationPowerLimit &&
      (!self.hasTeamDonationPowerLimit || self.teamDonationPowerLimit == otherMessage.teamDonationPowerLimit) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStructInfo) {
    hashCode = hashCode * 31 + [self.structInfo hash];
  }
  if (self.hasMaxHelpersPerSolicitation) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxHelpersPerSolicitation] hash];
  }
  if (self.hasTeamDonationPowerLimit) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.teamDonationPowerLimit] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ClanHouseProto_Builder()
@property (strong) ClanHouseProto* result;
@end

@implementation ClanHouseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ClanHouseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClanHouseProto_Builder*) clear {
  self.result = [[ClanHouseProto alloc] init];
  return self;
}
- (ClanHouseProto_Builder*) clone {
  return [ClanHouseProto builderWithPrototype:result];
}
- (ClanHouseProto*) defaultInstance {
  return [ClanHouseProto defaultInstance];
}
- (ClanHouseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClanHouseProto*) buildPartial {
  ClanHouseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ClanHouseProto_Builder*) mergeFrom:(ClanHouseProto*) other {
  if (other == [ClanHouseProto defaultInstance]) {
    return self;
  }
  if (other.hasStructInfo) {
    [self mergeStructInfo:other.structInfo];
  }
  if (other.hasMaxHelpersPerSolicitation) {
    [self setMaxHelpersPerSolicitation:other.maxHelpersPerSolicitation];
  }
  if (other.hasTeamDonationPowerLimit) {
    [self setTeamDonationPowerLimit:other.teamDonationPowerLimit];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClanHouseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClanHouseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        StructureInfoProto_Builder* subBuilder = [StructureInfoProto builder];
        if (self.hasStructInfo) {
          [subBuilder mergeFrom:self.structInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStructInfo:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setMaxHelpersPerSolicitation:[input readInt32]];
        break;
      }
      case 24: {
        [self setTeamDonationPowerLimit:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasStructInfo {
  return result.hasStructInfo;
}
- (StructureInfoProto*) structInfo {
  return result.structInfo;
}
- (ClanHouseProto_Builder*) setStructInfo:(StructureInfoProto*) value {
  result.hasStructInfo = YES;
  result.structInfo = value;
  return self;
}
- (ClanHouseProto_Builder*) setStructInfo_Builder:(StructureInfoProto_Builder*) builderForValue {
  return [self setStructInfo:[builderForValue build]];
}
- (ClanHouseProto_Builder*) mergeStructInfo:(StructureInfoProto*) value {
  if (result.hasStructInfo &&
      result.structInfo != [StructureInfoProto defaultInstance]) {
    result.structInfo =
      [[[StructureInfoProto builderWithPrototype:result.structInfo] mergeFrom:value] buildPartial];
  } else {
    result.structInfo = value;
  }
  result.hasStructInfo = YES;
  return self;
}
- (ClanHouseProto_Builder*) clearStructInfo {
  result.hasStructInfo = NO;
  result.structInfo = [StructureInfoProto defaultInstance];
  return self;
}
- (BOOL) hasMaxHelpersPerSolicitation {
  return result.hasMaxHelpersPerSolicitation;
}
- (int32_t) maxHelpersPerSolicitation {
  return result.maxHelpersPerSolicitation;
}
- (ClanHouseProto_Builder*) setMaxHelpersPerSolicitation:(int32_t) value {
  result.hasMaxHelpersPerSolicitation = YES;
  result.maxHelpersPerSolicitation = value;
  return self;
}
- (ClanHouseProto_Builder*) clearMaxHelpersPerSolicitation {
  result.hasMaxHelpersPerSolicitation = NO;
  result.maxHelpersPerSolicitation = 0;
  return self;
}
- (BOOL) hasTeamDonationPowerLimit {
  return result.hasTeamDonationPowerLimit;
}
- (int32_t) teamDonationPowerLimit {
  return result.teamDonationPowerLimit;
}
- (ClanHouseProto_Builder*) setTeamDonationPowerLimit:(int32_t) value {
  result.hasTeamDonationPowerLimit = YES;
  result.teamDonationPowerLimit = value;
  return self;
}
- (ClanHouseProto_Builder*) clearTeamDonationPowerLimit {
  result.hasTeamDonationPowerLimit = NO;
  result.teamDonationPowerLimit = 0;
  return self;
}
@end

@interface PvpBoardHouseProto ()
@property (strong) StructureInfoProto* structInfo;
@property int32_t pvpBoardPowerLimit;
@end

@implementation PvpBoardHouseProto

- (BOOL) hasStructInfo {
  return !!hasStructInfo_;
}
- (void) setHasStructInfo:(BOOL) value_ {
  hasStructInfo_ = !!value_;
}
@synthesize structInfo;
- (BOOL) hasPvpBoardPowerLimit {
  return !!hasPvpBoardPowerLimit_;
}
- (void) setHasPvpBoardPowerLimit:(BOOL) value_ {
  hasPvpBoardPowerLimit_ = !!value_;
}
@synthesize pvpBoardPowerLimit;
- (id) init {
  if ((self = [super init])) {
    self.structInfo = [StructureInfoProto defaultInstance];
    self.pvpBoardPowerLimit = 0;
  }
  return self;
}
static PvpBoardHouseProto* defaultPvpBoardHouseProtoInstance = nil;
+ (void) initialize {
  if (self == [PvpBoardHouseProto class]) {
    defaultPvpBoardHouseProtoInstance = [[PvpBoardHouseProto alloc] init];
  }
}
+ (PvpBoardHouseProto*) defaultInstance {
  return defaultPvpBoardHouseProtoInstance;
}
- (PvpBoardHouseProto*) defaultInstance {
  return defaultPvpBoardHouseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructInfo) {
    [output writeMessage:1 value:self.structInfo];
  }
  if (self.hasPvpBoardPowerLimit) {
    [output writeInt32:2 value:self.pvpBoardPowerLimit];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStructInfo) {
    size_ += computeMessageSize(1, self.structInfo);
  }
  if (self.hasPvpBoardPowerLimit) {
    size_ += computeInt32Size(2, self.pvpBoardPowerLimit);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PvpBoardHouseProto*) parseFromData:(NSData*) data {
  return (PvpBoardHouseProto*)[[[PvpBoardHouseProto builder] mergeFromData:data] build];
}
+ (PvpBoardHouseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PvpBoardHouseProto*)[[[PvpBoardHouseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PvpBoardHouseProto*) parseFromInputStream:(NSInputStream*) input {
  return (PvpBoardHouseProto*)[[[PvpBoardHouseProto builder] mergeFromInputStream:input] build];
}
+ (PvpBoardHouseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PvpBoardHouseProto*)[[[PvpBoardHouseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PvpBoardHouseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PvpBoardHouseProto*)[[[PvpBoardHouseProto builder] mergeFromCodedInputStream:input] build];
}
+ (PvpBoardHouseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PvpBoardHouseProto*)[[[PvpBoardHouseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PvpBoardHouseProto_Builder*) builder {
  return [[PvpBoardHouseProto_Builder alloc] init];
}
+ (PvpBoardHouseProto_Builder*) builderWithPrototype:(PvpBoardHouseProto*) prototype {
  return [[PvpBoardHouseProto builder] mergeFrom:prototype];
}
- (PvpBoardHouseProto_Builder*) builder {
  return [PvpBoardHouseProto builder];
}
- (PvpBoardHouseProto_Builder*) toBuilder {
  return [PvpBoardHouseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStructInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"structInfo"];
    [self.structInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPvpBoardPowerLimit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pvpBoardPowerLimit", [NSNumber numberWithInteger:self.pvpBoardPowerLimit]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PvpBoardHouseProto class]]) {
    return NO;
  }
  PvpBoardHouseProto *otherMessage = other;
  return
      self.hasStructInfo == otherMessage.hasStructInfo &&
      (!self.hasStructInfo || [self.structInfo isEqual:otherMessage.structInfo]) &&
      self.hasPvpBoardPowerLimit == otherMessage.hasPvpBoardPowerLimit &&
      (!self.hasPvpBoardPowerLimit || self.pvpBoardPowerLimit == otherMessage.pvpBoardPowerLimit) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStructInfo) {
    hashCode = hashCode * 31 + [self.structInfo hash];
  }
  if (self.hasPvpBoardPowerLimit) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pvpBoardPowerLimit] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PvpBoardHouseProto_Builder()
@property (strong) PvpBoardHouseProto* result;
@end

@implementation PvpBoardHouseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PvpBoardHouseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PvpBoardHouseProto_Builder*) clear {
  self.result = [[PvpBoardHouseProto alloc] init];
  return self;
}
- (PvpBoardHouseProto_Builder*) clone {
  return [PvpBoardHouseProto builderWithPrototype:result];
}
- (PvpBoardHouseProto*) defaultInstance {
  return [PvpBoardHouseProto defaultInstance];
}
- (PvpBoardHouseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PvpBoardHouseProto*) buildPartial {
  PvpBoardHouseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PvpBoardHouseProto_Builder*) mergeFrom:(PvpBoardHouseProto*) other {
  if (other == [PvpBoardHouseProto defaultInstance]) {
    return self;
  }
  if (other.hasStructInfo) {
    [self mergeStructInfo:other.structInfo];
  }
  if (other.hasPvpBoardPowerLimit) {
    [self setPvpBoardPowerLimit:other.pvpBoardPowerLimit];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PvpBoardHouseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PvpBoardHouseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        StructureInfoProto_Builder* subBuilder = [StructureInfoProto builder];
        if (self.hasStructInfo) {
          [subBuilder mergeFrom:self.structInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStructInfo:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setPvpBoardPowerLimit:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasStructInfo {
  return result.hasStructInfo;
}
- (StructureInfoProto*) structInfo {
  return result.structInfo;
}
- (PvpBoardHouseProto_Builder*) setStructInfo:(StructureInfoProto*) value {
  result.hasStructInfo = YES;
  result.structInfo = value;
  return self;
}
- (PvpBoardHouseProto_Builder*) setStructInfo_Builder:(StructureInfoProto_Builder*) builderForValue {
  return [self setStructInfo:[builderForValue build]];
}
- (PvpBoardHouseProto_Builder*) mergeStructInfo:(StructureInfoProto*) value {
  if (result.hasStructInfo &&
      result.structInfo != [StructureInfoProto defaultInstance]) {
    result.structInfo =
      [[[StructureInfoProto builderWithPrototype:result.structInfo] mergeFrom:value] buildPartial];
  } else {
    result.structInfo = value;
  }
  result.hasStructInfo = YES;
  return self;
}
- (PvpBoardHouseProto_Builder*) clearStructInfo {
  result.hasStructInfo = NO;
  result.structInfo = [StructureInfoProto defaultInstance];
  return self;
}
- (BOOL) hasPvpBoardPowerLimit {
  return result.hasPvpBoardPowerLimit;
}
- (int32_t) pvpBoardPowerLimit {
  return result.pvpBoardPowerLimit;
}
- (PvpBoardHouseProto_Builder*) setPvpBoardPowerLimit:(int32_t) value {
  result.hasPvpBoardPowerLimit = YES;
  result.pvpBoardPowerLimit = value;
  return self;
}
- (PvpBoardHouseProto_Builder*) clearPvpBoardPowerLimit {
  result.hasPvpBoardPowerLimit = NO;
  result.pvpBoardPowerLimit = 0;
  return self;
}
@end

@interface PvpBoardObstacleProto ()
@property int32_t pvpBoardId;
@property (strong) NSString* name;
@property BoardObstacleType obstacleType;
@property int32_t powerAmt;
@property BOOL initiallyAvailable;
@end

@implementation PvpBoardObstacleProto

- (BOOL) hasPvpBoardId {
  return !!hasPvpBoardId_;
}
- (void) setHasPvpBoardId:(BOOL) value_ {
  hasPvpBoardId_ = !!value_;
}
@synthesize pvpBoardId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasObstacleType {
  return !!hasObstacleType_;
}
- (void) setHasObstacleType:(BOOL) value_ {
  hasObstacleType_ = !!value_;
}
@synthesize obstacleType;
- (BOOL) hasPowerAmt {
  return !!hasPowerAmt_;
}
- (void) setHasPowerAmt:(BOOL) value_ {
  hasPowerAmt_ = !!value_;
}
@synthesize powerAmt;
- (BOOL) hasInitiallyAvailable {
  return !!hasInitiallyAvailable_;
}
- (void) setHasInitiallyAvailable:(BOOL) value_ {
  hasInitiallyAvailable_ = !!value_;
}
- (BOOL) initiallyAvailable {
  return !!initiallyAvailable_;
}
- (void) setInitiallyAvailable:(BOOL) value_ {
  initiallyAvailable_ = !!value_;
}
- (id) init {
  if ((self = [super init])) {
    self.pvpBoardId = 0;
    self.name = @"";
    self.obstacleType = BoardObstacleTypeCloud;
    self.powerAmt = 0;
    self.initiallyAvailable = NO;
  }
  return self;
}
static PvpBoardObstacleProto* defaultPvpBoardObstacleProtoInstance = nil;
+ (void) initialize {
  if (self == [PvpBoardObstacleProto class]) {
    defaultPvpBoardObstacleProtoInstance = [[PvpBoardObstacleProto alloc] init];
  }
}
+ (PvpBoardObstacleProto*) defaultInstance {
  return defaultPvpBoardObstacleProtoInstance;
}
- (PvpBoardObstacleProto*) defaultInstance {
  return defaultPvpBoardObstacleProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPvpBoardId) {
    [output writeInt32:1 value:self.pvpBoardId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasObstacleType) {
    [output writeEnum:3 value:self.obstacleType];
  }
  if (self.hasPowerAmt) {
    [output writeInt32:4 value:self.powerAmt];
  }
  if (self.hasInitiallyAvailable) {
    [output writeBool:5 value:self.initiallyAvailable];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPvpBoardId) {
    size_ += computeInt32Size(1, self.pvpBoardId);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasObstacleType) {
    size_ += computeEnumSize(3, self.obstacleType);
  }
  if (self.hasPowerAmt) {
    size_ += computeInt32Size(4, self.powerAmt);
  }
  if (self.hasInitiallyAvailable) {
    size_ += computeBoolSize(5, self.initiallyAvailable);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PvpBoardObstacleProto*) parseFromData:(NSData*) data {
  return (PvpBoardObstacleProto*)[[[PvpBoardObstacleProto builder] mergeFromData:data] build];
}
+ (PvpBoardObstacleProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PvpBoardObstacleProto*)[[[PvpBoardObstacleProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PvpBoardObstacleProto*) parseFromInputStream:(NSInputStream*) input {
  return (PvpBoardObstacleProto*)[[[PvpBoardObstacleProto builder] mergeFromInputStream:input] build];
}
+ (PvpBoardObstacleProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PvpBoardObstacleProto*)[[[PvpBoardObstacleProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PvpBoardObstacleProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PvpBoardObstacleProto*)[[[PvpBoardObstacleProto builder] mergeFromCodedInputStream:input] build];
}
+ (PvpBoardObstacleProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PvpBoardObstacleProto*)[[[PvpBoardObstacleProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PvpBoardObstacleProto_Builder*) builder {
  return [[PvpBoardObstacleProto_Builder alloc] init];
}
+ (PvpBoardObstacleProto_Builder*) builderWithPrototype:(PvpBoardObstacleProto*) prototype {
  return [[PvpBoardObstacleProto builder] mergeFrom:prototype];
}
- (PvpBoardObstacleProto_Builder*) builder {
  return [PvpBoardObstacleProto builder];
}
- (PvpBoardObstacleProto_Builder*) toBuilder {
  return [PvpBoardObstacleProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPvpBoardId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pvpBoardId", [NSNumber numberWithInteger:self.pvpBoardId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasObstacleType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"obstacleType", [NSNumber numberWithInteger:self.obstacleType]];
  }
  if (self.hasPowerAmt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"powerAmt", [NSNumber numberWithInteger:self.powerAmt]];
  }
  if (self.hasInitiallyAvailable) {
    [output appendFormat:@"%@%@: %@\n", indent, @"initiallyAvailable", [NSNumber numberWithBool:self.initiallyAvailable]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PvpBoardObstacleProto class]]) {
    return NO;
  }
  PvpBoardObstacleProto *otherMessage = other;
  return
      self.hasPvpBoardId == otherMessage.hasPvpBoardId &&
      (!self.hasPvpBoardId || self.pvpBoardId == otherMessage.pvpBoardId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasObstacleType == otherMessage.hasObstacleType &&
      (!self.hasObstacleType || self.obstacleType == otherMessage.obstacleType) &&
      self.hasPowerAmt == otherMessage.hasPowerAmt &&
      (!self.hasPowerAmt || self.powerAmt == otherMessage.powerAmt) &&
      self.hasInitiallyAvailable == otherMessage.hasInitiallyAvailable &&
      (!self.hasInitiallyAvailable || self.initiallyAvailable == otherMessage.initiallyAvailable) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPvpBoardId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pvpBoardId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasObstacleType) {
    hashCode = hashCode * 31 + self.obstacleType;
  }
  if (self.hasPowerAmt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.powerAmt] hash];
  }
  if (self.hasInitiallyAvailable) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.initiallyAvailable] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PvpBoardObstacleProto_Builder()
@property (strong) PvpBoardObstacleProto* result;
@end

@implementation PvpBoardObstacleProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PvpBoardObstacleProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PvpBoardObstacleProto_Builder*) clear {
  self.result = [[PvpBoardObstacleProto alloc] init];
  return self;
}
- (PvpBoardObstacleProto_Builder*) clone {
  return [PvpBoardObstacleProto builderWithPrototype:result];
}
- (PvpBoardObstacleProto*) defaultInstance {
  return [PvpBoardObstacleProto defaultInstance];
}
- (PvpBoardObstacleProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PvpBoardObstacleProto*) buildPartial {
  PvpBoardObstacleProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PvpBoardObstacleProto_Builder*) mergeFrom:(PvpBoardObstacleProto*) other {
  if (other == [PvpBoardObstacleProto defaultInstance]) {
    return self;
  }
  if (other.hasPvpBoardId) {
    [self setPvpBoardId:other.pvpBoardId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasObstacleType) {
    [self setObstacleType:other.obstacleType];
  }
  if (other.hasPowerAmt) {
    [self setPowerAmt:other.powerAmt];
  }
  if (other.hasInitiallyAvailable) {
    [self setInitiallyAvailable:other.initiallyAvailable];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PvpBoardObstacleProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PvpBoardObstacleProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPvpBoardId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        BoardObstacleType value = (BoardObstacleType)[input readEnum];
        if (BoardObstacleTypeIsValidValue(value)) {
          [self setObstacleType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        [self setPowerAmt:[input readInt32]];
        break;
      }
      case 40: {
        [self setInitiallyAvailable:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasPvpBoardId {
  return result.hasPvpBoardId;
}
- (int32_t) pvpBoardId {
  return result.pvpBoardId;
}
- (PvpBoardObstacleProto_Builder*) setPvpBoardId:(int32_t) value {
  result.hasPvpBoardId = YES;
  result.pvpBoardId = value;
  return self;
}
- (PvpBoardObstacleProto_Builder*) clearPvpBoardId {
  result.hasPvpBoardId = NO;
  result.pvpBoardId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (PvpBoardObstacleProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (PvpBoardObstacleProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasObstacleType {
  return result.hasObstacleType;
}
- (BoardObstacleType) obstacleType {
  return result.obstacleType;
}
- (PvpBoardObstacleProto_Builder*) setObstacleType:(BoardObstacleType) value {
  result.hasObstacleType = YES;
  result.obstacleType = value;
  return self;
}
- (PvpBoardObstacleProto_Builder*) clearObstacleTypeList {
  result.hasObstacleType = NO;
  result.obstacleType = BoardObstacleTypeCloud;
  return self;
}
- (BOOL) hasPowerAmt {
  return result.hasPowerAmt;
}
- (int32_t) powerAmt {
  return result.powerAmt;
}
- (PvpBoardObstacleProto_Builder*) setPowerAmt:(int32_t) value {
  result.hasPowerAmt = YES;
  result.powerAmt = value;
  return self;
}
- (PvpBoardObstacleProto_Builder*) clearPowerAmt {
  result.hasPowerAmt = NO;
  result.powerAmt = 0;
  return self;
}
- (BOOL) hasInitiallyAvailable {
  return result.hasInitiallyAvailable;
}
- (BOOL) initiallyAvailable {
  return result.initiallyAvailable;
}
- (PvpBoardObstacleProto_Builder*) setInitiallyAvailable:(BOOL) value {
  result.hasInitiallyAvailable = YES;
  result.initiallyAvailable = value;
  return self;
}
- (PvpBoardObstacleProto_Builder*) clearInitiallyAvailable {
  result.hasInitiallyAvailable = NO;
  result.initiallyAvailable = NO;
  return self;
}
@end

@interface UserPvpBoardObstacleProto ()
@property int32_t userPvpBoardObstacleId;
@property (strong) NSString* userUuid;
@property int32_t obstacleId;
@property int32_t posX;
@property int32_t posY;
@end

@implementation UserPvpBoardObstacleProto

- (BOOL) hasUserPvpBoardObstacleId {
  return !!hasUserPvpBoardObstacleId_;
}
- (void) setHasUserPvpBoardObstacleId:(BOOL) value_ {
  hasUserPvpBoardObstacleId_ = !!value_;
}
@synthesize userPvpBoardObstacleId;
- (BOOL) hasUserUuid {
  return !!hasUserUuid_;
}
- (void) setHasUserUuid:(BOOL) value_ {
  hasUserUuid_ = !!value_;
}
@synthesize userUuid;
- (BOOL) hasObstacleId {
  return !!hasObstacleId_;
}
- (void) setHasObstacleId:(BOOL) value_ {
  hasObstacleId_ = !!value_;
}
@synthesize obstacleId;
- (BOOL) hasPosX {
  return !!hasPosX_;
}
- (void) setHasPosX:(BOOL) value_ {
  hasPosX_ = !!value_;
}
@synthesize posX;
- (BOOL) hasPosY {
  return !!hasPosY_;
}
- (void) setHasPosY:(BOOL) value_ {
  hasPosY_ = !!value_;
}
@synthesize posY;
- (id) init {
  if ((self = [super init])) {
    self.userPvpBoardObstacleId = 0;
    self.userUuid = @"";
    self.obstacleId = 0;
    self.posX = 0;
    self.posY = 0;
  }
  return self;
}
static UserPvpBoardObstacleProto* defaultUserPvpBoardObstacleProtoInstance = nil;
+ (void) initialize {
  if (self == [UserPvpBoardObstacleProto class]) {
    defaultUserPvpBoardObstacleProtoInstance = [[UserPvpBoardObstacleProto alloc] init];
  }
}
+ (UserPvpBoardObstacleProto*) defaultInstance {
  return defaultUserPvpBoardObstacleProtoInstance;
}
- (UserPvpBoardObstacleProto*) defaultInstance {
  return defaultUserPvpBoardObstacleProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserPvpBoardObstacleId) {
    [output writeInt32:1 value:self.userPvpBoardObstacleId];
  }
  if (self.hasUserUuid) {
    [output writeString:2 value:self.userUuid];
  }
  if (self.hasObstacleId) {
    [output writeInt32:3 value:self.obstacleId];
  }
  if (self.hasPosX) {
    [output writeInt32:4 value:self.posX];
  }
  if (self.hasPosY) {
    [output writeInt32:5 value:self.posY];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserPvpBoardObstacleId) {
    size_ += computeInt32Size(1, self.userPvpBoardObstacleId);
  }
  if (self.hasUserUuid) {
    size_ += computeStringSize(2, self.userUuid);
  }
  if (self.hasObstacleId) {
    size_ += computeInt32Size(3, self.obstacleId);
  }
  if (self.hasPosX) {
    size_ += computeInt32Size(4, self.posX);
  }
  if (self.hasPosY) {
    size_ += computeInt32Size(5, self.posY);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UserPvpBoardObstacleProto*) parseFromData:(NSData*) data {
  return (UserPvpBoardObstacleProto*)[[[UserPvpBoardObstacleProto builder] mergeFromData:data] build];
}
+ (UserPvpBoardObstacleProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserPvpBoardObstacleProto*)[[[UserPvpBoardObstacleProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserPvpBoardObstacleProto*) parseFromInputStream:(NSInputStream*) input {
  return (UserPvpBoardObstacleProto*)[[[UserPvpBoardObstacleProto builder] mergeFromInputStream:input] build];
}
+ (UserPvpBoardObstacleProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserPvpBoardObstacleProto*)[[[UserPvpBoardObstacleProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserPvpBoardObstacleProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserPvpBoardObstacleProto*)[[[UserPvpBoardObstacleProto builder] mergeFromCodedInputStream:input] build];
}
+ (UserPvpBoardObstacleProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserPvpBoardObstacleProto*)[[[UserPvpBoardObstacleProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserPvpBoardObstacleProto_Builder*) builder {
  return [[UserPvpBoardObstacleProto_Builder alloc] init];
}
+ (UserPvpBoardObstacleProto_Builder*) builderWithPrototype:(UserPvpBoardObstacleProto*) prototype {
  return [[UserPvpBoardObstacleProto builder] mergeFrom:prototype];
}
- (UserPvpBoardObstacleProto_Builder*) builder {
  return [UserPvpBoardObstacleProto builder];
}
- (UserPvpBoardObstacleProto_Builder*) toBuilder {
  return [UserPvpBoardObstacleProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserPvpBoardObstacleId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userPvpBoardObstacleId", [NSNumber numberWithInteger:self.userPvpBoardObstacleId]];
  }
  if (self.hasUserUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userUuid", self.userUuid];
  }
  if (self.hasObstacleId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"obstacleId", [NSNumber numberWithInteger:self.obstacleId]];
  }
  if (self.hasPosX) {
    [output appendFormat:@"%@%@: %@\n", indent, @"posX", [NSNumber numberWithInteger:self.posX]];
  }
  if (self.hasPosY) {
    [output appendFormat:@"%@%@: %@\n", indent, @"posY", [NSNumber numberWithInteger:self.posY]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UserPvpBoardObstacleProto class]]) {
    return NO;
  }
  UserPvpBoardObstacleProto *otherMessage = other;
  return
      self.hasUserPvpBoardObstacleId == otherMessage.hasUserPvpBoardObstacleId &&
      (!self.hasUserPvpBoardObstacleId || self.userPvpBoardObstacleId == otherMessage.userPvpBoardObstacleId) &&
      self.hasUserUuid == otherMessage.hasUserUuid &&
      (!self.hasUserUuid || [self.userUuid isEqual:otherMessage.userUuid]) &&
      self.hasObstacleId == otherMessage.hasObstacleId &&
      (!self.hasObstacleId || self.obstacleId == otherMessage.obstacleId) &&
      self.hasPosX == otherMessage.hasPosX &&
      (!self.hasPosX || self.posX == otherMessage.posX) &&
      self.hasPosY == otherMessage.hasPosY &&
      (!self.hasPosY || self.posY == otherMessage.posY) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserPvpBoardObstacleId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userPvpBoardObstacleId] hash];
  }
  if (self.hasUserUuid) {
    hashCode = hashCode * 31 + [self.userUuid hash];
  }
  if (self.hasObstacleId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.obstacleId] hash];
  }
  if (self.hasPosX) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.posX] hash];
  }
  if (self.hasPosY) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.posY] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UserPvpBoardObstacleProto_Builder()
@property (strong) UserPvpBoardObstacleProto* result;
@end

@implementation UserPvpBoardObstacleProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[UserPvpBoardObstacleProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserPvpBoardObstacleProto_Builder*) clear {
  self.result = [[UserPvpBoardObstacleProto alloc] init];
  return self;
}
- (UserPvpBoardObstacleProto_Builder*) clone {
  return [UserPvpBoardObstacleProto builderWithPrototype:result];
}
- (UserPvpBoardObstacleProto*) defaultInstance {
  return [UserPvpBoardObstacleProto defaultInstance];
}
- (UserPvpBoardObstacleProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserPvpBoardObstacleProto*) buildPartial {
  UserPvpBoardObstacleProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (UserPvpBoardObstacleProto_Builder*) mergeFrom:(UserPvpBoardObstacleProto*) other {
  if (other == [UserPvpBoardObstacleProto defaultInstance]) {
    return self;
  }
  if (other.hasUserPvpBoardObstacleId) {
    [self setUserPvpBoardObstacleId:other.userPvpBoardObstacleId];
  }
  if (other.hasUserUuid) {
    [self setUserUuid:other.userUuid];
  }
  if (other.hasObstacleId) {
    [self setObstacleId:other.obstacleId];
  }
  if (other.hasPosX) {
    [self setPosX:other.posX];
  }
  if (other.hasPosY) {
    [self setPosY:other.posY];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserPvpBoardObstacleProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserPvpBoardObstacleProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserPvpBoardObstacleId:[input readInt32]];
        break;
      }
      case 18: {
        [self setUserUuid:[input readString]];
        break;
      }
      case 24: {
        [self setObstacleId:[input readInt32]];
        break;
      }
      case 32: {
        [self setPosX:[input readInt32]];
        break;
      }
      case 40: {
        [self setPosY:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserPvpBoardObstacleId {
  return result.hasUserPvpBoardObstacleId;
}
- (int32_t) userPvpBoardObstacleId {
  return result.userPvpBoardObstacleId;
}
- (UserPvpBoardObstacleProto_Builder*) setUserPvpBoardObstacleId:(int32_t) value {
  result.hasUserPvpBoardObstacleId = YES;
  result.userPvpBoardObstacleId = value;
  return self;
}
- (UserPvpBoardObstacleProto_Builder*) clearUserPvpBoardObstacleId {
  result.hasUserPvpBoardObstacleId = NO;
  result.userPvpBoardObstacleId = 0;
  return self;
}
- (BOOL) hasUserUuid {
  return result.hasUserUuid;
}
- (NSString*) userUuid {
  return result.userUuid;
}
- (UserPvpBoardObstacleProto_Builder*) setUserUuid:(NSString*) value {
  result.hasUserUuid = YES;
  result.userUuid = value;
  return self;
}
- (UserPvpBoardObstacleProto_Builder*) clearUserUuid {
  result.hasUserUuid = NO;
  result.userUuid = @"";
  return self;
}
- (BOOL) hasObstacleId {
  return result.hasObstacleId;
}
- (int32_t) obstacleId {
  return result.obstacleId;
}
- (UserPvpBoardObstacleProto_Builder*) setObstacleId:(int32_t) value {
  result.hasObstacleId = YES;
  result.obstacleId = value;
  return self;
}
- (UserPvpBoardObstacleProto_Builder*) clearObstacleId {
  result.hasObstacleId = NO;
  result.obstacleId = 0;
  return self;
}
- (BOOL) hasPosX {
  return result.hasPosX;
}
- (int32_t) posX {
  return result.posX;
}
- (UserPvpBoardObstacleProto_Builder*) setPosX:(int32_t) value {
  result.hasPosX = YES;
  result.posX = value;
  return self;
}
- (UserPvpBoardObstacleProto_Builder*) clearPosX {
  result.hasPosX = NO;
  result.posX = 0;
  return self;
}
- (BOOL) hasPosY {
  return result.hasPosY;
}
- (int32_t) posY {
  return result.posY;
}
- (UserPvpBoardObstacleProto_Builder*) setPosY:(int32_t) value {
  result.hasPosY = YES;
  result.posY = value;
  return self;
}
- (UserPvpBoardObstacleProto_Builder*) clearPosY {
  result.hasPosY = NO;
  result.posY = 0;
  return self;
}
@end

@interface BattleItemFactoryProto ()
@property (strong) StructureInfoProto* structInfo;
@property int32_t powerLimit;
@end

@implementation BattleItemFactoryProto

- (BOOL) hasStructInfo {
  return !!hasStructInfo_;
}
- (void) setHasStructInfo:(BOOL) value_ {
  hasStructInfo_ = !!value_;
}
@synthesize structInfo;
- (BOOL) hasPowerLimit {
  return !!hasPowerLimit_;
}
- (void) setHasPowerLimit:(BOOL) value_ {
  hasPowerLimit_ = !!value_;
}
@synthesize powerLimit;
- (id) init {
  if ((self = [super init])) {
    self.structInfo = [StructureInfoProto defaultInstance];
    self.powerLimit = 0;
  }
  return self;
}
static BattleItemFactoryProto* defaultBattleItemFactoryProtoInstance = nil;
+ (void) initialize {
  if (self == [BattleItemFactoryProto class]) {
    defaultBattleItemFactoryProtoInstance = [[BattleItemFactoryProto alloc] init];
  }
}
+ (BattleItemFactoryProto*) defaultInstance {
  return defaultBattleItemFactoryProtoInstance;
}
- (BattleItemFactoryProto*) defaultInstance {
  return defaultBattleItemFactoryProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructInfo) {
    [output writeMessage:1 value:self.structInfo];
  }
  if (self.hasPowerLimit) {
    [output writeInt32:2 value:self.powerLimit];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStructInfo) {
    size_ += computeMessageSize(1, self.structInfo);
  }
  if (self.hasPowerLimit) {
    size_ += computeInt32Size(2, self.powerLimit);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BattleItemFactoryProto*) parseFromData:(NSData*) data {
  return (BattleItemFactoryProto*)[[[BattleItemFactoryProto builder] mergeFromData:data] build];
}
+ (BattleItemFactoryProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BattleItemFactoryProto*)[[[BattleItemFactoryProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BattleItemFactoryProto*) parseFromInputStream:(NSInputStream*) input {
  return (BattleItemFactoryProto*)[[[BattleItemFactoryProto builder] mergeFromInputStream:input] build];
}
+ (BattleItemFactoryProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BattleItemFactoryProto*)[[[BattleItemFactoryProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BattleItemFactoryProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BattleItemFactoryProto*)[[[BattleItemFactoryProto builder] mergeFromCodedInputStream:input] build];
}
+ (BattleItemFactoryProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BattleItemFactoryProto*)[[[BattleItemFactoryProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BattleItemFactoryProto_Builder*) builder {
  return [[BattleItemFactoryProto_Builder alloc] init];
}
+ (BattleItemFactoryProto_Builder*) builderWithPrototype:(BattleItemFactoryProto*) prototype {
  return [[BattleItemFactoryProto builder] mergeFrom:prototype];
}
- (BattleItemFactoryProto_Builder*) builder {
  return [BattleItemFactoryProto builder];
}
- (BattleItemFactoryProto_Builder*) toBuilder {
  return [BattleItemFactoryProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStructInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"structInfo"];
    [self.structInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPowerLimit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"powerLimit", [NSNumber numberWithInteger:self.powerLimit]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BattleItemFactoryProto class]]) {
    return NO;
  }
  BattleItemFactoryProto *otherMessage = other;
  return
      self.hasStructInfo == otherMessage.hasStructInfo &&
      (!self.hasStructInfo || [self.structInfo isEqual:otherMessage.structInfo]) &&
      self.hasPowerLimit == otherMessage.hasPowerLimit &&
      (!self.hasPowerLimit || self.powerLimit == otherMessage.powerLimit) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStructInfo) {
    hashCode = hashCode * 31 + [self.structInfo hash];
  }
  if (self.hasPowerLimit) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.powerLimit] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BattleItemFactoryProto_Builder()
@property (strong) BattleItemFactoryProto* result;
@end

@implementation BattleItemFactoryProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BattleItemFactoryProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BattleItemFactoryProto_Builder*) clear {
  self.result = [[BattleItemFactoryProto alloc] init];
  return self;
}
- (BattleItemFactoryProto_Builder*) clone {
  return [BattleItemFactoryProto builderWithPrototype:result];
}
- (BattleItemFactoryProto*) defaultInstance {
  return [BattleItemFactoryProto defaultInstance];
}
- (BattleItemFactoryProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BattleItemFactoryProto*) buildPartial {
  BattleItemFactoryProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BattleItemFactoryProto_Builder*) mergeFrom:(BattleItemFactoryProto*) other {
  if (other == [BattleItemFactoryProto defaultInstance]) {
    return self;
  }
  if (other.hasStructInfo) {
    [self mergeStructInfo:other.structInfo];
  }
  if (other.hasPowerLimit) {
    [self setPowerLimit:other.powerLimit];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BattleItemFactoryProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BattleItemFactoryProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        StructureInfoProto_Builder* subBuilder = [StructureInfoProto builder];
        if (self.hasStructInfo) {
          [subBuilder mergeFrom:self.structInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStructInfo:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setPowerLimit:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasStructInfo {
  return result.hasStructInfo;
}
- (StructureInfoProto*) structInfo {
  return result.structInfo;
}
- (BattleItemFactoryProto_Builder*) setStructInfo:(StructureInfoProto*) value {
  result.hasStructInfo = YES;
  result.structInfo = value;
  return self;
}
- (BattleItemFactoryProto_Builder*) setStructInfo_Builder:(StructureInfoProto_Builder*) builderForValue {
  return [self setStructInfo:[builderForValue build]];
}
- (BattleItemFactoryProto_Builder*) mergeStructInfo:(StructureInfoProto*) value {
  if (result.hasStructInfo &&
      result.structInfo != [StructureInfoProto defaultInstance]) {
    result.structInfo =
      [[[StructureInfoProto builderWithPrototype:result.structInfo] mergeFrom:value] buildPartial];
  } else {
    result.structInfo = value;
  }
  result.hasStructInfo = YES;
  return self;
}
- (BattleItemFactoryProto_Builder*) clearStructInfo {
  result.hasStructInfo = NO;
  result.structInfo = [StructureInfoProto defaultInstance];
  return self;
}
- (BOOL) hasPowerLimit {
  return result.hasPowerLimit;
}
- (int32_t) powerLimit {
  return result.powerLimit;
}
- (BattleItemFactoryProto_Builder*) setPowerLimit:(int32_t) value {
  result.hasPowerLimit = YES;
  result.powerLimit = value;
  return self;
}
- (BattleItemFactoryProto_Builder*) clearPowerLimit {
  result.hasPowerLimit = NO;
  result.powerLimit = 0;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
