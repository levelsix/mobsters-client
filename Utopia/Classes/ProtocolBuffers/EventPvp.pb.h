// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "Battle.pb.h"
#import "MonsterStuff.pb.h"
#import "Structure.pb.h"
#import "User.pb.h"
// @@protoc_insertion_point(imports)

@class BattleItemFactoryProto;
@class BattleItemFactoryProto_Builder;
@class BattleReplayProto;
@class BattleReplayProto_Builder;
@class BeginPvpBattleRequestProto;
@class BeginPvpBattleRequestProto_Builder;
@class BeginPvpBattleResponseProto;
@class BeginPvpBattleResponseProto_Builder;
@class ClanHouseProto;
@class ClanHouseProto_Builder;
@class ClanMemberTeamDonationProto;
@class ClanMemberTeamDonationProto_Builder;
@class CoordinateProto;
@class CoordinateProto_Builder;
@class CustomizePvpBoardObstacleRequestProto;
@class CustomizePvpBoardObstacleRequestProto_Builder;
@class CustomizePvpBoardObstacleResponseProto;
@class CustomizePvpBoardObstacleResponseProto_Builder;
@class EndPvpBattleRequestProto;
@class EndPvpBattleRequestProto_Builder;
@class EndPvpBattleResponseProto;
@class EndPvpBattleResponseProto_Builder;
@class EvoChamberProto;
@class EvoChamberProto_Builder;
@class FullUserMonsterProto;
@class FullUserMonsterProto_Builder;
@class FullUserProto;
@class FullUserProto_Builder;
@class FullUserStructureProto;
@class FullUserStructureProto_Builder;
@class HospitalProto;
@class HospitalProto_Builder;
@class ItemGemPriceProto;
@class ItemGemPriceProto_Builder;
@class ItemProto;
@class ItemProto_Builder;
@class LabProto;
@class LabProto_Builder;
@class MiniJobCenterProto;
@class MiniJobCenterProto_Builder;
@class MinimumClanProto;
@class MinimumClanProto_Builder;
@class MinimumObstacleProto;
@class MinimumObstacleProto_Builder;
@class MinimumUserMonsterProto;
@class MinimumUserMonsterProto_Builder;
@class MinimumUserMonsterSellProto;
@class MinimumUserMonsterSellProto_Builder;
@class MinimumUserProto;
@class MinimumUserProtoWithFacebookId;
@class MinimumUserProtoWithFacebookId_Builder;
@class MinimumUserProtoWithLevel;
@class MinimumUserProtoWithLevel_Builder;
@class MinimumUserProtoWithMaxResources;
@class MinimumUserProtoWithMaxResources_Builder;
@class MinimumUserProto_Builder;
@class MoneyTreeProto;
@class MoneyTreeProto_Builder;
@class MonsterBattleDialogueProto;
@class MonsterBattleDialogueProto_Builder;
@class MonsterLevelInfoProto;
@class MonsterLevelInfoProto_Builder;
@class MonsterProto;
@class MonsterProto_Builder;
@class ObstacleProto;
@class ObstacleProto_Builder;
@class PvpBoardHouseProto;
@class PvpBoardHouseProto_Builder;
@class PvpBoardObstacleProto;
@class PvpBoardObstacleProto_Builder;
@class PvpClanAvengeProto;
@class PvpClanAvengeProto_Builder;
@class PvpHistoryProto;
@class PvpHistoryProto_Builder;
@class PvpLeagueProto;
@class PvpLeagueProto_Builder;
@class PvpMonsterProto;
@class PvpMonsterProto_Builder;
@class PvpProto;
@class PvpProto_Builder;
@class PvpUserClanAvengeProto;
@class PvpUserClanAvengeProto_Builder;
@class QueueUpRequestProto;
@class QueueUpRequestProto_Builder;
@class QueueUpResponseProto;
@class QueueUpResponseProto_Builder;
@class ResearchHouseProto;
@class ResearchHouseProto_Builder;
@class ResearchPropertyProto;
@class ResearchPropertyProto_Builder;
@class ResearchProto;
@class ResearchProto_Builder;
@class ResidenceProto;
@class ResidenceProto_Builder;
@class ResourceGeneratorProto;
@class ResourceGeneratorProto_Builder;
@class ResourceStorageProto;
@class ResourceStorageProto_Builder;
@class RetrieveBattleReplayRequestProto;
@class RetrieveBattleReplayRequestProto_Builder;
@class RetrieveBattleReplayResponseProto;
@class RetrieveBattleReplayResponseProto_Builder;
@class SetDefendingMsgRequestProto;
@class SetDefendingMsgRequestProto_Builder;
@class SetDefendingMsgResponseProto;
@class SetDefendingMsgResponseProto_Builder;
@class StaticUserLevelInfoProto;
@class StaticUserLevelInfoProto_Builder;
@class StructureInfoProto;
@class StructureInfoProto_Builder;
@class TeamCenterProto;
@class TeamCenterProto_Builder;
@class TownHallProto;
@class TownHallProto_Builder;
@class TutorialStructProto;
@class TutorialStructProto_Builder;
@class UserCurrentMonsterTeamProto;
@class UserCurrentMonsterTeamProto_Builder;
@class UserEnhancementItemProto;
@class UserEnhancementItemProto_Builder;
@class UserEnhancementProto;
@class UserEnhancementProto_Builder;
@class UserFacebookInviteForSlotProto;
@class UserFacebookInviteForSlotProto_Builder;
@class UserItemProto;
@class UserItemProto_Builder;
@class UserItemSecretGiftProto;
@class UserItemSecretGiftProto_Builder;
@class UserItemUsageProto;
@class UserItemUsageProto_Builder;
@class UserMonsterCurrentExpProto;
@class UserMonsterCurrentExpProto_Builder;
@class UserMonsterCurrentHealthProto;
@class UserMonsterCurrentHealthProto_Builder;
@class UserMonsterEvolutionProto;
@class UserMonsterEvolutionProto_Builder;
@class UserMonsterHealingProto;
@class UserMonsterHealingProto_Builder;
@class UserMonsterSnapshotProto;
@class UserMonsterSnapshotProto_Builder;
@class UserObstacleProto;
@class UserObstacleProto_Builder;
@class UserPvpBoardObstacleProto;
@class UserPvpBoardObstacleProto_Builder;
@class UserPvpLeagueProto;
@class UserPvpLeagueProto_Builder;
@class UserResearchProto;
@class UserResearchProto_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef NS_ENUM(SInt32, QueueUpResponseProto_QueueUpStatus) {
  QueueUpResponseProto_QueueUpStatusSuccess = 1,
  QueueUpResponseProto_QueueUpStatusFailNotEnoughCash = 2,
  QueueUpResponseProto_QueueUpStatusFailOther = 3,
  QueueUpResponseProto_QueueUpStatusFailNotEnoughGems = 4,
};

BOOL QueueUpResponseProto_QueueUpStatusIsValidValue(QueueUpResponseProto_QueueUpStatus value);

typedef NS_ENUM(SInt32, BeginPvpBattleResponseProto_BeginPvpBattleStatus) {
  BeginPvpBattleResponseProto_BeginPvpBattleStatusSuccess = 1,
  BeginPvpBattleResponseProto_BeginPvpBattleStatusFailEnemyUnavailable = 2,
  BeginPvpBattleResponseProto_BeginPvpBattleStatusFailOther = 3,
};

BOOL BeginPvpBattleResponseProto_BeginPvpBattleStatusIsValidValue(BeginPvpBattleResponseProto_BeginPvpBattleStatus value);

typedef NS_ENUM(SInt32, EndPvpBattleResponseProto_EndPvpBattleStatus) {
  EndPvpBattleResponseProto_EndPvpBattleStatusSuccess = 1,
  EndPvpBattleResponseProto_EndPvpBattleStatusFailOther = 2,
  EndPvpBattleResponseProto_EndPvpBattleStatusFailBattleTookTooLong = 3,
};

BOOL EndPvpBattleResponseProto_EndPvpBattleStatusIsValidValue(EndPvpBattleResponseProto_EndPvpBattleStatus value);

typedef NS_ENUM(SInt32, SetDefendingMsgResponseProto_SetDefendingMsgStatus) {
  SetDefendingMsgResponseProto_SetDefendingMsgStatusSuccess = 1,
  SetDefendingMsgResponseProto_SetDefendingMsgStatusFailOther = 2,
};

BOOL SetDefendingMsgResponseProto_SetDefendingMsgStatusIsValidValue(SetDefendingMsgResponseProto_SetDefendingMsgStatus value);

typedef NS_ENUM(SInt32, CustomizePvpBoardObstacleResponseProto_CustomizePvpBoardObstacleStatus) {
  CustomizePvpBoardObstacleResponseProto_CustomizePvpBoardObstacleStatusSuccess = 1,
  CustomizePvpBoardObstacleResponseProto_CustomizePvpBoardObstacleStatusFailOther = 2,
};

BOOL CustomizePvpBoardObstacleResponseProto_CustomizePvpBoardObstacleStatusIsValidValue(CustomizePvpBoardObstacleResponseProto_CustomizePvpBoardObstacleStatus value);

typedef NS_ENUM(SInt32, RetrieveBattleReplayResponseProto_RetrieveBattleReplayStatus) {
  RetrieveBattleReplayResponseProto_RetrieveBattleReplayStatusSuccess = 1,
  RetrieveBattleReplayResponseProto_RetrieveBattleReplayStatusFailOther = 2,
};

BOOL RetrieveBattleReplayResponseProto_RetrieveBattleReplayStatusIsValidValue(RetrieveBattleReplayResponseProto_RetrieveBattleReplayStatus value);


@interface EventPvpRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface QueueUpRequestProto : PBGeneratedMessage {
@private
  BOOL hasClientTime_:1;
  BOOL hasAttacker_:1;
  int64_t clientTime;
  MinimumUserProto* attacker;
  NSMutableArray * mutableSeenUserUuidsList;
}
- (BOOL) hasAttacker;
- (BOOL) hasClientTime;
@property (readonly, strong) MinimumUserProto* attacker;
@property (readonly, strong) NSArray * seenUserUuidsList;
@property (readonly) int64_t clientTime;
- (NSString*)seenUserUuidsAtIndex:(NSUInteger)index;

+ (QueueUpRequestProto*) defaultInstance;
- (QueueUpRequestProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (QueueUpRequestProto_Builder*) builder;
+ (QueueUpRequestProto_Builder*) builder;
+ (QueueUpRequestProto_Builder*) builderWithPrototype:(QueueUpRequestProto*) prototype;
- (QueueUpRequestProto_Builder*) toBuilder;

+ (QueueUpRequestProto*) parseFromData:(NSData*) data;
+ (QueueUpRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (QueueUpRequestProto*) parseFromInputStream:(NSInputStream*) input;
+ (QueueUpRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (QueueUpRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (QueueUpRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface QueueUpRequestProto_Builder : PBGeneratedMessageBuilder {
@private
  QueueUpRequestProto* result;
}

- (QueueUpRequestProto*) defaultInstance;

- (QueueUpRequestProto_Builder*) clear;
- (QueueUpRequestProto_Builder*) clone;

- (QueueUpRequestProto*) build;
- (QueueUpRequestProto*) buildPartial;

- (QueueUpRequestProto_Builder*) mergeFrom:(QueueUpRequestProto*) other;
- (QueueUpRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (QueueUpRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAttacker;
- (MinimumUserProto*) attacker;
- (QueueUpRequestProto_Builder*) setAttacker:(MinimumUserProto*) value;
- (QueueUpRequestProto_Builder*) setAttacker_Builder:(MinimumUserProto_Builder*) builderForValue;
- (QueueUpRequestProto_Builder*) mergeAttacker:(MinimumUserProto*) value;
- (QueueUpRequestProto_Builder*) clearAttacker;

- (NSMutableArray *)seenUserUuidsList;
- (NSString*)seenUserUuidsAtIndex:(NSUInteger)index;
- (QueueUpRequestProto_Builder *)addSeenUserUuids:(NSString*)value;
- (QueueUpRequestProto_Builder *)addAllSeenUserUuids:(NSArray *)array;
- (QueueUpRequestProto_Builder *)clearSeenUserUuids;

- (BOOL) hasClientTime;
- (int64_t) clientTime;
- (QueueUpRequestProto_Builder*) setClientTime:(int64_t) value;
- (QueueUpRequestProto_Builder*) clearClientTime;
@end

@interface QueueUpResponseProto : PBGeneratedMessage {
@private
  BOOL hasAttacker_:1;
  BOOL hasStatus_:1;
  MinimumUserProto* attacker;
  QueueUpResponseProto_QueueUpStatus status;
  NSMutableArray * mutableDefenderInfoListList;
}
- (BOOL) hasAttacker;
- (BOOL) hasStatus;
@property (readonly, strong) MinimumUserProto* attacker;
@property (readonly, strong) NSArray * defenderInfoListList;
@property (readonly) QueueUpResponseProto_QueueUpStatus status;
- (PvpProto*)defenderInfoListAtIndex:(NSUInteger)index;

+ (QueueUpResponseProto*) defaultInstance;
- (QueueUpResponseProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (QueueUpResponseProto_Builder*) builder;
+ (QueueUpResponseProto_Builder*) builder;
+ (QueueUpResponseProto_Builder*) builderWithPrototype:(QueueUpResponseProto*) prototype;
- (QueueUpResponseProto_Builder*) toBuilder;

+ (QueueUpResponseProto*) parseFromData:(NSData*) data;
+ (QueueUpResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (QueueUpResponseProto*) parseFromInputStream:(NSInputStream*) input;
+ (QueueUpResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (QueueUpResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (QueueUpResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface QueueUpResponseProto_Builder : PBGeneratedMessageBuilder {
@private
  QueueUpResponseProto* result;
}

- (QueueUpResponseProto*) defaultInstance;

- (QueueUpResponseProto_Builder*) clear;
- (QueueUpResponseProto_Builder*) clone;

- (QueueUpResponseProto*) build;
- (QueueUpResponseProto*) buildPartial;

- (QueueUpResponseProto_Builder*) mergeFrom:(QueueUpResponseProto*) other;
- (QueueUpResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (QueueUpResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAttacker;
- (MinimumUserProto*) attacker;
- (QueueUpResponseProto_Builder*) setAttacker:(MinimumUserProto*) value;
- (QueueUpResponseProto_Builder*) setAttacker_Builder:(MinimumUserProto_Builder*) builderForValue;
- (QueueUpResponseProto_Builder*) mergeAttacker:(MinimumUserProto*) value;
- (QueueUpResponseProto_Builder*) clearAttacker;

- (NSMutableArray *)defenderInfoListList;
- (PvpProto*)defenderInfoListAtIndex:(NSUInteger)index;
- (QueueUpResponseProto_Builder *)addDefenderInfoList:(PvpProto*)value;
- (QueueUpResponseProto_Builder *)addAllDefenderInfoList:(NSArray *)array;
- (QueueUpResponseProto_Builder *)clearDefenderInfoList;

- (BOOL) hasStatus;
- (QueueUpResponseProto_QueueUpStatus) status;
- (QueueUpResponseProto_Builder*) setStatus:(QueueUpResponseProto_QueueUpStatus) value;
- (QueueUpResponseProto_Builder*) clearStatusList;
@end

@interface BeginPvpBattleRequestProto : PBGeneratedMessage {
@private
  BOOL hasExactingRevenge_:1;
  BOOL hasAttackStartTime_:1;
  BOOL hasPreviousBattleEndTime_:1;
  BOOL hasSenderElo_:1;
  BOOL hasSender_:1;
  BOOL hasEnemy_:1;
  BOOL exactingRevenge_:1;
  int64_t attackStartTime;
  int64_t previousBattleEndTime;
  int32_t senderElo;
  MinimumUserProto* sender;
  PvpProto* enemy;
}
- (BOOL) hasSender;
- (BOOL) hasSenderElo;
- (BOOL) hasAttackStartTime;
- (BOOL) hasEnemy;
- (BOOL) hasExactingRevenge;
- (BOOL) hasPreviousBattleEndTime;
@property (readonly, strong) MinimumUserProto* sender;
@property (readonly) int32_t senderElo;
@property (readonly) int64_t attackStartTime;
@property (readonly, strong) PvpProto* enemy;
- (BOOL) exactingRevenge;
@property (readonly) int64_t previousBattleEndTime;

+ (BeginPvpBattleRequestProto*) defaultInstance;
- (BeginPvpBattleRequestProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BeginPvpBattleRequestProto_Builder*) builder;
+ (BeginPvpBattleRequestProto_Builder*) builder;
+ (BeginPvpBattleRequestProto_Builder*) builderWithPrototype:(BeginPvpBattleRequestProto*) prototype;
- (BeginPvpBattleRequestProto_Builder*) toBuilder;

+ (BeginPvpBattleRequestProto*) parseFromData:(NSData*) data;
+ (BeginPvpBattleRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BeginPvpBattleRequestProto*) parseFromInputStream:(NSInputStream*) input;
+ (BeginPvpBattleRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BeginPvpBattleRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BeginPvpBattleRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BeginPvpBattleRequestProto_Builder : PBGeneratedMessageBuilder {
@private
  BeginPvpBattleRequestProto* result;
}

- (BeginPvpBattleRequestProto*) defaultInstance;

- (BeginPvpBattleRequestProto_Builder*) clear;
- (BeginPvpBattleRequestProto_Builder*) clone;

- (BeginPvpBattleRequestProto*) build;
- (BeginPvpBattleRequestProto*) buildPartial;

- (BeginPvpBattleRequestProto_Builder*) mergeFrom:(BeginPvpBattleRequestProto*) other;
- (BeginPvpBattleRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BeginPvpBattleRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSender;
- (MinimumUserProto*) sender;
- (BeginPvpBattleRequestProto_Builder*) setSender:(MinimumUserProto*) value;
- (BeginPvpBattleRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue;
- (BeginPvpBattleRequestProto_Builder*) mergeSender:(MinimumUserProto*) value;
- (BeginPvpBattleRequestProto_Builder*) clearSender;

- (BOOL) hasSenderElo;
- (int32_t) senderElo;
- (BeginPvpBattleRequestProto_Builder*) setSenderElo:(int32_t) value;
- (BeginPvpBattleRequestProto_Builder*) clearSenderElo;

- (BOOL) hasAttackStartTime;
- (int64_t) attackStartTime;
- (BeginPvpBattleRequestProto_Builder*) setAttackStartTime:(int64_t) value;
- (BeginPvpBattleRequestProto_Builder*) clearAttackStartTime;

- (BOOL) hasEnemy;
- (PvpProto*) enemy;
- (BeginPvpBattleRequestProto_Builder*) setEnemy:(PvpProto*) value;
- (BeginPvpBattleRequestProto_Builder*) setEnemy_Builder:(PvpProto_Builder*) builderForValue;
- (BeginPvpBattleRequestProto_Builder*) mergeEnemy:(PvpProto*) value;
- (BeginPvpBattleRequestProto_Builder*) clearEnemy;

- (BOOL) hasExactingRevenge;
- (BOOL) exactingRevenge;
- (BeginPvpBattleRequestProto_Builder*) setExactingRevenge:(BOOL) value;
- (BeginPvpBattleRequestProto_Builder*) clearExactingRevenge;

- (BOOL) hasPreviousBattleEndTime;
- (int64_t) previousBattleEndTime;
- (BeginPvpBattleRequestProto_Builder*) setPreviousBattleEndTime:(int64_t) value;
- (BeginPvpBattleRequestProto_Builder*) clearPreviousBattleEndTime;
@end

@interface BeginPvpBattleResponseProto : PBGeneratedMessage {
@private
  BOOL hasSender_:1;
  BOOL hasStatus_:1;
  MinimumUserProto* sender;
  BeginPvpBattleResponseProto_BeginPvpBattleStatus status;
}
- (BOOL) hasSender;
- (BOOL) hasStatus;
@property (readonly, strong) MinimumUserProto* sender;
@property (readonly) BeginPvpBattleResponseProto_BeginPvpBattleStatus status;

+ (BeginPvpBattleResponseProto*) defaultInstance;
- (BeginPvpBattleResponseProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BeginPvpBattleResponseProto_Builder*) builder;
+ (BeginPvpBattleResponseProto_Builder*) builder;
+ (BeginPvpBattleResponseProto_Builder*) builderWithPrototype:(BeginPvpBattleResponseProto*) prototype;
- (BeginPvpBattleResponseProto_Builder*) toBuilder;

+ (BeginPvpBattleResponseProto*) parseFromData:(NSData*) data;
+ (BeginPvpBattleResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BeginPvpBattleResponseProto*) parseFromInputStream:(NSInputStream*) input;
+ (BeginPvpBattleResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BeginPvpBattleResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BeginPvpBattleResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BeginPvpBattleResponseProto_Builder : PBGeneratedMessageBuilder {
@private
  BeginPvpBattleResponseProto* result;
}

- (BeginPvpBattleResponseProto*) defaultInstance;

- (BeginPvpBattleResponseProto_Builder*) clear;
- (BeginPvpBattleResponseProto_Builder*) clone;

- (BeginPvpBattleResponseProto*) build;
- (BeginPvpBattleResponseProto*) buildPartial;

- (BeginPvpBattleResponseProto_Builder*) mergeFrom:(BeginPvpBattleResponseProto*) other;
- (BeginPvpBattleResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BeginPvpBattleResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSender;
- (MinimumUserProto*) sender;
- (BeginPvpBattleResponseProto_Builder*) setSender:(MinimumUserProto*) value;
- (BeginPvpBattleResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue;
- (BeginPvpBattleResponseProto_Builder*) mergeSender:(MinimumUserProto*) value;
- (BeginPvpBattleResponseProto_Builder*) clearSender;

- (BOOL) hasStatus;
- (BeginPvpBattleResponseProto_BeginPvpBattleStatus) status;
- (BeginPvpBattleResponseProto_Builder*) setStatus:(BeginPvpBattleResponseProto_BeginPvpBattleStatus) value;
- (BeginPvpBattleResponseProto_Builder*) clearStatusList;
@end

@interface EndPvpBattleRequestProto : PBGeneratedMessage {
@private
  BOOL hasUserAttacked_:1;
  BOOL hasUserWon_:1;
  BOOL hasNuPvpDmgMultiplier_:1;
  BOOL hasClientTime_:1;
  BOOL hasOilChange_:1;
  BOOL hasCashChange_:1;
  BOOL hasDefenderUuid_:1;
  BOOL hasSender_:1;
  BOOL hasReplay_:1;
  BOOL userAttacked_:1;
  BOOL userWon_:1;
  Float32 nuPvpDmgMultiplier;
  int64_t clientTime;
  int32_t oilChange;
  int32_t cashChange;
  NSString* defenderUuid;
  MinimumUserProtoWithMaxResources* sender;
  NSData* replay;
  PBAppendableArray * mutableMonsterDropIdsList;
}
- (BOOL) hasSender;
- (BOOL) hasDefenderUuid;
- (BOOL) hasUserAttacked;
- (BOOL) hasUserWon;
- (BOOL) hasClientTime;
- (BOOL) hasOilChange;
- (BOOL) hasCashChange;
- (BOOL) hasNuPvpDmgMultiplier;
- (BOOL) hasReplay;
@property (readonly, strong) MinimumUserProtoWithMaxResources* sender;
@property (readonly, strong) NSString* defenderUuid;
- (BOOL) userAttacked;
- (BOOL) userWon;
@property (readonly) int64_t clientTime;
@property (readonly) int32_t oilChange;
@property (readonly) int32_t cashChange;
@property (readonly) Float32 nuPvpDmgMultiplier;
@property (readonly, strong) PBArray * monsterDropIdsList;
@property (readonly, strong) NSData* replay;
- (int32_t)monsterDropIdsAtIndex:(NSUInteger)index;

+ (EndPvpBattleRequestProto*) defaultInstance;
- (EndPvpBattleRequestProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (EndPvpBattleRequestProto_Builder*) builder;
+ (EndPvpBattleRequestProto_Builder*) builder;
+ (EndPvpBattleRequestProto_Builder*) builderWithPrototype:(EndPvpBattleRequestProto*) prototype;
- (EndPvpBattleRequestProto_Builder*) toBuilder;

+ (EndPvpBattleRequestProto*) parseFromData:(NSData*) data;
+ (EndPvpBattleRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (EndPvpBattleRequestProto*) parseFromInputStream:(NSInputStream*) input;
+ (EndPvpBattleRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (EndPvpBattleRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (EndPvpBattleRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface EndPvpBattleRequestProto_Builder : PBGeneratedMessageBuilder {
@private
  EndPvpBattleRequestProto* result;
}

- (EndPvpBattleRequestProto*) defaultInstance;

- (EndPvpBattleRequestProto_Builder*) clear;
- (EndPvpBattleRequestProto_Builder*) clone;

- (EndPvpBattleRequestProto*) build;
- (EndPvpBattleRequestProto*) buildPartial;

- (EndPvpBattleRequestProto_Builder*) mergeFrom:(EndPvpBattleRequestProto*) other;
- (EndPvpBattleRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (EndPvpBattleRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSender;
- (MinimumUserProtoWithMaxResources*) sender;
- (EndPvpBattleRequestProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value;
- (EndPvpBattleRequestProto_Builder*) setSender_Builder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue;
- (EndPvpBattleRequestProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value;
- (EndPvpBattleRequestProto_Builder*) clearSender;

- (BOOL) hasDefenderUuid;
- (NSString*) defenderUuid;
- (EndPvpBattleRequestProto_Builder*) setDefenderUuid:(NSString*) value;
- (EndPvpBattleRequestProto_Builder*) clearDefenderUuid;

- (BOOL) hasUserAttacked;
- (BOOL) userAttacked;
- (EndPvpBattleRequestProto_Builder*) setUserAttacked:(BOOL) value;
- (EndPvpBattleRequestProto_Builder*) clearUserAttacked;

- (BOOL) hasUserWon;
- (BOOL) userWon;
- (EndPvpBattleRequestProto_Builder*) setUserWon:(BOOL) value;
- (EndPvpBattleRequestProto_Builder*) clearUserWon;

- (BOOL) hasClientTime;
- (int64_t) clientTime;
- (EndPvpBattleRequestProto_Builder*) setClientTime:(int64_t) value;
- (EndPvpBattleRequestProto_Builder*) clearClientTime;

- (BOOL) hasOilChange;
- (int32_t) oilChange;
- (EndPvpBattleRequestProto_Builder*) setOilChange:(int32_t) value;
- (EndPvpBattleRequestProto_Builder*) clearOilChange;

- (BOOL) hasCashChange;
- (int32_t) cashChange;
- (EndPvpBattleRequestProto_Builder*) setCashChange:(int32_t) value;
- (EndPvpBattleRequestProto_Builder*) clearCashChange;

- (BOOL) hasNuPvpDmgMultiplier;
- (Float32) nuPvpDmgMultiplier;
- (EndPvpBattleRequestProto_Builder*) setNuPvpDmgMultiplier:(Float32) value;
- (EndPvpBattleRequestProto_Builder*) clearNuPvpDmgMultiplier;

- (PBAppendableArray *)monsterDropIdsList;
- (int32_t)monsterDropIdsAtIndex:(NSUInteger)index;
- (EndPvpBattleRequestProto_Builder *)addMonsterDropIds:(int32_t)value;
- (EndPvpBattleRequestProto_Builder *)addAllMonsterDropIds:(NSArray *)array;
- (EndPvpBattleRequestProto_Builder *)setMonsterDropIdsValues:(const int32_t *)values count:(NSUInteger)count;
- (EndPvpBattleRequestProto_Builder *)clearMonsterDropIds;

- (BOOL) hasReplay;
- (NSData*) replay;
- (EndPvpBattleRequestProto_Builder*) setReplay:(NSData*) value;
- (EndPvpBattleRequestProto_Builder*) clearReplay;
@end

@interface EndPvpBattleResponseProto : PBGeneratedMessage {
@private
  BOOL hasAttackerAttacked_:1;
  BOOL hasAttackerWon_:1;
  BOOL hasDefenderUuid_:1;
  BOOL hasSender_:1;
  BOOL hasBattleThatJustEnded_:1;
  BOOL hasStatsBefore_:1;
  BOOL hasStatsAfter_:1;
  BOOL hasStatus_:1;
  BOOL attackerAttacked_:1;
  BOOL attackerWon_:1;
  NSString* defenderUuid;
  MinimumUserProtoWithMaxResources* sender;
  PvpHistoryProto* battleThatJustEnded;
  UserPvpLeagueProto* statsBefore;
  UserPvpLeagueProto* statsAfter;
  EndPvpBattleResponseProto_EndPvpBattleStatus status;
  NSMutableArray * mutableUpdatedOrNewList;
}
- (BOOL) hasSender;
- (BOOL) hasDefenderUuid;
- (BOOL) hasAttackerAttacked;
- (BOOL) hasAttackerWon;
- (BOOL) hasStatus;
- (BOOL) hasBattleThatJustEnded;
- (BOOL) hasStatsBefore;
- (BOOL) hasStatsAfter;
@property (readonly, strong) MinimumUserProtoWithMaxResources* sender;
@property (readonly, strong) NSString* defenderUuid;
- (BOOL) attackerAttacked;
- (BOOL) attackerWon;
@property (readonly) EndPvpBattleResponseProto_EndPvpBattleStatus status;
@property (readonly, strong) NSArray * updatedOrNewList;
@property (readonly, strong) PvpHistoryProto* battleThatJustEnded;
@property (readonly, strong) UserPvpLeagueProto* statsBefore;
@property (readonly, strong) UserPvpLeagueProto* statsAfter;
- (FullUserMonsterProto*)updatedOrNewAtIndex:(NSUInteger)index;

+ (EndPvpBattleResponseProto*) defaultInstance;
- (EndPvpBattleResponseProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (EndPvpBattleResponseProto_Builder*) builder;
+ (EndPvpBattleResponseProto_Builder*) builder;
+ (EndPvpBattleResponseProto_Builder*) builderWithPrototype:(EndPvpBattleResponseProto*) prototype;
- (EndPvpBattleResponseProto_Builder*) toBuilder;

+ (EndPvpBattleResponseProto*) parseFromData:(NSData*) data;
+ (EndPvpBattleResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (EndPvpBattleResponseProto*) parseFromInputStream:(NSInputStream*) input;
+ (EndPvpBattleResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (EndPvpBattleResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (EndPvpBattleResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface EndPvpBattleResponseProto_Builder : PBGeneratedMessageBuilder {
@private
  EndPvpBattleResponseProto* result;
}

- (EndPvpBattleResponseProto*) defaultInstance;

- (EndPvpBattleResponseProto_Builder*) clear;
- (EndPvpBattleResponseProto_Builder*) clone;

- (EndPvpBattleResponseProto*) build;
- (EndPvpBattleResponseProto*) buildPartial;

- (EndPvpBattleResponseProto_Builder*) mergeFrom:(EndPvpBattleResponseProto*) other;
- (EndPvpBattleResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (EndPvpBattleResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSender;
- (MinimumUserProtoWithMaxResources*) sender;
- (EndPvpBattleResponseProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value;
- (EndPvpBattleResponseProto_Builder*) setSender_Builder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue;
- (EndPvpBattleResponseProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value;
- (EndPvpBattleResponseProto_Builder*) clearSender;

- (BOOL) hasDefenderUuid;
- (NSString*) defenderUuid;
- (EndPvpBattleResponseProto_Builder*) setDefenderUuid:(NSString*) value;
- (EndPvpBattleResponseProto_Builder*) clearDefenderUuid;

- (BOOL) hasAttackerAttacked;
- (BOOL) attackerAttacked;
- (EndPvpBattleResponseProto_Builder*) setAttackerAttacked:(BOOL) value;
- (EndPvpBattleResponseProto_Builder*) clearAttackerAttacked;

- (BOOL) hasAttackerWon;
- (BOOL) attackerWon;
- (EndPvpBattleResponseProto_Builder*) setAttackerWon:(BOOL) value;
- (EndPvpBattleResponseProto_Builder*) clearAttackerWon;

- (BOOL) hasStatus;
- (EndPvpBattleResponseProto_EndPvpBattleStatus) status;
- (EndPvpBattleResponseProto_Builder*) setStatus:(EndPvpBattleResponseProto_EndPvpBattleStatus) value;
- (EndPvpBattleResponseProto_Builder*) clearStatusList;

- (NSMutableArray *)updatedOrNewList;
- (FullUserMonsterProto*)updatedOrNewAtIndex:(NSUInteger)index;
- (EndPvpBattleResponseProto_Builder *)addUpdatedOrNew:(FullUserMonsterProto*)value;
- (EndPvpBattleResponseProto_Builder *)addAllUpdatedOrNew:(NSArray *)array;
- (EndPvpBattleResponseProto_Builder *)clearUpdatedOrNew;

- (BOOL) hasBattleThatJustEnded;
- (PvpHistoryProto*) battleThatJustEnded;
- (EndPvpBattleResponseProto_Builder*) setBattleThatJustEnded:(PvpHistoryProto*) value;
- (EndPvpBattleResponseProto_Builder*) setBattleThatJustEnded_Builder:(PvpHistoryProto_Builder*) builderForValue;
- (EndPvpBattleResponseProto_Builder*) mergeBattleThatJustEnded:(PvpHistoryProto*) value;
- (EndPvpBattleResponseProto_Builder*) clearBattleThatJustEnded;

- (BOOL) hasStatsBefore;
- (UserPvpLeagueProto*) statsBefore;
- (EndPvpBattleResponseProto_Builder*) setStatsBefore:(UserPvpLeagueProto*) value;
- (EndPvpBattleResponseProto_Builder*) setStatsBefore_Builder:(UserPvpLeagueProto_Builder*) builderForValue;
- (EndPvpBattleResponseProto_Builder*) mergeStatsBefore:(UserPvpLeagueProto*) value;
- (EndPvpBattleResponseProto_Builder*) clearStatsBefore;

- (BOOL) hasStatsAfter;
- (UserPvpLeagueProto*) statsAfter;
- (EndPvpBattleResponseProto_Builder*) setStatsAfter:(UserPvpLeagueProto*) value;
- (EndPvpBattleResponseProto_Builder*) setStatsAfter_Builder:(UserPvpLeagueProto_Builder*) builderForValue;
- (EndPvpBattleResponseProto_Builder*) mergeStatsAfter:(UserPvpLeagueProto*) value;
- (EndPvpBattleResponseProto_Builder*) clearStatsAfter;
@end

@interface SetDefendingMsgRequestProto : PBGeneratedMessage {
@private
  BOOL hasMsg_:1;
  BOOL hasSender_:1;
  NSString* msg;
  MinimumUserProto* sender;
}
- (BOOL) hasSender;
- (BOOL) hasMsg;
@property (readonly, strong) MinimumUserProto* sender;
@property (readonly, strong) NSString* msg;

+ (SetDefendingMsgRequestProto*) defaultInstance;
- (SetDefendingMsgRequestProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SetDefendingMsgRequestProto_Builder*) builder;
+ (SetDefendingMsgRequestProto_Builder*) builder;
+ (SetDefendingMsgRequestProto_Builder*) builderWithPrototype:(SetDefendingMsgRequestProto*) prototype;
- (SetDefendingMsgRequestProto_Builder*) toBuilder;

+ (SetDefendingMsgRequestProto*) parseFromData:(NSData*) data;
+ (SetDefendingMsgRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SetDefendingMsgRequestProto*) parseFromInputStream:(NSInputStream*) input;
+ (SetDefendingMsgRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SetDefendingMsgRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SetDefendingMsgRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SetDefendingMsgRequestProto_Builder : PBGeneratedMessageBuilder {
@private
  SetDefendingMsgRequestProto* result;
}

- (SetDefendingMsgRequestProto*) defaultInstance;

- (SetDefendingMsgRequestProto_Builder*) clear;
- (SetDefendingMsgRequestProto_Builder*) clone;

- (SetDefendingMsgRequestProto*) build;
- (SetDefendingMsgRequestProto*) buildPartial;

- (SetDefendingMsgRequestProto_Builder*) mergeFrom:(SetDefendingMsgRequestProto*) other;
- (SetDefendingMsgRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SetDefendingMsgRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSender;
- (MinimumUserProto*) sender;
- (SetDefendingMsgRequestProto_Builder*) setSender:(MinimumUserProto*) value;
- (SetDefendingMsgRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue;
- (SetDefendingMsgRequestProto_Builder*) mergeSender:(MinimumUserProto*) value;
- (SetDefendingMsgRequestProto_Builder*) clearSender;

- (BOOL) hasMsg;
- (NSString*) msg;
- (SetDefendingMsgRequestProto_Builder*) setMsg:(NSString*) value;
- (SetDefendingMsgRequestProto_Builder*) clearMsg;
@end

@interface SetDefendingMsgResponseProto : PBGeneratedMessage {
@private
  BOOL hasSender_:1;
  BOOL hasStatus_:1;
  MinimumUserProto* sender;
  SetDefendingMsgResponseProto_SetDefendingMsgStatus status;
}
- (BOOL) hasSender;
- (BOOL) hasStatus;
@property (readonly, strong) MinimumUserProto* sender;
@property (readonly) SetDefendingMsgResponseProto_SetDefendingMsgStatus status;

+ (SetDefendingMsgResponseProto*) defaultInstance;
- (SetDefendingMsgResponseProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SetDefendingMsgResponseProto_Builder*) builder;
+ (SetDefendingMsgResponseProto_Builder*) builder;
+ (SetDefendingMsgResponseProto_Builder*) builderWithPrototype:(SetDefendingMsgResponseProto*) prototype;
- (SetDefendingMsgResponseProto_Builder*) toBuilder;

+ (SetDefendingMsgResponseProto*) parseFromData:(NSData*) data;
+ (SetDefendingMsgResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SetDefendingMsgResponseProto*) parseFromInputStream:(NSInputStream*) input;
+ (SetDefendingMsgResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SetDefendingMsgResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SetDefendingMsgResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SetDefendingMsgResponseProto_Builder : PBGeneratedMessageBuilder {
@private
  SetDefendingMsgResponseProto* result;
}

- (SetDefendingMsgResponseProto*) defaultInstance;

- (SetDefendingMsgResponseProto_Builder*) clear;
- (SetDefendingMsgResponseProto_Builder*) clone;

- (SetDefendingMsgResponseProto*) build;
- (SetDefendingMsgResponseProto*) buildPartial;

- (SetDefendingMsgResponseProto_Builder*) mergeFrom:(SetDefendingMsgResponseProto*) other;
- (SetDefendingMsgResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SetDefendingMsgResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSender;
- (MinimumUserProto*) sender;
- (SetDefendingMsgResponseProto_Builder*) setSender:(MinimumUserProto*) value;
- (SetDefendingMsgResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue;
- (SetDefendingMsgResponseProto_Builder*) mergeSender:(MinimumUserProto*) value;
- (SetDefendingMsgResponseProto_Builder*) clearSender;

- (BOOL) hasStatus;
- (SetDefendingMsgResponseProto_SetDefendingMsgStatus) status;
- (SetDefendingMsgResponseProto_Builder*) setStatus:(SetDefendingMsgResponseProto_SetDefendingMsgStatus) value;
- (SetDefendingMsgResponseProto_Builder*) clearStatusList;
@end

@interface CustomizePvpBoardObstacleRequestProto : PBGeneratedMessage {
@private
  BOOL hasSender_:1;
  MinimumUserProto* sender;
  PBAppendableArray * mutableRemoveUpboIdsList;
  NSMutableArray * mutableNuOrUpdatedObstaclesList;
}
- (BOOL) hasSender;
@property (readonly, strong) MinimumUserProto* sender;
@property (readonly, strong) NSArray * nuOrUpdatedObstaclesList;
@property (readonly, strong) PBArray * removeUpboIdsList;
- (UserPvpBoardObstacleProto*)nuOrUpdatedObstaclesAtIndex:(NSUInteger)index;
- (int32_t)removeUpboIdsAtIndex:(NSUInteger)index;

+ (CustomizePvpBoardObstacleRequestProto*) defaultInstance;
- (CustomizePvpBoardObstacleRequestProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CustomizePvpBoardObstacleRequestProto_Builder*) builder;
+ (CustomizePvpBoardObstacleRequestProto_Builder*) builder;
+ (CustomizePvpBoardObstacleRequestProto_Builder*) builderWithPrototype:(CustomizePvpBoardObstacleRequestProto*) prototype;
- (CustomizePvpBoardObstacleRequestProto_Builder*) toBuilder;

+ (CustomizePvpBoardObstacleRequestProto*) parseFromData:(NSData*) data;
+ (CustomizePvpBoardObstacleRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CustomizePvpBoardObstacleRequestProto*) parseFromInputStream:(NSInputStream*) input;
+ (CustomizePvpBoardObstacleRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CustomizePvpBoardObstacleRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CustomizePvpBoardObstacleRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CustomizePvpBoardObstacleRequestProto_Builder : PBGeneratedMessageBuilder {
@private
  CustomizePvpBoardObstacleRequestProto* result;
}

- (CustomizePvpBoardObstacleRequestProto*) defaultInstance;

- (CustomizePvpBoardObstacleRequestProto_Builder*) clear;
- (CustomizePvpBoardObstacleRequestProto_Builder*) clone;

- (CustomizePvpBoardObstacleRequestProto*) build;
- (CustomizePvpBoardObstacleRequestProto*) buildPartial;

- (CustomizePvpBoardObstacleRequestProto_Builder*) mergeFrom:(CustomizePvpBoardObstacleRequestProto*) other;
- (CustomizePvpBoardObstacleRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CustomizePvpBoardObstacleRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSender;
- (MinimumUserProto*) sender;
- (CustomizePvpBoardObstacleRequestProto_Builder*) setSender:(MinimumUserProto*) value;
- (CustomizePvpBoardObstacleRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue;
- (CustomizePvpBoardObstacleRequestProto_Builder*) mergeSender:(MinimumUserProto*) value;
- (CustomizePvpBoardObstacleRequestProto_Builder*) clearSender;

- (NSMutableArray *)nuOrUpdatedObstaclesList;
- (UserPvpBoardObstacleProto*)nuOrUpdatedObstaclesAtIndex:(NSUInteger)index;
- (CustomizePvpBoardObstacleRequestProto_Builder *)addNuOrUpdatedObstacles:(UserPvpBoardObstacleProto*)value;
- (CustomizePvpBoardObstacleRequestProto_Builder *)addAllNuOrUpdatedObstacles:(NSArray *)array;
- (CustomizePvpBoardObstacleRequestProto_Builder *)clearNuOrUpdatedObstacles;

- (PBAppendableArray *)removeUpboIdsList;
- (int32_t)removeUpboIdsAtIndex:(NSUInteger)index;
- (CustomizePvpBoardObstacleRequestProto_Builder *)addRemoveUpboIds:(int32_t)value;
- (CustomizePvpBoardObstacleRequestProto_Builder *)addAllRemoveUpboIds:(NSArray *)array;
- (CustomizePvpBoardObstacleRequestProto_Builder *)setRemoveUpboIdsValues:(const int32_t *)values count:(NSUInteger)count;
- (CustomizePvpBoardObstacleRequestProto_Builder *)clearRemoveUpboIds;
@end

@interface CustomizePvpBoardObstacleResponseProto : PBGeneratedMessage {
@private
  BOOL hasSender_:1;
  BOOL hasStatus_:1;
  MinimumUserProto* sender;
  CustomizePvpBoardObstacleResponseProto_CustomizePvpBoardObstacleStatus status;
}
- (BOOL) hasSender;
- (BOOL) hasStatus;
@property (readonly, strong) MinimumUserProto* sender;
@property (readonly) CustomizePvpBoardObstacleResponseProto_CustomizePvpBoardObstacleStatus status;

+ (CustomizePvpBoardObstacleResponseProto*) defaultInstance;
- (CustomizePvpBoardObstacleResponseProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CustomizePvpBoardObstacleResponseProto_Builder*) builder;
+ (CustomizePvpBoardObstacleResponseProto_Builder*) builder;
+ (CustomizePvpBoardObstacleResponseProto_Builder*) builderWithPrototype:(CustomizePvpBoardObstacleResponseProto*) prototype;
- (CustomizePvpBoardObstacleResponseProto_Builder*) toBuilder;

+ (CustomizePvpBoardObstacleResponseProto*) parseFromData:(NSData*) data;
+ (CustomizePvpBoardObstacleResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CustomizePvpBoardObstacleResponseProto*) parseFromInputStream:(NSInputStream*) input;
+ (CustomizePvpBoardObstacleResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CustomizePvpBoardObstacleResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CustomizePvpBoardObstacleResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CustomizePvpBoardObstacleResponseProto_Builder : PBGeneratedMessageBuilder {
@private
  CustomizePvpBoardObstacleResponseProto* result;
}

- (CustomizePvpBoardObstacleResponseProto*) defaultInstance;

- (CustomizePvpBoardObstacleResponseProto_Builder*) clear;
- (CustomizePvpBoardObstacleResponseProto_Builder*) clone;

- (CustomizePvpBoardObstacleResponseProto*) build;
- (CustomizePvpBoardObstacleResponseProto*) buildPartial;

- (CustomizePvpBoardObstacleResponseProto_Builder*) mergeFrom:(CustomizePvpBoardObstacleResponseProto*) other;
- (CustomizePvpBoardObstacleResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CustomizePvpBoardObstacleResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSender;
- (MinimumUserProto*) sender;
- (CustomizePvpBoardObstacleResponseProto_Builder*) setSender:(MinimumUserProto*) value;
- (CustomizePvpBoardObstacleResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue;
- (CustomizePvpBoardObstacleResponseProto_Builder*) mergeSender:(MinimumUserProto*) value;
- (CustomizePvpBoardObstacleResponseProto_Builder*) clearSender;

- (BOOL) hasStatus;
- (CustomizePvpBoardObstacleResponseProto_CustomizePvpBoardObstacleStatus) status;
- (CustomizePvpBoardObstacleResponseProto_Builder*) setStatus:(CustomizePvpBoardObstacleResponseProto_CustomizePvpBoardObstacleStatus) value;
- (CustomizePvpBoardObstacleResponseProto_Builder*) clearStatusList;
@end

@interface RetrieveBattleReplayRequestProto : PBGeneratedMessage {
@private
  BOOL hasReplayId_:1;
  BOOL hasSender_:1;
  NSString* replayId;
  MinimumUserProto* sender;
}
- (BOOL) hasSender;
- (BOOL) hasReplayId;
@property (readonly, strong) MinimumUserProto* sender;
@property (readonly, strong) NSString* replayId;

+ (RetrieveBattleReplayRequestProto*) defaultInstance;
- (RetrieveBattleReplayRequestProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RetrieveBattleReplayRequestProto_Builder*) builder;
+ (RetrieveBattleReplayRequestProto_Builder*) builder;
+ (RetrieveBattleReplayRequestProto_Builder*) builderWithPrototype:(RetrieveBattleReplayRequestProto*) prototype;
- (RetrieveBattleReplayRequestProto_Builder*) toBuilder;

+ (RetrieveBattleReplayRequestProto*) parseFromData:(NSData*) data;
+ (RetrieveBattleReplayRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RetrieveBattleReplayRequestProto*) parseFromInputStream:(NSInputStream*) input;
+ (RetrieveBattleReplayRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RetrieveBattleReplayRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RetrieveBattleReplayRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RetrieveBattleReplayRequestProto_Builder : PBGeneratedMessageBuilder {
@private
  RetrieveBattleReplayRequestProto* result;
}

- (RetrieveBattleReplayRequestProto*) defaultInstance;

- (RetrieveBattleReplayRequestProto_Builder*) clear;
- (RetrieveBattleReplayRequestProto_Builder*) clone;

- (RetrieveBattleReplayRequestProto*) build;
- (RetrieveBattleReplayRequestProto*) buildPartial;

- (RetrieveBattleReplayRequestProto_Builder*) mergeFrom:(RetrieveBattleReplayRequestProto*) other;
- (RetrieveBattleReplayRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RetrieveBattleReplayRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSender;
- (MinimumUserProto*) sender;
- (RetrieveBattleReplayRequestProto_Builder*) setSender:(MinimumUserProto*) value;
- (RetrieveBattleReplayRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue;
- (RetrieveBattleReplayRequestProto_Builder*) mergeSender:(MinimumUserProto*) value;
- (RetrieveBattleReplayRequestProto_Builder*) clearSender;

- (BOOL) hasReplayId;
- (NSString*) replayId;
- (RetrieveBattleReplayRequestProto_Builder*) setReplayId:(NSString*) value;
- (RetrieveBattleReplayRequestProto_Builder*) clearReplayId;
@end

@interface RetrieveBattleReplayResponseProto : PBGeneratedMessage {
@private
  BOOL hasSender_:1;
  BOOL hasBrp_:1;
  BOOL hasStatus_:1;
  MinimumUserProto* sender;
  BattleReplayProto* brp;
  RetrieveBattleReplayResponseProto_RetrieveBattleReplayStatus status;
}
- (BOOL) hasSender;
- (BOOL) hasBrp;
- (BOOL) hasStatus;
@property (readonly, strong) MinimumUserProto* sender;
@property (readonly, strong) BattleReplayProto* brp;
@property (readonly) RetrieveBattleReplayResponseProto_RetrieveBattleReplayStatus status;

+ (RetrieveBattleReplayResponseProto*) defaultInstance;
- (RetrieveBattleReplayResponseProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RetrieveBattleReplayResponseProto_Builder*) builder;
+ (RetrieveBattleReplayResponseProto_Builder*) builder;
+ (RetrieveBattleReplayResponseProto_Builder*) builderWithPrototype:(RetrieveBattleReplayResponseProto*) prototype;
- (RetrieveBattleReplayResponseProto_Builder*) toBuilder;

+ (RetrieveBattleReplayResponseProto*) parseFromData:(NSData*) data;
+ (RetrieveBattleReplayResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RetrieveBattleReplayResponseProto*) parseFromInputStream:(NSInputStream*) input;
+ (RetrieveBattleReplayResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RetrieveBattleReplayResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RetrieveBattleReplayResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RetrieveBattleReplayResponseProto_Builder : PBGeneratedMessageBuilder {
@private
  RetrieveBattleReplayResponseProto* result;
}

- (RetrieveBattleReplayResponseProto*) defaultInstance;

- (RetrieveBattleReplayResponseProto_Builder*) clear;
- (RetrieveBattleReplayResponseProto_Builder*) clone;

- (RetrieveBattleReplayResponseProto*) build;
- (RetrieveBattleReplayResponseProto*) buildPartial;

- (RetrieveBattleReplayResponseProto_Builder*) mergeFrom:(RetrieveBattleReplayResponseProto*) other;
- (RetrieveBattleReplayResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RetrieveBattleReplayResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSender;
- (MinimumUserProto*) sender;
- (RetrieveBattleReplayResponseProto_Builder*) setSender:(MinimumUserProto*) value;
- (RetrieveBattleReplayResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue;
- (RetrieveBattleReplayResponseProto_Builder*) mergeSender:(MinimumUserProto*) value;
- (RetrieveBattleReplayResponseProto_Builder*) clearSender;

- (BOOL) hasBrp;
- (BattleReplayProto*) brp;
- (RetrieveBattleReplayResponseProto_Builder*) setBrp:(BattleReplayProto*) value;
- (RetrieveBattleReplayResponseProto_Builder*) setBrp_Builder:(BattleReplayProto_Builder*) builderForValue;
- (RetrieveBattleReplayResponseProto_Builder*) mergeBrp:(BattleReplayProto*) value;
- (RetrieveBattleReplayResponseProto_Builder*) clearBrp;

- (BOOL) hasStatus;
- (RetrieveBattleReplayResponseProto_RetrieveBattleReplayStatus) status;
- (RetrieveBattleReplayResponseProto_Builder*) setStatus:(RetrieveBattleReplayResponseProto_RetrieveBattleReplayStatus) value;
- (RetrieveBattleReplayResponseProto_Builder*) clearStatusList;
@end


// @@protoc_insertion_point(global_scope)
