// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Chat_info.pb.h"
// @@protoc_insertion_point(imports)

@implementation ChatInfoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ChatInfoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL TranslateLanguageIsValidValue(TranslateLanguage value) {
  switch (value) {
    case TranslateLanguageArabic:
    case TranslateLanguageEnglish:
    case TranslateLanguageFrench:
    case TranslateLanguageGerman:
    case TranslateLanguageSpanish:
    case TranslateLanguageRussian:
    case TranslateLanguageNoTranslation:
      return YES;
    default:
      return NO;
  }
}
BOOL ChatRoomTagIsValidValue(ChatRoomTag value) {
  switch (value) {
    case ChatRoomTagGlobalRoom:
    case ChatRoomTagClanRoom:
    case ChatRoomTagPrivateRoom:
    case ChatRoomTagGroupRoom:
      return YES;
    default:
      return NO;
  }
}
@interface ChatRoomProto ()
@property (strong) NSString* roomuuid;
@property ChatRoomTag tag;
@property (strong) NSMutableArray * mutableUserList;
@property (strong) NSMutableArray * mutableLastmessageList;
@property (strong) NSString* authtoken;
@property (strong) NSString* roomname;
@property (strong) NSString* useruuid;
@end

@implementation ChatRoomProto

- (BOOL) hasRoomuuid {
  return !!hasRoomuuid_;
}
- (void) setHasRoomuuid:(BOOL) value_ {
  hasRoomuuid_ = !!value_;
}
@synthesize roomuuid;
- (BOOL) hasTag {
  return !!hasTag_;
}
- (void) setHasTag:(BOOL) value_ {
  hasTag_ = !!value_;
}
@synthesize tag;
@synthesize mutableUserList;
@dynamic userList;
@synthesize mutableLastmessageList;
@dynamic lastmessageList;
- (BOOL) hasAuthtoken {
  return !!hasAuthtoken_;
}
- (void) setHasAuthtoken:(BOOL) value_ {
  hasAuthtoken_ = !!value_;
}
@synthesize authtoken;
- (BOOL) hasRoomname {
  return !!hasRoomname_;
}
- (void) setHasRoomname:(BOOL) value_ {
  hasRoomname_ = !!value_;
}
@synthesize roomname;
- (BOOL) hasUseruuid {
  return !!hasUseruuid_;
}
- (void) setHasUseruuid:(BOOL) value_ {
  hasUseruuid_ = !!value_;
}
@synthesize useruuid;
- (id) init {
  if ((self = [super init])) {
    self.roomuuid = @"";
    self.tag = ChatRoomTagGlobalRoom;
    self.authtoken = @"";
    self.roomname = @"";
    self.useruuid = @"";
  }
  return self;
}
static ChatRoomProto* defaultChatRoomProtoInstance = nil;
+ (void) initialize {
  if (self == [ChatRoomProto class]) {
    defaultChatRoomProtoInstance = [[ChatRoomProto alloc] init];
  }
}
+ (ChatRoomProto*) defaultInstance {
  return defaultChatRoomProtoInstance;
}
- (ChatRoomProto*) defaultInstance {
  return defaultChatRoomProtoInstance;
}
- (NSArray *)userList {
  return mutableUserList;
}
- (ChatUserProto*)userAtIndex:(NSUInteger)index {
  return [mutableUserList objectAtIndex:index];
}
- (NSArray *)lastmessageList {
  return mutableLastmessageList;
}
- (ChatMessageProto*)lastmessageAtIndex:(NSUInteger)index {
  return [mutableLastmessageList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRoomuuid) {
    [output writeString:1 value:self.roomuuid];
  }
  if (self.hasTag) {
    [output writeEnum:2 value:self.tag];
  }
  [self.userList enumerateObjectsUsingBlock:^(ChatUserProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.lastmessageList enumerateObjectsUsingBlock:^(ChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  if (self.hasAuthtoken) {
    [output writeString:5 value:self.authtoken];
  }
  if (self.hasRoomname) {
    [output writeString:6 value:self.roomname];
  }
  if (self.hasUseruuid) {
    [output writeString:7 value:self.useruuid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRoomuuid) {
    size_ += computeStringSize(1, self.roomuuid);
  }
  if (self.hasTag) {
    size_ += computeEnumSize(2, self.tag);
  }
  [self.userList enumerateObjectsUsingBlock:^(ChatUserProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  [self.lastmessageList enumerateObjectsUsingBlock:^(ChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  if (self.hasAuthtoken) {
    size_ += computeStringSize(5, self.authtoken);
  }
  if (self.hasRoomname) {
    size_ += computeStringSize(6, self.roomname);
  }
  if (self.hasUseruuid) {
    size_ += computeStringSize(7, self.useruuid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ChatRoomProto*) parseFromData:(NSData*) data {
  return (ChatRoomProto*)[[[ChatRoomProto builder] mergeFromData:data] build];
}
+ (ChatRoomProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatRoomProto*)[[[ChatRoomProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChatRoomProto*) parseFromInputStream:(NSInputStream*) input {
  return (ChatRoomProto*)[[[ChatRoomProto builder] mergeFromInputStream:input] build];
}
+ (ChatRoomProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatRoomProto*)[[[ChatRoomProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChatRoomProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChatRoomProto*)[[[ChatRoomProto builder] mergeFromCodedInputStream:input] build];
}
+ (ChatRoomProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatRoomProto*)[[[ChatRoomProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChatRoomProto_Builder*) builder {
  return [[ChatRoomProto_Builder alloc] init];
}
+ (ChatRoomProto_Builder*) builderWithPrototype:(ChatRoomProto*) prototype {
  return [[ChatRoomProto builder] mergeFrom:prototype];
}
- (ChatRoomProto_Builder*) builder {
  return [ChatRoomProto builder];
}
- (ChatRoomProto_Builder*) toBuilder {
  return [ChatRoomProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRoomuuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"roomuuid", self.roomuuid];
  }
  if (self.hasTag) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tag", [NSNumber numberWithInteger:self.tag]];
  }
  [self.userList enumerateObjectsUsingBlock:^(ChatUserProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.lastmessageList enumerateObjectsUsingBlock:^(ChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"lastmessage"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasAuthtoken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authtoken", self.authtoken];
  }
  if (self.hasRoomname) {
    [output appendFormat:@"%@%@: %@\n", indent, @"roomname", self.roomname];
  }
  if (self.hasUseruuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"useruuid", self.useruuid];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ChatRoomProto class]]) {
    return NO;
  }
  ChatRoomProto *otherMessage = other;
  return
      self.hasRoomuuid == otherMessage.hasRoomuuid &&
      (!self.hasRoomuuid || [self.roomuuid isEqual:otherMessage.roomuuid]) &&
      self.hasTag == otherMessage.hasTag &&
      (!self.hasTag || self.tag == otherMessage.tag) &&
      [self.userList isEqualToArray:otherMessage.userList] &&
      [self.lastmessageList isEqualToArray:otherMessage.lastmessageList] &&
      self.hasAuthtoken == otherMessage.hasAuthtoken &&
      (!self.hasAuthtoken || [self.authtoken isEqual:otherMessage.authtoken]) &&
      self.hasRoomname == otherMessage.hasRoomname &&
      (!self.hasRoomname || [self.roomname isEqual:otherMessage.roomname]) &&
      self.hasUseruuid == otherMessage.hasUseruuid &&
      (!self.hasUseruuid || [self.useruuid isEqual:otherMessage.useruuid]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasRoomuuid) {
    hashCode = hashCode * 31 + [self.roomuuid hash];
  }
  if (self.hasTag) {
    hashCode = hashCode * 31 + self.tag;
  }
  [self.userList enumerateObjectsUsingBlock:^(ChatUserProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.lastmessageList enumerateObjectsUsingBlock:^(ChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasAuthtoken) {
    hashCode = hashCode * 31 + [self.authtoken hash];
  }
  if (self.hasRoomname) {
    hashCode = hashCode * 31 + [self.roomname hash];
  }
  if (self.hasUseruuid) {
    hashCode = hashCode * 31 + [self.useruuid hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ChatRoomProto_Builder()
@property (strong) ChatRoomProto* result;
@end

@implementation ChatRoomProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ChatRoomProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChatRoomProto_Builder*) clear {
  self.result = [[ChatRoomProto alloc] init];
  return self;
}
- (ChatRoomProto_Builder*) clone {
  return [ChatRoomProto builderWithPrototype:result];
}
- (ChatRoomProto*) defaultInstance {
  return [ChatRoomProto defaultInstance];
}
- (ChatRoomProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChatRoomProto*) buildPartial {
  ChatRoomProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ChatRoomProto_Builder*) mergeFrom:(ChatRoomProto*) other {
  if (other == [ChatRoomProto defaultInstance]) {
    return self;
  }
  if (other.hasRoomuuid) {
    [self setRoomuuid:other.roomuuid];
  }
  if (other.hasTag) {
    [self setTag:other.tag];
  }
  if (other.mutableUserList.count > 0) {
    if (result.mutableUserList == nil) {
      result.mutableUserList = [[NSMutableArray alloc] initWithArray:other.mutableUserList];
    } else {
      [result.mutableUserList addObjectsFromArray:other.mutableUserList];
    }
  }
  if (other.mutableLastmessageList.count > 0) {
    if (result.mutableLastmessageList == nil) {
      result.mutableLastmessageList = [[NSMutableArray alloc] initWithArray:other.mutableLastmessageList];
    } else {
      [result.mutableLastmessageList addObjectsFromArray:other.mutableLastmessageList];
    }
  }
  if (other.hasAuthtoken) {
    [self setAuthtoken:other.authtoken];
  }
  if (other.hasRoomname) {
    [self setRoomname:other.roomname];
  }
  if (other.hasUseruuid) {
    [self setUseruuid:other.useruuid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChatRoomProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChatRoomProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setRoomuuid:[input readString]];
        break;
      }
      case 16: {
        ChatRoomTag value = (ChatRoomTag)[input readEnum];
        if (ChatRoomTagIsValidValue(value)) {
          [self setTag:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        ChatUserProto_Builder* subBuilder = [ChatUserProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUser:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        ChatMessageProto_Builder* subBuilder = [ChatMessageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addLastmessage:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        [self setAuthtoken:[input readString]];
        break;
      }
      case 50: {
        [self setRoomname:[input readString]];
        break;
      }
      case 58: {
        [self setUseruuid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRoomuuid {
  return result.hasRoomuuid;
}
- (NSString*) roomuuid {
  return result.roomuuid;
}
- (ChatRoomProto_Builder*) setRoomuuid:(NSString*) value {
  result.hasRoomuuid = YES;
  result.roomuuid = value;
  return self;
}
- (ChatRoomProto_Builder*) clearRoomuuid {
  result.hasRoomuuid = NO;
  result.roomuuid = @"";
  return self;
}
- (BOOL) hasTag {
  return result.hasTag;
}
- (ChatRoomTag) tag {
  return result.tag;
}
- (ChatRoomProto_Builder*) setTag:(ChatRoomTag) value {
  result.hasTag = YES;
  result.tag = value;
  return self;
}
- (ChatRoomProto_Builder*) clearTagList {
  result.hasTag = NO;
  result.tag = ChatRoomTagGlobalRoom;
  return self;
}
- (NSMutableArray *)userList {
  return result.mutableUserList;
}
- (ChatUserProto*)userAtIndex:(NSUInteger)index {
  return [result userAtIndex:index];
}
- (ChatRoomProto_Builder *)addUser:(ChatUserProto*)value {
  if (result.mutableUserList == nil) {
    result.mutableUserList = [[NSMutableArray alloc]init];
  }
  [result.mutableUserList addObject:value];
  return self;
}
- (ChatRoomProto_Builder *)addAllUser:(NSArray *)array {
  if (result.mutableUserList == nil) {
    result.mutableUserList = [NSMutableArray array];
  }
  [result.mutableUserList addObjectsFromArray:array];
  return self;
}
- (ChatRoomProto_Builder *)clearUser {
  result.mutableUserList = nil;
  return self;
}
- (NSMutableArray *)lastmessageList {
  return result.mutableLastmessageList;
}
- (ChatMessageProto*)lastmessageAtIndex:(NSUInteger)index {
  return [result lastmessageAtIndex:index];
}
- (ChatRoomProto_Builder *)addLastmessage:(ChatMessageProto*)value {
  if (result.mutableLastmessageList == nil) {
    result.mutableLastmessageList = [[NSMutableArray alloc]init];
  }
  [result.mutableLastmessageList addObject:value];
  return self;
}
- (ChatRoomProto_Builder *)addAllLastmessage:(NSArray *)array {
  if (result.mutableLastmessageList == nil) {
    result.mutableLastmessageList = [NSMutableArray array];
  }
  [result.mutableLastmessageList addObjectsFromArray:array];
  return self;
}
- (ChatRoomProto_Builder *)clearLastmessage {
  result.mutableLastmessageList = nil;
  return self;
}
- (BOOL) hasAuthtoken {
  return result.hasAuthtoken;
}
- (NSString*) authtoken {
  return result.authtoken;
}
- (ChatRoomProto_Builder*) setAuthtoken:(NSString*) value {
  result.hasAuthtoken = YES;
  result.authtoken = value;
  return self;
}
- (ChatRoomProto_Builder*) clearAuthtoken {
  result.hasAuthtoken = NO;
  result.authtoken = @"";
  return self;
}
- (BOOL) hasRoomname {
  return result.hasRoomname;
}
- (NSString*) roomname {
  return result.roomname;
}
- (ChatRoomProto_Builder*) setRoomname:(NSString*) value {
  result.hasRoomname = YES;
  result.roomname = value;
  return self;
}
- (ChatRoomProto_Builder*) clearRoomname {
  result.hasRoomname = NO;
  result.roomname = @"";
  return self;
}
- (BOOL) hasUseruuid {
  return result.hasUseruuid;
}
- (NSString*) useruuid {
  return result.useruuid;
}
- (ChatRoomProto_Builder*) setUseruuid:(NSString*) value {
  result.hasUseruuid = YES;
  result.useruuid = value;
  return self;
}
- (ChatRoomProto_Builder*) clearUseruuid {
  result.hasUseruuid = NO;
  result.useruuid = @"";
  return self;
}
@end

@interface ChatUserProto ()
@property (strong) NSString* useruuid;
@property TranslateLanguage language;
@property (strong) ChatUserDetailsProto* userdetails;
@property int64_t lastseentimestamp;
@end

@implementation ChatUserProto

- (BOOL) hasUseruuid {
  return !!hasUseruuid_;
}
- (void) setHasUseruuid:(BOOL) value_ {
  hasUseruuid_ = !!value_;
}
@synthesize useruuid;
- (BOOL) hasLanguage {
  return !!hasLanguage_;
}
- (void) setHasLanguage:(BOOL) value_ {
  hasLanguage_ = !!value_;
}
@synthesize language;
- (BOOL) hasUserdetails {
  return !!hasUserdetails_;
}
- (void) setHasUserdetails:(BOOL) value_ {
  hasUserdetails_ = !!value_;
}
@synthesize userdetails;
- (BOOL) hasLastseentimestamp {
  return !!hasLastseentimestamp_;
}
- (void) setHasLastseentimestamp:(BOOL) value_ {
  hasLastseentimestamp_ = !!value_;
}
@synthesize lastseentimestamp;
- (id) init {
  if ((self = [super init])) {
    self.useruuid = @"";
    self.language = TranslateLanguageArabic;
    self.userdetails = [ChatUserDetailsProto defaultInstance];
    self.lastseentimestamp = 0L;
  }
  return self;
}
static ChatUserProto* defaultChatUserProtoInstance = nil;
+ (void) initialize {
  if (self == [ChatUserProto class]) {
    defaultChatUserProtoInstance = [[ChatUserProto alloc] init];
  }
}
+ (ChatUserProto*) defaultInstance {
  return defaultChatUserProtoInstance;
}
- (ChatUserProto*) defaultInstance {
  return defaultChatUserProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUseruuid) {
    [output writeString:1 value:self.useruuid];
  }
  if (self.hasLanguage) {
    [output writeEnum:2 value:self.language];
  }
  if (self.hasUserdetails) {
    [output writeMessage:4 value:self.userdetails];
  }
  if (self.hasLastseentimestamp) {
    [output writeInt64:5 value:self.lastseentimestamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUseruuid) {
    size_ += computeStringSize(1, self.useruuid);
  }
  if (self.hasLanguage) {
    size_ += computeEnumSize(2, self.language);
  }
  if (self.hasUserdetails) {
    size_ += computeMessageSize(4, self.userdetails);
  }
  if (self.hasLastseentimestamp) {
    size_ += computeInt64Size(5, self.lastseentimestamp);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ChatUserProto*) parseFromData:(NSData*) data {
  return (ChatUserProto*)[[[ChatUserProto builder] mergeFromData:data] build];
}
+ (ChatUserProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatUserProto*)[[[ChatUserProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChatUserProto*) parseFromInputStream:(NSInputStream*) input {
  return (ChatUserProto*)[[[ChatUserProto builder] mergeFromInputStream:input] build];
}
+ (ChatUserProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatUserProto*)[[[ChatUserProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChatUserProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChatUserProto*)[[[ChatUserProto builder] mergeFromCodedInputStream:input] build];
}
+ (ChatUserProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatUserProto*)[[[ChatUserProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChatUserProto_Builder*) builder {
  return [[ChatUserProto_Builder alloc] init];
}
+ (ChatUserProto_Builder*) builderWithPrototype:(ChatUserProto*) prototype {
  return [[ChatUserProto builder] mergeFrom:prototype];
}
- (ChatUserProto_Builder*) builder {
  return [ChatUserProto builder];
}
- (ChatUserProto_Builder*) toBuilder {
  return [ChatUserProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUseruuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"useruuid", self.useruuid];
  }
  if (self.hasLanguage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"language", [NSNumber numberWithInteger:self.language]];
  }
  if (self.hasUserdetails) {
    [output appendFormat:@"%@%@ {\n", indent, @"userdetails"];
    [self.userdetails writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasLastseentimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastseentimestamp", [NSNumber numberWithLongLong:self.lastseentimestamp]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ChatUserProto class]]) {
    return NO;
  }
  ChatUserProto *otherMessage = other;
  return
      self.hasUseruuid == otherMessage.hasUseruuid &&
      (!self.hasUseruuid || [self.useruuid isEqual:otherMessage.useruuid]) &&
      self.hasLanguage == otherMessage.hasLanguage &&
      (!self.hasLanguage || self.language == otherMessage.language) &&
      self.hasUserdetails == otherMessage.hasUserdetails &&
      (!self.hasUserdetails || [self.userdetails isEqual:otherMessage.userdetails]) &&
      self.hasLastseentimestamp == otherMessage.hasLastseentimestamp &&
      (!self.hasLastseentimestamp || self.lastseentimestamp == otherMessage.lastseentimestamp) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUseruuid) {
    hashCode = hashCode * 31 + [self.useruuid hash];
  }
  if (self.hasLanguage) {
    hashCode = hashCode * 31 + self.language;
  }
  if (self.hasUserdetails) {
    hashCode = hashCode * 31 + [self.userdetails hash];
  }
  if (self.hasLastseentimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastseentimestamp] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ChatUserProto_Builder()
@property (strong) ChatUserProto* result;
@end

@implementation ChatUserProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ChatUserProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChatUserProto_Builder*) clear {
  self.result = [[ChatUserProto alloc] init];
  return self;
}
- (ChatUserProto_Builder*) clone {
  return [ChatUserProto builderWithPrototype:result];
}
- (ChatUserProto*) defaultInstance {
  return [ChatUserProto defaultInstance];
}
- (ChatUserProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChatUserProto*) buildPartial {
  ChatUserProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ChatUserProto_Builder*) mergeFrom:(ChatUserProto*) other {
  if (other == [ChatUserProto defaultInstance]) {
    return self;
  }
  if (other.hasUseruuid) {
    [self setUseruuid:other.useruuid];
  }
  if (other.hasLanguage) {
    [self setLanguage:other.language];
  }
  if (other.hasUserdetails) {
    [self mergeUserdetails:other.userdetails];
  }
  if (other.hasLastseentimestamp) {
    [self setLastseentimestamp:other.lastseentimestamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChatUserProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChatUserProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUseruuid:[input readString]];
        break;
      }
      case 16: {
        TranslateLanguage value = (TranslateLanguage)[input readEnum];
        if (TranslateLanguageIsValidValue(value)) {
          [self setLanguage:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 34: {
        ChatUserDetailsProto_Builder* subBuilder = [ChatUserDetailsProto builder];
        if (self.hasUserdetails) {
          [subBuilder mergeFrom:self.userdetails];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserdetails:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setLastseentimestamp:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUseruuid {
  return result.hasUseruuid;
}
- (NSString*) useruuid {
  return result.useruuid;
}
- (ChatUserProto_Builder*) setUseruuid:(NSString*) value {
  result.hasUseruuid = YES;
  result.useruuid = value;
  return self;
}
- (ChatUserProto_Builder*) clearUseruuid {
  result.hasUseruuid = NO;
  result.useruuid = @"";
  return self;
}
- (BOOL) hasLanguage {
  return result.hasLanguage;
}
- (TranslateLanguage) language {
  return result.language;
}
- (ChatUserProto_Builder*) setLanguage:(TranslateLanguage) value {
  result.hasLanguage = YES;
  result.language = value;
  return self;
}
- (ChatUserProto_Builder*) clearLanguageList {
  result.hasLanguage = NO;
  result.language = TranslateLanguageArabic;
  return self;
}
- (BOOL) hasUserdetails {
  return result.hasUserdetails;
}
- (ChatUserDetailsProto*) userdetails {
  return result.userdetails;
}
- (ChatUserProto_Builder*) setUserdetails:(ChatUserDetailsProto*) value {
  result.hasUserdetails = YES;
  result.userdetails = value;
  return self;
}
- (ChatUserProto_Builder*) setUserdetails_Builder:(ChatUserDetailsProto_Builder*) builderForValue {
  return [self setUserdetails:[builderForValue build]];
}
- (ChatUserProto_Builder*) mergeUserdetails:(ChatUserDetailsProto*) value {
  if (result.hasUserdetails &&
      result.userdetails != [ChatUserDetailsProto defaultInstance]) {
    result.userdetails =
      [[[ChatUserDetailsProto builderWithPrototype:result.userdetails] mergeFrom:value] buildPartial];
  } else {
    result.userdetails = value;
  }
  result.hasUserdetails = YES;
  return self;
}
- (ChatUserProto_Builder*) clearUserdetails {
  result.hasUserdetails = NO;
  result.userdetails = [ChatUserDetailsProto defaultInstance];
  return self;
}
- (BOOL) hasLastseentimestamp {
  return result.hasLastseentimestamp;
}
- (int64_t) lastseentimestamp {
  return result.lastseentimestamp;
}
- (ChatUserProto_Builder*) setLastseentimestamp:(int64_t) value {
  result.hasLastseentimestamp = YES;
  result.lastseentimestamp = value;
  return self;
}
- (ChatUserProto_Builder*) clearLastseentimestamp {
  result.hasLastseentimestamp = NO;
  result.lastseentimestamp = 0L;
  return self;
}
@end

@interface ChatMessageProto ()
@property (strong) NSString* messageuuid;
@property (strong) ChatUserDetailsProto* userdetails;
@property TranslateLanguage language;
@property (strong) NSString* content;
@property (strong) NSMutableArray * mutableTranslatedcontentList;
@property int64_t timestamp;
@property (strong) NSMutableArray * mutableReaduseruuidsList;
@end

@implementation ChatMessageProto

- (BOOL) hasMessageuuid {
  return !!hasMessageuuid_;
}
- (void) setHasMessageuuid:(BOOL) value_ {
  hasMessageuuid_ = !!value_;
}
@synthesize messageuuid;
- (BOOL) hasUserdetails {
  return !!hasUserdetails_;
}
- (void) setHasUserdetails:(BOOL) value_ {
  hasUserdetails_ = !!value_;
}
@synthesize userdetails;
- (BOOL) hasLanguage {
  return !!hasLanguage_;
}
- (void) setHasLanguage:(BOOL) value_ {
  hasLanguage_ = !!value_;
}
@synthesize language;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
@synthesize mutableTranslatedcontentList;
@dynamic translatedcontentList;
- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) value_ {
  hasTimestamp_ = !!value_;
}
@synthesize timestamp;
@synthesize mutableReaduseruuidsList;
@dynamic readuseruuidsList;
- (id) init {
  if ((self = [super init])) {
    self.messageuuid = @"";
    self.userdetails = [ChatUserDetailsProto defaultInstance];
    self.language = TranslateLanguageArabic;
    self.content = @"";
    self.timestamp = 0L;
  }
  return self;
}
static ChatMessageProto* defaultChatMessageProtoInstance = nil;
+ (void) initialize {
  if (self == [ChatMessageProto class]) {
    defaultChatMessageProtoInstance = [[ChatMessageProto alloc] init];
  }
}
+ (ChatMessageProto*) defaultInstance {
  return defaultChatMessageProtoInstance;
}
- (ChatMessageProto*) defaultInstance {
  return defaultChatMessageProtoInstance;
}
- (NSArray *)translatedcontentList {
  return mutableTranslatedcontentList;
}
- (TranslatedContentProto*)translatedcontentAtIndex:(NSUInteger)index {
  return [mutableTranslatedcontentList objectAtIndex:index];
}
- (NSArray *)readuseruuidsList {
  return mutableReaduseruuidsList;
}
- (NSString*)readuseruuidsAtIndex:(NSUInteger)index {
  return [mutableReaduseruuidsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMessageuuid) {
    [output writeString:1 value:self.messageuuid];
  }
  if (self.hasUserdetails) {
    [output writeMessage:2 value:self.userdetails];
  }
  if (self.hasLanguage) {
    [output writeEnum:3 value:self.language];
  }
  if (self.hasContent) {
    [output writeString:4 value:self.content];
  }
  [self.translatedcontentList enumerateObjectsUsingBlock:^(TranslatedContentProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:5 value:element];
  }];
  if (self.hasTimestamp) {
    [output writeInt64:6 value:self.timestamp];
  }
  [self.readuseruuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:7 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMessageuuid) {
    size_ += computeStringSize(1, self.messageuuid);
  }
  if (self.hasUserdetails) {
    size_ += computeMessageSize(2, self.userdetails);
  }
  if (self.hasLanguage) {
    size_ += computeEnumSize(3, self.language);
  }
  if (self.hasContent) {
    size_ += computeStringSize(4, self.content);
  }
  [self.translatedcontentList enumerateObjectsUsingBlock:^(TranslatedContentProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(5, element);
  }];
  if (self.hasTimestamp) {
    size_ += computeInt64Size(6, self.timestamp);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.readuseruuidsList.count;
    [self.readuseruuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ChatMessageProto*) parseFromData:(NSData*) data {
  return (ChatMessageProto*)[[[ChatMessageProto builder] mergeFromData:data] build];
}
+ (ChatMessageProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatMessageProto*)[[[ChatMessageProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChatMessageProto*) parseFromInputStream:(NSInputStream*) input {
  return (ChatMessageProto*)[[[ChatMessageProto builder] mergeFromInputStream:input] build];
}
+ (ChatMessageProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatMessageProto*)[[[ChatMessageProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChatMessageProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChatMessageProto*)[[[ChatMessageProto builder] mergeFromCodedInputStream:input] build];
}
+ (ChatMessageProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatMessageProto*)[[[ChatMessageProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChatMessageProto_Builder*) builder {
  return [[ChatMessageProto_Builder alloc] init];
}
+ (ChatMessageProto_Builder*) builderWithPrototype:(ChatMessageProto*) prototype {
  return [[ChatMessageProto builder] mergeFrom:prototype];
}
- (ChatMessageProto_Builder*) builder {
  return [ChatMessageProto builder];
}
- (ChatMessageProto_Builder*) toBuilder {
  return [ChatMessageProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMessageuuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"messageuuid", self.messageuuid];
  }
  if (self.hasUserdetails) {
    [output appendFormat:@"%@%@ {\n", indent, @"userdetails"];
    [self.userdetails writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasLanguage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"language", [NSNumber numberWithInteger:self.language]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  [self.translatedcontentList enumerateObjectsUsingBlock:^(TranslatedContentProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"translatedcontent"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timestamp", [NSNumber numberWithLongLong:self.timestamp]];
  }
  [self.readuseruuidsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"readuseruuids", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ChatMessageProto class]]) {
    return NO;
  }
  ChatMessageProto *otherMessage = other;
  return
      self.hasMessageuuid == otherMessage.hasMessageuuid &&
      (!self.hasMessageuuid || [self.messageuuid isEqual:otherMessage.messageuuid]) &&
      self.hasUserdetails == otherMessage.hasUserdetails &&
      (!self.hasUserdetails || [self.userdetails isEqual:otherMessage.userdetails]) &&
      self.hasLanguage == otherMessage.hasLanguage &&
      (!self.hasLanguage || self.language == otherMessage.language) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      [self.translatedcontentList isEqualToArray:otherMessage.translatedcontentList] &&
      self.hasTimestamp == otherMessage.hasTimestamp &&
      (!self.hasTimestamp || self.timestamp == otherMessage.timestamp) &&
      [self.readuseruuidsList isEqualToArray:otherMessage.readuseruuidsList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMessageuuid) {
    hashCode = hashCode * 31 + [self.messageuuid hash];
  }
  if (self.hasUserdetails) {
    hashCode = hashCode * 31 + [self.userdetails hash];
  }
  if (self.hasLanguage) {
    hashCode = hashCode * 31 + self.language;
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  [self.translatedcontentList enumerateObjectsUsingBlock:^(TranslatedContentProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.timestamp] hash];
  }
  [self.readuseruuidsList enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ChatMessageProto_Builder()
@property (strong) ChatMessageProto* result;
@end

@implementation ChatMessageProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ChatMessageProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChatMessageProto_Builder*) clear {
  self.result = [[ChatMessageProto alloc] init];
  return self;
}
- (ChatMessageProto_Builder*) clone {
  return [ChatMessageProto builderWithPrototype:result];
}
- (ChatMessageProto*) defaultInstance {
  return [ChatMessageProto defaultInstance];
}
- (ChatMessageProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChatMessageProto*) buildPartial {
  ChatMessageProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ChatMessageProto_Builder*) mergeFrom:(ChatMessageProto*) other {
  if (other == [ChatMessageProto defaultInstance]) {
    return self;
  }
  if (other.hasMessageuuid) {
    [self setMessageuuid:other.messageuuid];
  }
  if (other.hasUserdetails) {
    [self mergeUserdetails:other.userdetails];
  }
  if (other.hasLanguage) {
    [self setLanguage:other.language];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.mutableTranslatedcontentList.count > 0) {
    if (result.mutableTranslatedcontentList == nil) {
      result.mutableTranslatedcontentList = [[NSMutableArray alloc] initWithArray:other.mutableTranslatedcontentList];
    } else {
      [result.mutableTranslatedcontentList addObjectsFromArray:other.mutableTranslatedcontentList];
    }
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  if (other.mutableReaduseruuidsList.count > 0) {
    if (result.mutableReaduseruuidsList == nil) {
      result.mutableReaduseruuidsList = [[NSMutableArray alloc] initWithArray:other.mutableReaduseruuidsList];
    } else {
      [result.mutableReaduseruuidsList addObjectsFromArray:other.mutableReaduseruuidsList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChatMessageProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChatMessageProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMessageuuid:[input readString]];
        break;
      }
      case 18: {
        ChatUserDetailsProto_Builder* subBuilder = [ChatUserDetailsProto builder];
        if (self.hasUserdetails) {
          [subBuilder mergeFrom:self.userdetails];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserdetails:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        TranslateLanguage value = (TranslateLanguage)[input readEnum];
        if (TranslateLanguageIsValidValue(value)) {
          [self setLanguage:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 34: {
        [self setContent:[input readString]];
        break;
      }
      case 42: {
        TranslatedContentProto_Builder* subBuilder = [TranslatedContentProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTranslatedcontent:[subBuilder buildPartial]];
        break;
      }
      case 48: {
        [self setTimestamp:[input readInt64]];
        break;
      }
      case 58: {
        [self addReaduseruuids:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMessageuuid {
  return result.hasMessageuuid;
}
- (NSString*) messageuuid {
  return result.messageuuid;
}
- (ChatMessageProto_Builder*) setMessageuuid:(NSString*) value {
  result.hasMessageuuid = YES;
  result.messageuuid = value;
  return self;
}
- (ChatMessageProto_Builder*) clearMessageuuid {
  result.hasMessageuuid = NO;
  result.messageuuid = @"";
  return self;
}
- (BOOL) hasUserdetails {
  return result.hasUserdetails;
}
- (ChatUserDetailsProto*) userdetails {
  return result.userdetails;
}
- (ChatMessageProto_Builder*) setUserdetails:(ChatUserDetailsProto*) value {
  result.hasUserdetails = YES;
  result.userdetails = value;
  return self;
}
- (ChatMessageProto_Builder*) setUserdetails_Builder:(ChatUserDetailsProto_Builder*) builderForValue {
  return [self setUserdetails:[builderForValue build]];
}
- (ChatMessageProto_Builder*) mergeUserdetails:(ChatUserDetailsProto*) value {
  if (result.hasUserdetails &&
      result.userdetails != [ChatUserDetailsProto defaultInstance]) {
    result.userdetails =
      [[[ChatUserDetailsProto builderWithPrototype:result.userdetails] mergeFrom:value] buildPartial];
  } else {
    result.userdetails = value;
  }
  result.hasUserdetails = YES;
  return self;
}
- (ChatMessageProto_Builder*) clearUserdetails {
  result.hasUserdetails = NO;
  result.userdetails = [ChatUserDetailsProto defaultInstance];
  return self;
}
- (BOOL) hasLanguage {
  return result.hasLanguage;
}
- (TranslateLanguage) language {
  return result.language;
}
- (ChatMessageProto_Builder*) setLanguage:(TranslateLanguage) value {
  result.hasLanguage = YES;
  result.language = value;
  return self;
}
- (ChatMessageProto_Builder*) clearLanguageList {
  result.hasLanguage = NO;
  result.language = TranslateLanguageArabic;
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (ChatMessageProto_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (ChatMessageProto_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (NSMutableArray *)translatedcontentList {
  return result.mutableTranslatedcontentList;
}
- (TranslatedContentProto*)translatedcontentAtIndex:(NSUInteger)index {
  return [result translatedcontentAtIndex:index];
}
- (ChatMessageProto_Builder *)addTranslatedcontent:(TranslatedContentProto*)value {
  if (result.mutableTranslatedcontentList == nil) {
    result.mutableTranslatedcontentList = [[NSMutableArray alloc]init];
  }
  [result.mutableTranslatedcontentList addObject:value];
  return self;
}
- (ChatMessageProto_Builder *)addAllTranslatedcontent:(NSArray *)array {
  if (result.mutableTranslatedcontentList == nil) {
    result.mutableTranslatedcontentList = [NSMutableArray array];
  }
  [result.mutableTranslatedcontentList addObjectsFromArray:array];
  return self;
}
- (ChatMessageProto_Builder *)clearTranslatedcontent {
  result.mutableTranslatedcontentList = nil;
  return self;
}
- (BOOL) hasTimestamp {
  return result.hasTimestamp;
}
- (int64_t) timestamp {
  return result.timestamp;
}
- (ChatMessageProto_Builder*) setTimestamp:(int64_t) value {
  result.hasTimestamp = YES;
  result.timestamp = value;
  return self;
}
- (ChatMessageProto_Builder*) clearTimestamp {
  result.hasTimestamp = NO;
  result.timestamp = 0L;
  return self;
}
- (NSMutableArray *)readuseruuidsList {
  return result.mutableReaduseruuidsList;
}
- (NSString*)readuseruuidsAtIndex:(NSUInteger)index {
  return [result readuseruuidsAtIndex:index];
}
- (ChatMessageProto_Builder *)addReaduseruuids:(NSString*)value {
  if (result.mutableReaduseruuidsList == nil) {
    result.mutableReaduseruuidsList = [[NSMutableArray alloc]init];
  }
  [result.mutableReaduseruuidsList addObject:value];
  return self;
}
- (ChatMessageProto_Builder *)addAllReaduseruuids:(NSArray *)array {
  if (result.mutableReaduseruuidsList == nil) {
    result.mutableReaduseruuidsList = [NSMutableArray array];
  }
  [result.mutableReaduseruuidsList addObjectsFromArray:array];
  return self;
}
- (ChatMessageProto_Builder *)clearReaduseruuids {
  result.mutableReaduseruuidsList = nil;
  return self;
}
@end

@interface ChatUserDetailsProto ()
@property int32_t avatarmonsterid;
@property (strong) NSString* clantag;
@property (strong) NSString* name;
@property BOOL admin;
@property (strong) NSString* useruuid;
@end

@implementation ChatUserDetailsProto

- (BOOL) hasAvatarmonsterid {
  return !!hasAvatarmonsterid_;
}
- (void) setHasAvatarmonsterid:(BOOL) value_ {
  hasAvatarmonsterid_ = !!value_;
}
@synthesize avatarmonsterid;
- (BOOL) hasClantag {
  return !!hasClantag_;
}
- (void) setHasClantag:(BOOL) value_ {
  hasClantag_ = !!value_;
}
@synthesize clantag;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasAdmin {
  return !!hasAdmin_;
}
- (void) setHasAdmin:(BOOL) value_ {
  hasAdmin_ = !!value_;
}
- (BOOL) admin {
  return !!admin_;
}
- (void) setAdmin:(BOOL) value_ {
  admin_ = !!value_;
}
- (BOOL) hasUseruuid {
  return !!hasUseruuid_;
}
- (void) setHasUseruuid:(BOOL) value_ {
  hasUseruuid_ = !!value_;
}
@synthesize useruuid;
- (id) init {
  if ((self = [super init])) {
    self.avatarmonsterid = 0;
    self.clantag = @"";
    self.name = @"";
    self.admin = NO;
    self.useruuid = @"";
  }
  return self;
}
static ChatUserDetailsProto* defaultChatUserDetailsProtoInstance = nil;
+ (void) initialize {
  if (self == [ChatUserDetailsProto class]) {
    defaultChatUserDetailsProtoInstance = [[ChatUserDetailsProto alloc] init];
  }
}
+ (ChatUserDetailsProto*) defaultInstance {
  return defaultChatUserDetailsProtoInstance;
}
- (ChatUserDetailsProto*) defaultInstance {
  return defaultChatUserDetailsProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAvatarmonsterid) {
    [output writeInt32:1 value:self.avatarmonsterid];
  }
  if (self.hasClantag) {
    [output writeString:2 value:self.clantag];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  if (self.hasAdmin) {
    [output writeBool:4 value:self.admin];
  }
  if (self.hasUseruuid) {
    [output writeString:5 value:self.useruuid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAvatarmonsterid) {
    size_ += computeInt32Size(1, self.avatarmonsterid);
  }
  if (self.hasClantag) {
    size_ += computeStringSize(2, self.clantag);
  }
  if (self.hasName) {
    size_ += computeStringSize(3, self.name);
  }
  if (self.hasAdmin) {
    size_ += computeBoolSize(4, self.admin);
  }
  if (self.hasUseruuid) {
    size_ += computeStringSize(5, self.useruuid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ChatUserDetailsProto*) parseFromData:(NSData*) data {
  return (ChatUserDetailsProto*)[[[ChatUserDetailsProto builder] mergeFromData:data] build];
}
+ (ChatUserDetailsProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatUserDetailsProto*)[[[ChatUserDetailsProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChatUserDetailsProto*) parseFromInputStream:(NSInputStream*) input {
  return (ChatUserDetailsProto*)[[[ChatUserDetailsProto builder] mergeFromInputStream:input] build];
}
+ (ChatUserDetailsProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatUserDetailsProto*)[[[ChatUserDetailsProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChatUserDetailsProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChatUserDetailsProto*)[[[ChatUserDetailsProto builder] mergeFromCodedInputStream:input] build];
}
+ (ChatUserDetailsProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatUserDetailsProto*)[[[ChatUserDetailsProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChatUserDetailsProto_Builder*) builder {
  return [[ChatUserDetailsProto_Builder alloc] init];
}
+ (ChatUserDetailsProto_Builder*) builderWithPrototype:(ChatUserDetailsProto*) prototype {
  return [[ChatUserDetailsProto builder] mergeFrom:prototype];
}
- (ChatUserDetailsProto_Builder*) builder {
  return [ChatUserDetailsProto builder];
}
- (ChatUserDetailsProto_Builder*) toBuilder {
  return [ChatUserDetailsProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAvatarmonsterid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatarmonsterid", [NSNumber numberWithInteger:self.avatarmonsterid]];
  }
  if (self.hasClantag) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clantag", self.clantag];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasAdmin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"admin", [NSNumber numberWithBool:self.admin]];
  }
  if (self.hasUseruuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"useruuid", self.useruuid];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ChatUserDetailsProto class]]) {
    return NO;
  }
  ChatUserDetailsProto *otherMessage = other;
  return
      self.hasAvatarmonsterid == otherMessage.hasAvatarmonsterid &&
      (!self.hasAvatarmonsterid || self.avatarmonsterid == otherMessage.avatarmonsterid) &&
      self.hasClantag == otherMessage.hasClantag &&
      (!self.hasClantag || [self.clantag isEqual:otherMessage.clantag]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasAdmin == otherMessage.hasAdmin &&
      (!self.hasAdmin || self.admin == otherMessage.admin) &&
      self.hasUseruuid == otherMessage.hasUseruuid &&
      (!self.hasUseruuid || [self.useruuid isEqual:otherMessage.useruuid]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAvatarmonsterid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.avatarmonsterid] hash];
  }
  if (self.hasClantag) {
    hashCode = hashCode * 31 + [self.clantag hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasAdmin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.admin] hash];
  }
  if (self.hasUseruuid) {
    hashCode = hashCode * 31 + [self.useruuid hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ChatUserDetailsProto_Builder()
@property (strong) ChatUserDetailsProto* result;
@end

@implementation ChatUserDetailsProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ChatUserDetailsProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChatUserDetailsProto_Builder*) clear {
  self.result = [[ChatUserDetailsProto alloc] init];
  return self;
}
- (ChatUserDetailsProto_Builder*) clone {
  return [ChatUserDetailsProto builderWithPrototype:result];
}
- (ChatUserDetailsProto*) defaultInstance {
  return [ChatUserDetailsProto defaultInstance];
}
- (ChatUserDetailsProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChatUserDetailsProto*) buildPartial {
  ChatUserDetailsProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ChatUserDetailsProto_Builder*) mergeFrom:(ChatUserDetailsProto*) other {
  if (other == [ChatUserDetailsProto defaultInstance]) {
    return self;
  }
  if (other.hasAvatarmonsterid) {
    [self setAvatarmonsterid:other.avatarmonsterid];
  }
  if (other.hasClantag) {
    [self setClantag:other.clantag];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasAdmin) {
    [self setAdmin:other.admin];
  }
  if (other.hasUseruuid) {
    [self setUseruuid:other.useruuid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChatUserDetailsProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChatUserDetailsProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAvatarmonsterid:[input readInt32]];
        break;
      }
      case 18: {
        [self setClantag:[input readString]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 32: {
        [self setAdmin:[input readBool]];
        break;
      }
      case 42: {
        [self setUseruuid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasAvatarmonsterid {
  return result.hasAvatarmonsterid;
}
- (int32_t) avatarmonsterid {
  return result.avatarmonsterid;
}
- (ChatUserDetailsProto_Builder*) setAvatarmonsterid:(int32_t) value {
  result.hasAvatarmonsterid = YES;
  result.avatarmonsterid = value;
  return self;
}
- (ChatUserDetailsProto_Builder*) clearAvatarmonsterid {
  result.hasAvatarmonsterid = NO;
  result.avatarmonsterid = 0;
  return self;
}
- (BOOL) hasClantag {
  return result.hasClantag;
}
- (NSString*) clantag {
  return result.clantag;
}
- (ChatUserDetailsProto_Builder*) setClantag:(NSString*) value {
  result.hasClantag = YES;
  result.clantag = value;
  return self;
}
- (ChatUserDetailsProto_Builder*) clearClantag {
  result.hasClantag = NO;
  result.clantag = @"";
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (ChatUserDetailsProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (ChatUserDetailsProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasAdmin {
  return result.hasAdmin;
}
- (BOOL) admin {
  return result.admin;
}
- (ChatUserDetailsProto_Builder*) setAdmin:(BOOL) value {
  result.hasAdmin = YES;
  result.admin = value;
  return self;
}
- (ChatUserDetailsProto_Builder*) clearAdmin {
  result.hasAdmin = NO;
  result.admin = NO;
  return self;
}
- (BOOL) hasUseruuid {
  return result.hasUseruuid;
}
- (NSString*) useruuid {
  return result.useruuid;
}
- (ChatUserDetailsProto_Builder*) setUseruuid:(NSString*) value {
  result.hasUseruuid = YES;
  result.useruuid = value;
  return self;
}
- (ChatUserDetailsProto_Builder*) clearUseruuid {
  result.hasUseruuid = NO;
  result.useruuid = @"";
  return self;
}
@end

@interface TranslatedContentProto ()
@property TranslateLanguage language;
@property (strong) NSString* content;
@end

@implementation TranslatedContentProto

- (BOOL) hasLanguage {
  return !!hasLanguage_;
}
- (void) setHasLanguage:(BOOL) value_ {
  hasLanguage_ = !!value_;
}
@synthesize language;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
- (id) init {
  if ((self = [super init])) {
    self.language = TranslateLanguageArabic;
    self.content = @"";
  }
  return self;
}
static TranslatedContentProto* defaultTranslatedContentProtoInstance = nil;
+ (void) initialize {
  if (self == [TranslatedContentProto class]) {
    defaultTranslatedContentProtoInstance = [[TranslatedContentProto alloc] init];
  }
}
+ (TranslatedContentProto*) defaultInstance {
  return defaultTranslatedContentProtoInstance;
}
- (TranslatedContentProto*) defaultInstance {
  return defaultTranslatedContentProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLanguage) {
    [output writeEnum:1 value:self.language];
  }
  if (self.hasContent) {
    [output writeString:2 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLanguage) {
    size_ += computeEnumSize(1, self.language);
  }
  if (self.hasContent) {
    size_ += computeStringSize(2, self.content);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TranslatedContentProto*) parseFromData:(NSData*) data {
  return (TranslatedContentProto*)[[[TranslatedContentProto builder] mergeFromData:data] build];
}
+ (TranslatedContentProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TranslatedContentProto*)[[[TranslatedContentProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TranslatedContentProto*) parseFromInputStream:(NSInputStream*) input {
  return (TranslatedContentProto*)[[[TranslatedContentProto builder] mergeFromInputStream:input] build];
}
+ (TranslatedContentProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TranslatedContentProto*)[[[TranslatedContentProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TranslatedContentProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TranslatedContentProto*)[[[TranslatedContentProto builder] mergeFromCodedInputStream:input] build];
}
+ (TranslatedContentProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TranslatedContentProto*)[[[TranslatedContentProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TranslatedContentProto_Builder*) builder {
  return [[TranslatedContentProto_Builder alloc] init];
}
+ (TranslatedContentProto_Builder*) builderWithPrototype:(TranslatedContentProto*) prototype {
  return [[TranslatedContentProto builder] mergeFrom:prototype];
}
- (TranslatedContentProto_Builder*) builder {
  return [TranslatedContentProto builder];
}
- (TranslatedContentProto_Builder*) toBuilder {
  return [TranslatedContentProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLanguage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"language", [NSNumber numberWithInteger:self.language]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TranslatedContentProto class]]) {
    return NO;
  }
  TranslatedContentProto *otherMessage = other;
  return
      self.hasLanguage == otherMessage.hasLanguage &&
      (!self.hasLanguage || self.language == otherMessage.language) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasLanguage) {
    hashCode = hashCode * 31 + self.language;
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TranslatedContentProto_Builder()
@property (strong) TranslatedContentProto* result;
@end

@implementation TranslatedContentProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[TranslatedContentProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (TranslatedContentProto_Builder*) clear {
  self.result = [[TranslatedContentProto alloc] init];
  return self;
}
- (TranslatedContentProto_Builder*) clone {
  return [TranslatedContentProto builderWithPrototype:result];
}
- (TranslatedContentProto*) defaultInstance {
  return [TranslatedContentProto defaultInstance];
}
- (TranslatedContentProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TranslatedContentProto*) buildPartial {
  TranslatedContentProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (TranslatedContentProto_Builder*) mergeFrom:(TranslatedContentProto*) other {
  if (other == [TranslatedContentProto defaultInstance]) {
    return self;
  }
  if (other.hasLanguage) {
    [self setLanguage:other.language];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TranslatedContentProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TranslatedContentProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        TranslateLanguage value = (TranslateLanguage)[input readEnum];
        if (TranslateLanguageIsValidValue(value)) {
          [self setLanguage:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setContent:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasLanguage {
  return result.hasLanguage;
}
- (TranslateLanguage) language {
  return result.language;
}
- (TranslatedContentProto_Builder*) setLanguage:(TranslateLanguage) value {
  result.hasLanguage = YES;
  result.language = value;
  return self;
}
- (TranslatedContentProto_Builder*) clearLanguageList {
  result.hasLanguage = NO;
  result.language = TranslateLanguageArabic;
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (TranslatedContentProto_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (TranslatedContentProto_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
