// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Skill.pb.h"

@implementation SkillRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SkillRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL SkillTypeIsValidValue(SkillType value) {
  switch (value) {
    case SkillTypeNoSkill:
    case SkillTypeCakeDrop:
      return YES;
    default:
      return NO;
  }
}
BOOL SkillActivationTypeIsValidValue(SkillActivationType value) {
  switch (value) {
    case SkillActivationTypeUserActivated:
    case SkillActivationTypeAutoActivated:
    case SkillActivationTypePassive:
      return YES;
    default:
      return NO;
  }
}
@interface SkillProto ()
@property int32_t id;
@property (retain) NSString* name;
@property int32_t orbCost;
@property SkillType type;
@property SkillActivationType activationType;
@property int32_t predecId;
@property int32_t sucId;
@property (retain) NSMutableArray* mutablePropertiesList;
@end

@implementation SkillProto

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasOrbCost {
  return !!hasOrbCost_;
}
- (void) setHasOrbCost:(BOOL) value {
  hasOrbCost_ = !!value;
}
@synthesize orbCost;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasActivationType {
  return !!hasActivationType_;
}
- (void) setHasActivationType:(BOOL) value {
  hasActivationType_ = !!value;
}
@synthesize activationType;
- (BOOL) hasPredecId {
  return !!hasPredecId_;
}
- (void) setHasPredecId:(BOOL) value {
  hasPredecId_ = !!value;
}
@synthesize predecId;
- (BOOL) hasSucId {
  return !!hasSucId_;
}
- (void) setHasSucId:(BOOL) value {
  hasSucId_ = !!value;
}
@synthesize sucId;
@synthesize mutablePropertiesList;
- (void) dealloc {
  self.name = nil;
  self.mutablePropertiesList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.name = @"";
    self.orbCost = 0;
    self.type = SkillTypeNoSkill;
    self.activationType = SkillActivationTypeUserActivated;
    self.predecId = 0;
    self.sucId = 0;
  }
  return self;
}
static SkillProto* defaultSkillProtoInstance = nil;
+ (void) initialize {
  if (self == [SkillProto class]) {
    defaultSkillProtoInstance = [[SkillProto alloc] init];
  }
}
+ (SkillProto*) defaultInstance {
  return defaultSkillProtoInstance;
}
- (SkillProto*) defaultInstance {
  return defaultSkillProtoInstance;
}
- (NSArray*) propertiesList {
  return mutablePropertiesList;
}
- (SkillPropertyProto*) propertiesAtIndex:(int32_t) index {
  id value = [mutablePropertiesList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasOrbCost) {
    [output writeInt32:3 value:self.orbCost];
  }
  if (self.hasType) {
    [output writeEnum:4 value:self.type];
  }
  if (self.hasActivationType) {
    [output writeEnum:5 value:self.activationType];
  }
  if (self.hasPredecId) {
    [output writeInt32:6 value:self.predecId];
  }
  if (self.hasSucId) {
    [output writeInt32:7 value:self.sucId];
  }
  for (SkillPropertyProto* element in self.propertiesList) {
    [output writeMessage:8 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeInt32Size(1, self.id);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasOrbCost) {
    size += computeInt32Size(3, self.orbCost);
  }
  if (self.hasType) {
    size += computeEnumSize(4, self.type);
  }
  if (self.hasActivationType) {
    size += computeEnumSize(5, self.activationType);
  }
  if (self.hasPredecId) {
    size += computeInt32Size(6, self.predecId);
  }
  if (self.hasSucId) {
    size += computeInt32Size(7, self.sucId);
  }
  for (SkillPropertyProto* element in self.propertiesList) {
    size += computeMessageSize(8, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SkillProto*) parseFromData:(NSData*) data {
  return (SkillProto*)[[[SkillProto builder] mergeFromData:data] build];
}
+ (SkillProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SkillProto*)[[[SkillProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SkillProto*) parseFromInputStream:(NSInputStream*) input {
  return (SkillProto*)[[[SkillProto builder] mergeFromInputStream:input] build];
}
+ (SkillProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SkillProto*)[[[SkillProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SkillProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SkillProto*)[[[SkillProto builder] mergeFromCodedInputStream:input] build];
}
+ (SkillProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SkillProto*)[[[SkillProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SkillProto_Builder*) builder {
  return [[[SkillProto_Builder alloc] init] autorelease];
}
+ (SkillProto_Builder*) builderWithPrototype:(SkillProto*) prototype {
  return [[SkillProto builder] mergeFrom:prototype];
}
- (SkillProto_Builder*) builder {
  return [SkillProto builder];
}
@end

@interface SkillProto_Builder()
@property (retain) SkillProto* result;
@end

@implementation SkillProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SkillProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SkillProto_Builder*) clear {
  self.result = [[[SkillProto alloc] init] autorelease];
  return self;
}
- (SkillProto_Builder*) clone {
  return [SkillProto builderWithPrototype:result];
}
- (SkillProto*) defaultInstance {
  return [SkillProto defaultInstance];
}
- (SkillProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SkillProto*) buildPartial {
  SkillProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SkillProto_Builder*) mergeFrom:(SkillProto*) other {
  if (other == [SkillProto defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasOrbCost) {
    [self setOrbCost:other.orbCost];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasActivationType) {
    [self setActivationType:other.activationType];
  }
  if (other.hasPredecId) {
    [self setPredecId:other.predecId];
  }
  if (other.hasSucId) {
    [self setSucId:other.sucId];
  }
  if (other.mutablePropertiesList.count > 0) {
    if (result.mutablePropertiesList == nil) {
      result.mutablePropertiesList = [NSMutableArray array];
    }
    [result.mutablePropertiesList addObjectsFromArray:other.mutablePropertiesList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SkillProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SkillProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setOrbCost:[input readInt32]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (SkillTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        int32_t value = [input readEnum];
        if (SkillActivationTypeIsValidValue(value)) {
          [self setActivationType:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 48: {
        [self setPredecId:[input readInt32]];
        break;
      }
      case 56: {
        [self setSucId:[input readInt32]];
        break;
      }
      case 66: {
        SkillPropertyProto_Builder* subBuilder = [SkillPropertyProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addProperties:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (SkillProto_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (SkillProto_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (SkillProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (SkillProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasOrbCost {
  return result.hasOrbCost;
}
- (int32_t) orbCost {
  return result.orbCost;
}
- (SkillProto_Builder*) setOrbCost:(int32_t) value {
  result.hasOrbCost = YES;
  result.orbCost = value;
  return self;
}
- (SkillProto_Builder*) clearOrbCost {
  result.hasOrbCost = NO;
  result.orbCost = 0;
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (SkillType) type {
  return result.type;
}
- (SkillProto_Builder*) setType:(SkillType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (SkillProto_Builder*) clearType {
  result.hasType = NO;
  result.type = SkillTypeNoSkill;
  return self;
}
- (BOOL) hasActivationType {
  return result.hasActivationType;
}
- (SkillActivationType) activationType {
  return result.activationType;
}
- (SkillProto_Builder*) setActivationType:(SkillActivationType) value {
  result.hasActivationType = YES;
  result.activationType = value;
  return self;
}
- (SkillProto_Builder*) clearActivationType {
  result.hasActivationType = NO;
  result.activationType = SkillActivationTypeUserActivated;
  return self;
}
- (BOOL) hasPredecId {
  return result.hasPredecId;
}
- (int32_t) predecId {
  return result.predecId;
}
- (SkillProto_Builder*) setPredecId:(int32_t) value {
  result.hasPredecId = YES;
  result.predecId = value;
  return self;
}
- (SkillProto_Builder*) clearPredecId {
  result.hasPredecId = NO;
  result.predecId = 0;
  return self;
}
- (BOOL) hasSucId {
  return result.hasSucId;
}
- (int32_t) sucId {
  return result.sucId;
}
- (SkillProto_Builder*) setSucId:(int32_t) value {
  result.hasSucId = YES;
  result.sucId = value;
  return self;
}
- (SkillProto_Builder*) clearSucId {
  result.hasSucId = NO;
  result.sucId = 0;
  return self;
}
- (NSArray*) propertiesList {
  if (result.mutablePropertiesList == nil) { return [NSArray array]; }
  return result.mutablePropertiesList;
}
- (SkillPropertyProto*) propertiesAtIndex:(int32_t) index {
  return [result propertiesAtIndex:index];
}
- (SkillProto_Builder*) replacePropertiesAtIndex:(int32_t) index with:(SkillPropertyProto*) value {
  [result.mutablePropertiesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SkillProto_Builder*) addAllProperties:(NSArray*) values {
  if (result.mutablePropertiesList == nil) {
    result.mutablePropertiesList = [NSMutableArray array];
  }
  [result.mutablePropertiesList addObjectsFromArray:values];
  return self;
}
- (SkillProto_Builder*) clearPropertiesList {
  result.mutablePropertiesList = nil;
  return self;
}
- (SkillProto_Builder*) addProperties:(SkillPropertyProto*) value {
  if (result.mutablePropertiesList == nil) {
    result.mutablePropertiesList = [NSMutableArray array];
  }
  [result.mutablePropertiesList addObject:value];
  return self;
}
@end

@interface SkillPropertyProto ()
@property int32_t id;
@property (retain) NSString* name;
@property Float32 value;
@end

@implementation SkillPropertyProto

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) value {
  hasValue_ = !!value;
}
@synthesize value;
- (void) dealloc {
  self.name = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.name = @"";
    self.value = 0;
  }
  return self;
}
static SkillPropertyProto* defaultSkillPropertyProtoInstance = nil;
+ (void) initialize {
  if (self == [SkillPropertyProto class]) {
    defaultSkillPropertyProtoInstance = [[SkillPropertyProto alloc] init];
  }
}
+ (SkillPropertyProto*) defaultInstance {
  return defaultSkillPropertyProtoInstance;
}
- (SkillPropertyProto*) defaultInstance {
  return defaultSkillPropertyProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasValue) {
    [output writeFloat:3 value:self.value];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeInt32Size(1, self.id);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasValue) {
    size += computeFloatSize(3, self.value);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SkillPropertyProto*) parseFromData:(NSData*) data {
  return (SkillPropertyProto*)[[[SkillPropertyProto builder] mergeFromData:data] build];
}
+ (SkillPropertyProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SkillPropertyProto*)[[[SkillPropertyProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SkillPropertyProto*) parseFromInputStream:(NSInputStream*) input {
  return (SkillPropertyProto*)[[[SkillPropertyProto builder] mergeFromInputStream:input] build];
}
+ (SkillPropertyProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SkillPropertyProto*)[[[SkillPropertyProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SkillPropertyProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SkillPropertyProto*)[[[SkillPropertyProto builder] mergeFromCodedInputStream:input] build];
}
+ (SkillPropertyProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SkillPropertyProto*)[[[SkillPropertyProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SkillPropertyProto_Builder*) builder {
  return [[[SkillPropertyProto_Builder alloc] init] autorelease];
}
+ (SkillPropertyProto_Builder*) builderWithPrototype:(SkillPropertyProto*) prototype {
  return [[SkillPropertyProto builder] mergeFrom:prototype];
}
- (SkillPropertyProto_Builder*) builder {
  return [SkillPropertyProto builder];
}
@end

@interface SkillPropertyProto_Builder()
@property (retain) SkillPropertyProto* result;
@end

@implementation SkillPropertyProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SkillPropertyProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SkillPropertyProto_Builder*) clear {
  self.result = [[[SkillPropertyProto alloc] init] autorelease];
  return self;
}
- (SkillPropertyProto_Builder*) clone {
  return [SkillPropertyProto builderWithPrototype:result];
}
- (SkillPropertyProto*) defaultInstance {
  return [SkillPropertyProto defaultInstance];
}
- (SkillPropertyProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SkillPropertyProto*) buildPartial {
  SkillPropertyProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SkillPropertyProto_Builder*) mergeFrom:(SkillPropertyProto*) other {
  if (other == [SkillPropertyProto defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SkillPropertyProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SkillPropertyProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 29: {
        [self setValue:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (SkillPropertyProto_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (SkillPropertyProto_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (SkillPropertyProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (SkillPropertyProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasValue {
  return result.hasValue;
}
- (Float32) value {
  return result.value;
}
- (SkillPropertyProto_Builder*) setValue:(Float32) value {
  result.hasValue = YES;
  result.value = value;
  return self;
}
- (SkillPropertyProto_Builder*) clearValue {
  result.hasValue = NO;
  result.value = 0;
  return self;
}
@end

