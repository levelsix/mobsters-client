// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "StaticData.pb.h"

@implementation StaticDataRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [StaticDataRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [BoosterPackStuffRoot registerAllExtensions:registry];
    [CityRoot registerAllExtensions:registry];
    [MonsterStuffRoot registerAllExtensions:registry];
    [QuestStuffRoot registerAllExtensions:registry];
    [StructureRoot registerAllExtensions:registry];
    [TaskRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface StaticDataProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) NSMutableArray* mutableExpansionCostsList;
@property (retain) NSMutableArray* mutableAllCitiesList;
@property (retain) NSMutableArray* mutableAllStructsList;
@property (retain) NSMutableArray* mutableAllTasksList;
@property (retain) NSMutableArray* mutableAllMonstersList;
@property (retain) NSMutableArray* mutableSlipList;
@property (retain) NSMutableArray* mutableInProgressQuestsList;
@property (retain) NSMutableArray* mutableUnredeemedQuestsList;
@property (retain) NSMutableArray* mutableAvailableQuestsList;
@property (retain) NSMutableArray* mutableBoosterPacksList;
@property StaticDataProto_RetrieveStaticDataStatus status;
@end

@implementation StaticDataProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableExpansionCostsList;
@synthesize mutableAllCitiesList;
@synthesize mutableAllStructsList;
@synthesize mutableAllTasksList;
@synthesize mutableAllMonstersList;
@synthesize mutableSlipList;
@synthesize mutableInProgressQuestsList;
@synthesize mutableUnredeemedQuestsList;
@synthesize mutableAvailableQuestsList;
@synthesize mutableBoosterPacksList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  self.mutableExpansionCostsList = nil;
  self.mutableAllCitiesList = nil;
  self.mutableAllStructsList = nil;
  self.mutableAllTasksList = nil;
  self.mutableAllMonstersList = nil;
  self.mutableSlipList = nil;
  self.mutableInProgressQuestsList = nil;
  self.mutableUnredeemedQuestsList = nil;
  self.mutableAvailableQuestsList = nil;
  self.mutableBoosterPacksList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = StaticDataProto_RetrieveStaticDataStatusSuccess;
  }
  return self;
}
static StaticDataProto* defaultStaticDataProtoInstance = nil;
+ (void) initialize {
  if (self == [StaticDataProto class]) {
    defaultStaticDataProtoInstance = [[StaticDataProto alloc] init];
  }
}
+ (StaticDataProto*) defaultInstance {
  return defaultStaticDataProtoInstance;
}
- (StaticDataProto*) defaultInstance {
  return defaultStaticDataProtoInstance;
}
- (NSArray*) expansionCostsList {
  return mutableExpansionCostsList;
}
- (CityExpansionCostProto*) expansionCostsAtIndex:(int32_t) index {
  id value = [mutableExpansionCostsList objectAtIndex:index];
  return value;
}
- (NSArray*) allCitiesList {
  return mutableAllCitiesList;
}
- (FullCityProto*) allCitiesAtIndex:(int32_t) index {
  id value = [mutableAllCitiesList objectAtIndex:index];
  return value;
}
- (NSArray*) allStructsList {
  return mutableAllStructsList;
}
- (FullStructureProto*) allStructsAtIndex:(int32_t) index {
  id value = [mutableAllStructsList objectAtIndex:index];
  return value;
}
- (NSArray*) allTasksList {
  return mutableAllTasksList;
}
- (FullTaskProto*) allTasksAtIndex:(int32_t) index {
  id value = [mutableAllTasksList objectAtIndex:index];
  return value;
}
- (NSArray*) allMonstersList {
  return mutableAllMonstersList;
}
- (MonsterProto*) allMonstersAtIndex:(int32_t) index {
  id value = [mutableAllMonstersList objectAtIndex:index];
  return value;
}
- (NSArray*) slipList {
  return mutableSlipList;
}
- (StaticUserLevelInfoProto*) slipAtIndex:(int32_t) index {
  id value = [mutableSlipList objectAtIndex:index];
  return value;
}
- (NSArray*) inProgressQuestsList {
  return mutableInProgressQuestsList;
}
- (QuestProto*) inProgressQuestsAtIndex:(int32_t) index {
  id value = [mutableInProgressQuestsList objectAtIndex:index];
  return value;
}
- (NSArray*) unredeemedQuestsList {
  return mutableUnredeemedQuestsList;
}
- (QuestProto*) unredeemedQuestsAtIndex:(int32_t) index {
  id value = [mutableUnredeemedQuestsList objectAtIndex:index];
  return value;
}
- (NSArray*) availableQuestsList {
  return mutableAvailableQuestsList;
}
- (QuestProto*) availableQuestsAtIndex:(int32_t) index {
  id value = [mutableAvailableQuestsList objectAtIndex:index];
  return value;
}
- (NSArray*) boosterPacksList {
  return mutableBoosterPacksList;
}
- (BoosterPackProto*) boosterPacksAtIndex:(int32_t) index {
  id value = [mutableBoosterPacksList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (CityExpansionCostProto* element in self.expansionCostsList) {
    [output writeMessage:2 value:element];
  }
  for (FullCityProto* element in self.allCitiesList) {
    [output writeMessage:3 value:element];
  }
  for (FullStructureProto* element in self.allStructsList) {
    [output writeMessage:4 value:element];
  }
  for (FullTaskProto* element in self.allTasksList) {
    [output writeMessage:5 value:element];
  }
  for (MonsterProto* element in self.allMonstersList) {
    [output writeMessage:6 value:element];
  }
  for (StaticUserLevelInfoProto* element in self.slipList) {
    [output writeMessage:7 value:element];
  }
  for (QuestProto* element in self.inProgressQuestsList) {
    [output writeMessage:8 value:element];
  }
  for (QuestProto* element in self.unredeemedQuestsList) {
    [output writeMessage:9 value:element];
  }
  for (QuestProto* element in self.availableQuestsList) {
    [output writeMessage:10 value:element];
  }
  if (self.hasStatus) {
    [output writeEnum:11 value:self.status];
  }
  for (BoosterPackProto* element in self.boosterPacksList) {
    [output writeMessage:12 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (CityExpansionCostProto* element in self.expansionCostsList) {
    size += computeMessageSize(2, element);
  }
  for (FullCityProto* element in self.allCitiesList) {
    size += computeMessageSize(3, element);
  }
  for (FullStructureProto* element in self.allStructsList) {
    size += computeMessageSize(4, element);
  }
  for (FullTaskProto* element in self.allTasksList) {
    size += computeMessageSize(5, element);
  }
  for (MonsterProto* element in self.allMonstersList) {
    size += computeMessageSize(6, element);
  }
  for (StaticUserLevelInfoProto* element in self.slipList) {
    size += computeMessageSize(7, element);
  }
  for (QuestProto* element in self.inProgressQuestsList) {
    size += computeMessageSize(8, element);
  }
  for (QuestProto* element in self.unredeemedQuestsList) {
    size += computeMessageSize(9, element);
  }
  for (QuestProto* element in self.availableQuestsList) {
    size += computeMessageSize(10, element);
  }
  if (self.hasStatus) {
    size += computeEnumSize(11, self.status);
  }
  for (BoosterPackProto* element in self.boosterPacksList) {
    size += computeMessageSize(12, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (StaticDataProto*) parseFromData:(NSData*) data {
  return (StaticDataProto*)[[[StaticDataProto builder] mergeFromData:data] build];
}
+ (StaticDataProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StaticDataProto*)[[[StaticDataProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StaticDataProto*) parseFromInputStream:(NSInputStream*) input {
  return (StaticDataProto*)[[[StaticDataProto builder] mergeFromInputStream:input] build];
}
+ (StaticDataProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StaticDataProto*)[[[StaticDataProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StaticDataProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StaticDataProto*)[[[StaticDataProto builder] mergeFromCodedInputStream:input] build];
}
+ (StaticDataProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StaticDataProto*)[[[StaticDataProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StaticDataProto_Builder*) builder {
  return [[[StaticDataProto_Builder alloc] init] autorelease];
}
+ (StaticDataProto_Builder*) builderWithPrototype:(StaticDataProto*) prototype {
  return [[StaticDataProto builder] mergeFrom:prototype];
}
- (StaticDataProto_Builder*) builder {
  return [StaticDataProto builder];
}
@end

BOOL StaticDataProto_RetrieveStaticDataStatusIsValidValue(StaticDataProto_RetrieveStaticDataStatus value) {
  switch (value) {
    case StaticDataProto_RetrieveStaticDataStatusSuccess:
    case StaticDataProto_RetrieveStaticDataStatusSomeFail:
      return YES;
    default:
      return NO;
  }
}
@interface StaticDataProto_Builder()
@property (retain) StaticDataProto* result;
@end

@implementation StaticDataProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[StaticDataProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StaticDataProto_Builder*) clear {
  self.result = [[[StaticDataProto alloc] init] autorelease];
  return self;
}
- (StaticDataProto_Builder*) clone {
  return [StaticDataProto builderWithPrototype:result];
}
- (StaticDataProto*) defaultInstance {
  return [StaticDataProto defaultInstance];
}
- (StaticDataProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StaticDataProto*) buildPartial {
  StaticDataProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (StaticDataProto_Builder*) mergeFrom:(StaticDataProto*) other {
  if (other == [StaticDataProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableExpansionCostsList.count > 0) {
    if (result.mutableExpansionCostsList == nil) {
      result.mutableExpansionCostsList = [NSMutableArray array];
    }
    [result.mutableExpansionCostsList addObjectsFromArray:other.mutableExpansionCostsList];
  }
  if (other.mutableAllCitiesList.count > 0) {
    if (result.mutableAllCitiesList == nil) {
      result.mutableAllCitiesList = [NSMutableArray array];
    }
    [result.mutableAllCitiesList addObjectsFromArray:other.mutableAllCitiesList];
  }
  if (other.mutableAllStructsList.count > 0) {
    if (result.mutableAllStructsList == nil) {
      result.mutableAllStructsList = [NSMutableArray array];
    }
    [result.mutableAllStructsList addObjectsFromArray:other.mutableAllStructsList];
  }
  if (other.mutableAllTasksList.count > 0) {
    if (result.mutableAllTasksList == nil) {
      result.mutableAllTasksList = [NSMutableArray array];
    }
    [result.mutableAllTasksList addObjectsFromArray:other.mutableAllTasksList];
  }
  if (other.mutableAllMonstersList.count > 0) {
    if (result.mutableAllMonstersList == nil) {
      result.mutableAllMonstersList = [NSMutableArray array];
    }
    [result.mutableAllMonstersList addObjectsFromArray:other.mutableAllMonstersList];
  }
  if (other.mutableSlipList.count > 0) {
    if (result.mutableSlipList == nil) {
      result.mutableSlipList = [NSMutableArray array];
    }
    [result.mutableSlipList addObjectsFromArray:other.mutableSlipList];
  }
  if (other.mutableInProgressQuestsList.count > 0) {
    if (result.mutableInProgressQuestsList == nil) {
      result.mutableInProgressQuestsList = [NSMutableArray array];
    }
    [result.mutableInProgressQuestsList addObjectsFromArray:other.mutableInProgressQuestsList];
  }
  if (other.mutableUnredeemedQuestsList.count > 0) {
    if (result.mutableUnredeemedQuestsList == nil) {
      result.mutableUnredeemedQuestsList = [NSMutableArray array];
    }
    [result.mutableUnredeemedQuestsList addObjectsFromArray:other.mutableUnredeemedQuestsList];
  }
  if (other.mutableAvailableQuestsList.count > 0) {
    if (result.mutableAvailableQuestsList == nil) {
      result.mutableAvailableQuestsList = [NSMutableArray array];
    }
    [result.mutableAvailableQuestsList addObjectsFromArray:other.mutableAvailableQuestsList];
  }
  if (other.mutableBoosterPacksList.count > 0) {
    if (result.mutableBoosterPacksList == nil) {
      result.mutableBoosterPacksList = [NSMutableArray array];
    }
    [result.mutableBoosterPacksList addObjectsFromArray:other.mutableBoosterPacksList];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StaticDataProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StaticDataProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        CityExpansionCostProto_Builder* subBuilder = [CityExpansionCostProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExpansionCosts:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        FullCityProto_Builder* subBuilder = [FullCityProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAllCities:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        FullStructureProto_Builder* subBuilder = [FullStructureProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAllStructs:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        FullTaskProto_Builder* subBuilder = [FullTaskProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAllTasks:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        MonsterProto_Builder* subBuilder = [MonsterProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAllMonsters:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        StaticUserLevelInfoProto_Builder* subBuilder = [StaticUserLevelInfoProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSlip:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        QuestProto_Builder* subBuilder = [QuestProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addInProgressQuests:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        QuestProto_Builder* subBuilder = [QuestProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUnredeemedQuests:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        QuestProto_Builder* subBuilder = [QuestProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAvailableQuests:[subBuilder buildPartial]];
        break;
      }
      case 88: {
        int32_t value = [input readEnum];
        if (StaticDataProto_RetrieveStaticDataStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:11 value:value];
        }
        break;
      }
      case 98: {
        BoosterPackProto_Builder* subBuilder = [BoosterPackProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBoosterPacks:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (StaticDataProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (StaticDataProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (StaticDataProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (StaticDataProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSArray*) expansionCostsList {
  if (result.mutableExpansionCostsList == nil) { return [NSArray array]; }
  return result.mutableExpansionCostsList;
}
- (CityExpansionCostProto*) expansionCostsAtIndex:(int32_t) index {
  return [result expansionCostsAtIndex:index];
}
- (StaticDataProto_Builder*) replaceExpansionCostsAtIndex:(int32_t) index with:(CityExpansionCostProto*) value {
  [result.mutableExpansionCostsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StaticDataProto_Builder*) addAllExpansionCosts:(NSArray*) values {
  if (result.mutableExpansionCostsList == nil) {
    result.mutableExpansionCostsList = [NSMutableArray array];
  }
  [result.mutableExpansionCostsList addObjectsFromArray:values];
  return self;
}
- (StaticDataProto_Builder*) clearExpansionCostsList {
  result.mutableExpansionCostsList = nil;
  return self;
}
- (StaticDataProto_Builder*) addExpansionCosts:(CityExpansionCostProto*) value {
  if (result.mutableExpansionCostsList == nil) {
    result.mutableExpansionCostsList = [NSMutableArray array];
  }
  [result.mutableExpansionCostsList addObject:value];
  return self;
}
- (NSArray*) allCitiesList {
  if (result.mutableAllCitiesList == nil) { return [NSArray array]; }
  return result.mutableAllCitiesList;
}
- (FullCityProto*) allCitiesAtIndex:(int32_t) index {
  return [result allCitiesAtIndex:index];
}
- (StaticDataProto_Builder*) replaceAllCitiesAtIndex:(int32_t) index with:(FullCityProto*) value {
  [result.mutableAllCitiesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StaticDataProto_Builder*) addAllAllCities:(NSArray*) values {
  if (result.mutableAllCitiesList == nil) {
    result.mutableAllCitiesList = [NSMutableArray array];
  }
  [result.mutableAllCitiesList addObjectsFromArray:values];
  return self;
}
- (StaticDataProto_Builder*) clearAllCitiesList {
  result.mutableAllCitiesList = nil;
  return self;
}
- (StaticDataProto_Builder*) addAllCities:(FullCityProto*) value {
  if (result.mutableAllCitiesList == nil) {
    result.mutableAllCitiesList = [NSMutableArray array];
  }
  [result.mutableAllCitiesList addObject:value];
  return self;
}
- (NSArray*) allStructsList {
  if (result.mutableAllStructsList == nil) { return [NSArray array]; }
  return result.mutableAllStructsList;
}
- (FullStructureProto*) allStructsAtIndex:(int32_t) index {
  return [result allStructsAtIndex:index];
}
- (StaticDataProto_Builder*) replaceAllStructsAtIndex:(int32_t) index with:(FullStructureProto*) value {
  [result.mutableAllStructsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StaticDataProto_Builder*) addAllAllStructs:(NSArray*) values {
  if (result.mutableAllStructsList == nil) {
    result.mutableAllStructsList = [NSMutableArray array];
  }
  [result.mutableAllStructsList addObjectsFromArray:values];
  return self;
}
- (StaticDataProto_Builder*) clearAllStructsList {
  result.mutableAllStructsList = nil;
  return self;
}
- (StaticDataProto_Builder*) addAllStructs:(FullStructureProto*) value {
  if (result.mutableAllStructsList == nil) {
    result.mutableAllStructsList = [NSMutableArray array];
  }
  [result.mutableAllStructsList addObject:value];
  return self;
}
- (NSArray*) allTasksList {
  if (result.mutableAllTasksList == nil) { return [NSArray array]; }
  return result.mutableAllTasksList;
}
- (FullTaskProto*) allTasksAtIndex:(int32_t) index {
  return [result allTasksAtIndex:index];
}
- (StaticDataProto_Builder*) replaceAllTasksAtIndex:(int32_t) index with:(FullTaskProto*) value {
  [result.mutableAllTasksList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StaticDataProto_Builder*) addAllAllTasks:(NSArray*) values {
  if (result.mutableAllTasksList == nil) {
    result.mutableAllTasksList = [NSMutableArray array];
  }
  [result.mutableAllTasksList addObjectsFromArray:values];
  return self;
}
- (StaticDataProto_Builder*) clearAllTasksList {
  result.mutableAllTasksList = nil;
  return self;
}
- (StaticDataProto_Builder*) addAllTasks:(FullTaskProto*) value {
  if (result.mutableAllTasksList == nil) {
    result.mutableAllTasksList = [NSMutableArray array];
  }
  [result.mutableAllTasksList addObject:value];
  return self;
}
- (NSArray*) allMonstersList {
  if (result.mutableAllMonstersList == nil) { return [NSArray array]; }
  return result.mutableAllMonstersList;
}
- (MonsterProto*) allMonstersAtIndex:(int32_t) index {
  return [result allMonstersAtIndex:index];
}
- (StaticDataProto_Builder*) replaceAllMonstersAtIndex:(int32_t) index with:(MonsterProto*) value {
  [result.mutableAllMonstersList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StaticDataProto_Builder*) addAllAllMonsters:(NSArray*) values {
  if (result.mutableAllMonstersList == nil) {
    result.mutableAllMonstersList = [NSMutableArray array];
  }
  [result.mutableAllMonstersList addObjectsFromArray:values];
  return self;
}
- (StaticDataProto_Builder*) clearAllMonstersList {
  result.mutableAllMonstersList = nil;
  return self;
}
- (StaticDataProto_Builder*) addAllMonsters:(MonsterProto*) value {
  if (result.mutableAllMonstersList == nil) {
    result.mutableAllMonstersList = [NSMutableArray array];
  }
  [result.mutableAllMonstersList addObject:value];
  return self;
}
- (NSArray*) slipList {
  if (result.mutableSlipList == nil) { return [NSArray array]; }
  return result.mutableSlipList;
}
- (StaticUserLevelInfoProto*) slipAtIndex:(int32_t) index {
  return [result slipAtIndex:index];
}
- (StaticDataProto_Builder*) replaceSlipAtIndex:(int32_t) index with:(StaticUserLevelInfoProto*) value {
  [result.mutableSlipList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StaticDataProto_Builder*) addAllSlip:(NSArray*) values {
  if (result.mutableSlipList == nil) {
    result.mutableSlipList = [NSMutableArray array];
  }
  [result.mutableSlipList addObjectsFromArray:values];
  return self;
}
- (StaticDataProto_Builder*) clearSlipList {
  result.mutableSlipList = nil;
  return self;
}
- (StaticDataProto_Builder*) addSlip:(StaticUserLevelInfoProto*) value {
  if (result.mutableSlipList == nil) {
    result.mutableSlipList = [NSMutableArray array];
  }
  [result.mutableSlipList addObject:value];
  return self;
}
- (NSArray*) inProgressQuestsList {
  if (result.mutableInProgressQuestsList == nil) { return [NSArray array]; }
  return result.mutableInProgressQuestsList;
}
- (QuestProto*) inProgressQuestsAtIndex:(int32_t) index {
  return [result inProgressQuestsAtIndex:index];
}
- (StaticDataProto_Builder*) replaceInProgressQuestsAtIndex:(int32_t) index with:(QuestProto*) value {
  [result.mutableInProgressQuestsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StaticDataProto_Builder*) addAllInProgressQuests:(NSArray*) values {
  if (result.mutableInProgressQuestsList == nil) {
    result.mutableInProgressQuestsList = [NSMutableArray array];
  }
  [result.mutableInProgressQuestsList addObjectsFromArray:values];
  return self;
}
- (StaticDataProto_Builder*) clearInProgressQuestsList {
  result.mutableInProgressQuestsList = nil;
  return self;
}
- (StaticDataProto_Builder*) addInProgressQuests:(QuestProto*) value {
  if (result.mutableInProgressQuestsList == nil) {
    result.mutableInProgressQuestsList = [NSMutableArray array];
  }
  [result.mutableInProgressQuestsList addObject:value];
  return self;
}
- (NSArray*) unredeemedQuestsList {
  if (result.mutableUnredeemedQuestsList == nil) { return [NSArray array]; }
  return result.mutableUnredeemedQuestsList;
}
- (QuestProto*) unredeemedQuestsAtIndex:(int32_t) index {
  return [result unredeemedQuestsAtIndex:index];
}
- (StaticDataProto_Builder*) replaceUnredeemedQuestsAtIndex:(int32_t) index with:(QuestProto*) value {
  [result.mutableUnredeemedQuestsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StaticDataProto_Builder*) addAllUnredeemedQuests:(NSArray*) values {
  if (result.mutableUnredeemedQuestsList == nil) {
    result.mutableUnredeemedQuestsList = [NSMutableArray array];
  }
  [result.mutableUnredeemedQuestsList addObjectsFromArray:values];
  return self;
}
- (StaticDataProto_Builder*) clearUnredeemedQuestsList {
  result.mutableUnredeemedQuestsList = nil;
  return self;
}
- (StaticDataProto_Builder*) addUnredeemedQuests:(QuestProto*) value {
  if (result.mutableUnredeemedQuestsList == nil) {
    result.mutableUnredeemedQuestsList = [NSMutableArray array];
  }
  [result.mutableUnredeemedQuestsList addObject:value];
  return self;
}
- (NSArray*) availableQuestsList {
  if (result.mutableAvailableQuestsList == nil) { return [NSArray array]; }
  return result.mutableAvailableQuestsList;
}
- (QuestProto*) availableQuestsAtIndex:(int32_t) index {
  return [result availableQuestsAtIndex:index];
}
- (StaticDataProto_Builder*) replaceAvailableQuestsAtIndex:(int32_t) index with:(QuestProto*) value {
  [result.mutableAvailableQuestsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StaticDataProto_Builder*) addAllAvailableQuests:(NSArray*) values {
  if (result.mutableAvailableQuestsList == nil) {
    result.mutableAvailableQuestsList = [NSMutableArray array];
  }
  [result.mutableAvailableQuestsList addObjectsFromArray:values];
  return self;
}
- (StaticDataProto_Builder*) clearAvailableQuestsList {
  result.mutableAvailableQuestsList = nil;
  return self;
}
- (StaticDataProto_Builder*) addAvailableQuests:(QuestProto*) value {
  if (result.mutableAvailableQuestsList == nil) {
    result.mutableAvailableQuestsList = [NSMutableArray array];
  }
  [result.mutableAvailableQuestsList addObject:value];
  return self;
}
- (NSArray*) boosterPacksList {
  if (result.mutableBoosterPacksList == nil) { return [NSArray array]; }
  return result.mutableBoosterPacksList;
}
- (BoosterPackProto*) boosterPacksAtIndex:(int32_t) index {
  return [result boosterPacksAtIndex:index];
}
- (StaticDataProto_Builder*) replaceBoosterPacksAtIndex:(int32_t) index with:(BoosterPackProto*) value {
  [result.mutableBoosterPacksList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StaticDataProto_Builder*) addAllBoosterPacks:(NSArray*) values {
  if (result.mutableBoosterPacksList == nil) {
    result.mutableBoosterPacksList = [NSMutableArray array];
  }
  [result.mutableBoosterPacksList addObjectsFromArray:values];
  return self;
}
- (StaticDataProto_Builder*) clearBoosterPacksList {
  result.mutableBoosterPacksList = nil;
  return self;
}
- (StaticDataProto_Builder*) addBoosterPacks:(BoosterPackProto*) value {
  if (result.mutableBoosterPacksList == nil) {
    result.mutableBoosterPacksList = [NSMutableArray array];
  }
  [result.mutableBoosterPacksList addObject:value];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (StaticDataProto_RetrieveStaticDataStatus) status {
  return result.status;
}
- (StaticDataProto_Builder*) setStatus:(StaticDataProto_RetrieveStaticDataStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (StaticDataProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = StaticDataProto_RetrieveStaticDataStatusSuccess;
  return self;
}
@end

