// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventPvp.pb.h"
// @@protoc_insertion_point(imports)

@implementation EventPvpRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventPvpRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [BattleRoot registerAllExtensions:registry];
    [MonsterStuffRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface QueueUpRequestProto ()
@property (strong) MinimumUserProto* attacker;
@property int32_t attackerElo;
@property (strong) NSMutableArray * mutableSeenUserUuidsList;
@property int64_t clientTime;
@end

@implementation QueueUpRequestProto

- (BOOL) hasAttacker {
  return !!hasAttacker_;
}
- (void) setHasAttacker:(BOOL) value_ {
  hasAttacker_ = !!value_;
}
@synthesize attacker;
- (BOOL) hasAttackerElo {
  return !!hasAttackerElo_;
}
- (void) setHasAttackerElo:(BOOL) value_ {
  hasAttackerElo_ = !!value_;
}
@synthesize attackerElo;
@synthesize mutableSeenUserUuidsList;
@dynamic seenUserUuidsList;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (id) init {
  if ((self = [super init])) {
    self.attacker = [MinimumUserProto defaultInstance];
    self.attackerElo = 0;
    self.clientTime = 0L;
  }
  return self;
}
static QueueUpRequestProto* defaultQueueUpRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [QueueUpRequestProto class]) {
    defaultQueueUpRequestProtoInstance = [[QueueUpRequestProto alloc] init];
  }
}
+ (QueueUpRequestProto*) defaultInstance {
  return defaultQueueUpRequestProtoInstance;
}
- (QueueUpRequestProto*) defaultInstance {
  return defaultQueueUpRequestProtoInstance;
}
- (NSArray *)seenUserUuidsList {
  return mutableSeenUserUuidsList;
}
- (NSString*)seenUserUuidsAtIndex:(NSUInteger)index {
  return [mutableSeenUserUuidsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAttacker) {
    [output writeMessage:1 value:self.attacker];
  }
  if (self.hasAttackerElo) {
    [output writeInt32:2 value:self.attackerElo];
  }
  [self.seenUserUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:5 value:element];
  }];
  if (self.hasClientTime) {
    [output writeInt64:6 value:self.clientTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAttacker) {
    size_ += computeMessageSize(1, self.attacker);
  }
  if (self.hasAttackerElo) {
    size_ += computeInt32Size(2, self.attackerElo);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.seenUserUuidsList.count;
    [self.seenUserUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(6, self.clientTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (QueueUpRequestProto*) parseFromData:(NSData*) data {
  return (QueueUpRequestProto*)[[[QueueUpRequestProto builder] mergeFromData:data] build];
}
+ (QueueUpRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueueUpRequestProto*)[[[QueueUpRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QueueUpRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (QueueUpRequestProto*)[[[QueueUpRequestProto builder] mergeFromInputStream:input] build];
}
+ (QueueUpRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueueUpRequestProto*)[[[QueueUpRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueueUpRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QueueUpRequestProto*)[[[QueueUpRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (QueueUpRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueueUpRequestProto*)[[[QueueUpRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueueUpRequestProto_Builder*) builder {
  return [[QueueUpRequestProto_Builder alloc] init];
}
+ (QueueUpRequestProto_Builder*) builderWithPrototype:(QueueUpRequestProto*) prototype {
  return [[QueueUpRequestProto builder] mergeFrom:prototype];
}
- (QueueUpRequestProto_Builder*) builder {
  return [QueueUpRequestProto builder];
}
- (QueueUpRequestProto_Builder*) toBuilder {
  return [QueueUpRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAttacker) {
    [output appendFormat:@"%@%@ {\n", indent, @"attacker"];
    [self.attacker writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasAttackerElo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attackerElo", [NSNumber numberWithInteger:self.attackerElo]];
  }
  [self.seenUserUuidsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"seenUserUuids", obj];
  }];
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[QueueUpRequestProto class]]) {
    return NO;
  }
  QueueUpRequestProto *otherMessage = other;
  return
      self.hasAttacker == otherMessage.hasAttacker &&
      (!self.hasAttacker || [self.attacker isEqual:otherMessage.attacker]) &&
      self.hasAttackerElo == otherMessage.hasAttackerElo &&
      (!self.hasAttackerElo || self.attackerElo == otherMessage.attackerElo) &&
      [self.seenUserUuidsList isEqualToArray:otherMessage.seenUserUuidsList] &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAttacker) {
    hashCode = hashCode * 31 + [self.attacker hash];
  }
  if (self.hasAttackerElo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.attackerElo] hash];
  }
  [self.seenUserUuidsList enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface QueueUpRequestProto_Builder()
@property (strong) QueueUpRequestProto* result;
@end

@implementation QueueUpRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[QueueUpRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QueueUpRequestProto_Builder*) clear {
  self.result = [[QueueUpRequestProto alloc] init];
  return self;
}
- (QueueUpRequestProto_Builder*) clone {
  return [QueueUpRequestProto builderWithPrototype:result];
}
- (QueueUpRequestProto*) defaultInstance {
  return [QueueUpRequestProto defaultInstance];
}
- (QueueUpRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QueueUpRequestProto*) buildPartial {
  QueueUpRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (QueueUpRequestProto_Builder*) mergeFrom:(QueueUpRequestProto*) other {
  if (other == [QueueUpRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasAttacker) {
    [self mergeAttacker:other.attacker];
  }
  if (other.hasAttackerElo) {
    [self setAttackerElo:other.attackerElo];
  }
  if (other.mutableSeenUserUuidsList.count > 0) {
    if (result.mutableSeenUserUuidsList == nil) {
      result.mutableSeenUserUuidsList = [[NSMutableArray alloc] initWithArray:other.mutableSeenUserUuidsList];
    } else {
      [result.mutableSeenUserUuidsList addObjectsFromArray:other.mutableSeenUserUuidsList];
    }
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QueueUpRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QueueUpRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasAttacker) {
          [subBuilder mergeFrom:self.attacker];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAttacker:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setAttackerElo:[input readInt32]];
        break;
      }
      case 42: {
        [self addSeenUserUuids:[input readString]];
        break;
      }
      case 48: {
        [self setClientTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasAttacker {
  return result.hasAttacker;
}
- (MinimumUserProto*) attacker {
  return result.attacker;
}
- (QueueUpRequestProto_Builder*) setAttacker:(MinimumUserProto*) value {
  result.hasAttacker = YES;
  result.attacker = value;
  return self;
}
- (QueueUpRequestProto_Builder*) setAttacker_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setAttacker:[builderForValue build]];
}
- (QueueUpRequestProto_Builder*) mergeAttacker:(MinimumUserProto*) value {
  if (result.hasAttacker &&
      result.attacker != [MinimumUserProto defaultInstance]) {
    result.attacker =
      [[[MinimumUserProto builderWithPrototype:result.attacker] mergeFrom:value] buildPartial];
  } else {
    result.attacker = value;
  }
  result.hasAttacker = YES;
  return self;
}
- (QueueUpRequestProto_Builder*) clearAttacker {
  result.hasAttacker = NO;
  result.attacker = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasAttackerElo {
  return result.hasAttackerElo;
}
- (int32_t) attackerElo {
  return result.attackerElo;
}
- (QueueUpRequestProto_Builder*) setAttackerElo:(int32_t) value {
  result.hasAttackerElo = YES;
  result.attackerElo = value;
  return self;
}
- (QueueUpRequestProto_Builder*) clearAttackerElo {
  result.hasAttackerElo = NO;
  result.attackerElo = 0;
  return self;
}
- (NSMutableArray *)seenUserUuidsList {
  return result.mutableSeenUserUuidsList;
}
- (NSString*)seenUserUuidsAtIndex:(NSUInteger)index {
  return [result seenUserUuidsAtIndex:index];
}
- (QueueUpRequestProto_Builder *)addSeenUserUuids:(NSString*)value {
  if (result.mutableSeenUserUuidsList == nil) {
    result.mutableSeenUserUuidsList = [[NSMutableArray alloc]init];
  }
  [result.mutableSeenUserUuidsList addObject:value];
  return self;
}
- (QueueUpRequestProto_Builder *)addAllSeenUserUuids:(NSArray *)array {
  if (result.mutableSeenUserUuidsList == nil) {
    result.mutableSeenUserUuidsList = [NSMutableArray array];
  }
  [result.mutableSeenUserUuidsList addObjectsFromArray:array];
  return self;
}
- (QueueUpRequestProto_Builder *)clearSeenUserUuids {
  result.mutableSeenUserUuidsList = nil;
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (QueueUpRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (QueueUpRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
@end

@interface QueueUpResponseProto ()
@property (strong) MinimumUserProto* attacker;
@property (strong) NSMutableArray * mutableDefenderInfoListList;
@property QueueUpResponseProto_QueueUpStatus status;
@end

@implementation QueueUpResponseProto

- (BOOL) hasAttacker {
  return !!hasAttacker_;
}
- (void) setHasAttacker:(BOOL) value_ {
  hasAttacker_ = !!value_;
}
@synthesize attacker;
@synthesize mutableDefenderInfoListList;
@dynamic defenderInfoListList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.attacker = [MinimumUserProto defaultInstance];
    self.status = QueueUpResponseProto_QueueUpStatusSuccess;
  }
  return self;
}
static QueueUpResponseProto* defaultQueueUpResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [QueueUpResponseProto class]) {
    defaultQueueUpResponseProtoInstance = [[QueueUpResponseProto alloc] init];
  }
}
+ (QueueUpResponseProto*) defaultInstance {
  return defaultQueueUpResponseProtoInstance;
}
- (QueueUpResponseProto*) defaultInstance {
  return defaultQueueUpResponseProtoInstance;
}
- (NSArray *)defenderInfoListList {
  return mutableDefenderInfoListList;
}
- (PvpProto*)defenderInfoListAtIndex:(NSUInteger)index {
  return [mutableDefenderInfoListList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAttacker) {
    [output writeMessage:1 value:self.attacker];
  }
  [self.defenderInfoListList enumerateObjectsUsingBlock:^(PvpProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAttacker) {
    size_ += computeMessageSize(1, self.attacker);
  }
  [self.defenderInfoListList enumerateObjectsUsingBlock:^(PvpProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasStatus) {
    size_ += computeEnumSize(3, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (QueueUpResponseProto*) parseFromData:(NSData*) data {
  return (QueueUpResponseProto*)[[[QueueUpResponseProto builder] mergeFromData:data] build];
}
+ (QueueUpResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueueUpResponseProto*)[[[QueueUpResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QueueUpResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (QueueUpResponseProto*)[[[QueueUpResponseProto builder] mergeFromInputStream:input] build];
}
+ (QueueUpResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueueUpResponseProto*)[[[QueueUpResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueueUpResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QueueUpResponseProto*)[[[QueueUpResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (QueueUpResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueueUpResponseProto*)[[[QueueUpResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueueUpResponseProto_Builder*) builder {
  return [[QueueUpResponseProto_Builder alloc] init];
}
+ (QueueUpResponseProto_Builder*) builderWithPrototype:(QueueUpResponseProto*) prototype {
  return [[QueueUpResponseProto builder] mergeFrom:prototype];
}
- (QueueUpResponseProto_Builder*) builder {
  return [QueueUpResponseProto builder];
}
- (QueueUpResponseProto_Builder*) toBuilder {
  return [QueueUpResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAttacker) {
    [output appendFormat:@"%@%@ {\n", indent, @"attacker"];
    [self.attacker writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.defenderInfoListList enumerateObjectsUsingBlock:^(PvpProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"defenderInfoList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[QueueUpResponseProto class]]) {
    return NO;
  }
  QueueUpResponseProto *otherMessage = other;
  return
      self.hasAttacker == otherMessage.hasAttacker &&
      (!self.hasAttacker || [self.attacker isEqual:otherMessage.attacker]) &&
      [self.defenderInfoListList isEqualToArray:otherMessage.defenderInfoListList] &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAttacker) {
    hashCode = hashCode * 31 + [self.attacker hash];
  }
  [self.defenderInfoListList enumerateObjectsUsingBlock:^(PvpProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL QueueUpResponseProto_QueueUpStatusIsValidValue(QueueUpResponseProto_QueueUpStatus value) {
  switch (value) {
    case QueueUpResponseProto_QueueUpStatusSuccess:
    case QueueUpResponseProto_QueueUpStatusFailNotEnoughCash:
    case QueueUpResponseProto_QueueUpStatusFailOther:
    case QueueUpResponseProto_QueueUpStatusFailNotEnoughGems:
      return YES;
    default:
      return NO;
  }
}
@interface QueueUpResponseProto_Builder()
@property (strong) QueueUpResponseProto* result;
@end

@implementation QueueUpResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[QueueUpResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QueueUpResponseProto_Builder*) clear {
  self.result = [[QueueUpResponseProto alloc] init];
  return self;
}
- (QueueUpResponseProto_Builder*) clone {
  return [QueueUpResponseProto builderWithPrototype:result];
}
- (QueueUpResponseProto*) defaultInstance {
  return [QueueUpResponseProto defaultInstance];
}
- (QueueUpResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QueueUpResponseProto*) buildPartial {
  QueueUpResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (QueueUpResponseProto_Builder*) mergeFrom:(QueueUpResponseProto*) other {
  if (other == [QueueUpResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasAttacker) {
    [self mergeAttacker:other.attacker];
  }
  if (other.mutableDefenderInfoListList.count > 0) {
    if (result.mutableDefenderInfoListList == nil) {
      result.mutableDefenderInfoListList = [[NSMutableArray alloc] initWithArray:other.mutableDefenderInfoListList];
    } else {
      [result.mutableDefenderInfoListList addObjectsFromArray:other.mutableDefenderInfoListList];
    }
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QueueUpResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QueueUpResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasAttacker) {
          [subBuilder mergeFrom:self.attacker];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAttacker:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PvpProto_Builder* subBuilder = [PvpProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDefenderInfoList:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        QueueUpResponseProto_QueueUpStatus value = (QueueUpResponseProto_QueueUpStatus)[input readEnum];
        if (QueueUpResponseProto_QueueUpStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasAttacker {
  return result.hasAttacker;
}
- (MinimumUserProto*) attacker {
  return result.attacker;
}
- (QueueUpResponseProto_Builder*) setAttacker:(MinimumUserProto*) value {
  result.hasAttacker = YES;
  result.attacker = value;
  return self;
}
- (QueueUpResponseProto_Builder*) setAttacker_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setAttacker:[builderForValue build]];
}
- (QueueUpResponseProto_Builder*) mergeAttacker:(MinimumUserProto*) value {
  if (result.hasAttacker &&
      result.attacker != [MinimumUserProto defaultInstance]) {
    result.attacker =
      [[[MinimumUserProto builderWithPrototype:result.attacker] mergeFrom:value] buildPartial];
  } else {
    result.attacker = value;
  }
  result.hasAttacker = YES;
  return self;
}
- (QueueUpResponseProto_Builder*) clearAttacker {
  result.hasAttacker = NO;
  result.attacker = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)defenderInfoListList {
  return result.mutableDefenderInfoListList;
}
- (PvpProto*)defenderInfoListAtIndex:(NSUInteger)index {
  return [result defenderInfoListAtIndex:index];
}
- (QueueUpResponseProto_Builder *)addDefenderInfoList:(PvpProto*)value {
  if (result.mutableDefenderInfoListList == nil) {
    result.mutableDefenderInfoListList = [[NSMutableArray alloc]init];
  }
  [result.mutableDefenderInfoListList addObject:value];
  return self;
}
- (QueueUpResponseProto_Builder *)addAllDefenderInfoList:(NSArray *)array {
  if (result.mutableDefenderInfoListList == nil) {
    result.mutableDefenderInfoListList = [NSMutableArray array];
  }
  [result.mutableDefenderInfoListList addObjectsFromArray:array];
  return self;
}
- (QueueUpResponseProto_Builder *)clearDefenderInfoList {
  result.mutableDefenderInfoListList = nil;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (QueueUpResponseProto_QueueUpStatus) status {
  return result.status;
}
- (QueueUpResponseProto_Builder*) setStatus:(QueueUpResponseProto_QueueUpStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (QueueUpResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = QueueUpResponseProto_QueueUpStatusSuccess;
  return self;
}
@end

@interface BeginPvpBattleRequestProto ()
@property (strong) MinimumUserProto* sender;
@property int32_t senderElo;
@property int64_t attackStartTime;
@property (strong) PvpProto* enemy;
@property BOOL exactingRevenge;
@property int64_t previousBattleEndTime;
@end

@implementation BeginPvpBattleRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasSenderElo {
  return !!hasSenderElo_;
}
- (void) setHasSenderElo:(BOOL) value_ {
  hasSenderElo_ = !!value_;
}
@synthesize senderElo;
- (BOOL) hasAttackStartTime {
  return !!hasAttackStartTime_;
}
- (void) setHasAttackStartTime:(BOOL) value_ {
  hasAttackStartTime_ = !!value_;
}
@synthesize attackStartTime;
- (BOOL) hasEnemy {
  return !!hasEnemy_;
}
- (void) setHasEnemy:(BOOL) value_ {
  hasEnemy_ = !!value_;
}
@synthesize enemy;
- (BOOL) hasExactingRevenge {
  return !!hasExactingRevenge_;
}
- (void) setHasExactingRevenge:(BOOL) value_ {
  hasExactingRevenge_ = !!value_;
}
- (BOOL) exactingRevenge {
  return !!exactingRevenge_;
}
- (void) setExactingRevenge:(BOOL) value_ {
  exactingRevenge_ = !!value_;
}
- (BOOL) hasPreviousBattleEndTime {
  return !!hasPreviousBattleEndTime_;
}
- (void) setHasPreviousBattleEndTime:(BOOL) value_ {
  hasPreviousBattleEndTime_ = !!value_;
}
@synthesize previousBattleEndTime;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.senderElo = 0;
    self.attackStartTime = 0L;
    self.enemy = [PvpProto defaultInstance];
    self.exactingRevenge = NO;
    self.previousBattleEndTime = 0L;
  }
  return self;
}
static BeginPvpBattleRequestProto* defaultBeginPvpBattleRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [BeginPvpBattleRequestProto class]) {
    defaultBeginPvpBattleRequestProtoInstance = [[BeginPvpBattleRequestProto alloc] init];
  }
}
+ (BeginPvpBattleRequestProto*) defaultInstance {
  return defaultBeginPvpBattleRequestProtoInstance;
}
- (BeginPvpBattleRequestProto*) defaultInstance {
  return defaultBeginPvpBattleRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasSenderElo) {
    [output writeInt32:2 value:self.senderElo];
  }
  if (self.hasAttackStartTime) {
    [output writeInt64:3 value:self.attackStartTime];
  }
  if (self.hasEnemy) {
    [output writeMessage:4 value:self.enemy];
  }
  if (self.hasExactingRevenge) {
    [output writeBool:5 value:self.exactingRevenge];
  }
  if (self.hasPreviousBattleEndTime) {
    [output writeInt64:6 value:self.previousBattleEndTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasSenderElo) {
    size_ += computeInt32Size(2, self.senderElo);
  }
  if (self.hasAttackStartTime) {
    size_ += computeInt64Size(3, self.attackStartTime);
  }
  if (self.hasEnemy) {
    size_ += computeMessageSize(4, self.enemy);
  }
  if (self.hasExactingRevenge) {
    size_ += computeBoolSize(5, self.exactingRevenge);
  }
  if (self.hasPreviousBattleEndTime) {
    size_ += computeInt64Size(6, self.previousBattleEndTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BeginPvpBattleRequestProto*) parseFromData:(NSData*) data {
  return (BeginPvpBattleRequestProto*)[[[BeginPvpBattleRequestProto builder] mergeFromData:data] build];
}
+ (BeginPvpBattleRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginPvpBattleRequestProto*)[[[BeginPvpBattleRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BeginPvpBattleRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (BeginPvpBattleRequestProto*)[[[BeginPvpBattleRequestProto builder] mergeFromInputStream:input] build];
}
+ (BeginPvpBattleRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginPvpBattleRequestProto*)[[[BeginPvpBattleRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginPvpBattleRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BeginPvpBattleRequestProto*)[[[BeginPvpBattleRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (BeginPvpBattleRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginPvpBattleRequestProto*)[[[BeginPvpBattleRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginPvpBattleRequestProto_Builder*) builder {
  return [[BeginPvpBattleRequestProto_Builder alloc] init];
}
+ (BeginPvpBattleRequestProto_Builder*) builderWithPrototype:(BeginPvpBattleRequestProto*) prototype {
  return [[BeginPvpBattleRequestProto builder] mergeFrom:prototype];
}
- (BeginPvpBattleRequestProto_Builder*) builder {
  return [BeginPvpBattleRequestProto builder];
}
- (BeginPvpBattleRequestProto_Builder*) toBuilder {
  return [BeginPvpBattleRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasSenderElo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderElo", [NSNumber numberWithInteger:self.senderElo]];
  }
  if (self.hasAttackStartTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attackStartTime", [NSNumber numberWithLongLong:self.attackStartTime]];
  }
  if (self.hasEnemy) {
    [output appendFormat:@"%@%@ {\n", indent, @"enemy"];
    [self.enemy writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasExactingRevenge) {
    [output appendFormat:@"%@%@: %@\n", indent, @"exactingRevenge", [NSNumber numberWithBool:self.exactingRevenge]];
  }
  if (self.hasPreviousBattleEndTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"previousBattleEndTime", [NSNumber numberWithLongLong:self.previousBattleEndTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BeginPvpBattleRequestProto class]]) {
    return NO;
  }
  BeginPvpBattleRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasSenderElo == otherMessage.hasSenderElo &&
      (!self.hasSenderElo || self.senderElo == otherMessage.senderElo) &&
      self.hasAttackStartTime == otherMessage.hasAttackStartTime &&
      (!self.hasAttackStartTime || self.attackStartTime == otherMessage.attackStartTime) &&
      self.hasEnemy == otherMessage.hasEnemy &&
      (!self.hasEnemy || [self.enemy isEqual:otherMessage.enemy]) &&
      self.hasExactingRevenge == otherMessage.hasExactingRevenge &&
      (!self.hasExactingRevenge || self.exactingRevenge == otherMessage.exactingRevenge) &&
      self.hasPreviousBattleEndTime == otherMessage.hasPreviousBattleEndTime &&
      (!self.hasPreviousBattleEndTime || self.previousBattleEndTime == otherMessage.previousBattleEndTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasSenderElo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.senderElo] hash];
  }
  if (self.hasAttackStartTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.attackStartTime] hash];
  }
  if (self.hasEnemy) {
    hashCode = hashCode * 31 + [self.enemy hash];
  }
  if (self.hasExactingRevenge) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.exactingRevenge] hash];
  }
  if (self.hasPreviousBattleEndTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.previousBattleEndTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BeginPvpBattleRequestProto_Builder()
@property (strong) BeginPvpBattleRequestProto* result;
@end

@implementation BeginPvpBattleRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BeginPvpBattleRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BeginPvpBattleRequestProto_Builder*) clear {
  self.result = [[BeginPvpBattleRequestProto alloc] init];
  return self;
}
- (BeginPvpBattleRequestProto_Builder*) clone {
  return [BeginPvpBattleRequestProto builderWithPrototype:result];
}
- (BeginPvpBattleRequestProto*) defaultInstance {
  return [BeginPvpBattleRequestProto defaultInstance];
}
- (BeginPvpBattleRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BeginPvpBattleRequestProto*) buildPartial {
  BeginPvpBattleRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BeginPvpBattleRequestProto_Builder*) mergeFrom:(BeginPvpBattleRequestProto*) other {
  if (other == [BeginPvpBattleRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasSenderElo) {
    [self setSenderElo:other.senderElo];
  }
  if (other.hasAttackStartTime) {
    [self setAttackStartTime:other.attackStartTime];
  }
  if (other.hasEnemy) {
    [self mergeEnemy:other.enemy];
  }
  if (other.hasExactingRevenge) {
    [self setExactingRevenge:other.exactingRevenge];
  }
  if (other.hasPreviousBattleEndTime) {
    [self setPreviousBattleEndTime:other.previousBattleEndTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BeginPvpBattleRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BeginPvpBattleRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setSenderElo:[input readInt32]];
        break;
      }
      case 24: {
        [self setAttackStartTime:[input readInt64]];
        break;
      }
      case 34: {
        PvpProto_Builder* subBuilder = [PvpProto builder];
        if (self.hasEnemy) {
          [subBuilder mergeFrom:self.enemy];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEnemy:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setExactingRevenge:[input readBool]];
        break;
      }
      case 48: {
        [self setPreviousBattleEndTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BeginPvpBattleRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BeginPvpBattleRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BeginPvpBattleRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BeginPvpBattleRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasSenderElo {
  return result.hasSenderElo;
}
- (int32_t) senderElo {
  return result.senderElo;
}
- (BeginPvpBattleRequestProto_Builder*) setSenderElo:(int32_t) value {
  result.hasSenderElo = YES;
  result.senderElo = value;
  return self;
}
- (BeginPvpBattleRequestProto_Builder*) clearSenderElo {
  result.hasSenderElo = NO;
  result.senderElo = 0;
  return self;
}
- (BOOL) hasAttackStartTime {
  return result.hasAttackStartTime;
}
- (int64_t) attackStartTime {
  return result.attackStartTime;
}
- (BeginPvpBattleRequestProto_Builder*) setAttackStartTime:(int64_t) value {
  result.hasAttackStartTime = YES;
  result.attackStartTime = value;
  return self;
}
- (BeginPvpBattleRequestProto_Builder*) clearAttackStartTime {
  result.hasAttackStartTime = NO;
  result.attackStartTime = 0L;
  return self;
}
- (BOOL) hasEnemy {
  return result.hasEnemy;
}
- (PvpProto*) enemy {
  return result.enemy;
}
- (BeginPvpBattleRequestProto_Builder*) setEnemy:(PvpProto*) value {
  result.hasEnemy = YES;
  result.enemy = value;
  return self;
}
- (BeginPvpBattleRequestProto_Builder*) setEnemy_Builder:(PvpProto_Builder*) builderForValue {
  return [self setEnemy:[builderForValue build]];
}
- (BeginPvpBattleRequestProto_Builder*) mergeEnemy:(PvpProto*) value {
  if (result.hasEnemy &&
      result.enemy != [PvpProto defaultInstance]) {
    result.enemy =
      [[[PvpProto builderWithPrototype:result.enemy] mergeFrom:value] buildPartial];
  } else {
    result.enemy = value;
  }
  result.hasEnemy = YES;
  return self;
}
- (BeginPvpBattleRequestProto_Builder*) clearEnemy {
  result.hasEnemy = NO;
  result.enemy = [PvpProto defaultInstance];
  return self;
}
- (BOOL) hasExactingRevenge {
  return result.hasExactingRevenge;
}
- (BOOL) exactingRevenge {
  return result.exactingRevenge;
}
- (BeginPvpBattleRequestProto_Builder*) setExactingRevenge:(BOOL) value {
  result.hasExactingRevenge = YES;
  result.exactingRevenge = value;
  return self;
}
- (BeginPvpBattleRequestProto_Builder*) clearExactingRevenge {
  result.hasExactingRevenge = NO;
  result.exactingRevenge = NO;
  return self;
}
- (BOOL) hasPreviousBattleEndTime {
  return result.hasPreviousBattleEndTime;
}
- (int64_t) previousBattleEndTime {
  return result.previousBattleEndTime;
}
- (BeginPvpBattleRequestProto_Builder*) setPreviousBattleEndTime:(int64_t) value {
  result.hasPreviousBattleEndTime = YES;
  result.previousBattleEndTime = value;
  return self;
}
- (BeginPvpBattleRequestProto_Builder*) clearPreviousBattleEndTime {
  result.hasPreviousBattleEndTime = NO;
  result.previousBattleEndTime = 0L;
  return self;
}
@end

@interface BeginPvpBattleResponseProto ()
@property (strong) MinimumUserProto* sender;
@property BeginPvpBattleResponseProto_BeginPvpBattleStatus status;
@end

@implementation BeginPvpBattleResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = BeginPvpBattleResponseProto_BeginPvpBattleStatusSuccess;
  }
  return self;
}
static BeginPvpBattleResponseProto* defaultBeginPvpBattleResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [BeginPvpBattleResponseProto class]) {
    defaultBeginPvpBattleResponseProtoInstance = [[BeginPvpBattleResponseProto alloc] init];
  }
}
+ (BeginPvpBattleResponseProto*) defaultInstance {
  return defaultBeginPvpBattleResponseProtoInstance;
}
- (BeginPvpBattleResponseProto*) defaultInstance {
  return defaultBeginPvpBattleResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BeginPvpBattleResponseProto*) parseFromData:(NSData*) data {
  return (BeginPvpBattleResponseProto*)[[[BeginPvpBattleResponseProto builder] mergeFromData:data] build];
}
+ (BeginPvpBattleResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginPvpBattleResponseProto*)[[[BeginPvpBattleResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BeginPvpBattleResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (BeginPvpBattleResponseProto*)[[[BeginPvpBattleResponseProto builder] mergeFromInputStream:input] build];
}
+ (BeginPvpBattleResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginPvpBattleResponseProto*)[[[BeginPvpBattleResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginPvpBattleResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BeginPvpBattleResponseProto*)[[[BeginPvpBattleResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (BeginPvpBattleResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginPvpBattleResponseProto*)[[[BeginPvpBattleResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginPvpBattleResponseProto_Builder*) builder {
  return [[BeginPvpBattleResponseProto_Builder alloc] init];
}
+ (BeginPvpBattleResponseProto_Builder*) builderWithPrototype:(BeginPvpBattleResponseProto*) prototype {
  return [[BeginPvpBattleResponseProto builder] mergeFrom:prototype];
}
- (BeginPvpBattleResponseProto_Builder*) builder {
  return [BeginPvpBattleResponseProto builder];
}
- (BeginPvpBattleResponseProto_Builder*) toBuilder {
  return [BeginPvpBattleResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BeginPvpBattleResponseProto class]]) {
    return NO;
  }
  BeginPvpBattleResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL BeginPvpBattleResponseProto_BeginPvpBattleStatusIsValidValue(BeginPvpBattleResponseProto_BeginPvpBattleStatus value) {
  switch (value) {
    case BeginPvpBattleResponseProto_BeginPvpBattleStatusSuccess:
    case BeginPvpBattleResponseProto_BeginPvpBattleStatusFailEnemyUnavailable:
    case BeginPvpBattleResponseProto_BeginPvpBattleStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface BeginPvpBattleResponseProto_Builder()
@property (strong) BeginPvpBattleResponseProto* result;
@end

@implementation BeginPvpBattleResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BeginPvpBattleResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BeginPvpBattleResponseProto_Builder*) clear {
  self.result = [[BeginPvpBattleResponseProto alloc] init];
  return self;
}
- (BeginPvpBattleResponseProto_Builder*) clone {
  return [BeginPvpBattleResponseProto builderWithPrototype:result];
}
- (BeginPvpBattleResponseProto*) defaultInstance {
  return [BeginPvpBattleResponseProto defaultInstance];
}
- (BeginPvpBattleResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BeginPvpBattleResponseProto*) buildPartial {
  BeginPvpBattleResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BeginPvpBattleResponseProto_Builder*) mergeFrom:(BeginPvpBattleResponseProto*) other {
  if (other == [BeginPvpBattleResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BeginPvpBattleResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BeginPvpBattleResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        BeginPvpBattleResponseProto_BeginPvpBattleStatus value = (BeginPvpBattleResponseProto_BeginPvpBattleStatus)[input readEnum];
        if (BeginPvpBattleResponseProto_BeginPvpBattleStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BeginPvpBattleResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BeginPvpBattleResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BeginPvpBattleResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BeginPvpBattleResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (BeginPvpBattleResponseProto_BeginPvpBattleStatus) status {
  return result.status;
}
- (BeginPvpBattleResponseProto_Builder*) setStatus:(BeginPvpBattleResponseProto_BeginPvpBattleStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (BeginPvpBattleResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = BeginPvpBattleResponseProto_BeginPvpBattleStatusSuccess;
  return self;
}
@end

@interface EndPvpBattleRequestProto ()
@property (strong) MinimumUserProtoWithMaxResources* sender;
@property (strong) NSString* defenderUuid;
@property BOOL userAttacked;
@property BOOL userWon;
@property int64_t clientTime;
@property int32_t oilChange;
@property int32_t cashChange;
@property Float32 nuPvpDmgMultiplier;
@property (strong) PBAppendableArray * mutableMonsterDropIdsList;
@end

@implementation EndPvpBattleRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasDefenderUuid {
  return !!hasDefenderUuid_;
}
- (void) setHasDefenderUuid:(BOOL) value_ {
  hasDefenderUuid_ = !!value_;
}
@synthesize defenderUuid;
- (BOOL) hasUserAttacked {
  return !!hasUserAttacked_;
}
- (void) setHasUserAttacked:(BOOL) value_ {
  hasUserAttacked_ = !!value_;
}
- (BOOL) userAttacked {
  return !!userAttacked_;
}
- (void) setUserAttacked:(BOOL) value_ {
  userAttacked_ = !!value_;
}
- (BOOL) hasUserWon {
  return !!hasUserWon_;
}
- (void) setHasUserWon:(BOOL) value_ {
  hasUserWon_ = !!value_;
}
- (BOOL) userWon {
  return !!userWon_;
}
- (void) setUserWon:(BOOL) value_ {
  userWon_ = !!value_;
}
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (BOOL) hasOilChange {
  return !!hasOilChange_;
}
- (void) setHasOilChange:(BOOL) value_ {
  hasOilChange_ = !!value_;
}
@synthesize oilChange;
- (BOOL) hasCashChange {
  return !!hasCashChange_;
}
- (void) setHasCashChange:(BOOL) value_ {
  hasCashChange_ = !!value_;
}
@synthesize cashChange;
- (BOOL) hasNuPvpDmgMultiplier {
  return !!hasNuPvpDmgMultiplier_;
}
- (void) setHasNuPvpDmgMultiplier:(BOOL) value_ {
  hasNuPvpDmgMultiplier_ = !!value_;
}
@synthesize nuPvpDmgMultiplier;
@synthesize mutableMonsterDropIdsList;
@dynamic monsterDropIdsList;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.defenderUuid = @"";
    self.userAttacked = NO;
    self.userWon = NO;
    self.clientTime = 0L;
    self.oilChange = 0;
    self.cashChange = 0;
    self.nuPvpDmgMultiplier = 0;
  }
  return self;
}
static EndPvpBattleRequestProto* defaultEndPvpBattleRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [EndPvpBattleRequestProto class]) {
    defaultEndPvpBattleRequestProtoInstance = [[EndPvpBattleRequestProto alloc] init];
  }
}
+ (EndPvpBattleRequestProto*) defaultInstance {
  return defaultEndPvpBattleRequestProtoInstance;
}
- (EndPvpBattleRequestProto*) defaultInstance {
  return defaultEndPvpBattleRequestProtoInstance;
}
- (PBArray *)monsterDropIdsList {
  return mutableMonsterDropIdsList;
}
- (int32_t)monsterDropIdsAtIndex:(NSUInteger)index {
  return [mutableMonsterDropIdsList int32AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasDefenderUuid) {
    [output writeString:2 value:self.defenderUuid];
  }
  if (self.hasUserAttacked) {
    [output writeBool:3 value:self.userAttacked];
  }
  if (self.hasUserWon) {
    [output writeBool:4 value:self.userWon];
  }
  if (self.hasClientTime) {
    [output writeInt64:5 value:self.clientTime];
  }
  if (self.hasOilChange) {
    [output writeInt32:6 value:self.oilChange];
  }
  if (self.hasCashChange) {
    [output writeInt32:7 value:self.cashChange];
  }
  if (self.hasNuPvpDmgMultiplier) {
    [output writeFloat:8 value:self.nuPvpDmgMultiplier];
  }
  const NSUInteger monsterDropIdsListCount = self.monsterDropIdsList.count;
  if (monsterDropIdsListCount > 0) {
    const int32_t *values = (const int32_t *)self.monsterDropIdsList.data;
    for (NSUInteger i = 0; i < monsterDropIdsListCount; ++i) {
      [output writeInt32:9 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasDefenderUuid) {
    size_ += computeStringSize(2, self.defenderUuid);
  }
  if (self.hasUserAttacked) {
    size_ += computeBoolSize(3, self.userAttacked);
  }
  if (self.hasUserWon) {
    size_ += computeBoolSize(4, self.userWon);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(5, self.clientTime);
  }
  if (self.hasOilChange) {
    size_ += computeInt32Size(6, self.oilChange);
  }
  if (self.hasCashChange) {
    size_ += computeInt32Size(7, self.cashChange);
  }
  if (self.hasNuPvpDmgMultiplier) {
    size_ += computeFloatSize(8, self.nuPvpDmgMultiplier);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.monsterDropIdsList.count;
    const int32_t *values = (const int32_t *)self.monsterDropIdsList.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (EndPvpBattleRequestProto*) parseFromData:(NSData*) data {
  return (EndPvpBattleRequestProto*)[[[EndPvpBattleRequestProto builder] mergeFromData:data] build];
}
+ (EndPvpBattleRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndPvpBattleRequestProto*)[[[EndPvpBattleRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EndPvpBattleRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (EndPvpBattleRequestProto*)[[[EndPvpBattleRequestProto builder] mergeFromInputStream:input] build];
}
+ (EndPvpBattleRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndPvpBattleRequestProto*)[[[EndPvpBattleRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndPvpBattleRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EndPvpBattleRequestProto*)[[[EndPvpBattleRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (EndPvpBattleRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndPvpBattleRequestProto*)[[[EndPvpBattleRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndPvpBattleRequestProto_Builder*) builder {
  return [[EndPvpBattleRequestProto_Builder alloc] init];
}
+ (EndPvpBattleRequestProto_Builder*) builderWithPrototype:(EndPvpBattleRequestProto*) prototype {
  return [[EndPvpBattleRequestProto builder] mergeFrom:prototype];
}
- (EndPvpBattleRequestProto_Builder*) builder {
  return [EndPvpBattleRequestProto builder];
}
- (EndPvpBattleRequestProto_Builder*) toBuilder {
  return [EndPvpBattleRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasDefenderUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defenderUuid", self.defenderUuid];
  }
  if (self.hasUserAttacked) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userAttacked", [NSNumber numberWithBool:self.userAttacked]];
  }
  if (self.hasUserWon) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userWon", [NSNumber numberWithBool:self.userWon]];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  if (self.hasOilChange) {
    [output appendFormat:@"%@%@: %@\n", indent, @"oilChange", [NSNumber numberWithInteger:self.oilChange]];
  }
  if (self.hasCashChange) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cashChange", [NSNumber numberWithInteger:self.cashChange]];
  }
  if (self.hasNuPvpDmgMultiplier) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nuPvpDmgMultiplier", [NSNumber numberWithFloat:self.nuPvpDmgMultiplier]];
  }
  [self.monsterDropIdsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"monsterDropIds", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[EndPvpBattleRequestProto class]]) {
    return NO;
  }
  EndPvpBattleRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasDefenderUuid == otherMessage.hasDefenderUuid &&
      (!self.hasDefenderUuid || [self.defenderUuid isEqual:otherMessage.defenderUuid]) &&
      self.hasUserAttacked == otherMessage.hasUserAttacked &&
      (!self.hasUserAttacked || self.userAttacked == otherMessage.userAttacked) &&
      self.hasUserWon == otherMessage.hasUserWon &&
      (!self.hasUserWon || self.userWon == otherMessage.userWon) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      self.hasOilChange == otherMessage.hasOilChange &&
      (!self.hasOilChange || self.oilChange == otherMessage.oilChange) &&
      self.hasCashChange == otherMessage.hasCashChange &&
      (!self.hasCashChange || self.cashChange == otherMessage.cashChange) &&
      self.hasNuPvpDmgMultiplier == otherMessage.hasNuPvpDmgMultiplier &&
      (!self.hasNuPvpDmgMultiplier || self.nuPvpDmgMultiplier == otherMessage.nuPvpDmgMultiplier) &&
      [self.monsterDropIdsList isEqualToArray:otherMessage.monsterDropIdsList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasDefenderUuid) {
    hashCode = hashCode * 31 + [self.defenderUuid hash];
  }
  if (self.hasUserAttacked) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.userAttacked] hash];
  }
  if (self.hasUserWon) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.userWon] hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  if (self.hasOilChange) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.oilChange] hash];
  }
  if (self.hasCashChange) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cashChange] hash];
  }
  if (self.hasNuPvpDmgMultiplier) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.nuPvpDmgMultiplier] hash];
  }
  [self.monsterDropIdsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface EndPvpBattleRequestProto_Builder()
@property (strong) EndPvpBattleRequestProto* result;
@end

@implementation EndPvpBattleRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[EndPvpBattleRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EndPvpBattleRequestProto_Builder*) clear {
  self.result = [[EndPvpBattleRequestProto alloc] init];
  return self;
}
- (EndPvpBattleRequestProto_Builder*) clone {
  return [EndPvpBattleRequestProto builderWithPrototype:result];
}
- (EndPvpBattleRequestProto*) defaultInstance {
  return [EndPvpBattleRequestProto defaultInstance];
}
- (EndPvpBattleRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EndPvpBattleRequestProto*) buildPartial {
  EndPvpBattleRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (EndPvpBattleRequestProto_Builder*) mergeFrom:(EndPvpBattleRequestProto*) other {
  if (other == [EndPvpBattleRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasDefenderUuid) {
    [self setDefenderUuid:other.defenderUuid];
  }
  if (other.hasUserAttacked) {
    [self setUserAttacked:other.userAttacked];
  }
  if (other.hasUserWon) {
    [self setUserWon:other.userWon];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.hasOilChange) {
    [self setOilChange:other.oilChange];
  }
  if (other.hasCashChange) {
    [self setCashChange:other.cashChange];
  }
  if (other.hasNuPvpDmgMultiplier) {
    [self setNuPvpDmgMultiplier:other.nuPvpDmgMultiplier];
  }
  if (other.mutableMonsterDropIdsList.count > 0) {
    if (result.mutableMonsterDropIdsList == nil) {
      result.mutableMonsterDropIdsList = [other.mutableMonsterDropIdsList copy];
    } else {
      [result.mutableMonsterDropIdsList appendArray:other.mutableMonsterDropIdsList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EndPvpBattleRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EndPvpBattleRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setDefenderUuid:[input readString]];
        break;
      }
      case 24: {
        [self setUserAttacked:[input readBool]];
        break;
      }
      case 32: {
        [self setUserWon:[input readBool]];
        break;
      }
      case 40: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 48: {
        [self setOilChange:[input readInt32]];
        break;
      }
      case 56: {
        [self setCashChange:[input readInt32]];
        break;
      }
      case 69: {
        [self setNuPvpDmgMultiplier:[input readFloat]];
        break;
      }
      case 72: {
        [self addMonsterDropIds:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (EndPvpBattleRequestProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (EndPvpBattleRequestProto_Builder*) setSender_Builder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (EndPvpBattleRequestProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (EndPvpBattleRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (BOOL) hasDefenderUuid {
  return result.hasDefenderUuid;
}
- (NSString*) defenderUuid {
  return result.defenderUuid;
}
- (EndPvpBattleRequestProto_Builder*) setDefenderUuid:(NSString*) value {
  result.hasDefenderUuid = YES;
  result.defenderUuid = value;
  return self;
}
- (EndPvpBattleRequestProto_Builder*) clearDefenderUuid {
  result.hasDefenderUuid = NO;
  result.defenderUuid = @"";
  return self;
}
- (BOOL) hasUserAttacked {
  return result.hasUserAttacked;
}
- (BOOL) userAttacked {
  return result.userAttacked;
}
- (EndPvpBattleRequestProto_Builder*) setUserAttacked:(BOOL) value {
  result.hasUserAttacked = YES;
  result.userAttacked = value;
  return self;
}
- (EndPvpBattleRequestProto_Builder*) clearUserAttacked {
  result.hasUserAttacked = NO;
  result.userAttacked = NO;
  return self;
}
- (BOOL) hasUserWon {
  return result.hasUserWon;
}
- (BOOL) userWon {
  return result.userWon;
}
- (EndPvpBattleRequestProto_Builder*) setUserWon:(BOOL) value {
  result.hasUserWon = YES;
  result.userWon = value;
  return self;
}
- (EndPvpBattleRequestProto_Builder*) clearUserWon {
  result.hasUserWon = NO;
  result.userWon = NO;
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (EndPvpBattleRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (EndPvpBattleRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (BOOL) hasOilChange {
  return result.hasOilChange;
}
- (int32_t) oilChange {
  return result.oilChange;
}
- (EndPvpBattleRequestProto_Builder*) setOilChange:(int32_t) value {
  result.hasOilChange = YES;
  result.oilChange = value;
  return self;
}
- (EndPvpBattleRequestProto_Builder*) clearOilChange {
  result.hasOilChange = NO;
  result.oilChange = 0;
  return self;
}
- (BOOL) hasCashChange {
  return result.hasCashChange;
}
- (int32_t) cashChange {
  return result.cashChange;
}
- (EndPvpBattleRequestProto_Builder*) setCashChange:(int32_t) value {
  result.hasCashChange = YES;
  result.cashChange = value;
  return self;
}
- (EndPvpBattleRequestProto_Builder*) clearCashChange {
  result.hasCashChange = NO;
  result.cashChange = 0;
  return self;
}
- (BOOL) hasNuPvpDmgMultiplier {
  return result.hasNuPvpDmgMultiplier;
}
- (Float32) nuPvpDmgMultiplier {
  return result.nuPvpDmgMultiplier;
}
- (EndPvpBattleRequestProto_Builder*) setNuPvpDmgMultiplier:(Float32) value {
  result.hasNuPvpDmgMultiplier = YES;
  result.nuPvpDmgMultiplier = value;
  return self;
}
- (EndPvpBattleRequestProto_Builder*) clearNuPvpDmgMultiplier {
  result.hasNuPvpDmgMultiplier = NO;
  result.nuPvpDmgMultiplier = 0;
  return self;
}
- (PBAppendableArray *)monsterDropIdsList {
  return result.mutableMonsterDropIdsList;
}
- (int32_t)monsterDropIdsAtIndex:(NSUInteger)index {
  return [result monsterDropIdsAtIndex:index];
}
- (EndPvpBattleRequestProto_Builder *)addMonsterDropIds:(int32_t)value {
  if (result.mutableMonsterDropIdsList == nil) {
    result.mutableMonsterDropIdsList = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [result.mutableMonsterDropIdsList addInt32:value];
  return self;
}
- (EndPvpBattleRequestProto_Builder *)addAllMonsterDropIds:(NSArray *)array {
  if (result.mutableMonsterDropIdsList == nil) {
    result.mutableMonsterDropIdsList = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [result.mutableMonsterDropIdsList appendArray:[PBArray arrayWithArray:array valueType:PBArrayValueTypeInt32]];
  return self;
}
- (EndPvpBattleRequestProto_Builder *)setMonsterDropIdsValues:(const int32_t *)values count:(NSUInteger)count {
  result.mutableMonsterDropIdsList = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (EndPvpBattleRequestProto_Builder *)clearMonsterDropIds {
  result.mutableMonsterDropIdsList = nil;
  return self;
}
@end

@interface EndPvpBattleResponseProto ()
@property (strong) MinimumUserProtoWithMaxResources* sender;
@property (strong) NSString* defenderUuid;
@property BOOL attackerAttacked;
@property BOOL attackerWon;
@property EndPvpBattleResponseProto_EndPvpBattleStatus status;
@property (strong) NSMutableArray * mutableUpdatedOrNewList;
@property (strong) PvpHistoryProto* battleThatJustEnded;
@property (strong) UserPvpLeagueProto* statsBefore;
@property (strong) UserPvpLeagueProto* statsAfter;
@end

@implementation EndPvpBattleResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasDefenderUuid {
  return !!hasDefenderUuid_;
}
- (void) setHasDefenderUuid:(BOOL) value_ {
  hasDefenderUuid_ = !!value_;
}
@synthesize defenderUuid;
- (BOOL) hasAttackerAttacked {
  return !!hasAttackerAttacked_;
}
- (void) setHasAttackerAttacked:(BOOL) value_ {
  hasAttackerAttacked_ = !!value_;
}
- (BOOL) attackerAttacked {
  return !!attackerAttacked_;
}
- (void) setAttackerAttacked:(BOOL) value_ {
  attackerAttacked_ = !!value_;
}
- (BOOL) hasAttackerWon {
  return !!hasAttackerWon_;
}
- (void) setHasAttackerWon:(BOOL) value_ {
  hasAttackerWon_ = !!value_;
}
- (BOOL) attackerWon {
  return !!attackerWon_;
}
- (void) setAttackerWon:(BOOL) value_ {
  attackerWon_ = !!value_;
}
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
@synthesize mutableUpdatedOrNewList;
@dynamic updatedOrNewList;
- (BOOL) hasBattleThatJustEnded {
  return !!hasBattleThatJustEnded_;
}
- (void) setHasBattleThatJustEnded:(BOOL) value_ {
  hasBattleThatJustEnded_ = !!value_;
}
@synthesize battleThatJustEnded;
- (BOOL) hasStatsBefore {
  return !!hasStatsBefore_;
}
- (void) setHasStatsBefore:(BOOL) value_ {
  hasStatsBefore_ = !!value_;
}
@synthesize statsBefore;
- (BOOL) hasStatsAfter {
  return !!hasStatsAfter_;
}
- (void) setHasStatsAfter:(BOOL) value_ {
  hasStatsAfter_ = !!value_;
}
@synthesize statsAfter;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.defenderUuid = @"";
    self.attackerAttacked = NO;
    self.attackerWon = NO;
    self.status = EndPvpBattleResponseProto_EndPvpBattleStatusSuccess;
    self.battleThatJustEnded = [PvpHistoryProto defaultInstance];
    self.statsBefore = [UserPvpLeagueProto defaultInstance];
    self.statsAfter = [UserPvpLeagueProto defaultInstance];
  }
  return self;
}
static EndPvpBattleResponseProto* defaultEndPvpBattleResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [EndPvpBattleResponseProto class]) {
    defaultEndPvpBattleResponseProtoInstance = [[EndPvpBattleResponseProto alloc] init];
  }
}
+ (EndPvpBattleResponseProto*) defaultInstance {
  return defaultEndPvpBattleResponseProtoInstance;
}
- (EndPvpBattleResponseProto*) defaultInstance {
  return defaultEndPvpBattleResponseProtoInstance;
}
- (NSArray *)updatedOrNewList {
  return mutableUpdatedOrNewList;
}
- (FullUserMonsterProto*)updatedOrNewAtIndex:(NSUInteger)index {
  return [mutableUpdatedOrNewList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasDefenderUuid) {
    [output writeString:2 value:self.defenderUuid];
  }
  if (self.hasAttackerAttacked) {
    [output writeBool:3 value:self.attackerAttacked];
  }
  if (self.hasAttackerWon) {
    [output writeBool:4 value:self.attackerWon];
  }
  if (self.hasStatus) {
    [output writeEnum:9 value:self.status];
  }
  [self.updatedOrNewList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:10 value:element];
  }];
  if (self.hasBattleThatJustEnded) {
    [output writeMessage:11 value:self.battleThatJustEnded];
  }
  if (self.hasStatsBefore) {
    [output writeMessage:12 value:self.statsBefore];
  }
  if (self.hasStatsAfter) {
    [output writeMessage:13 value:self.statsAfter];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasDefenderUuid) {
    size_ += computeStringSize(2, self.defenderUuid);
  }
  if (self.hasAttackerAttacked) {
    size_ += computeBoolSize(3, self.attackerAttacked);
  }
  if (self.hasAttackerWon) {
    size_ += computeBoolSize(4, self.attackerWon);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(9, self.status);
  }
  [self.updatedOrNewList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(10, element);
  }];
  if (self.hasBattleThatJustEnded) {
    size_ += computeMessageSize(11, self.battleThatJustEnded);
  }
  if (self.hasStatsBefore) {
    size_ += computeMessageSize(12, self.statsBefore);
  }
  if (self.hasStatsAfter) {
    size_ += computeMessageSize(13, self.statsAfter);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (EndPvpBattleResponseProto*) parseFromData:(NSData*) data {
  return (EndPvpBattleResponseProto*)[[[EndPvpBattleResponseProto builder] mergeFromData:data] build];
}
+ (EndPvpBattleResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndPvpBattleResponseProto*)[[[EndPvpBattleResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EndPvpBattleResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (EndPvpBattleResponseProto*)[[[EndPvpBattleResponseProto builder] mergeFromInputStream:input] build];
}
+ (EndPvpBattleResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndPvpBattleResponseProto*)[[[EndPvpBattleResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndPvpBattleResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EndPvpBattleResponseProto*)[[[EndPvpBattleResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (EndPvpBattleResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndPvpBattleResponseProto*)[[[EndPvpBattleResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndPvpBattleResponseProto_Builder*) builder {
  return [[EndPvpBattleResponseProto_Builder alloc] init];
}
+ (EndPvpBattleResponseProto_Builder*) builderWithPrototype:(EndPvpBattleResponseProto*) prototype {
  return [[EndPvpBattleResponseProto builder] mergeFrom:prototype];
}
- (EndPvpBattleResponseProto_Builder*) builder {
  return [EndPvpBattleResponseProto builder];
}
- (EndPvpBattleResponseProto_Builder*) toBuilder {
  return [EndPvpBattleResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasDefenderUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defenderUuid", self.defenderUuid];
  }
  if (self.hasAttackerAttacked) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attackerAttacked", [NSNumber numberWithBool:self.attackerAttacked]];
  }
  if (self.hasAttackerWon) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attackerWon", [NSNumber numberWithBool:self.attackerWon]];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.updatedOrNewList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"updatedOrNew"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasBattleThatJustEnded) {
    [output appendFormat:@"%@%@ {\n", indent, @"battleThatJustEnded"];
    [self.battleThatJustEnded writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatsBefore) {
    [output appendFormat:@"%@%@ {\n", indent, @"statsBefore"];
    [self.statsBefore writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatsAfter) {
    [output appendFormat:@"%@%@ {\n", indent, @"statsAfter"];
    [self.statsAfter writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[EndPvpBattleResponseProto class]]) {
    return NO;
  }
  EndPvpBattleResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasDefenderUuid == otherMessage.hasDefenderUuid &&
      (!self.hasDefenderUuid || [self.defenderUuid isEqual:otherMessage.defenderUuid]) &&
      self.hasAttackerAttacked == otherMessage.hasAttackerAttacked &&
      (!self.hasAttackerAttacked || self.attackerAttacked == otherMessage.attackerAttacked) &&
      self.hasAttackerWon == otherMessage.hasAttackerWon &&
      (!self.hasAttackerWon || self.attackerWon == otherMessage.attackerWon) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      [self.updatedOrNewList isEqualToArray:otherMessage.updatedOrNewList] &&
      self.hasBattleThatJustEnded == otherMessage.hasBattleThatJustEnded &&
      (!self.hasBattleThatJustEnded || [self.battleThatJustEnded isEqual:otherMessage.battleThatJustEnded]) &&
      self.hasStatsBefore == otherMessage.hasStatsBefore &&
      (!self.hasStatsBefore || [self.statsBefore isEqual:otherMessage.statsBefore]) &&
      self.hasStatsAfter == otherMessage.hasStatsAfter &&
      (!self.hasStatsAfter || [self.statsAfter isEqual:otherMessage.statsAfter]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasDefenderUuid) {
    hashCode = hashCode * 31 + [self.defenderUuid hash];
  }
  if (self.hasAttackerAttacked) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.attackerAttacked] hash];
  }
  if (self.hasAttackerWon) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.attackerWon] hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  [self.updatedOrNewList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasBattleThatJustEnded) {
    hashCode = hashCode * 31 + [self.battleThatJustEnded hash];
  }
  if (self.hasStatsBefore) {
    hashCode = hashCode * 31 + [self.statsBefore hash];
  }
  if (self.hasStatsAfter) {
    hashCode = hashCode * 31 + [self.statsAfter hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL EndPvpBattleResponseProto_EndPvpBattleStatusIsValidValue(EndPvpBattleResponseProto_EndPvpBattleStatus value) {
  switch (value) {
    case EndPvpBattleResponseProto_EndPvpBattleStatusSuccess:
    case EndPvpBattleResponseProto_EndPvpBattleStatusFailOther:
    case EndPvpBattleResponseProto_EndPvpBattleStatusFailBattleTookTooLong:
      return YES;
    default:
      return NO;
  }
}
@interface EndPvpBattleResponseProto_Builder()
@property (strong) EndPvpBattleResponseProto* result;
@end

@implementation EndPvpBattleResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[EndPvpBattleResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EndPvpBattleResponseProto_Builder*) clear {
  self.result = [[EndPvpBattleResponseProto alloc] init];
  return self;
}
- (EndPvpBattleResponseProto_Builder*) clone {
  return [EndPvpBattleResponseProto builderWithPrototype:result];
}
- (EndPvpBattleResponseProto*) defaultInstance {
  return [EndPvpBattleResponseProto defaultInstance];
}
- (EndPvpBattleResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EndPvpBattleResponseProto*) buildPartial {
  EndPvpBattleResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (EndPvpBattleResponseProto_Builder*) mergeFrom:(EndPvpBattleResponseProto*) other {
  if (other == [EndPvpBattleResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasDefenderUuid) {
    [self setDefenderUuid:other.defenderUuid];
  }
  if (other.hasAttackerAttacked) {
    [self setAttackerAttacked:other.attackerAttacked];
  }
  if (other.hasAttackerWon) {
    [self setAttackerWon:other.attackerWon];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.mutableUpdatedOrNewList.count > 0) {
    if (result.mutableUpdatedOrNewList == nil) {
      result.mutableUpdatedOrNewList = [[NSMutableArray alloc] initWithArray:other.mutableUpdatedOrNewList];
    } else {
      [result.mutableUpdatedOrNewList addObjectsFromArray:other.mutableUpdatedOrNewList];
    }
  }
  if (other.hasBattleThatJustEnded) {
    [self mergeBattleThatJustEnded:other.battleThatJustEnded];
  }
  if (other.hasStatsBefore) {
    [self mergeStatsBefore:other.statsBefore];
  }
  if (other.hasStatsAfter) {
    [self mergeStatsAfter:other.statsAfter];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EndPvpBattleResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EndPvpBattleResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setDefenderUuid:[input readString]];
        break;
      }
      case 24: {
        [self setAttackerAttacked:[input readBool]];
        break;
      }
      case 32: {
        [self setAttackerWon:[input readBool]];
        break;
      }
      case 72: {
        EndPvpBattleResponseProto_EndPvpBattleStatus value = (EndPvpBattleResponseProto_EndPvpBattleStatus)[input readEnum];
        if (EndPvpBattleResponseProto_EndPvpBattleStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:9 value:value];
        }
        break;
      }
      case 82: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUpdatedOrNew:[subBuilder buildPartial]];
        break;
      }
      case 90: {
        PvpHistoryProto_Builder* subBuilder = [PvpHistoryProto builder];
        if (self.hasBattleThatJustEnded) {
          [subBuilder mergeFrom:self.battleThatJustEnded];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBattleThatJustEnded:[subBuilder buildPartial]];
        break;
      }
      case 98: {
        UserPvpLeagueProto_Builder* subBuilder = [UserPvpLeagueProto builder];
        if (self.hasStatsBefore) {
          [subBuilder mergeFrom:self.statsBefore];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatsBefore:[subBuilder buildPartial]];
        break;
      }
      case 106: {
        UserPvpLeagueProto_Builder* subBuilder = [UserPvpLeagueProto builder];
        if (self.hasStatsAfter) {
          [subBuilder mergeFrom:self.statsAfter];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatsAfter:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (EndPvpBattleResponseProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (EndPvpBattleResponseProto_Builder*) setSender_Builder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (EndPvpBattleResponseProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (EndPvpBattleResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (BOOL) hasDefenderUuid {
  return result.hasDefenderUuid;
}
- (NSString*) defenderUuid {
  return result.defenderUuid;
}
- (EndPvpBattleResponseProto_Builder*) setDefenderUuid:(NSString*) value {
  result.hasDefenderUuid = YES;
  result.defenderUuid = value;
  return self;
}
- (EndPvpBattleResponseProto_Builder*) clearDefenderUuid {
  result.hasDefenderUuid = NO;
  result.defenderUuid = @"";
  return self;
}
- (BOOL) hasAttackerAttacked {
  return result.hasAttackerAttacked;
}
- (BOOL) attackerAttacked {
  return result.attackerAttacked;
}
- (EndPvpBattleResponseProto_Builder*) setAttackerAttacked:(BOOL) value {
  result.hasAttackerAttacked = YES;
  result.attackerAttacked = value;
  return self;
}
- (EndPvpBattleResponseProto_Builder*) clearAttackerAttacked {
  result.hasAttackerAttacked = NO;
  result.attackerAttacked = NO;
  return self;
}
- (BOOL) hasAttackerWon {
  return result.hasAttackerWon;
}
- (BOOL) attackerWon {
  return result.attackerWon;
}
- (EndPvpBattleResponseProto_Builder*) setAttackerWon:(BOOL) value {
  result.hasAttackerWon = YES;
  result.attackerWon = value;
  return self;
}
- (EndPvpBattleResponseProto_Builder*) clearAttackerWon {
  result.hasAttackerWon = NO;
  result.attackerWon = NO;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (EndPvpBattleResponseProto_EndPvpBattleStatus) status {
  return result.status;
}
- (EndPvpBattleResponseProto_Builder*) setStatus:(EndPvpBattleResponseProto_EndPvpBattleStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (EndPvpBattleResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = EndPvpBattleResponseProto_EndPvpBattleStatusSuccess;
  return self;
}
- (NSMutableArray *)updatedOrNewList {
  return result.mutableUpdatedOrNewList;
}
- (FullUserMonsterProto*)updatedOrNewAtIndex:(NSUInteger)index {
  return [result updatedOrNewAtIndex:index];
}
- (EndPvpBattleResponseProto_Builder *)addUpdatedOrNew:(FullUserMonsterProto*)value {
  if (result.mutableUpdatedOrNewList == nil) {
    result.mutableUpdatedOrNewList = [[NSMutableArray alloc]init];
  }
  [result.mutableUpdatedOrNewList addObject:value];
  return self;
}
- (EndPvpBattleResponseProto_Builder *)addAllUpdatedOrNew:(NSArray *)array {
  if (result.mutableUpdatedOrNewList == nil) {
    result.mutableUpdatedOrNewList = [NSMutableArray array];
  }
  [result.mutableUpdatedOrNewList addObjectsFromArray:array];
  return self;
}
- (EndPvpBattleResponseProto_Builder *)clearUpdatedOrNew {
  result.mutableUpdatedOrNewList = nil;
  return self;
}
- (BOOL) hasBattleThatJustEnded {
  return result.hasBattleThatJustEnded;
}
- (PvpHistoryProto*) battleThatJustEnded {
  return result.battleThatJustEnded;
}
- (EndPvpBattleResponseProto_Builder*) setBattleThatJustEnded:(PvpHistoryProto*) value {
  result.hasBattleThatJustEnded = YES;
  result.battleThatJustEnded = value;
  return self;
}
- (EndPvpBattleResponseProto_Builder*) setBattleThatJustEnded_Builder:(PvpHistoryProto_Builder*) builderForValue {
  return [self setBattleThatJustEnded:[builderForValue build]];
}
- (EndPvpBattleResponseProto_Builder*) mergeBattleThatJustEnded:(PvpHistoryProto*) value {
  if (result.hasBattleThatJustEnded &&
      result.battleThatJustEnded != [PvpHistoryProto defaultInstance]) {
    result.battleThatJustEnded =
      [[[PvpHistoryProto builderWithPrototype:result.battleThatJustEnded] mergeFrom:value] buildPartial];
  } else {
    result.battleThatJustEnded = value;
  }
  result.hasBattleThatJustEnded = YES;
  return self;
}
- (EndPvpBattleResponseProto_Builder*) clearBattleThatJustEnded {
  result.hasBattleThatJustEnded = NO;
  result.battleThatJustEnded = [PvpHistoryProto defaultInstance];
  return self;
}
- (BOOL) hasStatsBefore {
  return result.hasStatsBefore;
}
- (UserPvpLeagueProto*) statsBefore {
  return result.statsBefore;
}
- (EndPvpBattleResponseProto_Builder*) setStatsBefore:(UserPvpLeagueProto*) value {
  result.hasStatsBefore = YES;
  result.statsBefore = value;
  return self;
}
- (EndPvpBattleResponseProto_Builder*) setStatsBefore_Builder:(UserPvpLeagueProto_Builder*) builderForValue {
  return [self setStatsBefore:[builderForValue build]];
}
- (EndPvpBattleResponseProto_Builder*) mergeStatsBefore:(UserPvpLeagueProto*) value {
  if (result.hasStatsBefore &&
      result.statsBefore != [UserPvpLeagueProto defaultInstance]) {
    result.statsBefore =
      [[[UserPvpLeagueProto builderWithPrototype:result.statsBefore] mergeFrom:value] buildPartial];
  } else {
    result.statsBefore = value;
  }
  result.hasStatsBefore = YES;
  return self;
}
- (EndPvpBattleResponseProto_Builder*) clearStatsBefore {
  result.hasStatsBefore = NO;
  result.statsBefore = [UserPvpLeagueProto defaultInstance];
  return self;
}
- (BOOL) hasStatsAfter {
  return result.hasStatsAfter;
}
- (UserPvpLeagueProto*) statsAfter {
  return result.statsAfter;
}
- (EndPvpBattleResponseProto_Builder*) setStatsAfter:(UserPvpLeagueProto*) value {
  result.hasStatsAfter = YES;
  result.statsAfter = value;
  return self;
}
- (EndPvpBattleResponseProto_Builder*) setStatsAfter_Builder:(UserPvpLeagueProto_Builder*) builderForValue {
  return [self setStatsAfter:[builderForValue build]];
}
- (EndPvpBattleResponseProto_Builder*) mergeStatsAfter:(UserPvpLeagueProto*) value {
  if (result.hasStatsAfter &&
      result.statsAfter != [UserPvpLeagueProto defaultInstance]) {
    result.statsAfter =
      [[[UserPvpLeagueProto builderWithPrototype:result.statsAfter] mergeFrom:value] buildPartial];
  } else {
    result.statsAfter = value;
  }
  result.hasStatsAfter = YES;
  return self;
}
- (EndPvpBattleResponseProto_Builder*) clearStatsAfter {
  result.hasStatsAfter = NO;
  result.statsAfter = [UserPvpLeagueProto defaultInstance];
  return self;
}
@end

@interface SetDefendingMsgRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSString* msg;
@end

@implementation SetDefendingMsgRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasMsg {
  return !!hasMsg_;
}
- (void) setHasMsg:(BOOL) value_ {
  hasMsg_ = !!value_;
}
@synthesize msg;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.msg = @"";
  }
  return self;
}
static SetDefendingMsgRequestProto* defaultSetDefendingMsgRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [SetDefendingMsgRequestProto class]) {
    defaultSetDefendingMsgRequestProtoInstance = [[SetDefendingMsgRequestProto alloc] init];
  }
}
+ (SetDefendingMsgRequestProto*) defaultInstance {
  return defaultSetDefendingMsgRequestProtoInstance;
}
- (SetDefendingMsgRequestProto*) defaultInstance {
  return defaultSetDefendingMsgRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasMsg) {
    [output writeString:2 value:self.msg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasMsg) {
    size_ += computeStringSize(2, self.msg);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SetDefendingMsgRequestProto*) parseFromData:(NSData*) data {
  return (SetDefendingMsgRequestProto*)[[[SetDefendingMsgRequestProto builder] mergeFromData:data] build];
}
+ (SetDefendingMsgRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetDefendingMsgRequestProto*)[[[SetDefendingMsgRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SetDefendingMsgRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (SetDefendingMsgRequestProto*)[[[SetDefendingMsgRequestProto builder] mergeFromInputStream:input] build];
}
+ (SetDefendingMsgRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetDefendingMsgRequestProto*)[[[SetDefendingMsgRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetDefendingMsgRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SetDefendingMsgRequestProto*)[[[SetDefendingMsgRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (SetDefendingMsgRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetDefendingMsgRequestProto*)[[[SetDefendingMsgRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetDefendingMsgRequestProto_Builder*) builder {
  return [[SetDefendingMsgRequestProto_Builder alloc] init];
}
+ (SetDefendingMsgRequestProto_Builder*) builderWithPrototype:(SetDefendingMsgRequestProto*) prototype {
  return [[SetDefendingMsgRequestProto builder] mergeFrom:prototype];
}
- (SetDefendingMsgRequestProto_Builder*) builder {
  return [SetDefendingMsgRequestProto builder];
}
- (SetDefendingMsgRequestProto_Builder*) toBuilder {
  return [SetDefendingMsgRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msg", self.msg];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SetDefendingMsgRequestProto class]]) {
    return NO;
  }
  SetDefendingMsgRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasMsg == otherMessage.hasMsg &&
      (!self.hasMsg || [self.msg isEqual:otherMessage.msg]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasMsg) {
    hashCode = hashCode * 31 + [self.msg hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SetDefendingMsgRequestProto_Builder()
@property (strong) SetDefendingMsgRequestProto* result;
@end

@implementation SetDefendingMsgRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[SetDefendingMsgRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SetDefendingMsgRequestProto_Builder*) clear {
  self.result = [[SetDefendingMsgRequestProto alloc] init];
  return self;
}
- (SetDefendingMsgRequestProto_Builder*) clone {
  return [SetDefendingMsgRequestProto builderWithPrototype:result];
}
- (SetDefendingMsgRequestProto*) defaultInstance {
  return [SetDefendingMsgRequestProto defaultInstance];
}
- (SetDefendingMsgRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SetDefendingMsgRequestProto*) buildPartial {
  SetDefendingMsgRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (SetDefendingMsgRequestProto_Builder*) mergeFrom:(SetDefendingMsgRequestProto*) other {
  if (other == [SetDefendingMsgRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasMsg) {
    [self setMsg:other.msg];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SetDefendingMsgRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SetDefendingMsgRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setMsg:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (SetDefendingMsgRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SetDefendingMsgRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SetDefendingMsgRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SetDefendingMsgRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasMsg {
  return result.hasMsg;
}
- (NSString*) msg {
  return result.msg;
}
- (SetDefendingMsgRequestProto_Builder*) setMsg:(NSString*) value {
  result.hasMsg = YES;
  result.msg = value;
  return self;
}
- (SetDefendingMsgRequestProto_Builder*) clearMsg {
  result.hasMsg = NO;
  result.msg = @"";
  return self;
}
@end

@interface SetDefendingMsgResponseProto ()
@property (strong) MinimumUserProto* sender;
@property SetDefendingMsgResponseProto_SetDefendingMsgStatus status;
@end

@implementation SetDefendingMsgResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = SetDefendingMsgResponseProto_SetDefendingMsgStatusSuccess;
  }
  return self;
}
static SetDefendingMsgResponseProto* defaultSetDefendingMsgResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [SetDefendingMsgResponseProto class]) {
    defaultSetDefendingMsgResponseProtoInstance = [[SetDefendingMsgResponseProto alloc] init];
  }
}
+ (SetDefendingMsgResponseProto*) defaultInstance {
  return defaultSetDefendingMsgResponseProtoInstance;
}
- (SetDefendingMsgResponseProto*) defaultInstance {
  return defaultSetDefendingMsgResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SetDefendingMsgResponseProto*) parseFromData:(NSData*) data {
  return (SetDefendingMsgResponseProto*)[[[SetDefendingMsgResponseProto builder] mergeFromData:data] build];
}
+ (SetDefendingMsgResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetDefendingMsgResponseProto*)[[[SetDefendingMsgResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SetDefendingMsgResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (SetDefendingMsgResponseProto*)[[[SetDefendingMsgResponseProto builder] mergeFromInputStream:input] build];
}
+ (SetDefendingMsgResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetDefendingMsgResponseProto*)[[[SetDefendingMsgResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetDefendingMsgResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SetDefendingMsgResponseProto*)[[[SetDefendingMsgResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (SetDefendingMsgResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetDefendingMsgResponseProto*)[[[SetDefendingMsgResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetDefendingMsgResponseProto_Builder*) builder {
  return [[SetDefendingMsgResponseProto_Builder alloc] init];
}
+ (SetDefendingMsgResponseProto_Builder*) builderWithPrototype:(SetDefendingMsgResponseProto*) prototype {
  return [[SetDefendingMsgResponseProto builder] mergeFrom:prototype];
}
- (SetDefendingMsgResponseProto_Builder*) builder {
  return [SetDefendingMsgResponseProto builder];
}
- (SetDefendingMsgResponseProto_Builder*) toBuilder {
  return [SetDefendingMsgResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SetDefendingMsgResponseProto class]]) {
    return NO;
  }
  SetDefendingMsgResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL SetDefendingMsgResponseProto_SetDefendingMsgStatusIsValidValue(SetDefendingMsgResponseProto_SetDefendingMsgStatus value) {
  switch (value) {
    case SetDefendingMsgResponseProto_SetDefendingMsgStatusSuccess:
    case SetDefendingMsgResponseProto_SetDefendingMsgStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface SetDefendingMsgResponseProto_Builder()
@property (strong) SetDefendingMsgResponseProto* result;
@end

@implementation SetDefendingMsgResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[SetDefendingMsgResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SetDefendingMsgResponseProto_Builder*) clear {
  self.result = [[SetDefendingMsgResponseProto alloc] init];
  return self;
}
- (SetDefendingMsgResponseProto_Builder*) clone {
  return [SetDefendingMsgResponseProto builderWithPrototype:result];
}
- (SetDefendingMsgResponseProto*) defaultInstance {
  return [SetDefendingMsgResponseProto defaultInstance];
}
- (SetDefendingMsgResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SetDefendingMsgResponseProto*) buildPartial {
  SetDefendingMsgResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (SetDefendingMsgResponseProto_Builder*) mergeFrom:(SetDefendingMsgResponseProto*) other {
  if (other == [SetDefendingMsgResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SetDefendingMsgResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SetDefendingMsgResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        SetDefendingMsgResponseProto_SetDefendingMsgStatus value = (SetDefendingMsgResponseProto_SetDefendingMsgStatus)[input readEnum];
        if (SetDefendingMsgResponseProto_SetDefendingMsgStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (SetDefendingMsgResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SetDefendingMsgResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SetDefendingMsgResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SetDefendingMsgResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (SetDefendingMsgResponseProto_SetDefendingMsgStatus) status {
  return result.status;
}
- (SetDefendingMsgResponseProto_Builder*) setStatus:(SetDefendingMsgResponseProto_SetDefendingMsgStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (SetDefendingMsgResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = SetDefendingMsgResponseProto_SetDefendingMsgStatusSuccess;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
