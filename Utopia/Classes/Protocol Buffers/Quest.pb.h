// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "Job.pb.h"

@class BuildStructJobProto;
@class BuildStructJobProto_Builder;
@class DialogueProto;
@class DialogueProto_Builder;
@class DialogueProto_SpeechSegmentProto;
@class DialogueProto_SpeechSegmentProto_Builder;
@class FullQuestProto;
@class FullQuestProto_Builder;
@class FullUserQuestProto;
@class FullUserQuestProto_Builder;
@class MinimumUserBuildStructJobProto;
@class MinimumUserBuildStructJobProto_Builder;
@class MinimumUserUpgradeStructJobProto;
@class MinimumUserUpgradeStructJobProto_Builder;
@class MonsterJobProto;
@class MonsterJobProto_Builder;
@class UpgradeStructJobProto;
@class UpgradeStructJobProto_Builder;
typedef enum {
  FullQuestProto_QuestTypeKillMonster = 1,
  FullQuestProto_QuestTypeDonateMonster = 2,
  FullQuestProto_QuestTypeCompleteTask = 3,
  FullQuestProto_QuestTypeCollectCoinsFromHome = 4,
  FullQuestProto_QuestTypeBuildStruct = 5,
  FullQuestProto_QuestTypeUpgradeStruct = 6,
} FullQuestProto_QuestType;

BOOL FullQuestProto_QuestTypeIsValidValue(FullQuestProto_QuestType value);

typedef enum {
  DialogueProto_SpeechSegmentProto_DialogueSpeakerPlayerType = 1,
  DialogueProto_SpeechSegmentProto_DialogueSpeakerTutorialGirl = 2,
  DialogueProto_SpeechSegmentProto_DialogueSpeakerQuestgiver1 = 3,
  DialogueProto_SpeechSegmentProto_DialogueSpeakerQuestgiver2 = 4,
  DialogueProto_SpeechSegmentProto_DialogueSpeakerQuestgiver3 = 5,
  DialogueProto_SpeechSegmentProto_DialogueSpeakerQuestgiver4 = 6,
  DialogueProto_SpeechSegmentProto_DialogueSpeakerQuestgiver5 = 7,
} DialogueProto_SpeechSegmentProto_DialogueSpeaker;

BOOL DialogueProto_SpeechSegmentProto_DialogueSpeakerIsValidValue(DialogueProto_SpeechSegmentProto_DialogueSpeaker value);


@interface QuestRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface FullQuestProto : PBGeneratedMessage {
@private
  BOOL hasIsCompleteMonster_:1;
  BOOL hasPriority_:1;
  BOOL hasMonsterIdReward_:1;
  BOOL hasExpReward_:1;
  BOOL hasDiamondReward_:1;
  BOOL hasCoinReward_:1;
  BOOL hasQuantity_:1;
  BOOL hasStaticDataId_:1;
  BOOL hasCityId_:1;
  BOOL hasQuestId_:1;
  BOOL hasJobDescription_:1;
  BOOL hasDoneResponse_:1;
  BOOL hasDescription_:1;
  BOOL hasName_:1;
  BOOL hasQuestGiverImageSuffix_:1;
  BOOL hasCarrotId_:1;
  BOOL hasAcceptDialogue_:1;
  BOOL hasQuestType_:1;
  BOOL isCompleteMonster_:1;
  int32_t priority;
  int32_t monsterIdReward;
  int32_t expReward;
  int32_t diamondReward;
  int32_t coinReward;
  int32_t quantity;
  int32_t staticDataId;
  int32_t cityId;
  int32_t questId;
  NSString* jobDescription;
  NSString* doneResponse;
  NSString* description;
  NSString* name;
  NSString* questGiverImageSuffix;
  NSString* carrotId;
  DialogueProto* acceptDialogue;
  FullQuestProto_QuestType questType;
  NSMutableArray* mutableQuestsRequiredForThisList;
}
- (BOOL) hasQuestId;
- (BOOL) hasCityId;
- (BOOL) hasName;
- (BOOL) hasDescription;
- (BOOL) hasDoneResponse;
- (BOOL) hasAcceptDialogue;
- (BOOL) hasQuestType;
- (BOOL) hasJobDescription;
- (BOOL) hasStaticDataId;
- (BOOL) hasQuantity;
- (BOOL) hasCoinReward;
- (BOOL) hasDiamondReward;
- (BOOL) hasExpReward;
- (BOOL) hasMonsterIdReward;
- (BOOL) hasIsCompleteMonster;
- (BOOL) hasQuestGiverImageSuffix;
- (BOOL) hasPriority;
- (BOOL) hasCarrotId;
@property (readonly) int32_t questId;
@property (readonly) int32_t cityId;
@property (readonly, retain) NSString* name;
@property (readonly, retain) NSString* description;
@property (readonly, retain) NSString* doneResponse;
@property (readonly, retain) DialogueProto* acceptDialogue;
@property (readonly) FullQuestProto_QuestType questType;
@property (readonly, retain) NSString* jobDescription;
@property (readonly) int32_t staticDataId;
@property (readonly) int32_t quantity;
@property (readonly) int32_t coinReward;
@property (readonly) int32_t diamondReward;
@property (readonly) int32_t expReward;
@property (readonly) int32_t monsterIdReward;
- (BOOL) isCompleteMonster;
@property (readonly, retain) NSString* questGiverImageSuffix;
@property (readonly) int32_t priority;
@property (readonly, retain) NSString* carrotId;
- (NSArray*) questsRequiredForThisList;
- (int32_t) questsRequiredForThisAtIndex:(int32_t) index;

+ (FullQuestProto*) defaultInstance;
- (FullQuestProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FullQuestProto_Builder*) builder;
+ (FullQuestProto_Builder*) builder;
+ (FullQuestProto_Builder*) builderWithPrototype:(FullQuestProto*) prototype;

+ (FullQuestProto*) parseFromData:(NSData*) data;
+ (FullQuestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FullQuestProto*) parseFromInputStream:(NSInputStream*) input;
+ (FullQuestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FullQuestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FullQuestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FullQuestProto_Builder : PBGeneratedMessage_Builder {
@private
  FullQuestProto* result;
}

- (FullQuestProto*) defaultInstance;

- (FullQuestProto_Builder*) clear;
- (FullQuestProto_Builder*) clone;

- (FullQuestProto*) build;
- (FullQuestProto*) buildPartial;

- (FullQuestProto_Builder*) mergeFrom:(FullQuestProto*) other;
- (FullQuestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FullQuestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasQuestId;
- (int32_t) questId;
- (FullQuestProto_Builder*) setQuestId:(int32_t) value;
- (FullQuestProto_Builder*) clearQuestId;

- (BOOL) hasCityId;
- (int32_t) cityId;
- (FullQuestProto_Builder*) setCityId:(int32_t) value;
- (FullQuestProto_Builder*) clearCityId;

- (BOOL) hasName;
- (NSString*) name;
- (FullQuestProto_Builder*) setName:(NSString*) value;
- (FullQuestProto_Builder*) clearName;

- (BOOL) hasDescription;
- (NSString*) description;
- (FullQuestProto_Builder*) setDescription:(NSString*) value;
- (FullQuestProto_Builder*) clearDescription;

- (BOOL) hasDoneResponse;
- (NSString*) doneResponse;
- (FullQuestProto_Builder*) setDoneResponse:(NSString*) value;
- (FullQuestProto_Builder*) clearDoneResponse;

- (BOOL) hasAcceptDialogue;
- (DialogueProto*) acceptDialogue;
- (FullQuestProto_Builder*) setAcceptDialogue:(DialogueProto*) value;
- (FullQuestProto_Builder*) setAcceptDialogueBuilder:(DialogueProto_Builder*) builderForValue;
- (FullQuestProto_Builder*) mergeAcceptDialogue:(DialogueProto*) value;
- (FullQuestProto_Builder*) clearAcceptDialogue;

- (BOOL) hasQuestType;
- (FullQuestProto_QuestType) questType;
- (FullQuestProto_Builder*) setQuestType:(FullQuestProto_QuestType) value;
- (FullQuestProto_Builder*) clearQuestType;

- (BOOL) hasJobDescription;
- (NSString*) jobDescription;
- (FullQuestProto_Builder*) setJobDescription:(NSString*) value;
- (FullQuestProto_Builder*) clearJobDescription;

- (BOOL) hasStaticDataId;
- (int32_t) staticDataId;
- (FullQuestProto_Builder*) setStaticDataId:(int32_t) value;
- (FullQuestProto_Builder*) clearStaticDataId;

- (BOOL) hasQuantity;
- (int32_t) quantity;
- (FullQuestProto_Builder*) setQuantity:(int32_t) value;
- (FullQuestProto_Builder*) clearQuantity;

- (BOOL) hasCoinReward;
- (int32_t) coinReward;
- (FullQuestProto_Builder*) setCoinReward:(int32_t) value;
- (FullQuestProto_Builder*) clearCoinReward;

- (BOOL) hasDiamondReward;
- (int32_t) diamondReward;
- (FullQuestProto_Builder*) setDiamondReward:(int32_t) value;
- (FullQuestProto_Builder*) clearDiamondReward;

- (BOOL) hasExpReward;
- (int32_t) expReward;
- (FullQuestProto_Builder*) setExpReward:(int32_t) value;
- (FullQuestProto_Builder*) clearExpReward;

- (BOOL) hasMonsterIdReward;
- (int32_t) monsterIdReward;
- (FullQuestProto_Builder*) setMonsterIdReward:(int32_t) value;
- (FullQuestProto_Builder*) clearMonsterIdReward;

- (BOOL) hasIsCompleteMonster;
- (BOOL) isCompleteMonster;
- (FullQuestProto_Builder*) setIsCompleteMonster:(BOOL) value;
- (FullQuestProto_Builder*) clearIsCompleteMonster;

- (NSArray*) questsRequiredForThisList;
- (int32_t) questsRequiredForThisAtIndex:(int32_t) index;
- (FullQuestProto_Builder*) replaceQuestsRequiredForThisAtIndex:(int32_t) index with:(int32_t) value;
- (FullQuestProto_Builder*) addQuestsRequiredForThis:(int32_t) value;
- (FullQuestProto_Builder*) addAllQuestsRequiredForThis:(NSArray*) values;
- (FullQuestProto_Builder*) clearQuestsRequiredForThisList;

- (BOOL) hasQuestGiverImageSuffix;
- (NSString*) questGiverImageSuffix;
- (FullQuestProto_Builder*) setQuestGiverImageSuffix:(NSString*) value;
- (FullQuestProto_Builder*) clearQuestGiverImageSuffix;

- (BOOL) hasPriority;
- (int32_t) priority;
- (FullQuestProto_Builder*) setPriority:(int32_t) value;
- (FullQuestProto_Builder*) clearPriority;

- (BOOL) hasCarrotId;
- (NSString*) carrotId;
- (FullQuestProto_Builder*) setCarrotId:(NSString*) value;
- (FullQuestProto_Builder*) clearCarrotId;
@end

@interface DialogueProto : PBGeneratedMessage {
@private
  NSMutableArray* mutableSpeechSegmentList;
}
- (NSArray*) speechSegmentList;
- (DialogueProto_SpeechSegmentProto*) speechSegmentAtIndex:(int32_t) index;

+ (DialogueProto*) defaultInstance;
- (DialogueProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (DialogueProto_Builder*) builder;
+ (DialogueProto_Builder*) builder;
+ (DialogueProto_Builder*) builderWithPrototype:(DialogueProto*) prototype;

+ (DialogueProto*) parseFromData:(NSData*) data;
+ (DialogueProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DialogueProto*) parseFromInputStream:(NSInputStream*) input;
+ (DialogueProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DialogueProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (DialogueProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface DialogueProto_SpeechSegmentProto : PBGeneratedMessage {
@private
  BOOL hasSpeakerText_:1;
  BOOL hasSpeaker_:1;
  NSString* speakerText;
  DialogueProto_SpeechSegmentProto_DialogueSpeaker speaker;
}
- (BOOL) hasSpeaker;
- (BOOL) hasSpeakerText;
@property (readonly) DialogueProto_SpeechSegmentProto_DialogueSpeaker speaker;
@property (readonly, retain) NSString* speakerText;

+ (DialogueProto_SpeechSegmentProto*) defaultInstance;
- (DialogueProto_SpeechSegmentProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (DialogueProto_SpeechSegmentProto_Builder*) builder;
+ (DialogueProto_SpeechSegmentProto_Builder*) builder;
+ (DialogueProto_SpeechSegmentProto_Builder*) builderWithPrototype:(DialogueProto_SpeechSegmentProto*) prototype;

+ (DialogueProto_SpeechSegmentProto*) parseFromData:(NSData*) data;
+ (DialogueProto_SpeechSegmentProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DialogueProto_SpeechSegmentProto*) parseFromInputStream:(NSInputStream*) input;
+ (DialogueProto_SpeechSegmentProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DialogueProto_SpeechSegmentProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (DialogueProto_SpeechSegmentProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface DialogueProto_SpeechSegmentProto_Builder : PBGeneratedMessage_Builder {
@private
  DialogueProto_SpeechSegmentProto* result;
}

- (DialogueProto_SpeechSegmentProto*) defaultInstance;

- (DialogueProto_SpeechSegmentProto_Builder*) clear;
- (DialogueProto_SpeechSegmentProto_Builder*) clone;

- (DialogueProto_SpeechSegmentProto*) build;
- (DialogueProto_SpeechSegmentProto*) buildPartial;

- (DialogueProto_SpeechSegmentProto_Builder*) mergeFrom:(DialogueProto_SpeechSegmentProto*) other;
- (DialogueProto_SpeechSegmentProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (DialogueProto_SpeechSegmentProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSpeaker;
- (DialogueProto_SpeechSegmentProto_DialogueSpeaker) speaker;
- (DialogueProto_SpeechSegmentProto_Builder*) setSpeaker:(DialogueProto_SpeechSegmentProto_DialogueSpeaker) value;
- (DialogueProto_SpeechSegmentProto_Builder*) clearSpeaker;

- (BOOL) hasSpeakerText;
- (NSString*) speakerText;
- (DialogueProto_SpeechSegmentProto_Builder*) setSpeakerText:(NSString*) value;
- (DialogueProto_SpeechSegmentProto_Builder*) clearSpeakerText;
@end

@interface DialogueProto_Builder : PBGeneratedMessage_Builder {
@private
  DialogueProto* result;
}

- (DialogueProto*) defaultInstance;

- (DialogueProto_Builder*) clear;
- (DialogueProto_Builder*) clone;

- (DialogueProto*) build;
- (DialogueProto*) buildPartial;

- (DialogueProto_Builder*) mergeFrom:(DialogueProto*) other;
- (DialogueProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (DialogueProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) speechSegmentList;
- (DialogueProto_SpeechSegmentProto*) speechSegmentAtIndex:(int32_t) index;
- (DialogueProto_Builder*) replaceSpeechSegmentAtIndex:(int32_t) index with:(DialogueProto_SpeechSegmentProto*) value;
- (DialogueProto_Builder*) addSpeechSegment:(DialogueProto_SpeechSegmentProto*) value;
- (DialogueProto_Builder*) addAllSpeechSegment:(NSArray*) values;
- (DialogueProto_Builder*) clearSpeechSegmentList;
@end

@interface FullUserQuestProto : PBGeneratedMessage {
@private
  BOOL hasIsRedeemed_:1;
  BOOL hasIsComplete_:1;
  BOOL hasUserId_:1;
  BOOL hasQuestId_:1;
  BOOL hasProgress_:1;
  BOOL isRedeemed_:1;
  BOOL isComplete_:1;
  int32_t userId;
  int32_t questId;
  int32_t progress;
}
- (BOOL) hasUserId;
- (BOOL) hasQuestId;
- (BOOL) hasIsRedeemed;
- (BOOL) hasIsComplete;
- (BOOL) hasProgress;
@property (readonly) int32_t userId;
@property (readonly) int32_t questId;
- (BOOL) isRedeemed;
- (BOOL) isComplete;
@property (readonly) int32_t progress;

+ (FullUserQuestProto*) defaultInstance;
- (FullUserQuestProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FullUserQuestProto_Builder*) builder;
+ (FullUserQuestProto_Builder*) builder;
+ (FullUserQuestProto_Builder*) builderWithPrototype:(FullUserQuestProto*) prototype;

+ (FullUserQuestProto*) parseFromData:(NSData*) data;
+ (FullUserQuestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FullUserQuestProto*) parseFromInputStream:(NSInputStream*) input;
+ (FullUserQuestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FullUserQuestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FullUserQuestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FullUserQuestProto_Builder : PBGeneratedMessage_Builder {
@private
  FullUserQuestProto* result;
}

- (FullUserQuestProto*) defaultInstance;

- (FullUserQuestProto_Builder*) clear;
- (FullUserQuestProto_Builder*) clone;

- (FullUserQuestProto*) build;
- (FullUserQuestProto*) buildPartial;

- (FullUserQuestProto_Builder*) mergeFrom:(FullUserQuestProto*) other;
- (FullUserQuestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FullUserQuestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (int32_t) userId;
- (FullUserQuestProto_Builder*) setUserId:(int32_t) value;
- (FullUserQuestProto_Builder*) clearUserId;

- (BOOL) hasQuestId;
- (int32_t) questId;
- (FullUserQuestProto_Builder*) setQuestId:(int32_t) value;
- (FullUserQuestProto_Builder*) clearQuestId;

- (BOOL) hasIsRedeemed;
- (BOOL) isRedeemed;
- (FullUserQuestProto_Builder*) setIsRedeemed:(BOOL) value;
- (FullUserQuestProto_Builder*) clearIsRedeemed;

- (BOOL) hasIsComplete;
- (BOOL) isComplete;
- (FullUserQuestProto_Builder*) setIsComplete:(BOOL) value;
- (FullUserQuestProto_Builder*) clearIsComplete;

- (BOOL) hasProgress;
- (int32_t) progress;
- (FullUserQuestProto_Builder*) setProgress:(int32_t) value;
- (FullUserQuestProto_Builder*) clearProgress;
@end

