// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "User.pb.h"

@class FullUserProto;
@class FullUserProto_Builder;
@class MinimumClanProto;
@class MinimumClanProto_Builder;
@class MinimumUserProto;
@class MinimumUserProtoWithLevel;
@class MinimumUserProtoWithLevelForLeaderboard;
@class MinimumUserProtoWithLevelForLeaderboard_Builder;
@class MinimumUserProtoWithLevel_Builder;
@class MinimumUserProto_Builder;
@class QueueUpRequestProto;
@class QueueUpRequestProto_Builder;
@class QueueUpResponseProto;
@class QueueUpResponseProto_Builder;
typedef enum {
  QueueUpResponseProto_QueueUpStatusSuccess = 1,
  QueueUpResponseProto_QueueUpStatusOtherFail = 2,
  QueueUpResponseProto_QueueUpStatusFailNotEnoughSilver = 3,
  QueueUpResponseProto_QueueUpStatusFailCantFindAnyone = 4,
} QueueUpResponseProto_QueueUpStatus;

BOOL QueueUpResponseProto_QueueUpStatusIsValidValue(QueueUpResponseProto_QueueUpStatus value);


@interface EventPvpRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface QueueUpRequestProto : PBGeneratedMessage {
@private
  BOOL hasClientTime_:1;
  BOOL hasAttacker_:1;
  int64_t clientTime;
  MinimumUserProto* attacker;
  NSMutableArray* mutableSeenUserIdsList;
}
- (BOOL) hasAttacker;
- (BOOL) hasClientTime;
@property (readonly, retain) MinimumUserProto* attacker;
@property (readonly) int64_t clientTime;
- (NSArray*) seenUserIdsList;
- (int32_t) seenUserIdsAtIndex:(int32_t) index;

+ (QueueUpRequestProto*) defaultInstance;
- (QueueUpRequestProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (QueueUpRequestProto_Builder*) builder;
+ (QueueUpRequestProto_Builder*) builder;
+ (QueueUpRequestProto_Builder*) builderWithPrototype:(QueueUpRequestProto*) prototype;

+ (QueueUpRequestProto*) parseFromData:(NSData*) data;
+ (QueueUpRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (QueueUpRequestProto*) parseFromInputStream:(NSInputStream*) input;
+ (QueueUpRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (QueueUpRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (QueueUpRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface QueueUpRequestProto_Builder : PBGeneratedMessage_Builder {
@private
  QueueUpRequestProto* result;
}

- (QueueUpRequestProto*) defaultInstance;

- (QueueUpRequestProto_Builder*) clear;
- (QueueUpRequestProto_Builder*) clone;

- (QueueUpRequestProto*) build;
- (QueueUpRequestProto*) buildPartial;

- (QueueUpRequestProto_Builder*) mergeFrom:(QueueUpRequestProto*) other;
- (QueueUpRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (QueueUpRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAttacker;
- (MinimumUserProto*) attacker;
- (QueueUpRequestProto_Builder*) setAttacker:(MinimumUserProto*) value;
- (QueueUpRequestProto_Builder*) setAttackerBuilder:(MinimumUserProto_Builder*) builderForValue;
- (QueueUpRequestProto_Builder*) mergeAttacker:(MinimumUserProto*) value;
- (QueueUpRequestProto_Builder*) clearAttacker;

- (NSArray*) seenUserIdsList;
- (int32_t) seenUserIdsAtIndex:(int32_t) index;
- (QueueUpRequestProto_Builder*) replaceSeenUserIdsAtIndex:(int32_t) index with:(int32_t) value;
- (QueueUpRequestProto_Builder*) addSeenUserIds:(int32_t) value;
- (QueueUpRequestProto_Builder*) addAllSeenUserIds:(NSArray*) values;
- (QueueUpRequestProto_Builder*) clearSeenUserIdsList;

- (BOOL) hasClientTime;
- (int64_t) clientTime;
- (QueueUpRequestProto_Builder*) setClientTime:(int64_t) value;
- (QueueUpRequestProto_Builder*) clearClientTime;
@end

@interface QueueUpResponseProto : PBGeneratedMessage {
@private
  BOOL hasPossibleCoinReward_:1;
  BOOL hasAttacker_:1;
  BOOL hasDefender_:1;
  BOOL hasStatus_:1;
  int32_t possibleCoinReward;
  MinimumUserProto* attacker;
  MinimumUserProto* defender;
  QueueUpResponseProto_QueueUpStatus status;
}
- (BOOL) hasAttacker;
- (BOOL) hasDefender;
- (BOOL) hasStatus;
- (BOOL) hasPossibleCoinReward;
@property (readonly, retain) MinimumUserProto* attacker;
@property (readonly, retain) MinimumUserProto* defender;
@property (readonly) QueueUpResponseProto_QueueUpStatus status;
@property (readonly) int32_t possibleCoinReward;

+ (QueueUpResponseProto*) defaultInstance;
- (QueueUpResponseProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (QueueUpResponseProto_Builder*) builder;
+ (QueueUpResponseProto_Builder*) builder;
+ (QueueUpResponseProto_Builder*) builderWithPrototype:(QueueUpResponseProto*) prototype;

+ (QueueUpResponseProto*) parseFromData:(NSData*) data;
+ (QueueUpResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (QueueUpResponseProto*) parseFromInputStream:(NSInputStream*) input;
+ (QueueUpResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (QueueUpResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (QueueUpResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface QueueUpResponseProto_Builder : PBGeneratedMessage_Builder {
@private
  QueueUpResponseProto* result;
}

- (QueueUpResponseProto*) defaultInstance;

- (QueueUpResponseProto_Builder*) clear;
- (QueueUpResponseProto_Builder*) clone;

- (QueueUpResponseProto*) build;
- (QueueUpResponseProto*) buildPartial;

- (QueueUpResponseProto_Builder*) mergeFrom:(QueueUpResponseProto*) other;
- (QueueUpResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (QueueUpResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAttacker;
- (MinimumUserProto*) attacker;
- (QueueUpResponseProto_Builder*) setAttacker:(MinimumUserProto*) value;
- (QueueUpResponseProto_Builder*) setAttackerBuilder:(MinimumUserProto_Builder*) builderForValue;
- (QueueUpResponseProto_Builder*) mergeAttacker:(MinimumUserProto*) value;
- (QueueUpResponseProto_Builder*) clearAttacker;

- (BOOL) hasDefender;
- (MinimumUserProto*) defender;
- (QueueUpResponseProto_Builder*) setDefender:(MinimumUserProto*) value;
- (QueueUpResponseProto_Builder*) setDefenderBuilder:(MinimumUserProto_Builder*) builderForValue;
- (QueueUpResponseProto_Builder*) mergeDefender:(MinimumUserProto*) value;
- (QueueUpResponseProto_Builder*) clearDefender;

- (BOOL) hasStatus;
- (QueueUpResponseProto_QueueUpStatus) status;
- (QueueUpResponseProto_Builder*) setStatus:(QueueUpResponseProto_QueueUpStatus) value;
- (QueueUpResponseProto_Builder*) clearStatus;

- (BOOL) hasPossibleCoinReward;
- (int32_t) possibleCoinReward;
- (QueueUpResponseProto_Builder*) setPossibleCoinReward:(int32_t) value;
- (QueueUpResponseProto_Builder*) clearPossibleCoinReward;
@end

