// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "BoosterPackStuff.pb.h"
// @@protoc_insertion_point(imports)

@implementation BoosterPackStuffRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [BoosterPackStuffRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [SharedEnumConfigRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface RareBoosterPurchaseProto ()
@property (strong) MinimumUserProto* user;
@property (strong) BoosterPackProto* booster;
@property uint64_t timeOfPurchase;
@property int32_t monsterId;
@end

@implementation RareBoosterPurchaseProto

- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value_ {
  hasUser_ = !!value_;
}
@synthesize user;
- (BOOL) hasBooster {
  return !!hasBooster_;
}
- (void) setHasBooster:(BOOL) value_ {
  hasBooster_ = !!value_;
}
@synthesize booster;
- (BOOL) hasTimeOfPurchase {
  return !!hasTimeOfPurchase_;
}
- (void) setHasTimeOfPurchase:(BOOL) value_ {
  hasTimeOfPurchase_ = !!value_;
}
@synthesize timeOfPurchase;
- (BOOL) hasMonsterId {
  return !!hasMonsterId_;
}
- (void) setHasMonsterId:(BOOL) value_ {
  hasMonsterId_ = !!value_;
}
@synthesize monsterId;
- (id) init {
  if ((self = [super init])) {
    self.user = [MinimumUserProto defaultInstance];
    self.booster = [BoosterPackProto defaultInstance];
    self.timeOfPurchase = 0L;
    self.monsterId = 0;
  }
  return self;
}
static RareBoosterPurchaseProto* defaultRareBoosterPurchaseProtoInstance = nil;
+ (void) initialize {
  if (self == [RareBoosterPurchaseProto class]) {
    defaultRareBoosterPurchaseProtoInstance = [[RareBoosterPurchaseProto alloc] init];
  }
}
+ (RareBoosterPurchaseProto*) defaultInstance {
  return defaultRareBoosterPurchaseProtoInstance;
}
- (RareBoosterPurchaseProto*) defaultInstance {
  return defaultRareBoosterPurchaseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUser) {
    [output writeMessage:1 value:self.user];
  }
  if (self.hasBooster) {
    [output writeMessage:2 value:self.booster];
  }
  if (self.hasTimeOfPurchase) {
    [output writeUInt64:3 value:self.timeOfPurchase];
  }
  if (self.hasMonsterId) {
    [output writeInt32:4 value:self.monsterId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUser) {
    size_ += computeMessageSize(1, self.user);
  }
  if (self.hasBooster) {
    size_ += computeMessageSize(2, self.booster);
  }
  if (self.hasTimeOfPurchase) {
    size_ += computeUInt64Size(3, self.timeOfPurchase);
  }
  if (self.hasMonsterId) {
    size_ += computeInt32Size(4, self.monsterId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RareBoosterPurchaseProto*) parseFromData:(NSData*) data {
  return (RareBoosterPurchaseProto*)[[[RareBoosterPurchaseProto builder] mergeFromData:data] build];
}
+ (RareBoosterPurchaseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RareBoosterPurchaseProto*)[[[RareBoosterPurchaseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RareBoosterPurchaseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RareBoosterPurchaseProto*)[[[RareBoosterPurchaseProto builder] mergeFromInputStream:input] build];
}
+ (RareBoosterPurchaseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RareBoosterPurchaseProto*)[[[RareBoosterPurchaseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RareBoosterPurchaseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RareBoosterPurchaseProto*)[[[RareBoosterPurchaseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RareBoosterPurchaseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RareBoosterPurchaseProto*)[[[RareBoosterPurchaseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RareBoosterPurchaseProto_Builder*) builder {
  return [[RareBoosterPurchaseProto_Builder alloc] init];
}
+ (RareBoosterPurchaseProto_Builder*) builderWithPrototype:(RareBoosterPurchaseProto*) prototype {
  return [[RareBoosterPurchaseProto builder] mergeFrom:prototype];
}
- (RareBoosterPurchaseProto_Builder*) builder {
  return [RareBoosterPurchaseProto builder];
}
- (RareBoosterPurchaseProto_Builder*) toBuilder {
  return [RareBoosterPurchaseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasBooster) {
    [output appendFormat:@"%@%@ {\n", indent, @"booster"];
    [self.booster writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTimeOfPurchase) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timeOfPurchase", [NSNumber numberWithLongLong:self.timeOfPurchase]];
  }
  if (self.hasMonsterId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"monsterId", [NSNumber numberWithInteger:self.monsterId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RareBoosterPurchaseProto class]]) {
    return NO;
  }
  RareBoosterPurchaseProto *otherMessage = other;
  return
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      self.hasBooster == otherMessage.hasBooster &&
      (!self.hasBooster || [self.booster isEqual:otherMessage.booster]) &&
      self.hasTimeOfPurchase == otherMessage.hasTimeOfPurchase &&
      (!self.hasTimeOfPurchase || self.timeOfPurchase == otherMessage.timeOfPurchase) &&
      self.hasMonsterId == otherMessage.hasMonsterId &&
      (!self.hasMonsterId || self.monsterId == otherMessage.monsterId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  if (self.hasBooster) {
    hashCode = hashCode * 31 + [self.booster hash];
  }
  if (self.hasTimeOfPurchase) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.timeOfPurchase] hash];
  }
  if (self.hasMonsterId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.monsterId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RareBoosterPurchaseProto_Builder()
@property (strong) RareBoosterPurchaseProto* result;
@end

@implementation RareBoosterPurchaseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RareBoosterPurchaseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RareBoosterPurchaseProto_Builder*) clear {
  self.result = [[RareBoosterPurchaseProto alloc] init];
  return self;
}
- (RareBoosterPurchaseProto_Builder*) clone {
  return [RareBoosterPurchaseProto builderWithPrototype:result];
}
- (RareBoosterPurchaseProto*) defaultInstance {
  return [RareBoosterPurchaseProto defaultInstance];
}
- (RareBoosterPurchaseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RareBoosterPurchaseProto*) buildPartial {
  RareBoosterPurchaseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RareBoosterPurchaseProto_Builder*) mergeFrom:(RareBoosterPurchaseProto*) other {
  if (other == [RareBoosterPurchaseProto defaultInstance]) {
    return self;
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasBooster) {
    [self mergeBooster:other.booster];
  }
  if (other.hasTimeOfPurchase) {
    [self setTimeOfPurchase:other.timeOfPurchase];
  }
  if (other.hasMonsterId) {
    [self setMonsterId:other.monsterId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RareBoosterPurchaseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RareBoosterPurchaseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        BoosterPackProto_Builder* subBuilder = [BoosterPackProto builder];
        if (self.hasBooster) {
          [subBuilder mergeFrom:self.booster];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBooster:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setTimeOfPurchase:[input readUInt64]];
        break;
      }
      case 32: {
        [self setMonsterId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (MinimumUserProto*) user {
  return result.user;
}
- (RareBoosterPurchaseProto_Builder*) setUser:(MinimumUserProto*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (RareBoosterPurchaseProto_Builder*) setUser_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (RareBoosterPurchaseProto_Builder*) mergeUser:(MinimumUserProto*) value {
  if (result.hasUser &&
      result.user != [MinimumUserProto defaultInstance]) {
    result.user =
      [[[MinimumUserProto builderWithPrototype:result.user] mergeFrom:value] buildPartial];
  } else {
    result.user = value;
  }
  result.hasUser = YES;
  return self;
}
- (RareBoosterPurchaseProto_Builder*) clearUser {
  result.hasUser = NO;
  result.user = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasBooster {
  return result.hasBooster;
}
- (BoosterPackProto*) booster {
  return result.booster;
}
- (RareBoosterPurchaseProto_Builder*) setBooster:(BoosterPackProto*) value {
  result.hasBooster = YES;
  result.booster = value;
  return self;
}
- (RareBoosterPurchaseProto_Builder*) setBooster_Builder:(BoosterPackProto_Builder*) builderForValue {
  return [self setBooster:[builderForValue build]];
}
- (RareBoosterPurchaseProto_Builder*) mergeBooster:(BoosterPackProto*) value {
  if (result.hasBooster &&
      result.booster != [BoosterPackProto defaultInstance]) {
    result.booster =
      [[[BoosterPackProto builderWithPrototype:result.booster] mergeFrom:value] buildPartial];
  } else {
    result.booster = value;
  }
  result.hasBooster = YES;
  return self;
}
- (RareBoosterPurchaseProto_Builder*) clearBooster {
  result.hasBooster = NO;
  result.booster = [BoosterPackProto defaultInstance];
  return self;
}
- (BOOL) hasTimeOfPurchase {
  return result.hasTimeOfPurchase;
}
- (uint64_t) timeOfPurchase {
  return result.timeOfPurchase;
}
- (RareBoosterPurchaseProto_Builder*) setTimeOfPurchase:(uint64_t) value {
  result.hasTimeOfPurchase = YES;
  result.timeOfPurchase = value;
  return self;
}
- (RareBoosterPurchaseProto_Builder*) clearTimeOfPurchase {
  result.hasTimeOfPurchase = NO;
  result.timeOfPurchase = 0L;
  return self;
}
- (BOOL) hasMonsterId {
  return result.hasMonsterId;
}
- (int32_t) monsterId {
  return result.monsterId;
}
- (RareBoosterPurchaseProto_Builder*) setMonsterId:(int32_t) value {
  result.hasMonsterId = YES;
  result.monsterId = value;
  return self;
}
- (RareBoosterPurchaseProto_Builder*) clearMonsterId {
  result.hasMonsterId = NO;
  result.monsterId = 0;
  return self;
}
@end

@interface BoosterPackProto ()
@property int32_t boosterPackId;
@property (strong) NSString* boosterPackName;
@property int32_t gemPrice;
@property (strong) NSMutableArray * mutableSpecialItemsList;
@property (strong) NSString* listBackgroundImgName;
@property (strong) NSString* listDescription;
@property (strong) NSString* navBarImgName;
@property (strong) NSString* navTitleImgName;
@property (strong) NSString* machineImgName;
@property (strong) NSMutableArray * mutableDisplayItemsList;
@end

@implementation BoosterPackProto

- (BOOL) hasBoosterPackId {
  return !!hasBoosterPackId_;
}
- (void) setHasBoosterPackId:(BOOL) value_ {
  hasBoosterPackId_ = !!value_;
}
@synthesize boosterPackId;
- (BOOL) hasBoosterPackName {
  return !!hasBoosterPackName_;
}
- (void) setHasBoosterPackName:(BOOL) value_ {
  hasBoosterPackName_ = !!value_;
}
@synthesize boosterPackName;
- (BOOL) hasGemPrice {
  return !!hasGemPrice_;
}
- (void) setHasGemPrice:(BOOL) value_ {
  hasGemPrice_ = !!value_;
}
@synthesize gemPrice;
@synthesize mutableSpecialItemsList;
@dynamic specialItemsList;
- (BOOL) hasListBackgroundImgName {
  return !!hasListBackgroundImgName_;
}
- (void) setHasListBackgroundImgName:(BOOL) value_ {
  hasListBackgroundImgName_ = !!value_;
}
@synthesize listBackgroundImgName;
- (BOOL) hasListDescription {
  return !!hasListDescription_;
}
- (void) setHasListDescription:(BOOL) value_ {
  hasListDescription_ = !!value_;
}
@synthesize listDescription;
- (BOOL) hasNavBarImgName {
  return !!hasNavBarImgName_;
}
- (void) setHasNavBarImgName:(BOOL) value_ {
  hasNavBarImgName_ = !!value_;
}
@synthesize navBarImgName;
- (BOOL) hasNavTitleImgName {
  return !!hasNavTitleImgName_;
}
- (void) setHasNavTitleImgName:(BOOL) value_ {
  hasNavTitleImgName_ = !!value_;
}
@synthesize navTitleImgName;
- (BOOL) hasMachineImgName {
  return !!hasMachineImgName_;
}
- (void) setHasMachineImgName:(BOOL) value_ {
  hasMachineImgName_ = !!value_;
}
@synthesize machineImgName;
@synthesize mutableDisplayItemsList;
@dynamic displayItemsList;
- (id) init {
  if ((self = [super init])) {
    self.boosterPackId = 0;
    self.boosterPackName = @"";
    self.gemPrice = 0;
    self.listBackgroundImgName = @"";
    self.listDescription = @"";
    self.navBarImgName = @"";
    self.navTitleImgName = @"";
    self.machineImgName = @"";
  }
  return self;
}
static BoosterPackProto* defaultBoosterPackProtoInstance = nil;
+ (void) initialize {
  if (self == [BoosterPackProto class]) {
    defaultBoosterPackProtoInstance = [[BoosterPackProto alloc] init];
  }
}
+ (BoosterPackProto*) defaultInstance {
  return defaultBoosterPackProtoInstance;
}
- (BoosterPackProto*) defaultInstance {
  return defaultBoosterPackProtoInstance;
}
- (NSArray *)specialItemsList {
  return mutableSpecialItemsList;
}
- (BoosterItemProto*)specialItemsAtIndex:(NSUInteger)index {
  return [mutableSpecialItemsList objectAtIndex:index];
}
- (NSArray *)displayItemsList {
  return mutableDisplayItemsList;
}
- (BoosterDisplayItemProto*)displayItemsAtIndex:(NSUInteger)index {
  return [mutableDisplayItemsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBoosterPackId) {
    [output writeInt32:1 value:self.boosterPackId];
  }
  if (self.hasBoosterPackName) {
    [output writeString:2 value:self.boosterPackName];
  }
  if (self.hasGemPrice) {
    [output writeInt32:3 value:self.gemPrice];
  }
  [self.specialItemsList enumerateObjectsUsingBlock:^(BoosterItemProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  if (self.hasListBackgroundImgName) {
    [output writeString:5 value:self.listBackgroundImgName];
  }
  if (self.hasListDescription) {
    [output writeString:6 value:self.listDescription];
  }
  if (self.hasNavBarImgName) {
    [output writeString:7 value:self.navBarImgName];
  }
  if (self.hasNavTitleImgName) {
    [output writeString:8 value:self.navTitleImgName];
  }
  if (self.hasMachineImgName) {
    [output writeString:9 value:self.machineImgName];
  }
  [self.displayItemsList enumerateObjectsUsingBlock:^(BoosterDisplayItemProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:10 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBoosterPackId) {
    size_ += computeInt32Size(1, self.boosterPackId);
  }
  if (self.hasBoosterPackName) {
    size_ += computeStringSize(2, self.boosterPackName);
  }
  if (self.hasGemPrice) {
    size_ += computeInt32Size(3, self.gemPrice);
  }
  [self.specialItemsList enumerateObjectsUsingBlock:^(BoosterItemProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  if (self.hasListBackgroundImgName) {
    size_ += computeStringSize(5, self.listBackgroundImgName);
  }
  if (self.hasListDescription) {
    size_ += computeStringSize(6, self.listDescription);
  }
  if (self.hasNavBarImgName) {
    size_ += computeStringSize(7, self.navBarImgName);
  }
  if (self.hasNavTitleImgName) {
    size_ += computeStringSize(8, self.navTitleImgName);
  }
  if (self.hasMachineImgName) {
    size_ += computeStringSize(9, self.machineImgName);
  }
  [self.displayItemsList enumerateObjectsUsingBlock:^(BoosterDisplayItemProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(10, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BoosterPackProto*) parseFromData:(NSData*) data {
  return (BoosterPackProto*)[[[BoosterPackProto builder] mergeFromData:data] build];
}
+ (BoosterPackProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BoosterPackProto*)[[[BoosterPackProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BoosterPackProto*) parseFromInputStream:(NSInputStream*) input {
  return (BoosterPackProto*)[[[BoosterPackProto builder] mergeFromInputStream:input] build];
}
+ (BoosterPackProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BoosterPackProto*)[[[BoosterPackProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BoosterPackProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BoosterPackProto*)[[[BoosterPackProto builder] mergeFromCodedInputStream:input] build];
}
+ (BoosterPackProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BoosterPackProto*)[[[BoosterPackProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BoosterPackProto_Builder*) builder {
  return [[BoosterPackProto_Builder alloc] init];
}
+ (BoosterPackProto_Builder*) builderWithPrototype:(BoosterPackProto*) prototype {
  return [[BoosterPackProto builder] mergeFrom:prototype];
}
- (BoosterPackProto_Builder*) builder {
  return [BoosterPackProto builder];
}
- (BoosterPackProto_Builder*) toBuilder {
  return [BoosterPackProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBoosterPackId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"boosterPackId", [NSNumber numberWithInteger:self.boosterPackId]];
  }
  if (self.hasBoosterPackName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"boosterPackName", self.boosterPackName];
  }
  if (self.hasGemPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gemPrice", [NSNumber numberWithInteger:self.gemPrice]];
  }
  [self.specialItemsList enumerateObjectsUsingBlock:^(BoosterItemProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"specialItems"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasListBackgroundImgName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"listBackgroundImgName", self.listBackgroundImgName];
  }
  if (self.hasListDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"listDescription", self.listDescription];
  }
  if (self.hasNavBarImgName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"navBarImgName", self.navBarImgName];
  }
  if (self.hasNavTitleImgName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"navTitleImgName", self.navTitleImgName];
  }
  if (self.hasMachineImgName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"machineImgName", self.machineImgName];
  }
  [self.displayItemsList enumerateObjectsUsingBlock:^(BoosterDisplayItemProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"displayItems"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BoosterPackProto class]]) {
    return NO;
  }
  BoosterPackProto *otherMessage = other;
  return
      self.hasBoosterPackId == otherMessage.hasBoosterPackId &&
      (!self.hasBoosterPackId || self.boosterPackId == otherMessage.boosterPackId) &&
      self.hasBoosterPackName == otherMessage.hasBoosterPackName &&
      (!self.hasBoosterPackName || [self.boosterPackName isEqual:otherMessage.boosterPackName]) &&
      self.hasGemPrice == otherMessage.hasGemPrice &&
      (!self.hasGemPrice || self.gemPrice == otherMessage.gemPrice) &&
      [self.specialItemsList isEqualToArray:otherMessage.specialItemsList] &&
      self.hasListBackgroundImgName == otherMessage.hasListBackgroundImgName &&
      (!self.hasListBackgroundImgName || [self.listBackgroundImgName isEqual:otherMessage.listBackgroundImgName]) &&
      self.hasListDescription == otherMessage.hasListDescription &&
      (!self.hasListDescription || [self.listDescription isEqual:otherMessage.listDescription]) &&
      self.hasNavBarImgName == otherMessage.hasNavBarImgName &&
      (!self.hasNavBarImgName || [self.navBarImgName isEqual:otherMessage.navBarImgName]) &&
      self.hasNavTitleImgName == otherMessage.hasNavTitleImgName &&
      (!self.hasNavTitleImgName || [self.navTitleImgName isEqual:otherMessage.navTitleImgName]) &&
      self.hasMachineImgName == otherMessage.hasMachineImgName &&
      (!self.hasMachineImgName || [self.machineImgName isEqual:otherMessage.machineImgName]) &&
      [self.displayItemsList isEqualToArray:otherMessage.displayItemsList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBoosterPackId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.boosterPackId] hash];
  }
  if (self.hasBoosterPackName) {
    hashCode = hashCode * 31 + [self.boosterPackName hash];
  }
  if (self.hasGemPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.gemPrice] hash];
  }
  [self.specialItemsList enumerateObjectsUsingBlock:^(BoosterItemProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasListBackgroundImgName) {
    hashCode = hashCode * 31 + [self.listBackgroundImgName hash];
  }
  if (self.hasListDescription) {
    hashCode = hashCode * 31 + [self.listDescription hash];
  }
  if (self.hasNavBarImgName) {
    hashCode = hashCode * 31 + [self.navBarImgName hash];
  }
  if (self.hasNavTitleImgName) {
    hashCode = hashCode * 31 + [self.navTitleImgName hash];
  }
  if (self.hasMachineImgName) {
    hashCode = hashCode * 31 + [self.machineImgName hash];
  }
  [self.displayItemsList enumerateObjectsUsingBlock:^(BoosterDisplayItemProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BoosterPackProto_Builder()
@property (strong) BoosterPackProto* result;
@end

@implementation BoosterPackProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BoosterPackProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BoosterPackProto_Builder*) clear {
  self.result = [[BoosterPackProto alloc] init];
  return self;
}
- (BoosterPackProto_Builder*) clone {
  return [BoosterPackProto builderWithPrototype:result];
}
- (BoosterPackProto*) defaultInstance {
  return [BoosterPackProto defaultInstance];
}
- (BoosterPackProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BoosterPackProto*) buildPartial {
  BoosterPackProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BoosterPackProto_Builder*) mergeFrom:(BoosterPackProto*) other {
  if (other == [BoosterPackProto defaultInstance]) {
    return self;
  }
  if (other.hasBoosterPackId) {
    [self setBoosterPackId:other.boosterPackId];
  }
  if (other.hasBoosterPackName) {
    [self setBoosterPackName:other.boosterPackName];
  }
  if (other.hasGemPrice) {
    [self setGemPrice:other.gemPrice];
  }
  if (other.mutableSpecialItemsList.count > 0) {
    if (result.mutableSpecialItemsList == nil) {
      result.mutableSpecialItemsList = [[NSMutableArray alloc] initWithArray:other.mutableSpecialItemsList];
    } else {
      [result.mutableSpecialItemsList addObjectsFromArray:other.mutableSpecialItemsList];
    }
  }
  if (other.hasListBackgroundImgName) {
    [self setListBackgroundImgName:other.listBackgroundImgName];
  }
  if (other.hasListDescription) {
    [self setListDescription:other.listDescription];
  }
  if (other.hasNavBarImgName) {
    [self setNavBarImgName:other.navBarImgName];
  }
  if (other.hasNavTitleImgName) {
    [self setNavTitleImgName:other.navTitleImgName];
  }
  if (other.hasMachineImgName) {
    [self setMachineImgName:other.machineImgName];
  }
  if (other.mutableDisplayItemsList.count > 0) {
    if (result.mutableDisplayItemsList == nil) {
      result.mutableDisplayItemsList = [[NSMutableArray alloc] initWithArray:other.mutableDisplayItemsList];
    } else {
      [result.mutableDisplayItemsList addObjectsFromArray:other.mutableDisplayItemsList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BoosterPackProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BoosterPackProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBoosterPackId:[input readInt32]];
        break;
      }
      case 18: {
        [self setBoosterPackName:[input readString]];
        break;
      }
      case 24: {
        [self setGemPrice:[input readInt32]];
        break;
      }
      case 34: {
        BoosterItemProto_Builder* subBuilder = [BoosterItemProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSpecialItems:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        [self setListBackgroundImgName:[input readString]];
        break;
      }
      case 50: {
        [self setListDescription:[input readString]];
        break;
      }
      case 58: {
        [self setNavBarImgName:[input readString]];
        break;
      }
      case 66: {
        [self setNavTitleImgName:[input readString]];
        break;
      }
      case 74: {
        [self setMachineImgName:[input readString]];
        break;
      }
      case 82: {
        BoosterDisplayItemProto_Builder* subBuilder = [BoosterDisplayItemProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDisplayItems:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasBoosterPackId {
  return result.hasBoosterPackId;
}
- (int32_t) boosterPackId {
  return result.boosterPackId;
}
- (BoosterPackProto_Builder*) setBoosterPackId:(int32_t) value {
  result.hasBoosterPackId = YES;
  result.boosterPackId = value;
  return self;
}
- (BoosterPackProto_Builder*) clearBoosterPackId {
  result.hasBoosterPackId = NO;
  result.boosterPackId = 0;
  return self;
}
- (BOOL) hasBoosterPackName {
  return result.hasBoosterPackName;
}
- (NSString*) boosterPackName {
  return result.boosterPackName;
}
- (BoosterPackProto_Builder*) setBoosterPackName:(NSString*) value {
  result.hasBoosterPackName = YES;
  result.boosterPackName = value;
  return self;
}
- (BoosterPackProto_Builder*) clearBoosterPackName {
  result.hasBoosterPackName = NO;
  result.boosterPackName = @"";
  return self;
}
- (BOOL) hasGemPrice {
  return result.hasGemPrice;
}
- (int32_t) gemPrice {
  return result.gemPrice;
}
- (BoosterPackProto_Builder*) setGemPrice:(int32_t) value {
  result.hasGemPrice = YES;
  result.gemPrice = value;
  return self;
}
- (BoosterPackProto_Builder*) clearGemPrice {
  result.hasGemPrice = NO;
  result.gemPrice = 0;
  return self;
}
- (NSMutableArray *)specialItemsList {
  return result.mutableSpecialItemsList;
}
- (BoosterItemProto*)specialItemsAtIndex:(NSUInteger)index {
  return [result specialItemsAtIndex:index];
}
- (BoosterPackProto_Builder *)addSpecialItems:(BoosterItemProto*)value {
  if (result.mutableSpecialItemsList == nil) {
    result.mutableSpecialItemsList = [[NSMutableArray alloc]init];
  }
  [result.mutableSpecialItemsList addObject:value];
  return self;
}
- (BoosterPackProto_Builder *)addAllSpecialItems:(NSArray *)array {
  if (result.mutableSpecialItemsList == nil) {
    result.mutableSpecialItemsList = [NSMutableArray array];
  }
  [result.mutableSpecialItemsList addObjectsFromArray:array];
  return self;
}
- (BoosterPackProto_Builder *)clearSpecialItems {
  result.mutableSpecialItemsList = nil;
  return self;
}
- (BOOL) hasListBackgroundImgName {
  return result.hasListBackgroundImgName;
}
- (NSString*) listBackgroundImgName {
  return result.listBackgroundImgName;
}
- (BoosterPackProto_Builder*) setListBackgroundImgName:(NSString*) value {
  result.hasListBackgroundImgName = YES;
  result.listBackgroundImgName = value;
  return self;
}
- (BoosterPackProto_Builder*) clearListBackgroundImgName {
  result.hasListBackgroundImgName = NO;
  result.listBackgroundImgName = @"";
  return self;
}
- (BOOL) hasListDescription {
  return result.hasListDescription;
}
- (NSString*) listDescription {
  return result.listDescription;
}
- (BoosterPackProto_Builder*) setListDescription:(NSString*) value {
  result.hasListDescription = YES;
  result.listDescription = value;
  return self;
}
- (BoosterPackProto_Builder*) clearListDescription {
  result.hasListDescription = NO;
  result.listDescription = @"";
  return self;
}
- (BOOL) hasNavBarImgName {
  return result.hasNavBarImgName;
}
- (NSString*) navBarImgName {
  return result.navBarImgName;
}
- (BoosterPackProto_Builder*) setNavBarImgName:(NSString*) value {
  result.hasNavBarImgName = YES;
  result.navBarImgName = value;
  return self;
}
- (BoosterPackProto_Builder*) clearNavBarImgName {
  result.hasNavBarImgName = NO;
  result.navBarImgName = @"";
  return self;
}
- (BOOL) hasNavTitleImgName {
  return result.hasNavTitleImgName;
}
- (NSString*) navTitleImgName {
  return result.navTitleImgName;
}
- (BoosterPackProto_Builder*) setNavTitleImgName:(NSString*) value {
  result.hasNavTitleImgName = YES;
  result.navTitleImgName = value;
  return self;
}
- (BoosterPackProto_Builder*) clearNavTitleImgName {
  result.hasNavTitleImgName = NO;
  result.navTitleImgName = @"";
  return self;
}
- (BOOL) hasMachineImgName {
  return result.hasMachineImgName;
}
- (NSString*) machineImgName {
  return result.machineImgName;
}
- (BoosterPackProto_Builder*) setMachineImgName:(NSString*) value {
  result.hasMachineImgName = YES;
  result.machineImgName = value;
  return self;
}
- (BoosterPackProto_Builder*) clearMachineImgName {
  result.hasMachineImgName = NO;
  result.machineImgName = @"";
  return self;
}
- (NSMutableArray *)displayItemsList {
  return result.mutableDisplayItemsList;
}
- (BoosterDisplayItemProto*)displayItemsAtIndex:(NSUInteger)index {
  return [result displayItemsAtIndex:index];
}
- (BoosterPackProto_Builder *)addDisplayItems:(BoosterDisplayItemProto*)value {
  if (result.mutableDisplayItemsList == nil) {
    result.mutableDisplayItemsList = [[NSMutableArray alloc]init];
  }
  [result.mutableDisplayItemsList addObject:value];
  return self;
}
- (BoosterPackProto_Builder *)addAllDisplayItems:(NSArray *)array {
  if (result.mutableDisplayItemsList == nil) {
    result.mutableDisplayItemsList = [NSMutableArray array];
  }
  [result.mutableDisplayItemsList addObjectsFromArray:array];
  return self;
}
- (BoosterPackProto_Builder *)clearDisplayItems {
  result.mutableDisplayItemsList = nil;
  return self;
}
@end

@interface BoosterItemProto ()
@property int32_t boosterItemId;
@property int32_t boosterPackId;
@property int32_t monsterId;
@property int32_t numPieces;
@property BOOL isComplete;
@property BOOL isSpecial;
@property int32_t gemReward;
@property int32_t cashReward;
@property Float32 chanceToAppear;
@end

@implementation BoosterItemProto

- (BOOL) hasBoosterItemId {
  return !!hasBoosterItemId_;
}
- (void) setHasBoosterItemId:(BOOL) value_ {
  hasBoosterItemId_ = !!value_;
}
@synthesize boosterItemId;
- (BOOL) hasBoosterPackId {
  return !!hasBoosterPackId_;
}
- (void) setHasBoosterPackId:(BOOL) value_ {
  hasBoosterPackId_ = !!value_;
}
@synthesize boosterPackId;
- (BOOL) hasMonsterId {
  return !!hasMonsterId_;
}
- (void) setHasMonsterId:(BOOL) value_ {
  hasMonsterId_ = !!value_;
}
@synthesize monsterId;
- (BOOL) hasNumPieces {
  return !!hasNumPieces_;
}
- (void) setHasNumPieces:(BOOL) value_ {
  hasNumPieces_ = !!value_;
}
@synthesize numPieces;
- (BOOL) hasIsComplete {
  return !!hasIsComplete_;
}
- (void) setHasIsComplete:(BOOL) value_ {
  hasIsComplete_ = !!value_;
}
- (BOOL) isComplete {
  return !!isComplete_;
}
- (void) setIsComplete:(BOOL) value_ {
  isComplete_ = !!value_;
}
- (BOOL) hasIsSpecial {
  return !!hasIsSpecial_;
}
- (void) setHasIsSpecial:(BOOL) value_ {
  hasIsSpecial_ = !!value_;
}
- (BOOL) isSpecial {
  return !!isSpecial_;
}
- (void) setIsSpecial:(BOOL) value_ {
  isSpecial_ = !!value_;
}
- (BOOL) hasGemReward {
  return !!hasGemReward_;
}
- (void) setHasGemReward:(BOOL) value_ {
  hasGemReward_ = !!value_;
}
@synthesize gemReward;
- (BOOL) hasCashReward {
  return !!hasCashReward_;
}
- (void) setHasCashReward:(BOOL) value_ {
  hasCashReward_ = !!value_;
}
@synthesize cashReward;
- (BOOL) hasChanceToAppear {
  return !!hasChanceToAppear_;
}
- (void) setHasChanceToAppear:(BOOL) value_ {
  hasChanceToAppear_ = !!value_;
}
@synthesize chanceToAppear;
- (id) init {
  if ((self = [super init])) {
    self.boosterItemId = 0;
    self.boosterPackId = 0;
    self.monsterId = 0;
    self.numPieces = 0;
    self.isComplete = NO;
    self.isSpecial = NO;
    self.gemReward = 0;
    self.cashReward = 0;
    self.chanceToAppear = 0;
  }
  return self;
}
static BoosterItemProto* defaultBoosterItemProtoInstance = nil;
+ (void) initialize {
  if (self == [BoosterItemProto class]) {
    defaultBoosterItemProtoInstance = [[BoosterItemProto alloc] init];
  }
}
+ (BoosterItemProto*) defaultInstance {
  return defaultBoosterItemProtoInstance;
}
- (BoosterItemProto*) defaultInstance {
  return defaultBoosterItemProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBoosterItemId) {
    [output writeInt32:1 value:self.boosterItemId];
  }
  if (self.hasBoosterPackId) {
    [output writeInt32:2 value:self.boosterPackId];
  }
  if (self.hasMonsterId) {
    [output writeInt32:3 value:self.monsterId];
  }
  if (self.hasNumPieces) {
    [output writeInt32:4 value:self.numPieces];
  }
  if (self.hasIsComplete) {
    [output writeBool:5 value:self.isComplete];
  }
  if (self.hasIsSpecial) {
    [output writeBool:6 value:self.isSpecial];
  }
  if (self.hasGemReward) {
    [output writeInt32:7 value:self.gemReward];
  }
  if (self.hasCashReward) {
    [output writeInt32:8 value:self.cashReward];
  }
  if (self.hasChanceToAppear) {
    [output writeFloat:9 value:self.chanceToAppear];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBoosterItemId) {
    size_ += computeInt32Size(1, self.boosterItemId);
  }
  if (self.hasBoosterPackId) {
    size_ += computeInt32Size(2, self.boosterPackId);
  }
  if (self.hasMonsterId) {
    size_ += computeInt32Size(3, self.monsterId);
  }
  if (self.hasNumPieces) {
    size_ += computeInt32Size(4, self.numPieces);
  }
  if (self.hasIsComplete) {
    size_ += computeBoolSize(5, self.isComplete);
  }
  if (self.hasIsSpecial) {
    size_ += computeBoolSize(6, self.isSpecial);
  }
  if (self.hasGemReward) {
    size_ += computeInt32Size(7, self.gemReward);
  }
  if (self.hasCashReward) {
    size_ += computeInt32Size(8, self.cashReward);
  }
  if (self.hasChanceToAppear) {
    size_ += computeFloatSize(9, self.chanceToAppear);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BoosterItemProto*) parseFromData:(NSData*) data {
  return (BoosterItemProto*)[[[BoosterItemProto builder] mergeFromData:data] build];
}
+ (BoosterItemProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BoosterItemProto*)[[[BoosterItemProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BoosterItemProto*) parseFromInputStream:(NSInputStream*) input {
  return (BoosterItemProto*)[[[BoosterItemProto builder] mergeFromInputStream:input] build];
}
+ (BoosterItemProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BoosterItemProto*)[[[BoosterItemProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BoosterItemProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BoosterItemProto*)[[[BoosterItemProto builder] mergeFromCodedInputStream:input] build];
}
+ (BoosterItemProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BoosterItemProto*)[[[BoosterItemProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BoosterItemProto_Builder*) builder {
  return [[BoosterItemProto_Builder alloc] init];
}
+ (BoosterItemProto_Builder*) builderWithPrototype:(BoosterItemProto*) prototype {
  return [[BoosterItemProto builder] mergeFrom:prototype];
}
- (BoosterItemProto_Builder*) builder {
  return [BoosterItemProto builder];
}
- (BoosterItemProto_Builder*) toBuilder {
  return [BoosterItemProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBoosterItemId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"boosterItemId", [NSNumber numberWithInteger:self.boosterItemId]];
  }
  if (self.hasBoosterPackId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"boosterPackId", [NSNumber numberWithInteger:self.boosterPackId]];
  }
  if (self.hasMonsterId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"monsterId", [NSNumber numberWithInteger:self.monsterId]];
  }
  if (self.hasNumPieces) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numPieces", [NSNumber numberWithInteger:self.numPieces]];
  }
  if (self.hasIsComplete) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isComplete", [NSNumber numberWithBool:self.isComplete]];
  }
  if (self.hasIsSpecial) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isSpecial", [NSNumber numberWithBool:self.isSpecial]];
  }
  if (self.hasGemReward) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gemReward", [NSNumber numberWithInteger:self.gemReward]];
  }
  if (self.hasCashReward) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cashReward", [NSNumber numberWithInteger:self.cashReward]];
  }
  if (self.hasChanceToAppear) {
    [output appendFormat:@"%@%@: %@\n", indent, @"chanceToAppear", [NSNumber numberWithFloat:self.chanceToAppear]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BoosterItemProto class]]) {
    return NO;
  }
  BoosterItemProto *otherMessage = other;
  return
      self.hasBoosterItemId == otherMessage.hasBoosterItemId &&
      (!self.hasBoosterItemId || self.boosterItemId == otherMessage.boosterItemId) &&
      self.hasBoosterPackId == otherMessage.hasBoosterPackId &&
      (!self.hasBoosterPackId || self.boosterPackId == otherMessage.boosterPackId) &&
      self.hasMonsterId == otherMessage.hasMonsterId &&
      (!self.hasMonsterId || self.monsterId == otherMessage.monsterId) &&
      self.hasNumPieces == otherMessage.hasNumPieces &&
      (!self.hasNumPieces || self.numPieces == otherMessage.numPieces) &&
      self.hasIsComplete == otherMessage.hasIsComplete &&
      (!self.hasIsComplete || self.isComplete == otherMessage.isComplete) &&
      self.hasIsSpecial == otherMessage.hasIsSpecial &&
      (!self.hasIsSpecial || self.isSpecial == otherMessage.isSpecial) &&
      self.hasGemReward == otherMessage.hasGemReward &&
      (!self.hasGemReward || self.gemReward == otherMessage.gemReward) &&
      self.hasCashReward == otherMessage.hasCashReward &&
      (!self.hasCashReward || self.cashReward == otherMessage.cashReward) &&
      self.hasChanceToAppear == otherMessage.hasChanceToAppear &&
      (!self.hasChanceToAppear || self.chanceToAppear == otherMessage.chanceToAppear) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBoosterItemId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.boosterItemId] hash];
  }
  if (self.hasBoosterPackId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.boosterPackId] hash];
  }
  if (self.hasMonsterId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.monsterId] hash];
  }
  if (self.hasNumPieces) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numPieces] hash];
  }
  if (self.hasIsComplete) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isComplete] hash];
  }
  if (self.hasIsSpecial) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isSpecial] hash];
  }
  if (self.hasGemReward) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.gemReward] hash];
  }
  if (self.hasCashReward) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cashReward] hash];
  }
  if (self.hasChanceToAppear) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.chanceToAppear] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BoosterItemProto_Builder()
@property (strong) BoosterItemProto* result;
@end

@implementation BoosterItemProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BoosterItemProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BoosterItemProto_Builder*) clear {
  self.result = [[BoosterItemProto alloc] init];
  return self;
}
- (BoosterItemProto_Builder*) clone {
  return [BoosterItemProto builderWithPrototype:result];
}
- (BoosterItemProto*) defaultInstance {
  return [BoosterItemProto defaultInstance];
}
- (BoosterItemProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BoosterItemProto*) buildPartial {
  BoosterItemProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BoosterItemProto_Builder*) mergeFrom:(BoosterItemProto*) other {
  if (other == [BoosterItemProto defaultInstance]) {
    return self;
  }
  if (other.hasBoosterItemId) {
    [self setBoosterItemId:other.boosterItemId];
  }
  if (other.hasBoosterPackId) {
    [self setBoosterPackId:other.boosterPackId];
  }
  if (other.hasMonsterId) {
    [self setMonsterId:other.monsterId];
  }
  if (other.hasNumPieces) {
    [self setNumPieces:other.numPieces];
  }
  if (other.hasIsComplete) {
    [self setIsComplete:other.isComplete];
  }
  if (other.hasIsSpecial) {
    [self setIsSpecial:other.isSpecial];
  }
  if (other.hasGemReward) {
    [self setGemReward:other.gemReward];
  }
  if (other.hasCashReward) {
    [self setCashReward:other.cashReward];
  }
  if (other.hasChanceToAppear) {
    [self setChanceToAppear:other.chanceToAppear];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BoosterItemProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BoosterItemProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBoosterItemId:[input readInt32]];
        break;
      }
      case 16: {
        [self setBoosterPackId:[input readInt32]];
        break;
      }
      case 24: {
        [self setMonsterId:[input readInt32]];
        break;
      }
      case 32: {
        [self setNumPieces:[input readInt32]];
        break;
      }
      case 40: {
        [self setIsComplete:[input readBool]];
        break;
      }
      case 48: {
        [self setIsSpecial:[input readBool]];
        break;
      }
      case 56: {
        [self setGemReward:[input readInt32]];
        break;
      }
      case 64: {
        [self setCashReward:[input readInt32]];
        break;
      }
      case 77: {
        [self setChanceToAppear:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasBoosterItemId {
  return result.hasBoosterItemId;
}
- (int32_t) boosterItemId {
  return result.boosterItemId;
}
- (BoosterItemProto_Builder*) setBoosterItemId:(int32_t) value {
  result.hasBoosterItemId = YES;
  result.boosterItemId = value;
  return self;
}
- (BoosterItemProto_Builder*) clearBoosterItemId {
  result.hasBoosterItemId = NO;
  result.boosterItemId = 0;
  return self;
}
- (BOOL) hasBoosterPackId {
  return result.hasBoosterPackId;
}
- (int32_t) boosterPackId {
  return result.boosterPackId;
}
- (BoosterItemProto_Builder*) setBoosterPackId:(int32_t) value {
  result.hasBoosterPackId = YES;
  result.boosterPackId = value;
  return self;
}
- (BoosterItemProto_Builder*) clearBoosterPackId {
  result.hasBoosterPackId = NO;
  result.boosterPackId = 0;
  return self;
}
- (BOOL) hasMonsterId {
  return result.hasMonsterId;
}
- (int32_t) monsterId {
  return result.monsterId;
}
- (BoosterItemProto_Builder*) setMonsterId:(int32_t) value {
  result.hasMonsterId = YES;
  result.monsterId = value;
  return self;
}
- (BoosterItemProto_Builder*) clearMonsterId {
  result.hasMonsterId = NO;
  result.monsterId = 0;
  return self;
}
- (BOOL) hasNumPieces {
  return result.hasNumPieces;
}
- (int32_t) numPieces {
  return result.numPieces;
}
- (BoosterItemProto_Builder*) setNumPieces:(int32_t) value {
  result.hasNumPieces = YES;
  result.numPieces = value;
  return self;
}
- (BoosterItemProto_Builder*) clearNumPieces {
  result.hasNumPieces = NO;
  result.numPieces = 0;
  return self;
}
- (BOOL) hasIsComplete {
  return result.hasIsComplete;
}
- (BOOL) isComplete {
  return result.isComplete;
}
- (BoosterItemProto_Builder*) setIsComplete:(BOOL) value {
  result.hasIsComplete = YES;
  result.isComplete = value;
  return self;
}
- (BoosterItemProto_Builder*) clearIsComplete {
  result.hasIsComplete = NO;
  result.isComplete = NO;
  return self;
}
- (BOOL) hasIsSpecial {
  return result.hasIsSpecial;
}
- (BOOL) isSpecial {
  return result.isSpecial;
}
- (BoosterItemProto_Builder*) setIsSpecial:(BOOL) value {
  result.hasIsSpecial = YES;
  result.isSpecial = value;
  return self;
}
- (BoosterItemProto_Builder*) clearIsSpecial {
  result.hasIsSpecial = NO;
  result.isSpecial = NO;
  return self;
}
- (BOOL) hasGemReward {
  return result.hasGemReward;
}
- (int32_t) gemReward {
  return result.gemReward;
}
- (BoosterItemProto_Builder*) setGemReward:(int32_t) value {
  result.hasGemReward = YES;
  result.gemReward = value;
  return self;
}
- (BoosterItemProto_Builder*) clearGemReward {
  result.hasGemReward = NO;
  result.gemReward = 0;
  return self;
}
- (BOOL) hasCashReward {
  return result.hasCashReward;
}
- (int32_t) cashReward {
  return result.cashReward;
}
- (BoosterItemProto_Builder*) setCashReward:(int32_t) value {
  result.hasCashReward = YES;
  result.cashReward = value;
  return self;
}
- (BoosterItemProto_Builder*) clearCashReward {
  result.hasCashReward = NO;
  result.cashReward = 0;
  return self;
}
- (BOOL) hasChanceToAppear {
  return result.hasChanceToAppear;
}
- (Float32) chanceToAppear {
  return result.chanceToAppear;
}
- (BoosterItemProto_Builder*) setChanceToAppear:(Float32) value {
  result.hasChanceToAppear = YES;
  result.chanceToAppear = value;
  return self;
}
- (BoosterItemProto_Builder*) clearChanceToAppear {
  result.hasChanceToAppear = NO;
  result.chanceToAppear = 0;
  return self;
}
@end

@interface BoosterDisplayItemProto ()
@property int32_t boosterPackId;
@property BOOL isMonster;
@property BOOL isComplete;
@property Quality quality;
@property int32_t gemReward;
@property int32_t quantity;
@end

@implementation BoosterDisplayItemProto

- (BOOL) hasBoosterPackId {
  return !!hasBoosterPackId_;
}
- (void) setHasBoosterPackId:(BOOL) value_ {
  hasBoosterPackId_ = !!value_;
}
@synthesize boosterPackId;
- (BOOL) hasIsMonster {
  return !!hasIsMonster_;
}
- (void) setHasIsMonster:(BOOL) value_ {
  hasIsMonster_ = !!value_;
}
- (BOOL) isMonster {
  return !!isMonster_;
}
- (void) setIsMonster:(BOOL) value_ {
  isMonster_ = !!value_;
}
- (BOOL) hasIsComplete {
  return !!hasIsComplete_;
}
- (void) setHasIsComplete:(BOOL) value_ {
  hasIsComplete_ = !!value_;
}
- (BOOL) isComplete {
  return !!isComplete_;
}
- (void) setIsComplete:(BOOL) value_ {
  isComplete_ = !!value_;
}
- (BOOL) hasQuality {
  return !!hasQuality_;
}
- (void) setHasQuality:(BOOL) value_ {
  hasQuality_ = !!value_;
}
@synthesize quality;
- (BOOL) hasGemReward {
  return !!hasGemReward_;
}
- (void) setHasGemReward:(BOOL) value_ {
  hasGemReward_ = !!value_;
}
@synthesize gemReward;
- (BOOL) hasQuantity {
  return !!hasQuantity_;
}
- (void) setHasQuantity:(BOOL) value_ {
  hasQuantity_ = !!value_;
}
@synthesize quantity;
- (id) init {
  if ((self = [super init])) {
    self.boosterPackId = 0;
    self.isMonster = NO;
    self.isComplete = NO;
    self.quality = QualityNoQuality;
    self.gemReward = 0;
    self.quantity = 0;
  }
  return self;
}
static BoosterDisplayItemProto* defaultBoosterDisplayItemProtoInstance = nil;
+ (void) initialize {
  if (self == [BoosterDisplayItemProto class]) {
    defaultBoosterDisplayItemProtoInstance = [[BoosterDisplayItemProto alloc] init];
  }
}
+ (BoosterDisplayItemProto*) defaultInstance {
  return defaultBoosterDisplayItemProtoInstance;
}
- (BoosterDisplayItemProto*) defaultInstance {
  return defaultBoosterDisplayItemProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBoosterPackId) {
    [output writeInt32:1 value:self.boosterPackId];
  }
  if (self.hasIsMonster) {
    [output writeBool:2 value:self.isMonster];
  }
  if (self.hasIsComplete) {
    [output writeBool:3 value:self.isComplete];
  }
  if (self.hasQuality) {
    [output writeEnum:4 value:self.quality];
  }
  if (self.hasGemReward) {
    [output writeInt32:5 value:self.gemReward];
  }
  if (self.hasQuantity) {
    [output writeInt32:6 value:self.quantity];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBoosterPackId) {
    size_ += computeInt32Size(1, self.boosterPackId);
  }
  if (self.hasIsMonster) {
    size_ += computeBoolSize(2, self.isMonster);
  }
  if (self.hasIsComplete) {
    size_ += computeBoolSize(3, self.isComplete);
  }
  if (self.hasQuality) {
    size_ += computeEnumSize(4, self.quality);
  }
  if (self.hasGemReward) {
    size_ += computeInt32Size(5, self.gemReward);
  }
  if (self.hasQuantity) {
    size_ += computeInt32Size(6, self.quantity);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BoosterDisplayItemProto*) parseFromData:(NSData*) data {
  return (BoosterDisplayItemProto*)[[[BoosterDisplayItemProto builder] mergeFromData:data] build];
}
+ (BoosterDisplayItemProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BoosterDisplayItemProto*)[[[BoosterDisplayItemProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BoosterDisplayItemProto*) parseFromInputStream:(NSInputStream*) input {
  return (BoosterDisplayItemProto*)[[[BoosterDisplayItemProto builder] mergeFromInputStream:input] build];
}
+ (BoosterDisplayItemProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BoosterDisplayItemProto*)[[[BoosterDisplayItemProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BoosterDisplayItemProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BoosterDisplayItemProto*)[[[BoosterDisplayItemProto builder] mergeFromCodedInputStream:input] build];
}
+ (BoosterDisplayItemProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BoosterDisplayItemProto*)[[[BoosterDisplayItemProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BoosterDisplayItemProto_Builder*) builder {
  return [[BoosterDisplayItemProto_Builder alloc] init];
}
+ (BoosterDisplayItemProto_Builder*) builderWithPrototype:(BoosterDisplayItemProto*) prototype {
  return [[BoosterDisplayItemProto builder] mergeFrom:prototype];
}
- (BoosterDisplayItemProto_Builder*) builder {
  return [BoosterDisplayItemProto builder];
}
- (BoosterDisplayItemProto_Builder*) toBuilder {
  return [BoosterDisplayItemProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBoosterPackId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"boosterPackId", [NSNumber numberWithInteger:self.boosterPackId]];
  }
  if (self.hasIsMonster) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isMonster", [NSNumber numberWithBool:self.isMonster]];
  }
  if (self.hasIsComplete) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isComplete", [NSNumber numberWithBool:self.isComplete]];
  }
  if (self.hasQuality) {
    [output appendFormat:@"%@%@: %d\n", indent, @"quality", self.quality];
  }
  if (self.hasGemReward) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gemReward", [NSNumber numberWithInteger:self.gemReward]];
  }
  if (self.hasQuantity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"quantity", [NSNumber numberWithInteger:self.quantity]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BoosterDisplayItemProto class]]) {
    return NO;
  }
  BoosterDisplayItemProto *otherMessage = other;
  return
      self.hasBoosterPackId == otherMessage.hasBoosterPackId &&
      (!self.hasBoosterPackId || self.boosterPackId == otherMessage.boosterPackId) &&
      self.hasIsMonster == otherMessage.hasIsMonster &&
      (!self.hasIsMonster || self.isMonster == otherMessage.isMonster) &&
      self.hasIsComplete == otherMessage.hasIsComplete &&
      (!self.hasIsComplete || self.isComplete == otherMessage.isComplete) &&
      self.hasQuality == otherMessage.hasQuality &&
      (!self.hasQuality || self.quality == otherMessage.quality) &&
      self.hasGemReward == otherMessage.hasGemReward &&
      (!self.hasGemReward || self.gemReward == otherMessage.gemReward) &&
      self.hasQuantity == otherMessage.hasQuantity &&
      (!self.hasQuantity || self.quantity == otherMessage.quantity) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBoosterPackId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.boosterPackId] hash];
  }
  if (self.hasIsMonster) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isMonster] hash];
  }
  if (self.hasIsComplete) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isComplete] hash];
  }
  if (self.hasQuality) {
    hashCode = hashCode * 31 + self.quality;
  }
  if (self.hasGemReward) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.gemReward] hash];
  }
  if (self.hasQuantity) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.quantity] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BoosterDisplayItemProto_Builder()
@property (strong) BoosterDisplayItemProto* result;
@end

@implementation BoosterDisplayItemProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BoosterDisplayItemProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BoosterDisplayItemProto_Builder*) clear {
  self.result = [[BoosterDisplayItemProto alloc] init];
  return self;
}
- (BoosterDisplayItemProto_Builder*) clone {
  return [BoosterDisplayItemProto builderWithPrototype:result];
}
- (BoosterDisplayItemProto*) defaultInstance {
  return [BoosterDisplayItemProto defaultInstance];
}
- (BoosterDisplayItemProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BoosterDisplayItemProto*) buildPartial {
  BoosterDisplayItemProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BoosterDisplayItemProto_Builder*) mergeFrom:(BoosterDisplayItemProto*) other {
  if (other == [BoosterDisplayItemProto defaultInstance]) {
    return self;
  }
  if (other.hasBoosterPackId) {
    [self setBoosterPackId:other.boosterPackId];
  }
  if (other.hasIsMonster) {
    [self setIsMonster:other.isMonster];
  }
  if (other.hasIsComplete) {
    [self setIsComplete:other.isComplete];
  }
  if (other.hasQuality) {
    [self setQuality:other.quality];
  }
  if (other.hasGemReward) {
    [self setGemReward:other.gemReward];
  }
  if (other.hasQuantity) {
    [self setQuantity:other.quantity];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BoosterDisplayItemProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BoosterDisplayItemProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBoosterPackId:[input readInt32]];
        break;
      }
      case 16: {
        [self setIsMonster:[input readBool]];
        break;
      }
      case 24: {
        [self setIsComplete:[input readBool]];
        break;
      }
      case 32: {
        Quality value = (Quality)[input readEnum];
        if (QualityIsValidValue(value)) {
          [self setQuality:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setGemReward:[input readInt32]];
        break;
      }
      case 48: {
        [self setQuantity:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasBoosterPackId {
  return result.hasBoosterPackId;
}
- (int32_t) boosterPackId {
  return result.boosterPackId;
}
- (BoosterDisplayItemProto_Builder*) setBoosterPackId:(int32_t) value {
  result.hasBoosterPackId = YES;
  result.boosterPackId = value;
  return self;
}
- (BoosterDisplayItemProto_Builder*) clearBoosterPackId {
  result.hasBoosterPackId = NO;
  result.boosterPackId = 0;
  return self;
}
- (BOOL) hasIsMonster {
  return result.hasIsMonster;
}
- (BOOL) isMonster {
  return result.isMonster;
}
- (BoosterDisplayItemProto_Builder*) setIsMonster:(BOOL) value {
  result.hasIsMonster = YES;
  result.isMonster = value;
  return self;
}
- (BoosterDisplayItemProto_Builder*) clearIsMonster {
  result.hasIsMonster = NO;
  result.isMonster = NO;
  return self;
}
- (BOOL) hasIsComplete {
  return result.hasIsComplete;
}
- (BOOL) isComplete {
  return result.isComplete;
}
- (BoosterDisplayItemProto_Builder*) setIsComplete:(BOOL) value {
  result.hasIsComplete = YES;
  result.isComplete = value;
  return self;
}
- (BoosterDisplayItemProto_Builder*) clearIsComplete {
  result.hasIsComplete = NO;
  result.isComplete = NO;
  return self;
}
- (BOOL) hasQuality {
  return result.hasQuality;
}
- (Quality) quality {
  return result.quality;
}
- (BoosterDisplayItemProto_Builder*) setQuality:(Quality) value {
  result.hasQuality = YES;
  result.quality = value;
  return self;
}
- (BoosterDisplayItemProto_Builder*) clearQuality {
  result.hasQuality = NO;
  result.quality = QualityNoQuality;
  return self;
}
- (BOOL) hasGemReward {
  return result.hasGemReward;
}
- (int32_t) gemReward {
  return result.gemReward;
}
- (BoosterDisplayItemProto_Builder*) setGemReward:(int32_t) value {
  result.hasGemReward = YES;
  result.gemReward = value;
  return self;
}
- (BoosterDisplayItemProto_Builder*) clearGemReward {
  result.hasGemReward = NO;
  result.gemReward = 0;
  return self;
}
- (BOOL) hasQuantity {
  return result.hasQuantity;
}
- (int32_t) quantity {
  return result.quantity;
}
- (BoosterDisplayItemProto_Builder*) setQuantity:(int32_t) value {
  result.hasQuantity = YES;
  result.quantity = value;
  return self;
}
- (BoosterDisplayItemProto_Builder*) clearQuantity {
  result.hasQuantity = NO;
  result.quantity = 0;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
