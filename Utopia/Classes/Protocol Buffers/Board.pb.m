// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Board.pb.h"
// @@protoc_insertion_point(imports)

@implementation BoardRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [BoardRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [SharedEnumConfigRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface BoardLayoutProto ()
@property int32_t boardId;
@property int32_t height;
@property int32_t width;
@property int32_t orbElements;
@property (strong) NSMutableArray * mutablePropertiesList;
@end

@implementation BoardLayoutProto

- (BOOL) hasBoardId {
  return !!hasBoardId_;
}
- (void) setHasBoardId:(BOOL) value_ {
  hasBoardId_ = !!value_;
}
@synthesize boardId;
- (BOOL) hasHeight {
  return !!hasHeight_;
}
- (void) setHasHeight:(BOOL) value_ {
  hasHeight_ = !!value_;
}
@synthesize height;
- (BOOL) hasWidth {
  return !!hasWidth_;
}
- (void) setHasWidth:(BOOL) value_ {
  hasWidth_ = !!value_;
}
@synthesize width;
- (BOOL) hasOrbElements {
  return !!hasOrbElements_;
}
- (void) setHasOrbElements:(BOOL) value_ {
  hasOrbElements_ = !!value_;
}
@synthesize orbElements;
@synthesize mutablePropertiesList;
@dynamic propertiesList;
- (id) init {
  if ((self = [super init])) {
    self.boardId = 0;
    self.height = 0;
    self.width = 0;
    self.orbElements = 0;
  }
  return self;
}
static BoardLayoutProto* defaultBoardLayoutProtoInstance = nil;
+ (void) initialize {
  if (self == [BoardLayoutProto class]) {
    defaultBoardLayoutProtoInstance = [[BoardLayoutProto alloc] init];
  }
}
+ (BoardLayoutProto*) defaultInstance {
  return defaultBoardLayoutProtoInstance;
}
- (BoardLayoutProto*) defaultInstance {
  return defaultBoardLayoutProtoInstance;
}
- (NSArray *)propertiesList {
  return mutablePropertiesList;
}
- (BoardPropertyProto*)propertiesAtIndex:(NSUInteger)index {
  return [mutablePropertiesList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBoardId) {
    [output writeInt32:1 value:self.boardId];
  }
  if (self.hasHeight) {
    [output writeInt32:2 value:self.height];
  }
  if (self.hasWidth) {
    [output writeInt32:3 value:self.width];
  }
  if (self.hasOrbElements) {
    [output writeInt32:4 value:self.orbElements];
  }
  [self.propertiesList enumerateObjectsUsingBlock:^(BoardPropertyProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:5 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBoardId) {
    size_ += computeInt32Size(1, self.boardId);
  }
  if (self.hasHeight) {
    size_ += computeInt32Size(2, self.height);
  }
  if (self.hasWidth) {
    size_ += computeInt32Size(3, self.width);
  }
  if (self.hasOrbElements) {
    size_ += computeInt32Size(4, self.orbElements);
  }
  [self.propertiesList enumerateObjectsUsingBlock:^(BoardPropertyProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(5, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BoardLayoutProto*) parseFromData:(NSData*) data {
  return (BoardLayoutProto*)[[[BoardLayoutProto builder] mergeFromData:data] build];
}
+ (BoardLayoutProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BoardLayoutProto*)[[[BoardLayoutProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BoardLayoutProto*) parseFromInputStream:(NSInputStream*) input {
  return (BoardLayoutProto*)[[[BoardLayoutProto builder] mergeFromInputStream:input] build];
}
+ (BoardLayoutProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BoardLayoutProto*)[[[BoardLayoutProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BoardLayoutProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BoardLayoutProto*)[[[BoardLayoutProto builder] mergeFromCodedInputStream:input] build];
}
+ (BoardLayoutProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BoardLayoutProto*)[[[BoardLayoutProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BoardLayoutProto_Builder*) builder {
  return [[BoardLayoutProto_Builder alloc] init];
}
+ (BoardLayoutProto_Builder*) builderWithPrototype:(BoardLayoutProto*) prototype {
  return [[BoardLayoutProto builder] mergeFrom:prototype];
}
- (BoardLayoutProto_Builder*) builder {
  return [BoardLayoutProto builder];
}
- (BoardLayoutProto_Builder*) toBuilder {
  return [BoardLayoutProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBoardId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"boardId", [NSNumber numberWithInteger:self.boardId]];
  }
  if (self.hasHeight) {
    [output appendFormat:@"%@%@: %@\n", indent, @"height", [NSNumber numberWithInteger:self.height]];
  }
  if (self.hasWidth) {
    [output appendFormat:@"%@%@: %@\n", indent, @"width", [NSNumber numberWithInteger:self.width]];
  }
  if (self.hasOrbElements) {
    [output appendFormat:@"%@%@: %@\n", indent, @"orbElements", [NSNumber numberWithInteger:self.orbElements]];
  }
  [self.propertiesList enumerateObjectsUsingBlock:^(BoardPropertyProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"properties"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BoardLayoutProto class]]) {
    return NO;
  }
  BoardLayoutProto *otherMessage = other;
  return
      self.hasBoardId == otherMessage.hasBoardId &&
      (!self.hasBoardId || self.boardId == otherMessage.boardId) &&
      self.hasHeight == otherMessage.hasHeight &&
      (!self.hasHeight || self.height == otherMessage.height) &&
      self.hasWidth == otherMessage.hasWidth &&
      (!self.hasWidth || self.width == otherMessage.width) &&
      self.hasOrbElements == otherMessage.hasOrbElements &&
      (!self.hasOrbElements || self.orbElements == otherMessage.orbElements) &&
      [self.propertiesList isEqualToArray:otherMessage.propertiesList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBoardId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.boardId] hash];
  }
  if (self.hasHeight) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.height] hash];
  }
  if (self.hasWidth) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.width] hash];
  }
  if (self.hasOrbElements) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.orbElements] hash];
  }
  [self.propertiesList enumerateObjectsUsingBlock:^(BoardPropertyProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BoardLayoutProto_Builder()
@property (strong) BoardLayoutProto* result;
@end

@implementation BoardLayoutProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BoardLayoutProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BoardLayoutProto_Builder*) clear {
  self.result = [[BoardLayoutProto alloc] init];
  return self;
}
- (BoardLayoutProto_Builder*) clone {
  return [BoardLayoutProto builderWithPrototype:result];
}
- (BoardLayoutProto*) defaultInstance {
  return [BoardLayoutProto defaultInstance];
}
- (BoardLayoutProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BoardLayoutProto*) buildPartial {
  BoardLayoutProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BoardLayoutProto_Builder*) mergeFrom:(BoardLayoutProto*) other {
  if (other == [BoardLayoutProto defaultInstance]) {
    return self;
  }
  if (other.hasBoardId) {
    [self setBoardId:other.boardId];
  }
  if (other.hasHeight) {
    [self setHeight:other.height];
  }
  if (other.hasWidth) {
    [self setWidth:other.width];
  }
  if (other.hasOrbElements) {
    [self setOrbElements:other.orbElements];
  }
  if (other.mutablePropertiesList.count > 0) {
    if (result.mutablePropertiesList == nil) {
      result.mutablePropertiesList = [[NSMutableArray alloc] initWithArray:other.mutablePropertiesList];
    } else {
      [result.mutablePropertiesList addObjectsFromArray:other.mutablePropertiesList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BoardLayoutProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BoardLayoutProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBoardId:[input readInt32]];
        break;
      }
      case 16: {
        [self setHeight:[input readInt32]];
        break;
      }
      case 24: {
        [self setWidth:[input readInt32]];
        break;
      }
      case 32: {
        [self setOrbElements:[input readInt32]];
        break;
      }
      case 42: {
        BoardPropertyProto_Builder* subBuilder = [BoardPropertyProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addProperties:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasBoardId {
  return result.hasBoardId;
}
- (int32_t) boardId {
  return result.boardId;
}
- (BoardLayoutProto_Builder*) setBoardId:(int32_t) value {
  result.hasBoardId = YES;
  result.boardId = value;
  return self;
}
- (BoardLayoutProto_Builder*) clearBoardId {
  result.hasBoardId = NO;
  result.boardId = 0;
  return self;
}
- (BOOL) hasHeight {
  return result.hasHeight;
}
- (int32_t) height {
  return result.height;
}
- (BoardLayoutProto_Builder*) setHeight:(int32_t) value {
  result.hasHeight = YES;
  result.height = value;
  return self;
}
- (BoardLayoutProto_Builder*) clearHeight {
  result.hasHeight = NO;
  result.height = 0;
  return self;
}
- (BOOL) hasWidth {
  return result.hasWidth;
}
- (int32_t) width {
  return result.width;
}
- (BoardLayoutProto_Builder*) setWidth:(int32_t) value {
  result.hasWidth = YES;
  result.width = value;
  return self;
}
- (BoardLayoutProto_Builder*) clearWidth {
  result.hasWidth = NO;
  result.width = 0;
  return self;
}
- (BOOL) hasOrbElements {
  return result.hasOrbElements;
}
- (int32_t) orbElements {
  return result.orbElements;
}
- (BoardLayoutProto_Builder*) setOrbElements:(int32_t) value {
  result.hasOrbElements = YES;
  result.orbElements = value;
  return self;
}
- (BoardLayoutProto_Builder*) clearOrbElements {
  result.hasOrbElements = NO;
  result.orbElements = 0;
  return self;
}
- (NSMutableArray *)propertiesList {
  return result.mutablePropertiesList;
}
- (BoardPropertyProto*)propertiesAtIndex:(NSUInteger)index {
  return [result propertiesAtIndex:index];
}
- (BoardLayoutProto_Builder *)addProperties:(BoardPropertyProto*)value {
  if (result.mutablePropertiesList == nil) {
    result.mutablePropertiesList = [[NSMutableArray alloc]init];
  }
  [result.mutablePropertiesList addObject:value];
  return self;
}
- (BoardLayoutProto_Builder *)addAllProperties:(NSArray *)array {
  if (result.mutablePropertiesList == nil) {
    result.mutablePropertiesList = [NSMutableArray array];
  }
  [result.mutablePropertiesList addObjectsFromArray:array];
  return self;
}
- (BoardLayoutProto_Builder *)clearProperties {
  result.mutablePropertiesList = nil;
  return self;
}
@end

@interface BoardPropertyProto ()
@property int32_t boardPropertyId;
@property int32_t boardId;
@property (strong) NSString* name;
@property int32_t posX;
@property int32_t posY;
@property Element elem;
@property int32_t value;
@end

@implementation BoardPropertyProto

- (BOOL) hasBoardPropertyId {
  return !!hasBoardPropertyId_;
}
- (void) setHasBoardPropertyId:(BOOL) value_ {
  hasBoardPropertyId_ = !!value_;
}
@synthesize boardPropertyId;
- (BOOL) hasBoardId {
  return !!hasBoardId_;
}
- (void) setHasBoardId:(BOOL) value_ {
  hasBoardId_ = !!value_;
}
@synthesize boardId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasPosX {
  return !!hasPosX_;
}
- (void) setHasPosX:(BOOL) value_ {
  hasPosX_ = !!value_;
}
@synthesize posX;
- (BOOL) hasPosY {
  return !!hasPosY_;
}
- (void) setHasPosY:(BOOL) value_ {
  hasPosY_ = !!value_;
}
@synthesize posY;
- (BOOL) hasElem {
  return !!hasElem_;
}
- (void) setHasElem:(BOOL) value_ {
  hasElem_ = !!value_;
}
@synthesize elem;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) value_ {
  hasValue_ = !!value_;
}
@synthesize value;
- (id) init {
  if ((self = [super init])) {
    self.boardPropertyId = 0;
    self.boardId = 0;
    self.name = @"";
    self.posX = 0;
    self.posY = 0;
    self.elem = ElementNoElement;
    self.value = 0;
  }
  return self;
}
static BoardPropertyProto* defaultBoardPropertyProtoInstance = nil;
+ (void) initialize {
  if (self == [BoardPropertyProto class]) {
    defaultBoardPropertyProtoInstance = [[BoardPropertyProto alloc] init];
  }
}
+ (BoardPropertyProto*) defaultInstance {
  return defaultBoardPropertyProtoInstance;
}
- (BoardPropertyProto*) defaultInstance {
  return defaultBoardPropertyProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBoardPropertyId) {
    [output writeInt32:1 value:self.boardPropertyId];
  }
  if (self.hasBoardId) {
    [output writeInt32:2 value:self.boardId];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  if (self.hasPosX) {
    [output writeInt32:4 value:self.posX];
  }
  if (self.hasPosY) {
    [output writeInt32:5 value:self.posY];
  }
  if (self.hasElem) {
    [output writeEnum:6 value:self.elem];
  }
  if (self.hasValue) {
    [output writeInt32:7 value:self.value];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBoardPropertyId) {
    size_ += computeInt32Size(1, self.boardPropertyId);
  }
  if (self.hasBoardId) {
    size_ += computeInt32Size(2, self.boardId);
  }
  if (self.hasName) {
    size_ += computeStringSize(3, self.name);
  }
  if (self.hasPosX) {
    size_ += computeInt32Size(4, self.posX);
  }
  if (self.hasPosY) {
    size_ += computeInt32Size(5, self.posY);
  }
  if (self.hasElem) {
    size_ += computeEnumSize(6, self.elem);
  }
  if (self.hasValue) {
    size_ += computeInt32Size(7, self.value);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BoardPropertyProto*) parseFromData:(NSData*) data {
  return (BoardPropertyProto*)[[[BoardPropertyProto builder] mergeFromData:data] build];
}
+ (BoardPropertyProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BoardPropertyProto*)[[[BoardPropertyProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BoardPropertyProto*) parseFromInputStream:(NSInputStream*) input {
  return (BoardPropertyProto*)[[[BoardPropertyProto builder] mergeFromInputStream:input] build];
}
+ (BoardPropertyProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BoardPropertyProto*)[[[BoardPropertyProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BoardPropertyProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BoardPropertyProto*)[[[BoardPropertyProto builder] mergeFromCodedInputStream:input] build];
}
+ (BoardPropertyProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BoardPropertyProto*)[[[BoardPropertyProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BoardPropertyProto_Builder*) builder {
  return [[BoardPropertyProto_Builder alloc] init];
}
+ (BoardPropertyProto_Builder*) builderWithPrototype:(BoardPropertyProto*) prototype {
  return [[BoardPropertyProto builder] mergeFrom:prototype];
}
- (BoardPropertyProto_Builder*) builder {
  return [BoardPropertyProto builder];
}
- (BoardPropertyProto_Builder*) toBuilder {
  return [BoardPropertyProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBoardPropertyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"boardPropertyId", [NSNumber numberWithInteger:self.boardPropertyId]];
  }
  if (self.hasBoardId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"boardId", [NSNumber numberWithInteger:self.boardId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasPosX) {
    [output appendFormat:@"%@%@: %@\n", indent, @"posX", [NSNumber numberWithInteger:self.posX]];
  }
  if (self.hasPosY) {
    [output appendFormat:@"%@%@: %@\n", indent, @"posY", [NSNumber numberWithInteger:self.posY]];
  }
  if (self.hasElem) {
    [output appendFormat:@"%@%@: %@\n", indent, @"elem", [NSNumber numberWithInteger:self.elem]];
  }
  if (self.hasValue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"value", [NSNumber numberWithInteger:self.value]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BoardPropertyProto class]]) {
    return NO;
  }
  BoardPropertyProto *otherMessage = other;
  return
      self.hasBoardPropertyId == otherMessage.hasBoardPropertyId &&
      (!self.hasBoardPropertyId || self.boardPropertyId == otherMessage.boardPropertyId) &&
      self.hasBoardId == otherMessage.hasBoardId &&
      (!self.hasBoardId || self.boardId == otherMessage.boardId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasPosX == otherMessage.hasPosX &&
      (!self.hasPosX || self.posX == otherMessage.posX) &&
      self.hasPosY == otherMessage.hasPosY &&
      (!self.hasPosY || self.posY == otherMessage.posY) &&
      self.hasElem == otherMessage.hasElem &&
      (!self.hasElem || self.elem == otherMessage.elem) &&
      self.hasValue == otherMessage.hasValue &&
      (!self.hasValue || self.value == otherMessage.value) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBoardPropertyId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.boardPropertyId] hash];
  }
  if (self.hasBoardId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.boardId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasPosX) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.posX] hash];
  }
  if (self.hasPosY) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.posY] hash];
  }
  if (self.hasElem) {
    hashCode = hashCode * 31 + self.elem;
  }
  if (self.hasValue) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.value] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BoardPropertyProto_Builder()
@property (strong) BoardPropertyProto* result;
@end

@implementation BoardPropertyProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BoardPropertyProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BoardPropertyProto_Builder*) clear {
  self.result = [[BoardPropertyProto alloc] init];
  return self;
}
- (BoardPropertyProto_Builder*) clone {
  return [BoardPropertyProto builderWithPrototype:result];
}
- (BoardPropertyProto*) defaultInstance {
  return [BoardPropertyProto defaultInstance];
}
- (BoardPropertyProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BoardPropertyProto*) buildPartial {
  BoardPropertyProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BoardPropertyProto_Builder*) mergeFrom:(BoardPropertyProto*) other {
  if (other == [BoardPropertyProto defaultInstance]) {
    return self;
  }
  if (other.hasBoardPropertyId) {
    [self setBoardPropertyId:other.boardPropertyId];
  }
  if (other.hasBoardId) {
    [self setBoardId:other.boardId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasPosX) {
    [self setPosX:other.posX];
  }
  if (other.hasPosY) {
    [self setPosY:other.posY];
  }
  if (other.hasElem) {
    [self setElem:other.elem];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BoardPropertyProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BoardPropertyProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBoardPropertyId:[input readInt32]];
        break;
      }
      case 16: {
        [self setBoardId:[input readInt32]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 32: {
        [self setPosX:[input readInt32]];
        break;
      }
      case 40: {
        [self setPosY:[input readInt32]];
        break;
      }
      case 48: {
        Element value = (Element)[input readEnum];
        if (ElementIsValidValue(value)) {
          [self setElem:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
      case 56: {
        [self setValue:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasBoardPropertyId {
  return result.hasBoardPropertyId;
}
- (int32_t) boardPropertyId {
  return result.boardPropertyId;
}
- (BoardPropertyProto_Builder*) setBoardPropertyId:(int32_t) value {
  result.hasBoardPropertyId = YES;
  result.boardPropertyId = value;
  return self;
}
- (BoardPropertyProto_Builder*) clearBoardPropertyId {
  result.hasBoardPropertyId = NO;
  result.boardPropertyId = 0;
  return self;
}
- (BOOL) hasBoardId {
  return result.hasBoardId;
}
- (int32_t) boardId {
  return result.boardId;
}
- (BoardPropertyProto_Builder*) setBoardId:(int32_t) value {
  result.hasBoardId = YES;
  result.boardId = value;
  return self;
}
- (BoardPropertyProto_Builder*) clearBoardId {
  result.hasBoardId = NO;
  result.boardId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (BoardPropertyProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (BoardPropertyProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasPosX {
  return result.hasPosX;
}
- (int32_t) posX {
  return result.posX;
}
- (BoardPropertyProto_Builder*) setPosX:(int32_t) value {
  result.hasPosX = YES;
  result.posX = value;
  return self;
}
- (BoardPropertyProto_Builder*) clearPosX {
  result.hasPosX = NO;
  result.posX = 0;
  return self;
}
- (BOOL) hasPosY {
  return result.hasPosY;
}
- (int32_t) posY {
  return result.posY;
}
- (BoardPropertyProto_Builder*) setPosY:(int32_t) value {
  result.hasPosY = YES;
  result.posY = value;
  return self;
}
- (BoardPropertyProto_Builder*) clearPosY {
  result.hasPosY = NO;
  result.posY = 0;
  return self;
}
- (BOOL) hasElem {
  return result.hasElem;
}
- (Element) elem {
  return result.elem;
}
- (BoardPropertyProto_Builder*) setElem:(Element) value {
  result.hasElem = YES;
  result.elem = value;
  return self;
}
- (BoardPropertyProto_Builder*) clearElemList {
  result.hasElem = NO;
  result.elem = ElementNoElement;
  return self;
}
- (BOOL) hasValue {
  return result.hasValue;
}
- (int32_t) value {
  return result.value;
}
- (BoardPropertyProto_Builder*) setValue:(int32_t) value {
  result.hasValue = YES;
  result.value = value;
  return self;
}
- (BoardPropertyProto_Builder*) clearValue {
  result.hasValue = NO;
  result.value = 0;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
