// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventClan.pb.h"

@implementation EventClanRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventClanRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ClanRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface CreateClanRequestProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) NSString* name;
@property (retain) NSString* tag;
@property BOOL requestToJoinClanRequired;
@property (retain) NSString* description;
@end

@implementation CreateClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasTag {
  return !!hasTag_;
}
- (void) setHasTag:(BOOL) value {
  hasTag_ = !!value;
}
@synthesize tag;
- (BOOL) hasRequestToJoinClanRequired {
  return !!hasRequestToJoinClanRequired_;
}
- (void) setHasRequestToJoinClanRequired:(BOOL) value {
  hasRequestToJoinClanRequired_ = !!value;
}
- (BOOL) requestToJoinClanRequired {
  return !!requestToJoinClanRequired_;
}
- (void) setRequestToJoinClanRequired:(BOOL) value {
  requestToJoinClanRequired_ = !!value;
}
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) value {
  hasDescription_ = !!value;
}
@synthesize description;
- (void) dealloc {
  self.sender = nil;
  self.name = nil;
  self.tag = nil;
  self.description = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.name = @"";
    self.tag = @"";
    self.requestToJoinClanRequired = NO;
    self.description = @"";
  }
  return self;
}
static CreateClanRequestProto* defaultCreateClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [CreateClanRequestProto class]) {
    defaultCreateClanRequestProtoInstance = [[CreateClanRequestProto alloc] init];
  }
}
+ (CreateClanRequestProto*) defaultInstance {
  return defaultCreateClanRequestProtoInstance;
}
- (CreateClanRequestProto*) defaultInstance {
  return defaultCreateClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasTag) {
    [output writeString:3 value:self.tag];
  }
  if (self.hasRequestToJoinClanRequired) {
    [output writeBool:4 value:self.requestToJoinClanRequired];
  }
  if (self.hasDescription) {
    [output writeString:5 value:self.description];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasTag) {
    size += computeStringSize(3, self.tag);
  }
  if (self.hasRequestToJoinClanRequired) {
    size += computeBoolSize(4, self.requestToJoinClanRequired);
  }
  if (self.hasDescription) {
    size += computeStringSize(5, self.description);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CreateClanRequestProto*) parseFromData:(NSData*) data {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromData:data] build];
}
+ (CreateClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CreateClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (CreateClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (CreateClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateClanRequestProto_Builder*) builder {
  return [[[CreateClanRequestProto_Builder alloc] init] autorelease];
}
+ (CreateClanRequestProto_Builder*) builderWithPrototype:(CreateClanRequestProto*) prototype {
  return [[CreateClanRequestProto builder] mergeFrom:prototype];
}
- (CreateClanRequestProto_Builder*) builder {
  return [CreateClanRequestProto builder];
}
@end

@interface CreateClanRequestProto_Builder()
@property (retain) CreateClanRequestProto* result;
@end

@implementation CreateClanRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CreateClanRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CreateClanRequestProto_Builder*) clear {
  self.result = [[[CreateClanRequestProto alloc] init] autorelease];
  return self;
}
- (CreateClanRequestProto_Builder*) clone {
  return [CreateClanRequestProto builderWithPrototype:result];
}
- (CreateClanRequestProto*) defaultInstance {
  return [CreateClanRequestProto defaultInstance];
}
- (CreateClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CreateClanRequestProto*) buildPartial {
  CreateClanRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CreateClanRequestProto_Builder*) mergeFrom:(CreateClanRequestProto*) other {
  if (other == [CreateClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasTag) {
    [self setTag:other.tag];
  }
  if (other.hasRequestToJoinClanRequired) {
    [self setRequestToJoinClanRequired:other.requestToJoinClanRequired];
  }
  if (other.hasDescription) {
    [self setDescription:other.description];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CreateClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CreateClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setTag:[input readString]];
        break;
      }
      case 32: {
        [self setRequestToJoinClanRequired:[input readBool]];
        break;
      }
      case 42: {
        [self setDescription:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (CreateClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (CreateClanRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (CreateClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (CreateClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (CreateClanRequestProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasTag {
  return result.hasTag;
}
- (NSString*) tag {
  return result.tag;
}
- (CreateClanRequestProto_Builder*) setTag:(NSString*) value {
  result.hasTag = YES;
  result.tag = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearTag {
  result.hasTag = NO;
  result.tag = @"";
  return self;
}
- (BOOL) hasRequestToJoinClanRequired {
  return result.hasRequestToJoinClanRequired;
}
- (BOOL) requestToJoinClanRequired {
  return result.requestToJoinClanRequired;
}
- (CreateClanRequestProto_Builder*) setRequestToJoinClanRequired:(BOOL) value {
  result.hasRequestToJoinClanRequired = YES;
  result.requestToJoinClanRequired = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearRequestToJoinClanRequired {
  result.hasRequestToJoinClanRequired = NO;
  result.requestToJoinClanRequired = NO;
  return self;
}
- (BOOL) hasDescription {
  return result.hasDescription;
}
- (NSString*) description {
  return result.description;
}
- (CreateClanRequestProto_Builder*) setDescription:(NSString*) value {
  result.hasDescription = YES;
  result.description = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearDescription {
  result.hasDescription = NO;
  result.description = @"";
  return self;
}
@end

@interface CreateClanResponseProto ()
@property (retain) MinimumUserProto* sender;
@property CreateClanResponseProto_CreateClanStatus status;
@property (retain) MinimumClanProto* clanInfo;
@end

@implementation CreateClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasClanInfo {
  return !!hasClanInfo_;
}
- (void) setHasClanInfo:(BOOL) value {
  hasClanInfo_ = !!value;
}
@synthesize clanInfo;
- (void) dealloc {
  self.sender = nil;
  self.clanInfo = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = CreateClanResponseProto_CreateClanStatusSuccess;
    self.clanInfo = [MinimumClanProto defaultInstance];
  }
  return self;
}
static CreateClanResponseProto* defaultCreateClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [CreateClanResponseProto class]) {
    defaultCreateClanResponseProtoInstance = [[CreateClanResponseProto alloc] init];
  }
}
+ (CreateClanResponseProto*) defaultInstance {
  return defaultCreateClanResponseProtoInstance;
}
- (CreateClanResponseProto*) defaultInstance {
  return defaultCreateClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasClanInfo) {
    [output writeMessage:3 value:self.clanInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  if (self.hasClanInfo) {
    size += computeMessageSize(3, self.clanInfo);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CreateClanResponseProto*) parseFromData:(NSData*) data {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromData:data] build];
}
+ (CreateClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CreateClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (CreateClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (CreateClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateClanResponseProto_Builder*) builder {
  return [[[CreateClanResponseProto_Builder alloc] init] autorelease];
}
+ (CreateClanResponseProto_Builder*) builderWithPrototype:(CreateClanResponseProto*) prototype {
  return [[CreateClanResponseProto builder] mergeFrom:prototype];
}
- (CreateClanResponseProto_Builder*) builder {
  return [CreateClanResponseProto builder];
}
@end

BOOL CreateClanResponseProto_CreateClanStatusIsValidValue(CreateClanResponseProto_CreateClanStatus value) {
  switch (value) {
    case CreateClanResponseProto_CreateClanStatusSuccess:
    case CreateClanResponseProto_CreateClanStatusOtherFail:
    case CreateClanResponseProto_CreateClanStatusNotEnoughCoins:
    case CreateClanResponseProto_CreateClanStatusNameTaken:
    case CreateClanResponseProto_CreateClanStatusAlreadyInClan:
    case CreateClanResponseProto_CreateClanStatusInvalidTagLength:
    case CreateClanResponseProto_CreateClanStatusTagTaken:
      return YES;
    default:
      return NO;
  }
}
@interface CreateClanResponseProto_Builder()
@property (retain) CreateClanResponseProto* result;
@end

@implementation CreateClanResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CreateClanResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CreateClanResponseProto_Builder*) clear {
  self.result = [[[CreateClanResponseProto alloc] init] autorelease];
  return self;
}
- (CreateClanResponseProto_Builder*) clone {
  return [CreateClanResponseProto builderWithPrototype:result];
}
- (CreateClanResponseProto*) defaultInstance {
  return [CreateClanResponseProto defaultInstance];
}
- (CreateClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CreateClanResponseProto*) buildPartial {
  CreateClanResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CreateClanResponseProto_Builder*) mergeFrom:(CreateClanResponseProto*) other {
  if (other == [CreateClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasClanInfo) {
    [self mergeClanInfo:other.clanInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CreateClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CreateClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (CreateClanResponseProto_CreateClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasClanInfo) {
          [subBuilder mergeFrom:self.clanInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClanInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (CreateClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (CreateClanResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (CreateClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (CreateClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (CreateClanResponseProto_CreateClanStatus) status {
  return result.status;
}
- (CreateClanResponseProto_Builder*) setStatus:(CreateClanResponseProto_CreateClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (CreateClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = CreateClanResponseProto_CreateClanStatusSuccess;
  return self;
}
- (BOOL) hasClanInfo {
  return result.hasClanInfo;
}
- (MinimumClanProto*) clanInfo {
  return result.clanInfo;
}
- (CreateClanResponseProto_Builder*) setClanInfo:(MinimumClanProto*) value {
  result.hasClanInfo = YES;
  result.clanInfo = value;
  return self;
}
- (CreateClanResponseProto_Builder*) setClanInfoBuilder:(MinimumClanProto_Builder*) builderForValue {
  return [self setClanInfo:[builderForValue build]];
}
- (CreateClanResponseProto_Builder*) mergeClanInfo:(MinimumClanProto*) value {
  if (result.hasClanInfo &&
      result.clanInfo != [MinimumClanProto defaultInstance]) {
    result.clanInfo =
      [[[MinimumClanProto builderWithPrototype:result.clanInfo] mergeFrom:value] buildPartial];
  } else {
    result.clanInfo = value;
  }
  result.hasClanInfo = YES;
  return self;
}
- (CreateClanResponseProto_Builder*) clearClanInfo {
  result.hasClanInfo = NO;
  result.clanInfo = [MinimumClanProto defaultInstance];
  return self;
}
@end

@interface LeaveClanRequestProto ()
@property (retain) MinimumUserProto* sender;
@end

@implementation LeaveClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
  }
  return self;
}
static LeaveClanRequestProto* defaultLeaveClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [LeaveClanRequestProto class]) {
    defaultLeaveClanRequestProtoInstance = [[LeaveClanRequestProto alloc] init];
  }
}
+ (LeaveClanRequestProto*) defaultInstance {
  return defaultLeaveClanRequestProtoInstance;
}
- (LeaveClanRequestProto*) defaultInstance {
  return defaultLeaveClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LeaveClanRequestProto*) parseFromData:(NSData*) data {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromData:data] build];
}
+ (LeaveClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (LeaveClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (LeaveClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanRequestProto_Builder*) builder {
  return [[[LeaveClanRequestProto_Builder alloc] init] autorelease];
}
+ (LeaveClanRequestProto_Builder*) builderWithPrototype:(LeaveClanRequestProto*) prototype {
  return [[LeaveClanRequestProto builder] mergeFrom:prototype];
}
- (LeaveClanRequestProto_Builder*) builder {
  return [LeaveClanRequestProto builder];
}
@end

@interface LeaveClanRequestProto_Builder()
@property (retain) LeaveClanRequestProto* result;
@end

@implementation LeaveClanRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LeaveClanRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LeaveClanRequestProto_Builder*) clear {
  self.result = [[[LeaveClanRequestProto alloc] init] autorelease];
  return self;
}
- (LeaveClanRequestProto_Builder*) clone {
  return [LeaveClanRequestProto builderWithPrototype:result];
}
- (LeaveClanRequestProto*) defaultInstance {
  return [LeaveClanRequestProto defaultInstance];
}
- (LeaveClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LeaveClanRequestProto*) buildPartial {
  LeaveClanRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LeaveClanRequestProto_Builder*) mergeFrom:(LeaveClanRequestProto*) other {
  if (other == [LeaveClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LeaveClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LeaveClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (LeaveClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (LeaveClanRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (LeaveClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (LeaveClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
@end

@interface LeaveClanResponseProto ()
@property (retain) MinimumUserProto* sender;
@property LeaveClanResponseProto_LeaveClanStatus status;
@end

@implementation LeaveClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = LeaveClanResponseProto_LeaveClanStatusSuccess;
  }
  return self;
}
static LeaveClanResponseProto* defaultLeaveClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [LeaveClanResponseProto class]) {
    defaultLeaveClanResponseProtoInstance = [[LeaveClanResponseProto alloc] init];
  }
}
+ (LeaveClanResponseProto*) defaultInstance {
  return defaultLeaveClanResponseProtoInstance;
}
- (LeaveClanResponseProto*) defaultInstance {
  return defaultLeaveClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LeaveClanResponseProto*) parseFromData:(NSData*) data {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromData:data] build];
}
+ (LeaveClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (LeaveClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (LeaveClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanResponseProto_Builder*) builder {
  return [[[LeaveClanResponseProto_Builder alloc] init] autorelease];
}
+ (LeaveClanResponseProto_Builder*) builderWithPrototype:(LeaveClanResponseProto*) prototype {
  return [[LeaveClanResponseProto builder] mergeFrom:prototype];
}
- (LeaveClanResponseProto_Builder*) builder {
  return [LeaveClanResponseProto builder];
}
@end

BOOL LeaveClanResponseProto_LeaveClanStatusIsValidValue(LeaveClanResponseProto_LeaveClanStatus value) {
  switch (value) {
    case LeaveClanResponseProto_LeaveClanStatusSuccess:
    case LeaveClanResponseProto_LeaveClanStatusOtherFail:
    case LeaveClanResponseProto_LeaveClanStatusNotInClan:
    case LeaveClanResponseProto_LeaveClanStatusOwnerOfClanWithOthersStillIn:
      return YES;
    default:
      return NO;
  }
}
@interface LeaveClanResponseProto_Builder()
@property (retain) LeaveClanResponseProto* result;
@end

@implementation LeaveClanResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LeaveClanResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LeaveClanResponseProto_Builder*) clear {
  self.result = [[[LeaveClanResponseProto alloc] init] autorelease];
  return self;
}
- (LeaveClanResponseProto_Builder*) clone {
  return [LeaveClanResponseProto builderWithPrototype:result];
}
- (LeaveClanResponseProto*) defaultInstance {
  return [LeaveClanResponseProto defaultInstance];
}
- (LeaveClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LeaveClanResponseProto*) buildPartial {
  LeaveClanResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LeaveClanResponseProto_Builder*) mergeFrom:(LeaveClanResponseProto*) other {
  if (other == [LeaveClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LeaveClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LeaveClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (LeaveClanResponseProto_LeaveClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (LeaveClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (LeaveClanResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (LeaveClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (LeaveClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (LeaveClanResponseProto_LeaveClanStatus) status {
  return result.status;
}
- (LeaveClanResponseProto_Builder*) setStatus:(LeaveClanResponseProto_LeaveClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (LeaveClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = LeaveClanResponseProto_LeaveClanStatusSuccess;
  return self;
}
@end

@interface RequestJoinClanRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t clanId;
@end

@implementation RequestJoinClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasClanId {
  return !!hasClanId_;
}
- (void) setHasClanId:(BOOL) value {
  hasClanId_ = !!value;
}
@synthesize clanId;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clanId = 0;
  }
  return self;
}
static RequestJoinClanRequestProto* defaultRequestJoinClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RequestJoinClanRequestProto class]) {
    defaultRequestJoinClanRequestProtoInstance = [[RequestJoinClanRequestProto alloc] init];
  }
}
+ (RequestJoinClanRequestProto*) defaultInstance {
  return defaultRequestJoinClanRequestProtoInstance;
}
- (RequestJoinClanRequestProto*) defaultInstance {
  return defaultRequestJoinClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClanId) {
    [output writeInt32:2 value:self.clanId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasClanId) {
    size += computeInt32Size(2, self.clanId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RequestJoinClanRequestProto*) parseFromData:(NSData*) data {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromData:data] build];
}
+ (RequestJoinClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (RequestJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RequestJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanRequestProto_Builder*) builder {
  return [[[RequestJoinClanRequestProto_Builder alloc] init] autorelease];
}
+ (RequestJoinClanRequestProto_Builder*) builderWithPrototype:(RequestJoinClanRequestProto*) prototype {
  return [[RequestJoinClanRequestProto builder] mergeFrom:prototype];
}
- (RequestJoinClanRequestProto_Builder*) builder {
  return [RequestJoinClanRequestProto builder];
}
@end

@interface RequestJoinClanRequestProto_Builder()
@property (retain) RequestJoinClanRequestProto* result;
@end

@implementation RequestJoinClanRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RequestJoinClanRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RequestJoinClanRequestProto_Builder*) clear {
  self.result = [[[RequestJoinClanRequestProto alloc] init] autorelease];
  return self;
}
- (RequestJoinClanRequestProto_Builder*) clone {
  return [RequestJoinClanRequestProto builderWithPrototype:result];
}
- (RequestJoinClanRequestProto*) defaultInstance {
  return [RequestJoinClanRequestProto defaultInstance];
}
- (RequestJoinClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RequestJoinClanRequestProto*) buildPartial {
  RequestJoinClanRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RequestJoinClanRequestProto_Builder*) mergeFrom:(RequestJoinClanRequestProto*) other {
  if (other == [RequestJoinClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClanId) {
    [self setClanId:other.clanId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RequestJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RequestJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setClanId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RequestJoinClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RequestJoinClanRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RequestJoinClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RequestJoinClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanId {
  return result.hasClanId;
}
- (int32_t) clanId {
  return result.clanId;
}
- (RequestJoinClanRequestProto_Builder*) setClanId:(int32_t) value {
  result.hasClanId = YES;
  result.clanId = value;
  return self;
}
- (RequestJoinClanRequestProto_Builder*) clearClanId {
  result.hasClanId = NO;
  result.clanId = 0;
  return self;
}
@end

@interface RequestJoinClanResponseProto ()
@property (retain) MinimumUserProto* sender;
@property RequestJoinClanResponseProto_RequestJoinClanStatus status;
@property int32_t clanId;
@property (retain) MinimumUserProtoForClans* requester;
@property (retain) MinimumClanProto* minClan;
@property (retain) FullClanProtoWithClanSize* fullClan;
@end

@implementation RequestJoinClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasClanId {
  return !!hasClanId_;
}
- (void) setHasClanId:(BOOL) value {
  hasClanId_ = !!value;
}
@synthesize clanId;
- (BOOL) hasRequester {
  return !!hasRequester_;
}
- (void) setHasRequester:(BOOL) value {
  hasRequester_ = !!value;
}
@synthesize requester;
- (BOOL) hasMinClan {
  return !!hasMinClan_;
}
- (void) setHasMinClan:(BOOL) value {
  hasMinClan_ = !!value;
}
@synthesize minClan;
- (BOOL) hasFullClan {
  return !!hasFullClan_;
}
- (void) setHasFullClan:(BOOL) value {
  hasFullClan_ = !!value;
}
@synthesize fullClan;
- (void) dealloc {
  self.sender = nil;
  self.requester = nil;
  self.minClan = nil;
  self.fullClan = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = RequestJoinClanResponseProto_RequestJoinClanStatusRequestSuccess;
    self.clanId = 0;
    self.requester = [MinimumUserProtoForClans defaultInstance];
    self.minClan = [MinimumClanProto defaultInstance];
    self.fullClan = [FullClanProtoWithClanSize defaultInstance];
  }
  return self;
}
static RequestJoinClanResponseProto* defaultRequestJoinClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RequestJoinClanResponseProto class]) {
    defaultRequestJoinClanResponseProtoInstance = [[RequestJoinClanResponseProto alloc] init];
  }
}
+ (RequestJoinClanResponseProto*) defaultInstance {
  return defaultRequestJoinClanResponseProtoInstance;
}
- (RequestJoinClanResponseProto*) defaultInstance {
  return defaultRequestJoinClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasClanId) {
    [output writeInt32:3 value:self.clanId];
  }
  if (self.hasRequester) {
    [output writeMessage:4 value:self.requester];
  }
  if (self.hasMinClan) {
    [output writeMessage:5 value:self.minClan];
  }
  if (self.hasFullClan) {
    [output writeMessage:6 value:self.fullClan];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  if (self.hasClanId) {
    size += computeInt32Size(3, self.clanId);
  }
  if (self.hasRequester) {
    size += computeMessageSize(4, self.requester);
  }
  if (self.hasMinClan) {
    size += computeMessageSize(5, self.minClan);
  }
  if (self.hasFullClan) {
    size += computeMessageSize(6, self.fullClan);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RequestJoinClanResponseProto*) parseFromData:(NSData*) data {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromData:data] build];
}
+ (RequestJoinClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (RequestJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RequestJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanResponseProto_Builder*) builder {
  return [[[RequestJoinClanResponseProto_Builder alloc] init] autorelease];
}
+ (RequestJoinClanResponseProto_Builder*) builderWithPrototype:(RequestJoinClanResponseProto*) prototype {
  return [[RequestJoinClanResponseProto builder] mergeFrom:prototype];
}
- (RequestJoinClanResponseProto_Builder*) builder {
  return [RequestJoinClanResponseProto builder];
}
@end

BOOL RequestJoinClanResponseProto_RequestJoinClanStatusIsValidValue(RequestJoinClanResponseProto_RequestJoinClanStatus value) {
  switch (value) {
    case RequestJoinClanResponseProto_RequestJoinClanStatusRequestSuccess:
    case RequestJoinClanResponseProto_RequestJoinClanStatusOtherFail:
    case RequestJoinClanResponseProto_RequestJoinClanStatusAlreadyInClan:
    case RequestJoinClanResponseProto_RequestJoinClanStatusRequestAlreadyFiled:
    case RequestJoinClanResponseProto_RequestJoinClanStatusJoinSuccess:
    case RequestJoinClanResponseProto_RequestJoinClanStatusClanIsFull:
      return YES;
    default:
      return NO;
  }
}
@interface RequestJoinClanResponseProto_Builder()
@property (retain) RequestJoinClanResponseProto* result;
@end

@implementation RequestJoinClanResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RequestJoinClanResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RequestJoinClanResponseProto_Builder*) clear {
  self.result = [[[RequestJoinClanResponseProto alloc] init] autorelease];
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clone {
  return [RequestJoinClanResponseProto builderWithPrototype:result];
}
- (RequestJoinClanResponseProto*) defaultInstance {
  return [RequestJoinClanResponseProto defaultInstance];
}
- (RequestJoinClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RequestJoinClanResponseProto*) buildPartial {
  RequestJoinClanResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RequestJoinClanResponseProto_Builder*) mergeFrom:(RequestJoinClanResponseProto*) other {
  if (other == [RequestJoinClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasClanId) {
    [self setClanId:other.clanId];
  }
  if (other.hasRequester) {
    [self mergeRequester:other.requester];
  }
  if (other.hasMinClan) {
    [self mergeMinClan:other.minClan];
  }
  if (other.hasFullClan) {
    [self mergeFullClan:other.fullClan];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RequestJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RequestJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (RequestJoinClanResponseProto_RequestJoinClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setClanId:[input readInt32]];
        break;
      }
      case 34: {
        MinimumUserProtoForClans_Builder* subBuilder = [MinimumUserProtoForClans builder];
        if (self.hasRequester) {
          [subBuilder mergeFrom:self.requester];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRequester:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasMinClan) {
          [subBuilder mergeFrom:self.minClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinClan:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        if (self.hasFullClan) {
          [subBuilder mergeFrom:self.fullClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFullClan:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RequestJoinClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RequestJoinClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RequestJoinClanResponseProto_RequestJoinClanStatus) status {
  return result.status;
}
- (RequestJoinClanResponseProto_Builder*) setStatus:(RequestJoinClanResponseProto_RequestJoinClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = RequestJoinClanResponseProto_RequestJoinClanStatusRequestSuccess;
  return self;
}
- (BOOL) hasClanId {
  return result.hasClanId;
}
- (int32_t) clanId {
  return result.clanId;
}
- (RequestJoinClanResponseProto_Builder*) setClanId:(int32_t) value {
  result.hasClanId = YES;
  result.clanId = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearClanId {
  result.hasClanId = NO;
  result.clanId = 0;
  return self;
}
- (BOOL) hasRequester {
  return result.hasRequester;
}
- (MinimumUserProtoForClans*) requester {
  return result.requester;
}
- (RequestJoinClanResponseProto_Builder*) setRequester:(MinimumUserProtoForClans*) value {
  result.hasRequester = YES;
  result.requester = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) setRequesterBuilder:(MinimumUserProtoForClans_Builder*) builderForValue {
  return [self setRequester:[builderForValue build]];
}
- (RequestJoinClanResponseProto_Builder*) mergeRequester:(MinimumUserProtoForClans*) value {
  if (result.hasRequester &&
      result.requester != [MinimumUserProtoForClans defaultInstance]) {
    result.requester =
      [[[MinimumUserProtoForClans builderWithPrototype:result.requester] mergeFrom:value] buildPartial];
  } else {
    result.requester = value;
  }
  result.hasRequester = YES;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearRequester {
  result.hasRequester = NO;
  result.requester = [MinimumUserProtoForClans defaultInstance];
  return self;
}
- (BOOL) hasMinClan {
  return result.hasMinClan;
}
- (MinimumClanProto*) minClan {
  return result.minClan;
}
- (RequestJoinClanResponseProto_Builder*) setMinClan:(MinimumClanProto*) value {
  result.hasMinClan = YES;
  result.minClan = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) setMinClanBuilder:(MinimumClanProto_Builder*) builderForValue {
  return [self setMinClan:[builderForValue build]];
}
- (RequestJoinClanResponseProto_Builder*) mergeMinClan:(MinimumClanProto*) value {
  if (result.hasMinClan &&
      result.minClan != [MinimumClanProto defaultInstance]) {
    result.minClan =
      [[[MinimumClanProto builderWithPrototype:result.minClan] mergeFrom:value] buildPartial];
  } else {
    result.minClan = value;
  }
  result.hasMinClan = YES;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearMinClan {
  result.hasMinClan = NO;
  result.minClan = [MinimumClanProto defaultInstance];
  return self;
}
- (BOOL) hasFullClan {
  return result.hasFullClan;
}
- (FullClanProtoWithClanSize*) fullClan {
  return result.fullClan;
}
- (RequestJoinClanResponseProto_Builder*) setFullClan:(FullClanProtoWithClanSize*) value {
  result.hasFullClan = YES;
  result.fullClan = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) setFullClanBuilder:(FullClanProtoWithClanSize_Builder*) builderForValue {
  return [self setFullClan:[builderForValue build]];
}
- (RequestJoinClanResponseProto_Builder*) mergeFullClan:(FullClanProtoWithClanSize*) value {
  if (result.hasFullClan &&
      result.fullClan != [FullClanProtoWithClanSize defaultInstance]) {
    result.fullClan =
      [[[FullClanProtoWithClanSize builderWithPrototype:result.fullClan] mergeFrom:value] buildPartial];
  } else {
    result.fullClan = value;
  }
  result.hasFullClan = YES;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearFullClan {
  result.hasFullClan = NO;
  result.fullClan = [FullClanProtoWithClanSize defaultInstance];
  return self;
}
@end

@interface RetractRequestJoinClanRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t clanId;
@end

@implementation RetractRequestJoinClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasClanId {
  return !!hasClanId_;
}
- (void) setHasClanId:(BOOL) value {
  hasClanId_ = !!value;
}
@synthesize clanId;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clanId = 0;
  }
  return self;
}
static RetractRequestJoinClanRequestProto* defaultRetractRequestJoinClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RetractRequestJoinClanRequestProto class]) {
    defaultRetractRequestJoinClanRequestProtoInstance = [[RetractRequestJoinClanRequestProto alloc] init];
  }
}
+ (RetractRequestJoinClanRequestProto*) defaultInstance {
  return defaultRetractRequestJoinClanRequestProtoInstance;
}
- (RetractRequestJoinClanRequestProto*) defaultInstance {
  return defaultRetractRequestJoinClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClanId) {
    [output writeInt32:2 value:self.clanId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasClanId) {
    size += computeInt32Size(2, self.clanId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RetractRequestJoinClanRequestProto*) parseFromData:(NSData*) data {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromData:data] build];
}
+ (RetractRequestJoinClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (RetractRequestJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetractRequestJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanRequestProto_Builder*) builder {
  return [[[RetractRequestJoinClanRequestProto_Builder alloc] init] autorelease];
}
+ (RetractRequestJoinClanRequestProto_Builder*) builderWithPrototype:(RetractRequestJoinClanRequestProto*) prototype {
  return [[RetractRequestJoinClanRequestProto builder] mergeFrom:prototype];
}
- (RetractRequestJoinClanRequestProto_Builder*) builder {
  return [RetractRequestJoinClanRequestProto builder];
}
@end

@interface RetractRequestJoinClanRequestProto_Builder()
@property (retain) RetractRequestJoinClanRequestProto* result;
@end

@implementation RetractRequestJoinClanRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RetractRequestJoinClanRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetractRequestJoinClanRequestProto_Builder*) clear {
  self.result = [[[RetractRequestJoinClanRequestProto alloc] init] autorelease];
  return self;
}
- (RetractRequestJoinClanRequestProto_Builder*) clone {
  return [RetractRequestJoinClanRequestProto builderWithPrototype:result];
}
- (RetractRequestJoinClanRequestProto*) defaultInstance {
  return [RetractRequestJoinClanRequestProto defaultInstance];
}
- (RetractRequestJoinClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetractRequestJoinClanRequestProto*) buildPartial {
  RetractRequestJoinClanRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RetractRequestJoinClanRequestProto_Builder*) mergeFrom:(RetractRequestJoinClanRequestProto*) other {
  if (other == [RetractRequestJoinClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClanId) {
    [self setClanId:other.clanId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetractRequestJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetractRequestJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setClanId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RetractRequestJoinClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetractRequestJoinClanRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetractRequestJoinClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetractRequestJoinClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanId {
  return result.hasClanId;
}
- (int32_t) clanId {
  return result.clanId;
}
- (RetractRequestJoinClanRequestProto_Builder*) setClanId:(int32_t) value {
  result.hasClanId = YES;
  result.clanId = value;
  return self;
}
- (RetractRequestJoinClanRequestProto_Builder*) clearClanId {
  result.hasClanId = NO;
  result.clanId = 0;
  return self;
}
@end

@interface RetractRequestJoinClanResponseProto ()
@property (retain) MinimumUserProto* sender;
@property RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatus status;
@property int32_t clanId;
@end

@implementation RetractRequestJoinClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasClanId {
  return !!hasClanId_;
}
- (void) setHasClanId:(BOOL) value {
  hasClanId_ = !!value;
}
@synthesize clanId;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusSuccess;
    self.clanId = 0;
  }
  return self;
}
static RetractRequestJoinClanResponseProto* defaultRetractRequestJoinClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RetractRequestJoinClanResponseProto class]) {
    defaultRetractRequestJoinClanResponseProtoInstance = [[RetractRequestJoinClanResponseProto alloc] init];
  }
}
+ (RetractRequestJoinClanResponseProto*) defaultInstance {
  return defaultRetractRequestJoinClanResponseProtoInstance;
}
- (RetractRequestJoinClanResponseProto*) defaultInstance {
  return defaultRetractRequestJoinClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasClanId) {
    [output writeInt32:3 value:self.clanId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  if (self.hasClanId) {
    size += computeInt32Size(3, self.clanId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RetractRequestJoinClanResponseProto*) parseFromData:(NSData*) data {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromData:data] build];
}
+ (RetractRequestJoinClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (RetractRequestJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetractRequestJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanResponseProto_Builder*) builder {
  return [[[RetractRequestJoinClanResponseProto_Builder alloc] init] autorelease];
}
+ (RetractRequestJoinClanResponseProto_Builder*) builderWithPrototype:(RetractRequestJoinClanResponseProto*) prototype {
  return [[RetractRequestJoinClanResponseProto builder] mergeFrom:prototype];
}
- (RetractRequestJoinClanResponseProto_Builder*) builder {
  return [RetractRequestJoinClanResponseProto builder];
}
@end

BOOL RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusIsValidValue(RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatus value) {
  switch (value) {
    case RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusSuccess:
    case RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusOtherFail:
    case RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusAlreadyInClan:
    case RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusDidNotRequest:
      return YES;
    default:
      return NO;
  }
}
@interface RetractRequestJoinClanResponseProto_Builder()
@property (retain) RetractRequestJoinClanResponseProto* result;
@end

@implementation RetractRequestJoinClanResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RetractRequestJoinClanResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetractRequestJoinClanResponseProto_Builder*) clear {
  self.result = [[[RetractRequestJoinClanResponseProto alloc] init] autorelease];
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) clone {
  return [RetractRequestJoinClanResponseProto builderWithPrototype:result];
}
- (RetractRequestJoinClanResponseProto*) defaultInstance {
  return [RetractRequestJoinClanResponseProto defaultInstance];
}
- (RetractRequestJoinClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetractRequestJoinClanResponseProto*) buildPartial {
  RetractRequestJoinClanResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RetractRequestJoinClanResponseProto_Builder*) mergeFrom:(RetractRequestJoinClanResponseProto*) other {
  if (other == [RetractRequestJoinClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasClanId) {
    [self setClanId:other.clanId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetractRequestJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setClanId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RetractRequestJoinClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetractRequestJoinClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatus) status {
  return result.status;
}
- (RetractRequestJoinClanResponseProto_Builder*) setStatus:(RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusSuccess;
  return self;
}
- (BOOL) hasClanId {
  return result.hasClanId;
}
- (int32_t) clanId {
  return result.clanId;
}
- (RetractRequestJoinClanResponseProto_Builder*) setClanId:(int32_t) value {
  result.hasClanId = YES;
  result.clanId = value;
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) clearClanId {
  result.hasClanId = NO;
  result.clanId = 0;
  return self;
}
@end

@interface ApproveOrRejectRequestToJoinClanRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t requesterId;
@property BOOL accept;
@end

@implementation ApproveOrRejectRequestToJoinClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasRequesterId {
  return !!hasRequesterId_;
}
- (void) setHasRequesterId:(BOOL) value {
  hasRequesterId_ = !!value;
}
@synthesize requesterId;
- (BOOL) hasAccept {
  return !!hasAccept_;
}
- (void) setHasAccept:(BOOL) value {
  hasAccept_ = !!value;
}
- (BOOL) accept {
  return !!accept_;
}
- (void) setAccept:(BOOL) value {
  accept_ = !!value;
}
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.requesterId = 0;
    self.accept = NO;
  }
  return self;
}
static ApproveOrRejectRequestToJoinClanRequestProto* defaultApproveOrRejectRequestToJoinClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [ApproveOrRejectRequestToJoinClanRequestProto class]) {
    defaultApproveOrRejectRequestToJoinClanRequestProtoInstance = [[ApproveOrRejectRequestToJoinClanRequestProto alloc] init];
  }
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) defaultInstance {
  return defaultApproveOrRejectRequestToJoinClanRequestProtoInstance;
}
- (ApproveOrRejectRequestToJoinClanRequestProto*) defaultInstance {
  return defaultApproveOrRejectRequestToJoinClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasRequesterId) {
    [output writeInt32:2 value:self.requesterId];
  }
  if (self.hasAccept) {
    [output writeBool:3 value:self.accept];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasRequesterId) {
    size += computeInt32Size(2, self.requesterId);
  }
  if (self.hasAccept) {
    size += computeBoolSize(3, self.accept);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromData:(NSData*) data {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromData:data] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) builder {
  return [[[ApproveOrRejectRequestToJoinClanRequestProto_Builder alloc] init] autorelease];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) builderWithPrototype:(ApproveOrRejectRequestToJoinClanRequestProto*) prototype {
  return [[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFrom:prototype];
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) builder {
  return [ApproveOrRejectRequestToJoinClanRequestProto builder];
}
@end

@interface ApproveOrRejectRequestToJoinClanRequestProto_Builder()
@property (retain) ApproveOrRejectRequestToJoinClanRequestProto* result;
@end

@implementation ApproveOrRejectRequestToJoinClanRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ApproveOrRejectRequestToJoinClanRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) clear {
  self.result = [[[ApproveOrRejectRequestToJoinClanRequestProto alloc] init] autorelease];
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) clone {
  return [ApproveOrRejectRequestToJoinClanRequestProto builderWithPrototype:result];
}
- (ApproveOrRejectRequestToJoinClanRequestProto*) defaultInstance {
  return [ApproveOrRejectRequestToJoinClanRequestProto defaultInstance];
}
- (ApproveOrRejectRequestToJoinClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ApproveOrRejectRequestToJoinClanRequestProto*) buildPartial {
  ApproveOrRejectRequestToJoinClanRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) mergeFrom:(ApproveOrRejectRequestToJoinClanRequestProto*) other {
  if (other == [ApproveOrRejectRequestToJoinClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasRequesterId) {
    [self setRequesterId:other.requesterId];
  }
  if (other.hasAccept) {
    [self setAccept:other.accept];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setRequesterId:[input readInt32]];
        break;
      }
      case 24: {
        [self setAccept:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasRequesterId {
  return result.hasRequesterId;
}
- (int32_t) requesterId {
  return result.requesterId;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) setRequesterId:(int32_t) value {
  result.hasRequesterId = YES;
  result.requesterId = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) clearRequesterId {
  result.hasRequesterId = NO;
  result.requesterId = 0;
  return self;
}
- (BOOL) hasAccept {
  return result.hasAccept;
}
- (BOOL) accept {
  return result.accept;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) setAccept:(BOOL) value {
  result.hasAccept = YES;
  result.accept = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) clearAccept {
  result.hasAccept = NO;
  result.accept = NO;
  return self;
}
@end

@interface ApproveOrRejectRequestToJoinClanResponseProto ()
@property (retain) MinimumUserProto* sender;
@property ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatus status;
@property int32_t requesterId;
@property BOOL accept;
@property (retain) MinimumClanProto* minClan;
@property (retain) FullClanProtoWithClanSize* fullClan;
@end

@implementation ApproveOrRejectRequestToJoinClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasRequesterId {
  return !!hasRequesterId_;
}
- (void) setHasRequesterId:(BOOL) value {
  hasRequesterId_ = !!value;
}
@synthesize requesterId;
- (BOOL) hasAccept {
  return !!hasAccept_;
}
- (void) setHasAccept:(BOOL) value {
  hasAccept_ = !!value;
}
- (BOOL) accept {
  return !!accept_;
}
- (void) setAccept:(BOOL) value {
  accept_ = !!value;
}
- (BOOL) hasMinClan {
  return !!hasMinClan_;
}
- (void) setHasMinClan:(BOOL) value {
  hasMinClan_ = !!value;
}
@synthesize minClan;
- (BOOL) hasFullClan {
  return !!hasFullClan_;
}
- (void) setHasFullClan:(BOOL) value {
  hasFullClan_ = !!value;
}
@synthesize fullClan;
- (void) dealloc {
  self.sender = nil;
  self.minClan = nil;
  self.fullClan = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusSuccess;
    self.requesterId = 0;
    self.accept = NO;
    self.minClan = [MinimumClanProto defaultInstance];
    self.fullClan = [FullClanProtoWithClanSize defaultInstance];
  }
  return self;
}
static ApproveOrRejectRequestToJoinClanResponseProto* defaultApproveOrRejectRequestToJoinClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [ApproveOrRejectRequestToJoinClanResponseProto class]) {
    defaultApproveOrRejectRequestToJoinClanResponseProtoInstance = [[ApproveOrRejectRequestToJoinClanResponseProto alloc] init];
  }
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) defaultInstance {
  return defaultApproveOrRejectRequestToJoinClanResponseProtoInstance;
}
- (ApproveOrRejectRequestToJoinClanResponseProto*) defaultInstance {
  return defaultApproveOrRejectRequestToJoinClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasRequesterId) {
    [output writeInt32:3 value:self.requesterId];
  }
  if (self.hasAccept) {
    [output writeBool:4 value:self.accept];
  }
  if (self.hasMinClan) {
    [output writeMessage:5 value:self.minClan];
  }
  if (self.hasFullClan) {
    [output writeMessage:6 value:self.fullClan];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  if (self.hasRequesterId) {
    size += computeInt32Size(3, self.requesterId);
  }
  if (self.hasAccept) {
    size += computeBoolSize(4, self.accept);
  }
  if (self.hasMinClan) {
    size += computeMessageSize(5, self.minClan);
  }
  if (self.hasFullClan) {
    size += computeMessageSize(6, self.fullClan);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromData:(NSData*) data {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromData:data] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) builder {
  return [[[ApproveOrRejectRequestToJoinClanResponseProto_Builder alloc] init] autorelease];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) builderWithPrototype:(ApproveOrRejectRequestToJoinClanResponseProto*) prototype {
  return [[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFrom:prototype];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) builder {
  return [ApproveOrRejectRequestToJoinClanResponseProto builder];
}
@end

BOOL ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusIsValidValue(ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatus value) {
  switch (value) {
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusSuccess:
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusOtherFail:
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusNotOwner:
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusNotARequester:
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusAlreadyInAClan:
      return YES;
    default:
      return NO;
  }
}
@interface ApproveOrRejectRequestToJoinClanResponseProto_Builder()
@property (retain) ApproveOrRejectRequestToJoinClanResponseProto* result;
@end

@implementation ApproveOrRejectRequestToJoinClanResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ApproveOrRejectRequestToJoinClanResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clear {
  self.result = [[[ApproveOrRejectRequestToJoinClanResponseProto alloc] init] autorelease];
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clone {
  return [ApproveOrRejectRequestToJoinClanResponseProto builderWithPrototype:result];
}
- (ApproveOrRejectRequestToJoinClanResponseProto*) defaultInstance {
  return [ApproveOrRejectRequestToJoinClanResponseProto defaultInstance];
}
- (ApproveOrRejectRequestToJoinClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ApproveOrRejectRequestToJoinClanResponseProto*) buildPartial {
  ApproveOrRejectRequestToJoinClanResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeFrom:(ApproveOrRejectRequestToJoinClanResponseProto*) other {
  if (other == [ApproveOrRejectRequestToJoinClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasRequesterId) {
    [self setRequesterId:other.requesterId];
  }
  if (other.hasAccept) {
    [self setAccept:other.accept];
  }
  if (other.hasMinClan) {
    [self mergeMinClan:other.minClan];
  }
  if (other.hasFullClan) {
    [self mergeFullClan:other.fullClan];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setRequesterId:[input readInt32]];
        break;
      }
      case 32: {
        [self setAccept:[input readBool]];
        break;
      }
      case 42: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasMinClan) {
          [subBuilder mergeFrom:self.minClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinClan:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        if (self.hasFullClan) {
          [subBuilder mergeFrom:self.fullClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFullClan:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatus) status {
  return result.status;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setStatus:(ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusSuccess;
  return self;
}
- (BOOL) hasRequesterId {
  return result.hasRequesterId;
}
- (int32_t) requesterId {
  return result.requesterId;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setRequesterId:(int32_t) value {
  result.hasRequesterId = YES;
  result.requesterId = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearRequesterId {
  result.hasRequesterId = NO;
  result.requesterId = 0;
  return self;
}
- (BOOL) hasAccept {
  return result.hasAccept;
}
- (BOOL) accept {
  return result.accept;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setAccept:(BOOL) value {
  result.hasAccept = YES;
  result.accept = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearAccept {
  result.hasAccept = NO;
  result.accept = NO;
  return self;
}
- (BOOL) hasMinClan {
  return result.hasMinClan;
}
- (MinimumClanProto*) minClan {
  return result.minClan;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setMinClan:(MinimumClanProto*) value {
  result.hasMinClan = YES;
  result.minClan = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setMinClanBuilder:(MinimumClanProto_Builder*) builderForValue {
  return [self setMinClan:[builderForValue build]];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeMinClan:(MinimumClanProto*) value {
  if (result.hasMinClan &&
      result.minClan != [MinimumClanProto defaultInstance]) {
    result.minClan =
      [[[MinimumClanProto builderWithPrototype:result.minClan] mergeFrom:value] buildPartial];
  } else {
    result.minClan = value;
  }
  result.hasMinClan = YES;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearMinClan {
  result.hasMinClan = NO;
  result.minClan = [MinimumClanProto defaultInstance];
  return self;
}
- (BOOL) hasFullClan {
  return result.hasFullClan;
}
- (FullClanProtoWithClanSize*) fullClan {
  return result.fullClan;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setFullClan:(FullClanProtoWithClanSize*) value {
  result.hasFullClan = YES;
  result.fullClan = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setFullClanBuilder:(FullClanProtoWithClanSize_Builder*) builderForValue {
  return [self setFullClan:[builderForValue build]];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeFullClan:(FullClanProtoWithClanSize*) value {
  if (result.hasFullClan &&
      result.fullClan != [FullClanProtoWithClanSize defaultInstance]) {
    result.fullClan =
      [[[FullClanProtoWithClanSize builderWithPrototype:result.fullClan] mergeFrom:value] buildPartial];
  } else {
    result.fullClan = value;
  }
  result.hasFullClan = YES;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearFullClan {
  result.hasFullClan = NO;
  result.fullClan = [FullClanProtoWithClanSize defaultInstance];
  return self;
}
@end

@interface RetrieveClanInfoRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t clanId;
@property (retain) NSString* clanName;
@property RetrieveClanInfoRequestProto_ClanInfoGrabType grabType;
@property int32_t beforeThisClanId;
@property BOOL isForBrowsingList;
@end

@implementation RetrieveClanInfoRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasClanId {
  return !!hasClanId_;
}
- (void) setHasClanId:(BOOL) value {
  hasClanId_ = !!value;
}
@synthesize clanId;
- (BOOL) hasClanName {
  return !!hasClanName_;
}
- (void) setHasClanName:(BOOL) value {
  hasClanName_ = !!value;
}
@synthesize clanName;
- (BOOL) hasGrabType {
  return !!hasGrabType_;
}
- (void) setHasGrabType:(BOOL) value {
  hasGrabType_ = !!value;
}
@synthesize grabType;
- (BOOL) hasBeforeThisClanId {
  return !!hasBeforeThisClanId_;
}
- (void) setHasBeforeThisClanId:(BOOL) value {
  hasBeforeThisClanId_ = !!value;
}
@synthesize beforeThisClanId;
- (BOOL) hasIsForBrowsingList {
  return !!hasIsForBrowsingList_;
}
- (void) setHasIsForBrowsingList:(BOOL) value {
  hasIsForBrowsingList_ = !!value;
}
- (BOOL) isForBrowsingList {
  return !!isForBrowsingList_;
}
- (void) setIsForBrowsingList:(BOOL) value {
  isForBrowsingList_ = !!value;
}
- (void) dealloc {
  self.sender = nil;
  self.clanName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clanId = 0;
    self.clanName = @"";
    self.grabType = RetrieveClanInfoRequestProto_ClanInfoGrabTypeAll;
    self.beforeThisClanId = 0;
    self.isForBrowsingList = NO;
  }
  return self;
}
static RetrieveClanInfoRequestProto* defaultRetrieveClanInfoRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrieveClanInfoRequestProto class]) {
    defaultRetrieveClanInfoRequestProtoInstance = [[RetrieveClanInfoRequestProto alloc] init];
  }
}
+ (RetrieveClanInfoRequestProto*) defaultInstance {
  return defaultRetrieveClanInfoRequestProtoInstance;
}
- (RetrieveClanInfoRequestProto*) defaultInstance {
  return defaultRetrieveClanInfoRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClanId) {
    [output writeInt32:2 value:self.clanId];
  }
  if (self.hasClanName) {
    [output writeString:3 value:self.clanName];
  }
  if (self.hasGrabType) {
    [output writeEnum:4 value:self.grabType];
  }
  if (self.hasBeforeThisClanId) {
    [output writeInt32:5 value:self.beforeThisClanId];
  }
  if (self.hasIsForBrowsingList) {
    [output writeBool:6 value:self.isForBrowsingList];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasClanId) {
    size += computeInt32Size(2, self.clanId);
  }
  if (self.hasClanName) {
    size += computeStringSize(3, self.clanName);
  }
  if (self.hasGrabType) {
    size += computeEnumSize(4, self.grabType);
  }
  if (self.hasBeforeThisClanId) {
    size += computeInt32Size(5, self.beforeThisClanId);
  }
  if (self.hasIsForBrowsingList) {
    size += computeBoolSize(6, self.isForBrowsingList);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RetrieveClanInfoRequestProto*) parseFromData:(NSData*) data {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromData:data] build];
}
+ (RetrieveClanInfoRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromInputStream:input] build];
}
+ (RetrieveClanInfoRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrieveClanInfoRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoRequestProto_Builder*) builder {
  return [[[RetrieveClanInfoRequestProto_Builder alloc] init] autorelease];
}
+ (RetrieveClanInfoRequestProto_Builder*) builderWithPrototype:(RetrieveClanInfoRequestProto*) prototype {
  return [[RetrieveClanInfoRequestProto builder] mergeFrom:prototype];
}
- (RetrieveClanInfoRequestProto_Builder*) builder {
  return [RetrieveClanInfoRequestProto builder];
}
@end

BOOL RetrieveClanInfoRequestProto_ClanInfoGrabTypeIsValidValue(RetrieveClanInfoRequestProto_ClanInfoGrabType value) {
  switch (value) {
    case RetrieveClanInfoRequestProto_ClanInfoGrabTypeAll:
    case RetrieveClanInfoRequestProto_ClanInfoGrabTypeClanInfo:
    case RetrieveClanInfoRequestProto_ClanInfoGrabTypeMembers:
      return YES;
    default:
      return NO;
  }
}
@interface RetrieveClanInfoRequestProto_Builder()
@property (retain) RetrieveClanInfoRequestProto* result;
@end

@implementation RetrieveClanInfoRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RetrieveClanInfoRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrieveClanInfoRequestProto_Builder*) clear {
  self.result = [[[RetrieveClanInfoRequestProto alloc] init] autorelease];
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clone {
  return [RetrieveClanInfoRequestProto builderWithPrototype:result];
}
- (RetrieveClanInfoRequestProto*) defaultInstance {
  return [RetrieveClanInfoRequestProto defaultInstance];
}
- (RetrieveClanInfoRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrieveClanInfoRequestProto*) buildPartial {
  RetrieveClanInfoRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RetrieveClanInfoRequestProto_Builder*) mergeFrom:(RetrieveClanInfoRequestProto*) other {
  if (other == [RetrieveClanInfoRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClanId) {
    [self setClanId:other.clanId];
  }
  if (other.hasClanName) {
    [self setClanName:other.clanName];
  }
  if (other.hasGrabType) {
    [self setGrabType:other.grabType];
  }
  if (other.hasBeforeThisClanId) {
    [self setBeforeThisClanId:other.beforeThisClanId];
  }
  if (other.hasIsForBrowsingList) {
    [self setIsForBrowsingList:other.isForBrowsingList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrieveClanInfoRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setClanId:[input readInt32]];
        break;
      }
      case 26: {
        [self setClanName:[input readString]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (RetrieveClanInfoRequestProto_ClanInfoGrabTypeIsValidValue(value)) {
          [self setGrabType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setBeforeThisClanId:[input readInt32]];
        break;
      }
      case 48: {
        [self setIsForBrowsingList:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RetrieveClanInfoRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetrieveClanInfoRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanId {
  return result.hasClanId;
}
- (int32_t) clanId {
  return result.clanId;
}
- (RetrieveClanInfoRequestProto_Builder*) setClanId:(int32_t) value {
  result.hasClanId = YES;
  result.clanId = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearClanId {
  result.hasClanId = NO;
  result.clanId = 0;
  return self;
}
- (BOOL) hasClanName {
  return result.hasClanName;
}
- (NSString*) clanName {
  return result.clanName;
}
- (RetrieveClanInfoRequestProto_Builder*) setClanName:(NSString*) value {
  result.hasClanName = YES;
  result.clanName = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearClanName {
  result.hasClanName = NO;
  result.clanName = @"";
  return self;
}
- (BOOL) hasGrabType {
  return result.hasGrabType;
}
- (RetrieveClanInfoRequestProto_ClanInfoGrabType) grabType {
  return result.grabType;
}
- (RetrieveClanInfoRequestProto_Builder*) setGrabType:(RetrieveClanInfoRequestProto_ClanInfoGrabType) value {
  result.hasGrabType = YES;
  result.grabType = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearGrabType {
  result.hasGrabType = NO;
  result.grabType = RetrieveClanInfoRequestProto_ClanInfoGrabTypeAll;
  return self;
}
- (BOOL) hasBeforeThisClanId {
  return result.hasBeforeThisClanId;
}
- (int32_t) beforeThisClanId {
  return result.beforeThisClanId;
}
- (RetrieveClanInfoRequestProto_Builder*) setBeforeThisClanId:(int32_t) value {
  result.hasBeforeThisClanId = YES;
  result.beforeThisClanId = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearBeforeThisClanId {
  result.hasBeforeThisClanId = NO;
  result.beforeThisClanId = 0;
  return self;
}
- (BOOL) hasIsForBrowsingList {
  return result.hasIsForBrowsingList;
}
- (BOOL) isForBrowsingList {
  return result.isForBrowsingList;
}
- (RetrieveClanInfoRequestProto_Builder*) setIsForBrowsingList:(BOOL) value {
  result.hasIsForBrowsingList = YES;
  result.isForBrowsingList = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearIsForBrowsingList {
  result.hasIsForBrowsingList = NO;
  result.isForBrowsingList = NO;
  return self;
}
@end

@interface RetrieveClanInfoResponseProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) NSMutableArray* mutableMembersList;
@property (retain) NSMutableArray* mutableClanInfoList;
@property RetrieveClanInfoResponseProto_RetrieveClanInfoStatus status;
@property BOOL isForSearch;
@property BOOL isForBrowsingList;
@property int32_t clanId;
@property (retain) NSString* clanName;
@property int32_t beforeThisClanId;
@end

@implementation RetrieveClanInfoResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableMembersList;
@synthesize mutableClanInfoList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasIsForSearch {
  return !!hasIsForSearch_;
}
- (void) setHasIsForSearch:(BOOL) value {
  hasIsForSearch_ = !!value;
}
- (BOOL) isForSearch {
  return !!isForSearch_;
}
- (void) setIsForSearch:(BOOL) value {
  isForSearch_ = !!value;
}
- (BOOL) hasIsForBrowsingList {
  return !!hasIsForBrowsingList_;
}
- (void) setHasIsForBrowsingList:(BOOL) value {
  hasIsForBrowsingList_ = !!value;
}
- (BOOL) isForBrowsingList {
  return !!isForBrowsingList_;
}
- (void) setIsForBrowsingList:(BOOL) value {
  isForBrowsingList_ = !!value;
}
- (BOOL) hasClanId {
  return !!hasClanId_;
}
- (void) setHasClanId:(BOOL) value {
  hasClanId_ = !!value;
}
@synthesize clanId;
- (BOOL) hasClanName {
  return !!hasClanName_;
}
- (void) setHasClanName:(BOOL) value {
  hasClanName_ = !!value;
}
@synthesize clanName;
- (BOOL) hasBeforeThisClanId {
  return !!hasBeforeThisClanId_;
}
- (void) setHasBeforeThisClanId:(BOOL) value {
  hasBeforeThisClanId_ = !!value;
}
@synthesize beforeThisClanId;
- (void) dealloc {
  self.sender = nil;
  self.mutableMembersList = nil;
  self.mutableClanInfoList = nil;
  self.clanName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = RetrieveClanInfoResponseProto_RetrieveClanInfoStatusSuccess;
    self.isForSearch = NO;
    self.isForBrowsingList = NO;
    self.clanId = 0;
    self.clanName = @"";
    self.beforeThisClanId = 0;
  }
  return self;
}
static RetrieveClanInfoResponseProto* defaultRetrieveClanInfoResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrieveClanInfoResponseProto class]) {
    defaultRetrieveClanInfoResponseProtoInstance = [[RetrieveClanInfoResponseProto alloc] init];
  }
}
+ (RetrieveClanInfoResponseProto*) defaultInstance {
  return defaultRetrieveClanInfoResponseProtoInstance;
}
- (RetrieveClanInfoResponseProto*) defaultInstance {
  return defaultRetrieveClanInfoResponseProtoInstance;
}
- (NSArray*) membersList {
  return mutableMembersList;
}
- (MinimumUserProtoForClans*) membersAtIndex:(int32_t) index {
  id value = [mutableMembersList objectAtIndex:index];
  return value;
}
- (NSArray*) clanInfoList {
  return mutableClanInfoList;
}
- (FullClanProtoWithClanSize*) clanInfoAtIndex:(int32_t) index {
  id value = [mutableClanInfoList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (MinimumUserProtoForClans* element in self.membersList) {
    [output writeMessage:2 value:element];
  }
  for (FullClanProtoWithClanSize* element in self.clanInfoList) {
    [output writeMessage:3 value:element];
  }
  if (self.hasStatus) {
    [output writeEnum:4 value:self.status];
  }
  if (self.hasIsForSearch) {
    [output writeBool:5 value:self.isForSearch];
  }
  if (self.hasIsForBrowsingList) {
    [output writeBool:6 value:self.isForBrowsingList];
  }
  if (self.hasClanId) {
    [output writeInt32:7 value:self.clanId];
  }
  if (self.hasClanName) {
    [output writeString:8 value:self.clanName];
  }
  if (self.hasBeforeThisClanId) {
    [output writeInt32:9 value:self.beforeThisClanId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (MinimumUserProtoForClans* element in self.membersList) {
    size += computeMessageSize(2, element);
  }
  for (FullClanProtoWithClanSize* element in self.clanInfoList) {
    size += computeMessageSize(3, element);
  }
  if (self.hasStatus) {
    size += computeEnumSize(4, self.status);
  }
  if (self.hasIsForSearch) {
    size += computeBoolSize(5, self.isForSearch);
  }
  if (self.hasIsForBrowsingList) {
    size += computeBoolSize(6, self.isForBrowsingList);
  }
  if (self.hasClanId) {
    size += computeInt32Size(7, self.clanId);
  }
  if (self.hasClanName) {
    size += computeStringSize(8, self.clanName);
  }
  if (self.hasBeforeThisClanId) {
    size += computeInt32Size(9, self.beforeThisClanId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RetrieveClanInfoResponseProto*) parseFromData:(NSData*) data {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromData:data] build];
}
+ (RetrieveClanInfoResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromInputStream:input] build];
}
+ (RetrieveClanInfoResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrieveClanInfoResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoResponseProto_Builder*) builder {
  return [[[RetrieveClanInfoResponseProto_Builder alloc] init] autorelease];
}
+ (RetrieveClanInfoResponseProto_Builder*) builderWithPrototype:(RetrieveClanInfoResponseProto*) prototype {
  return [[RetrieveClanInfoResponseProto builder] mergeFrom:prototype];
}
- (RetrieveClanInfoResponseProto_Builder*) builder {
  return [RetrieveClanInfoResponseProto builder];
}
@end

BOOL RetrieveClanInfoResponseProto_RetrieveClanInfoStatusIsValidValue(RetrieveClanInfoResponseProto_RetrieveClanInfoStatus value) {
  switch (value) {
    case RetrieveClanInfoResponseProto_RetrieveClanInfoStatusSuccess:
    case RetrieveClanInfoResponseProto_RetrieveClanInfoStatusOtherFail:
      return YES;
    default:
      return NO;
  }
}
@interface RetrieveClanInfoResponseProto_Builder()
@property (retain) RetrieveClanInfoResponseProto* result;
@end

@implementation RetrieveClanInfoResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RetrieveClanInfoResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrieveClanInfoResponseProto_Builder*) clear {
  self.result = [[[RetrieveClanInfoResponseProto alloc] init] autorelease];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clone {
  return [RetrieveClanInfoResponseProto builderWithPrototype:result];
}
- (RetrieveClanInfoResponseProto*) defaultInstance {
  return [RetrieveClanInfoResponseProto defaultInstance];
}
- (RetrieveClanInfoResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrieveClanInfoResponseProto*) buildPartial {
  RetrieveClanInfoResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RetrieveClanInfoResponseProto_Builder*) mergeFrom:(RetrieveClanInfoResponseProto*) other {
  if (other == [RetrieveClanInfoResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableMembersList.count > 0) {
    if (result.mutableMembersList == nil) {
      result.mutableMembersList = [NSMutableArray array];
    }
    [result.mutableMembersList addObjectsFromArray:other.mutableMembersList];
  }
  if (other.mutableClanInfoList.count > 0) {
    if (result.mutableClanInfoList == nil) {
      result.mutableClanInfoList = [NSMutableArray array];
    }
    [result.mutableClanInfoList addObjectsFromArray:other.mutableClanInfoList];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasIsForSearch) {
    [self setIsForSearch:other.isForSearch];
  }
  if (other.hasIsForBrowsingList) {
    [self setIsForBrowsingList:other.isForBrowsingList];
  }
  if (other.hasClanId) {
    [self setClanId:other.clanId];
  }
  if (other.hasClanName) {
    [self setClanName:other.clanName];
  }
  if (other.hasBeforeThisClanId) {
    [self setBeforeThisClanId:other.beforeThisClanId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrieveClanInfoResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        MinimumUserProtoForClans_Builder* subBuilder = [MinimumUserProtoForClans builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMembers:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanInfo:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (RetrieveClanInfoResponseProto_RetrieveClanInfoStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setIsForSearch:[input readBool]];
        break;
      }
      case 48: {
        [self setIsForBrowsingList:[input readBool]];
        break;
      }
      case 56: {
        [self setClanId:[input readInt32]];
        break;
      }
      case 66: {
        [self setClanName:[input readString]];
        break;
      }
      case 72: {
        [self setBeforeThisClanId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RetrieveClanInfoResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetrieveClanInfoResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSArray*) membersList {
  if (result.mutableMembersList == nil) { return [NSArray array]; }
  return result.mutableMembersList;
}
- (MinimumUserProtoForClans*) membersAtIndex:(int32_t) index {
  return [result membersAtIndex:index];
}
- (RetrieveClanInfoResponseProto_Builder*) replaceMembersAtIndex:(int32_t) index with:(MinimumUserProtoForClans*) value {
  [result.mutableMembersList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) addAllMembers:(NSArray*) values {
  if (result.mutableMembersList == nil) {
    result.mutableMembersList = [NSMutableArray array];
  }
  [result.mutableMembersList addObjectsFromArray:values];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearMembersList {
  result.mutableMembersList = nil;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) addMembers:(MinimumUserProtoForClans*) value {
  if (result.mutableMembersList == nil) {
    result.mutableMembersList = [NSMutableArray array];
  }
  [result.mutableMembersList addObject:value];
  return self;
}
- (NSArray*) clanInfoList {
  if (result.mutableClanInfoList == nil) { return [NSArray array]; }
  return result.mutableClanInfoList;
}
- (FullClanProtoWithClanSize*) clanInfoAtIndex:(int32_t) index {
  return [result clanInfoAtIndex:index];
}
- (RetrieveClanInfoResponseProto_Builder*) replaceClanInfoAtIndex:(int32_t) index with:(FullClanProtoWithClanSize*) value {
  [result.mutableClanInfoList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) addAllClanInfo:(NSArray*) values {
  if (result.mutableClanInfoList == nil) {
    result.mutableClanInfoList = [NSMutableArray array];
  }
  [result.mutableClanInfoList addObjectsFromArray:values];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearClanInfoList {
  result.mutableClanInfoList = nil;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) addClanInfo:(FullClanProtoWithClanSize*) value {
  if (result.mutableClanInfoList == nil) {
    result.mutableClanInfoList = [NSMutableArray array];
  }
  [result.mutableClanInfoList addObject:value];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RetrieveClanInfoResponseProto_RetrieveClanInfoStatus) status {
  return result.status;
}
- (RetrieveClanInfoResponseProto_Builder*) setStatus:(RetrieveClanInfoResponseProto_RetrieveClanInfoStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = RetrieveClanInfoResponseProto_RetrieveClanInfoStatusSuccess;
  return self;
}
- (BOOL) hasIsForSearch {
  return result.hasIsForSearch;
}
- (BOOL) isForSearch {
  return result.isForSearch;
}
- (RetrieveClanInfoResponseProto_Builder*) setIsForSearch:(BOOL) value {
  result.hasIsForSearch = YES;
  result.isForSearch = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearIsForSearch {
  result.hasIsForSearch = NO;
  result.isForSearch = NO;
  return self;
}
- (BOOL) hasIsForBrowsingList {
  return result.hasIsForBrowsingList;
}
- (BOOL) isForBrowsingList {
  return result.isForBrowsingList;
}
- (RetrieveClanInfoResponseProto_Builder*) setIsForBrowsingList:(BOOL) value {
  result.hasIsForBrowsingList = YES;
  result.isForBrowsingList = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearIsForBrowsingList {
  result.hasIsForBrowsingList = NO;
  result.isForBrowsingList = NO;
  return self;
}
- (BOOL) hasClanId {
  return result.hasClanId;
}
- (int32_t) clanId {
  return result.clanId;
}
- (RetrieveClanInfoResponseProto_Builder*) setClanId:(int32_t) value {
  result.hasClanId = YES;
  result.clanId = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearClanId {
  result.hasClanId = NO;
  result.clanId = 0;
  return self;
}
- (BOOL) hasClanName {
  return result.hasClanName;
}
- (NSString*) clanName {
  return result.clanName;
}
- (RetrieveClanInfoResponseProto_Builder*) setClanName:(NSString*) value {
  result.hasClanName = YES;
  result.clanName = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearClanName {
  result.hasClanName = NO;
  result.clanName = @"";
  return self;
}
- (BOOL) hasBeforeThisClanId {
  return result.hasBeforeThisClanId;
}
- (int32_t) beforeThisClanId {
  return result.beforeThisClanId;
}
- (RetrieveClanInfoResponseProto_Builder*) setBeforeThisClanId:(int32_t) value {
  result.hasBeforeThisClanId = YES;
  result.beforeThisClanId = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearBeforeThisClanId {
  result.hasBeforeThisClanId = NO;
  result.beforeThisClanId = 0;
  return self;
}
@end

@interface TransferClanOwnershipRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t newClanOwnerId;
@end

@implementation TransferClanOwnershipRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasNewClanOwnerId {
  return !!hasNewClanOwnerId_;
}
- (void) setHasNewClanOwnerId:(BOOL) value {
  hasNewClanOwnerId_ = !!value;
}
@synthesize newClanOwnerId;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.newClanOwnerId = 0;
  }
  return self;
}
static TransferClanOwnershipRequestProto* defaultTransferClanOwnershipRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [TransferClanOwnershipRequestProto class]) {
    defaultTransferClanOwnershipRequestProtoInstance = [[TransferClanOwnershipRequestProto alloc] init];
  }
}
+ (TransferClanOwnershipRequestProto*) defaultInstance {
  return defaultTransferClanOwnershipRequestProtoInstance;
}
- (TransferClanOwnershipRequestProto*) defaultInstance {
  return defaultTransferClanOwnershipRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasNewClanOwnerId) {
    [output writeInt32:2 value:self.newClanOwnerId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasNewClanOwnerId) {
    size += computeInt32Size(2, self.newClanOwnerId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (TransferClanOwnershipRequestProto*) parseFromData:(NSData*) data {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromData:data] build];
}
+ (TransferClanOwnershipRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromInputStream:input] build];
}
+ (TransferClanOwnershipRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (TransferClanOwnershipRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipRequestProto_Builder*) builder {
  return [[[TransferClanOwnershipRequestProto_Builder alloc] init] autorelease];
}
+ (TransferClanOwnershipRequestProto_Builder*) builderWithPrototype:(TransferClanOwnershipRequestProto*) prototype {
  return [[TransferClanOwnershipRequestProto builder] mergeFrom:prototype];
}
- (TransferClanOwnershipRequestProto_Builder*) builder {
  return [TransferClanOwnershipRequestProto builder];
}
@end

@interface TransferClanOwnershipRequestProto_Builder()
@property (retain) TransferClanOwnershipRequestProto* result;
@end

@implementation TransferClanOwnershipRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[TransferClanOwnershipRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (TransferClanOwnershipRequestProto_Builder*) clear {
  self.result = [[[TransferClanOwnershipRequestProto alloc] init] autorelease];
  return self;
}
- (TransferClanOwnershipRequestProto_Builder*) clone {
  return [TransferClanOwnershipRequestProto builderWithPrototype:result];
}
- (TransferClanOwnershipRequestProto*) defaultInstance {
  return [TransferClanOwnershipRequestProto defaultInstance];
}
- (TransferClanOwnershipRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TransferClanOwnershipRequestProto*) buildPartial {
  TransferClanOwnershipRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (TransferClanOwnershipRequestProto_Builder*) mergeFrom:(TransferClanOwnershipRequestProto*) other {
  if (other == [TransferClanOwnershipRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasNewClanOwnerId) {
    [self setNewClanOwnerId:other.newClanOwnerId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TransferClanOwnershipRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TransferClanOwnershipRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setNewClanOwnerId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (TransferClanOwnershipRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (TransferClanOwnershipRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (TransferClanOwnershipRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (TransferClanOwnershipRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasNewClanOwnerId {
  return result.hasNewClanOwnerId;
}
- (int32_t) newClanOwnerId {
  return result.newClanOwnerId;
}
- (TransferClanOwnershipRequestProto_Builder*) setNewClanOwnerId:(int32_t) value {
  result.hasNewClanOwnerId = YES;
  result.newClanOwnerId = value;
  return self;
}
- (TransferClanOwnershipRequestProto_Builder*) clearNewClanOwnerId {
  result.hasNewClanOwnerId = NO;
  result.newClanOwnerId = 0;
  return self;
}
@end

@interface TransferClanOwnershipResponseProto ()
@property (retain) MinimumUserProto* sender;
@property TransferClanOwnershipResponseProto_TransferClanOwnershipStatus status;
@property (retain) MinimumClanProto* minClan;
@property (retain) FullClanProtoWithClanSize* fullClan;
@end

@implementation TransferClanOwnershipResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasMinClan {
  return !!hasMinClan_;
}
- (void) setHasMinClan:(BOOL) value {
  hasMinClan_ = !!value;
}
@synthesize minClan;
- (BOOL) hasFullClan {
  return !!hasFullClan_;
}
- (void) setHasFullClan:(BOOL) value {
  hasFullClan_ = !!value;
}
@synthesize fullClan;
- (void) dealloc {
  self.sender = nil;
  self.minClan = nil;
  self.fullClan = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = TransferClanOwnershipResponseProto_TransferClanOwnershipStatusSuccess;
    self.minClan = [MinimumClanProto defaultInstance];
    self.fullClan = [FullClanProtoWithClanSize defaultInstance];
  }
  return self;
}
static TransferClanOwnershipResponseProto* defaultTransferClanOwnershipResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [TransferClanOwnershipResponseProto class]) {
    defaultTransferClanOwnershipResponseProtoInstance = [[TransferClanOwnershipResponseProto alloc] init];
  }
}
+ (TransferClanOwnershipResponseProto*) defaultInstance {
  return defaultTransferClanOwnershipResponseProtoInstance;
}
- (TransferClanOwnershipResponseProto*) defaultInstance {
  return defaultTransferClanOwnershipResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasMinClan) {
    [output writeMessage:3 value:self.minClan];
  }
  if (self.hasFullClan) {
    [output writeMessage:4 value:self.fullClan];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  if (self.hasMinClan) {
    size += computeMessageSize(3, self.minClan);
  }
  if (self.hasFullClan) {
    size += computeMessageSize(4, self.fullClan);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (TransferClanOwnershipResponseProto*) parseFromData:(NSData*) data {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromData:data] build];
}
+ (TransferClanOwnershipResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromInputStream:input] build];
}
+ (TransferClanOwnershipResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (TransferClanOwnershipResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipResponseProto_Builder*) builder {
  return [[[TransferClanOwnershipResponseProto_Builder alloc] init] autorelease];
}
+ (TransferClanOwnershipResponseProto_Builder*) builderWithPrototype:(TransferClanOwnershipResponseProto*) prototype {
  return [[TransferClanOwnershipResponseProto builder] mergeFrom:prototype];
}
- (TransferClanOwnershipResponseProto_Builder*) builder {
  return [TransferClanOwnershipResponseProto builder];
}
@end

BOOL TransferClanOwnershipResponseProto_TransferClanOwnershipStatusIsValidValue(TransferClanOwnershipResponseProto_TransferClanOwnershipStatus value) {
  switch (value) {
    case TransferClanOwnershipResponseProto_TransferClanOwnershipStatusSuccess:
    case TransferClanOwnershipResponseProto_TransferClanOwnershipStatusOtherFail:
    case TransferClanOwnershipResponseProto_TransferClanOwnershipStatusNotOwner:
    case TransferClanOwnershipResponseProto_TransferClanOwnershipStatusNewOwnerNotInClan:
      return YES;
    default:
      return NO;
  }
}
@interface TransferClanOwnershipResponseProto_Builder()
@property (retain) TransferClanOwnershipResponseProto* result;
@end

@implementation TransferClanOwnershipResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[TransferClanOwnershipResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (TransferClanOwnershipResponseProto_Builder*) clear {
  self.result = [[[TransferClanOwnershipResponseProto alloc] init] autorelease];
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clone {
  return [TransferClanOwnershipResponseProto builderWithPrototype:result];
}
- (TransferClanOwnershipResponseProto*) defaultInstance {
  return [TransferClanOwnershipResponseProto defaultInstance];
}
- (TransferClanOwnershipResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TransferClanOwnershipResponseProto*) buildPartial {
  TransferClanOwnershipResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (TransferClanOwnershipResponseProto_Builder*) mergeFrom:(TransferClanOwnershipResponseProto*) other {
  if (other == [TransferClanOwnershipResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasMinClan) {
    [self mergeMinClan:other.minClan];
  }
  if (other.hasFullClan) {
    [self mergeFullClan:other.fullClan];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TransferClanOwnershipResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (TransferClanOwnershipResponseProto_TransferClanOwnershipStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasMinClan) {
          [subBuilder mergeFrom:self.minClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinClan:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        if (self.hasFullClan) {
          [subBuilder mergeFrom:self.fullClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFullClan:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (TransferClanOwnershipResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (TransferClanOwnershipResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (TransferClanOwnershipResponseProto_TransferClanOwnershipStatus) status {
  return result.status;
}
- (TransferClanOwnershipResponseProto_Builder*) setStatus:(TransferClanOwnershipResponseProto_TransferClanOwnershipStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = TransferClanOwnershipResponseProto_TransferClanOwnershipStatusSuccess;
  return self;
}
- (BOOL) hasMinClan {
  return result.hasMinClan;
}
- (MinimumClanProto*) minClan {
  return result.minClan;
}
- (TransferClanOwnershipResponseProto_Builder*) setMinClan:(MinimumClanProto*) value {
  result.hasMinClan = YES;
  result.minClan = value;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) setMinClanBuilder:(MinimumClanProto_Builder*) builderForValue {
  return [self setMinClan:[builderForValue build]];
}
- (TransferClanOwnershipResponseProto_Builder*) mergeMinClan:(MinimumClanProto*) value {
  if (result.hasMinClan &&
      result.minClan != [MinimumClanProto defaultInstance]) {
    result.minClan =
      [[[MinimumClanProto builderWithPrototype:result.minClan] mergeFrom:value] buildPartial];
  } else {
    result.minClan = value;
  }
  result.hasMinClan = YES;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clearMinClan {
  result.hasMinClan = NO;
  result.minClan = [MinimumClanProto defaultInstance];
  return self;
}
- (BOOL) hasFullClan {
  return result.hasFullClan;
}
- (FullClanProtoWithClanSize*) fullClan {
  return result.fullClan;
}
- (TransferClanOwnershipResponseProto_Builder*) setFullClan:(FullClanProtoWithClanSize*) value {
  result.hasFullClan = YES;
  result.fullClan = value;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) setFullClanBuilder:(FullClanProtoWithClanSize_Builder*) builderForValue {
  return [self setFullClan:[builderForValue build]];
}
- (TransferClanOwnershipResponseProto_Builder*) mergeFullClan:(FullClanProtoWithClanSize*) value {
  if (result.hasFullClan &&
      result.fullClan != [FullClanProtoWithClanSize defaultInstance]) {
    result.fullClan =
      [[[FullClanProtoWithClanSize builderWithPrototype:result.fullClan] mergeFrom:value] buildPartial];
  } else {
    result.fullClan = value;
  }
  result.hasFullClan = YES;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clearFullClan {
  result.hasFullClan = NO;
  result.fullClan = [FullClanProtoWithClanSize defaultInstance];
  return self;
}
@end

@interface ChangeClanDescriptionRequestProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) NSString* description;
@end

@implementation ChangeClanDescriptionRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) value {
  hasDescription_ = !!value;
}
@synthesize description;
- (void) dealloc {
  self.sender = nil;
  self.description = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.description = @"";
  }
  return self;
}
static ChangeClanDescriptionRequestProto* defaultChangeClanDescriptionRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [ChangeClanDescriptionRequestProto class]) {
    defaultChangeClanDescriptionRequestProtoInstance = [[ChangeClanDescriptionRequestProto alloc] init];
  }
}
+ (ChangeClanDescriptionRequestProto*) defaultInstance {
  return defaultChangeClanDescriptionRequestProtoInstance;
}
- (ChangeClanDescriptionRequestProto*) defaultInstance {
  return defaultChangeClanDescriptionRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasDescription) {
    [output writeString:2 value:self.description];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasDescription) {
    size += computeStringSize(2, self.description);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ChangeClanDescriptionRequestProto*) parseFromData:(NSData*) data {
  return (ChangeClanDescriptionRequestProto*)[[[ChangeClanDescriptionRequestProto builder] mergeFromData:data] build];
}
+ (ChangeClanDescriptionRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanDescriptionRequestProto*)[[[ChangeClanDescriptionRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanDescriptionRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (ChangeClanDescriptionRequestProto*)[[[ChangeClanDescriptionRequestProto builder] mergeFromInputStream:input] build];
}
+ (ChangeClanDescriptionRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanDescriptionRequestProto*)[[[ChangeClanDescriptionRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanDescriptionRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChangeClanDescriptionRequestProto*)[[[ChangeClanDescriptionRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (ChangeClanDescriptionRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanDescriptionRequestProto*)[[[ChangeClanDescriptionRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanDescriptionRequestProto_Builder*) builder {
  return [[[ChangeClanDescriptionRequestProto_Builder alloc] init] autorelease];
}
+ (ChangeClanDescriptionRequestProto_Builder*) builderWithPrototype:(ChangeClanDescriptionRequestProto*) prototype {
  return [[ChangeClanDescriptionRequestProto builder] mergeFrom:prototype];
}
- (ChangeClanDescriptionRequestProto_Builder*) builder {
  return [ChangeClanDescriptionRequestProto builder];
}
@end

@interface ChangeClanDescriptionRequestProto_Builder()
@property (retain) ChangeClanDescriptionRequestProto* result;
@end

@implementation ChangeClanDescriptionRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ChangeClanDescriptionRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChangeClanDescriptionRequestProto_Builder*) clear {
  self.result = [[[ChangeClanDescriptionRequestProto alloc] init] autorelease];
  return self;
}
- (ChangeClanDescriptionRequestProto_Builder*) clone {
  return [ChangeClanDescriptionRequestProto builderWithPrototype:result];
}
- (ChangeClanDescriptionRequestProto*) defaultInstance {
  return [ChangeClanDescriptionRequestProto defaultInstance];
}
- (ChangeClanDescriptionRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChangeClanDescriptionRequestProto*) buildPartial {
  ChangeClanDescriptionRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ChangeClanDescriptionRequestProto_Builder*) mergeFrom:(ChangeClanDescriptionRequestProto*) other {
  if (other == [ChangeClanDescriptionRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasDescription) {
    [self setDescription:other.description];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChangeClanDescriptionRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChangeClanDescriptionRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setDescription:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ChangeClanDescriptionRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ChangeClanDescriptionRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ChangeClanDescriptionRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ChangeClanDescriptionRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasDescription {
  return result.hasDescription;
}
- (NSString*) description {
  return result.description;
}
- (ChangeClanDescriptionRequestProto_Builder*) setDescription:(NSString*) value {
  result.hasDescription = YES;
  result.description = value;
  return self;
}
- (ChangeClanDescriptionRequestProto_Builder*) clearDescription {
  result.hasDescription = NO;
  result.description = @"";
  return self;
}
@end

@interface ChangeClanDescriptionResponseProto ()
@property (retain) MinimumUserProto* sender;
@property ChangeClanDescriptionResponseProto_ChangeClanDescriptionStatus status;
@property (retain) MinimumClanProto* minClan;
@property (retain) FullClanProtoWithClanSize* fullClan;
@end

@implementation ChangeClanDescriptionResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasMinClan {
  return !!hasMinClan_;
}
- (void) setHasMinClan:(BOOL) value {
  hasMinClan_ = !!value;
}
@synthesize minClan;
- (BOOL) hasFullClan {
  return !!hasFullClan_;
}
- (void) setHasFullClan:(BOOL) value {
  hasFullClan_ = !!value;
}
@synthesize fullClan;
- (void) dealloc {
  self.sender = nil;
  self.minClan = nil;
  self.fullClan = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = ChangeClanDescriptionResponseProto_ChangeClanDescriptionStatusSuccess;
    self.minClan = [MinimumClanProto defaultInstance];
    self.fullClan = [FullClanProtoWithClanSize defaultInstance];
  }
  return self;
}
static ChangeClanDescriptionResponseProto* defaultChangeClanDescriptionResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [ChangeClanDescriptionResponseProto class]) {
    defaultChangeClanDescriptionResponseProtoInstance = [[ChangeClanDescriptionResponseProto alloc] init];
  }
}
+ (ChangeClanDescriptionResponseProto*) defaultInstance {
  return defaultChangeClanDescriptionResponseProtoInstance;
}
- (ChangeClanDescriptionResponseProto*) defaultInstance {
  return defaultChangeClanDescriptionResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasMinClan) {
    [output writeMessage:3 value:self.minClan];
  }
  if (self.hasFullClan) {
    [output writeMessage:4 value:self.fullClan];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  if (self.hasMinClan) {
    size += computeMessageSize(3, self.minClan);
  }
  if (self.hasFullClan) {
    size += computeMessageSize(4, self.fullClan);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ChangeClanDescriptionResponseProto*) parseFromData:(NSData*) data {
  return (ChangeClanDescriptionResponseProto*)[[[ChangeClanDescriptionResponseProto builder] mergeFromData:data] build];
}
+ (ChangeClanDescriptionResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanDescriptionResponseProto*)[[[ChangeClanDescriptionResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanDescriptionResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (ChangeClanDescriptionResponseProto*)[[[ChangeClanDescriptionResponseProto builder] mergeFromInputStream:input] build];
}
+ (ChangeClanDescriptionResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanDescriptionResponseProto*)[[[ChangeClanDescriptionResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanDescriptionResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChangeClanDescriptionResponseProto*)[[[ChangeClanDescriptionResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (ChangeClanDescriptionResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanDescriptionResponseProto*)[[[ChangeClanDescriptionResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanDescriptionResponseProto_Builder*) builder {
  return [[[ChangeClanDescriptionResponseProto_Builder alloc] init] autorelease];
}
+ (ChangeClanDescriptionResponseProto_Builder*) builderWithPrototype:(ChangeClanDescriptionResponseProto*) prototype {
  return [[ChangeClanDescriptionResponseProto builder] mergeFrom:prototype];
}
- (ChangeClanDescriptionResponseProto_Builder*) builder {
  return [ChangeClanDescriptionResponseProto builder];
}
@end

BOOL ChangeClanDescriptionResponseProto_ChangeClanDescriptionStatusIsValidValue(ChangeClanDescriptionResponseProto_ChangeClanDescriptionStatus value) {
  switch (value) {
    case ChangeClanDescriptionResponseProto_ChangeClanDescriptionStatusSuccess:
    case ChangeClanDescriptionResponseProto_ChangeClanDescriptionStatusOtherFail:
    case ChangeClanDescriptionResponseProto_ChangeClanDescriptionStatusTooLong:
    case ChangeClanDescriptionResponseProto_ChangeClanDescriptionStatusNotInClan:
    case ChangeClanDescriptionResponseProto_ChangeClanDescriptionStatusNotOwner:
      return YES;
    default:
      return NO;
  }
}
@interface ChangeClanDescriptionResponseProto_Builder()
@property (retain) ChangeClanDescriptionResponseProto* result;
@end

@implementation ChangeClanDescriptionResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ChangeClanDescriptionResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChangeClanDescriptionResponseProto_Builder*) clear {
  self.result = [[[ChangeClanDescriptionResponseProto alloc] init] autorelease];
  return self;
}
- (ChangeClanDescriptionResponseProto_Builder*) clone {
  return [ChangeClanDescriptionResponseProto builderWithPrototype:result];
}
- (ChangeClanDescriptionResponseProto*) defaultInstance {
  return [ChangeClanDescriptionResponseProto defaultInstance];
}
- (ChangeClanDescriptionResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChangeClanDescriptionResponseProto*) buildPartial {
  ChangeClanDescriptionResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ChangeClanDescriptionResponseProto_Builder*) mergeFrom:(ChangeClanDescriptionResponseProto*) other {
  if (other == [ChangeClanDescriptionResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasMinClan) {
    [self mergeMinClan:other.minClan];
  }
  if (other.hasFullClan) {
    [self mergeFullClan:other.fullClan];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChangeClanDescriptionResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChangeClanDescriptionResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (ChangeClanDescriptionResponseProto_ChangeClanDescriptionStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasMinClan) {
          [subBuilder mergeFrom:self.minClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinClan:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        if (self.hasFullClan) {
          [subBuilder mergeFrom:self.fullClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFullClan:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ChangeClanDescriptionResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ChangeClanDescriptionResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ChangeClanDescriptionResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ChangeClanDescriptionResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (ChangeClanDescriptionResponseProto_ChangeClanDescriptionStatus) status {
  return result.status;
}
- (ChangeClanDescriptionResponseProto_Builder*) setStatus:(ChangeClanDescriptionResponseProto_ChangeClanDescriptionStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (ChangeClanDescriptionResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = ChangeClanDescriptionResponseProto_ChangeClanDescriptionStatusSuccess;
  return self;
}
- (BOOL) hasMinClan {
  return result.hasMinClan;
}
- (MinimumClanProto*) minClan {
  return result.minClan;
}
- (ChangeClanDescriptionResponseProto_Builder*) setMinClan:(MinimumClanProto*) value {
  result.hasMinClan = YES;
  result.minClan = value;
  return self;
}
- (ChangeClanDescriptionResponseProto_Builder*) setMinClanBuilder:(MinimumClanProto_Builder*) builderForValue {
  return [self setMinClan:[builderForValue build]];
}
- (ChangeClanDescriptionResponseProto_Builder*) mergeMinClan:(MinimumClanProto*) value {
  if (result.hasMinClan &&
      result.minClan != [MinimumClanProto defaultInstance]) {
    result.minClan =
      [[[MinimumClanProto builderWithPrototype:result.minClan] mergeFrom:value] buildPartial];
  } else {
    result.minClan = value;
  }
  result.hasMinClan = YES;
  return self;
}
- (ChangeClanDescriptionResponseProto_Builder*) clearMinClan {
  result.hasMinClan = NO;
  result.minClan = [MinimumClanProto defaultInstance];
  return self;
}
- (BOOL) hasFullClan {
  return result.hasFullClan;
}
- (FullClanProtoWithClanSize*) fullClan {
  return result.fullClan;
}
- (ChangeClanDescriptionResponseProto_Builder*) setFullClan:(FullClanProtoWithClanSize*) value {
  result.hasFullClan = YES;
  result.fullClan = value;
  return self;
}
- (ChangeClanDescriptionResponseProto_Builder*) setFullClanBuilder:(FullClanProtoWithClanSize_Builder*) builderForValue {
  return [self setFullClan:[builderForValue build]];
}
- (ChangeClanDescriptionResponseProto_Builder*) mergeFullClan:(FullClanProtoWithClanSize*) value {
  if (result.hasFullClan &&
      result.fullClan != [FullClanProtoWithClanSize defaultInstance]) {
    result.fullClan =
      [[[FullClanProtoWithClanSize builderWithPrototype:result.fullClan] mergeFrom:value] buildPartial];
  } else {
    result.fullClan = value;
  }
  result.hasFullClan = YES;
  return self;
}
- (ChangeClanDescriptionResponseProto_Builder*) clearFullClan {
  result.hasFullClan = NO;
  result.fullClan = [FullClanProtoWithClanSize defaultInstance];
  return self;
}
@end

@interface BootPlayerFromClanRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t playerToBoot;
@end

@implementation BootPlayerFromClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasPlayerToBoot {
  return !!hasPlayerToBoot_;
}
- (void) setHasPlayerToBoot:(BOOL) value {
  hasPlayerToBoot_ = !!value;
}
@synthesize playerToBoot;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.playerToBoot = 0;
  }
  return self;
}
static BootPlayerFromClanRequestProto* defaultBootPlayerFromClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [BootPlayerFromClanRequestProto class]) {
    defaultBootPlayerFromClanRequestProtoInstance = [[BootPlayerFromClanRequestProto alloc] init];
  }
}
+ (BootPlayerFromClanRequestProto*) defaultInstance {
  return defaultBootPlayerFromClanRequestProtoInstance;
}
- (BootPlayerFromClanRequestProto*) defaultInstance {
  return defaultBootPlayerFromClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasPlayerToBoot) {
    [output writeInt32:2 value:self.playerToBoot];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasPlayerToBoot) {
    size += computeInt32Size(2, self.playerToBoot);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BootPlayerFromClanRequestProto*) parseFromData:(NSData*) data {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromData:data] build];
}
+ (BootPlayerFromClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (BootPlayerFromClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (BootPlayerFromClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanRequestProto_Builder*) builder {
  return [[[BootPlayerFromClanRequestProto_Builder alloc] init] autorelease];
}
+ (BootPlayerFromClanRequestProto_Builder*) builderWithPrototype:(BootPlayerFromClanRequestProto*) prototype {
  return [[BootPlayerFromClanRequestProto builder] mergeFrom:prototype];
}
- (BootPlayerFromClanRequestProto_Builder*) builder {
  return [BootPlayerFromClanRequestProto builder];
}
@end

@interface BootPlayerFromClanRequestProto_Builder()
@property (retain) BootPlayerFromClanRequestProto* result;
@end

@implementation BootPlayerFromClanRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BootPlayerFromClanRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BootPlayerFromClanRequestProto_Builder*) clear {
  self.result = [[[BootPlayerFromClanRequestProto alloc] init] autorelease];
  return self;
}
- (BootPlayerFromClanRequestProto_Builder*) clone {
  return [BootPlayerFromClanRequestProto builderWithPrototype:result];
}
- (BootPlayerFromClanRequestProto*) defaultInstance {
  return [BootPlayerFromClanRequestProto defaultInstance];
}
- (BootPlayerFromClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BootPlayerFromClanRequestProto*) buildPartial {
  BootPlayerFromClanRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BootPlayerFromClanRequestProto_Builder*) mergeFrom:(BootPlayerFromClanRequestProto*) other {
  if (other == [BootPlayerFromClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasPlayerToBoot) {
    [self setPlayerToBoot:other.playerToBoot];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BootPlayerFromClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BootPlayerFromClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setPlayerToBoot:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BootPlayerFromClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BootPlayerFromClanRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BootPlayerFromClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BootPlayerFromClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasPlayerToBoot {
  return result.hasPlayerToBoot;
}
- (int32_t) playerToBoot {
  return result.playerToBoot;
}
- (BootPlayerFromClanRequestProto_Builder*) setPlayerToBoot:(int32_t) value {
  result.hasPlayerToBoot = YES;
  result.playerToBoot = value;
  return self;
}
- (BootPlayerFromClanRequestProto_Builder*) clearPlayerToBoot {
  result.hasPlayerToBoot = NO;
  result.playerToBoot = 0;
  return self;
}
@end

@interface BootPlayerFromClanResponseProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t playerToBoot;
@property BootPlayerFromClanResponseProto_BootPlayerFromClanStatus status;
@end

@implementation BootPlayerFromClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasPlayerToBoot {
  return !!hasPlayerToBoot_;
}
- (void) setHasPlayerToBoot:(BOOL) value {
  hasPlayerToBoot_ = !!value;
}
@synthesize playerToBoot;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.playerToBoot = 0;
    self.status = BootPlayerFromClanResponseProto_BootPlayerFromClanStatusSuccess;
  }
  return self;
}
static BootPlayerFromClanResponseProto* defaultBootPlayerFromClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [BootPlayerFromClanResponseProto class]) {
    defaultBootPlayerFromClanResponseProtoInstance = [[BootPlayerFromClanResponseProto alloc] init];
  }
}
+ (BootPlayerFromClanResponseProto*) defaultInstance {
  return defaultBootPlayerFromClanResponseProtoInstance;
}
- (BootPlayerFromClanResponseProto*) defaultInstance {
  return defaultBootPlayerFromClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasPlayerToBoot) {
    [output writeInt32:2 value:self.playerToBoot];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasPlayerToBoot) {
    size += computeInt32Size(2, self.playerToBoot);
  }
  if (self.hasStatus) {
    size += computeEnumSize(3, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BootPlayerFromClanResponseProto*) parseFromData:(NSData*) data {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromData:data] build];
}
+ (BootPlayerFromClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (BootPlayerFromClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (BootPlayerFromClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanResponseProto_Builder*) builder {
  return [[[BootPlayerFromClanResponseProto_Builder alloc] init] autorelease];
}
+ (BootPlayerFromClanResponseProto_Builder*) builderWithPrototype:(BootPlayerFromClanResponseProto*) prototype {
  return [[BootPlayerFromClanResponseProto builder] mergeFrom:prototype];
}
- (BootPlayerFromClanResponseProto_Builder*) builder {
  return [BootPlayerFromClanResponseProto builder];
}
@end

BOOL BootPlayerFromClanResponseProto_BootPlayerFromClanStatusIsValidValue(BootPlayerFromClanResponseProto_BootPlayerFromClanStatus value) {
  switch (value) {
    case BootPlayerFromClanResponseProto_BootPlayerFromClanStatusSuccess:
    case BootPlayerFromClanResponseProto_BootPlayerFromClanStatusOtherFail:
    case BootPlayerFromClanResponseProto_BootPlayerFromClanStatusNotOwnerOfClan:
    case BootPlayerFromClanResponseProto_BootPlayerFromClanStatusBootedNotInClan:
      return YES;
    default:
      return NO;
  }
}
@interface BootPlayerFromClanResponseProto_Builder()
@property (retain) BootPlayerFromClanResponseProto* result;
@end

@implementation BootPlayerFromClanResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BootPlayerFromClanResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BootPlayerFromClanResponseProto_Builder*) clear {
  self.result = [[[BootPlayerFromClanResponseProto alloc] init] autorelease];
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) clone {
  return [BootPlayerFromClanResponseProto builderWithPrototype:result];
}
- (BootPlayerFromClanResponseProto*) defaultInstance {
  return [BootPlayerFromClanResponseProto defaultInstance];
}
- (BootPlayerFromClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BootPlayerFromClanResponseProto*) buildPartial {
  BootPlayerFromClanResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BootPlayerFromClanResponseProto_Builder*) mergeFrom:(BootPlayerFromClanResponseProto*) other {
  if (other == [BootPlayerFromClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasPlayerToBoot) {
    [self setPlayerToBoot:other.playerToBoot];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BootPlayerFromClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setPlayerToBoot:[input readInt32]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (BootPlayerFromClanResponseProto_BootPlayerFromClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BootPlayerFromClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BootPlayerFromClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasPlayerToBoot {
  return result.hasPlayerToBoot;
}
- (int32_t) playerToBoot {
  return result.playerToBoot;
}
- (BootPlayerFromClanResponseProto_Builder*) setPlayerToBoot:(int32_t) value {
  result.hasPlayerToBoot = YES;
  result.playerToBoot = value;
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) clearPlayerToBoot {
  result.hasPlayerToBoot = NO;
  result.playerToBoot = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (BootPlayerFromClanResponseProto_BootPlayerFromClanStatus) status {
  return result.status;
}
- (BootPlayerFromClanResponseProto_Builder*) setStatus:(BootPlayerFromClanResponseProto_BootPlayerFromClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = BootPlayerFromClanResponseProto_BootPlayerFromClanStatusSuccess;
  return self;
}
@end

@interface ChangeClanJoinTypeRequestProto ()
@property (retain) MinimumUserProto* sender;
@property BOOL requestToJoinRequired;
@end

@implementation ChangeClanJoinTypeRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasRequestToJoinRequired {
  return !!hasRequestToJoinRequired_;
}
- (void) setHasRequestToJoinRequired:(BOOL) value {
  hasRequestToJoinRequired_ = !!value;
}
- (BOOL) requestToJoinRequired {
  return !!requestToJoinRequired_;
}
- (void) setRequestToJoinRequired:(BOOL) value {
  requestToJoinRequired_ = !!value;
}
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.requestToJoinRequired = NO;
  }
  return self;
}
static ChangeClanJoinTypeRequestProto* defaultChangeClanJoinTypeRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [ChangeClanJoinTypeRequestProto class]) {
    defaultChangeClanJoinTypeRequestProtoInstance = [[ChangeClanJoinTypeRequestProto alloc] init];
  }
}
+ (ChangeClanJoinTypeRequestProto*) defaultInstance {
  return defaultChangeClanJoinTypeRequestProtoInstance;
}
- (ChangeClanJoinTypeRequestProto*) defaultInstance {
  return defaultChangeClanJoinTypeRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasRequestToJoinRequired) {
    [output writeBool:2 value:self.requestToJoinRequired];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasRequestToJoinRequired) {
    size += computeBoolSize(2, self.requestToJoinRequired);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ChangeClanJoinTypeRequestProto*) parseFromData:(NSData*) data {
  return (ChangeClanJoinTypeRequestProto*)[[[ChangeClanJoinTypeRequestProto builder] mergeFromData:data] build];
}
+ (ChangeClanJoinTypeRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanJoinTypeRequestProto*)[[[ChangeClanJoinTypeRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanJoinTypeRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (ChangeClanJoinTypeRequestProto*)[[[ChangeClanJoinTypeRequestProto builder] mergeFromInputStream:input] build];
}
+ (ChangeClanJoinTypeRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanJoinTypeRequestProto*)[[[ChangeClanJoinTypeRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanJoinTypeRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChangeClanJoinTypeRequestProto*)[[[ChangeClanJoinTypeRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (ChangeClanJoinTypeRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanJoinTypeRequestProto*)[[[ChangeClanJoinTypeRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanJoinTypeRequestProto_Builder*) builder {
  return [[[ChangeClanJoinTypeRequestProto_Builder alloc] init] autorelease];
}
+ (ChangeClanJoinTypeRequestProto_Builder*) builderWithPrototype:(ChangeClanJoinTypeRequestProto*) prototype {
  return [[ChangeClanJoinTypeRequestProto builder] mergeFrom:prototype];
}
- (ChangeClanJoinTypeRequestProto_Builder*) builder {
  return [ChangeClanJoinTypeRequestProto builder];
}
@end

@interface ChangeClanJoinTypeRequestProto_Builder()
@property (retain) ChangeClanJoinTypeRequestProto* result;
@end

@implementation ChangeClanJoinTypeRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ChangeClanJoinTypeRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChangeClanJoinTypeRequestProto_Builder*) clear {
  self.result = [[[ChangeClanJoinTypeRequestProto alloc] init] autorelease];
  return self;
}
- (ChangeClanJoinTypeRequestProto_Builder*) clone {
  return [ChangeClanJoinTypeRequestProto builderWithPrototype:result];
}
- (ChangeClanJoinTypeRequestProto*) defaultInstance {
  return [ChangeClanJoinTypeRequestProto defaultInstance];
}
- (ChangeClanJoinTypeRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChangeClanJoinTypeRequestProto*) buildPartial {
  ChangeClanJoinTypeRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ChangeClanJoinTypeRequestProto_Builder*) mergeFrom:(ChangeClanJoinTypeRequestProto*) other {
  if (other == [ChangeClanJoinTypeRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasRequestToJoinRequired) {
    [self setRequestToJoinRequired:other.requestToJoinRequired];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChangeClanJoinTypeRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChangeClanJoinTypeRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setRequestToJoinRequired:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ChangeClanJoinTypeRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ChangeClanJoinTypeRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ChangeClanJoinTypeRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ChangeClanJoinTypeRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasRequestToJoinRequired {
  return result.hasRequestToJoinRequired;
}
- (BOOL) requestToJoinRequired {
  return result.requestToJoinRequired;
}
- (ChangeClanJoinTypeRequestProto_Builder*) setRequestToJoinRequired:(BOOL) value {
  result.hasRequestToJoinRequired = YES;
  result.requestToJoinRequired = value;
  return self;
}
- (ChangeClanJoinTypeRequestProto_Builder*) clearRequestToJoinRequired {
  result.hasRequestToJoinRequired = NO;
  result.requestToJoinRequired = NO;
  return self;
}
@end

@interface ChangeClanJoinTypeResponseProto ()
@property (retain) MinimumUserProto* sender;
@property ChangeClanJoinTypeResponseProto_ChangeClanJoinTypeStatus status;
@property (retain) MinimumClanProto* minClan;
@property (retain) FullClanProtoWithClanSize* fullClan;
@end

@implementation ChangeClanJoinTypeResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasMinClan {
  return !!hasMinClan_;
}
- (void) setHasMinClan:(BOOL) value {
  hasMinClan_ = !!value;
}
@synthesize minClan;
- (BOOL) hasFullClan {
  return !!hasFullClan_;
}
- (void) setHasFullClan:(BOOL) value {
  hasFullClan_ = !!value;
}
@synthesize fullClan;
- (void) dealloc {
  self.sender = nil;
  self.minClan = nil;
  self.fullClan = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = ChangeClanJoinTypeResponseProto_ChangeClanJoinTypeStatusSuccess;
    self.minClan = [MinimumClanProto defaultInstance];
    self.fullClan = [FullClanProtoWithClanSize defaultInstance];
  }
  return self;
}
static ChangeClanJoinTypeResponseProto* defaultChangeClanJoinTypeResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [ChangeClanJoinTypeResponseProto class]) {
    defaultChangeClanJoinTypeResponseProtoInstance = [[ChangeClanJoinTypeResponseProto alloc] init];
  }
}
+ (ChangeClanJoinTypeResponseProto*) defaultInstance {
  return defaultChangeClanJoinTypeResponseProtoInstance;
}
- (ChangeClanJoinTypeResponseProto*) defaultInstance {
  return defaultChangeClanJoinTypeResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasMinClan) {
    [output writeMessage:3 value:self.minClan];
  }
  if (self.hasFullClan) {
    [output writeMessage:4 value:self.fullClan];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  if (self.hasMinClan) {
    size += computeMessageSize(3, self.minClan);
  }
  if (self.hasFullClan) {
    size += computeMessageSize(4, self.fullClan);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ChangeClanJoinTypeResponseProto*) parseFromData:(NSData*) data {
  return (ChangeClanJoinTypeResponseProto*)[[[ChangeClanJoinTypeResponseProto builder] mergeFromData:data] build];
}
+ (ChangeClanJoinTypeResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanJoinTypeResponseProto*)[[[ChangeClanJoinTypeResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanJoinTypeResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (ChangeClanJoinTypeResponseProto*)[[[ChangeClanJoinTypeResponseProto builder] mergeFromInputStream:input] build];
}
+ (ChangeClanJoinTypeResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanJoinTypeResponseProto*)[[[ChangeClanJoinTypeResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanJoinTypeResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChangeClanJoinTypeResponseProto*)[[[ChangeClanJoinTypeResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (ChangeClanJoinTypeResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanJoinTypeResponseProto*)[[[ChangeClanJoinTypeResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanJoinTypeResponseProto_Builder*) builder {
  return [[[ChangeClanJoinTypeResponseProto_Builder alloc] init] autorelease];
}
+ (ChangeClanJoinTypeResponseProto_Builder*) builderWithPrototype:(ChangeClanJoinTypeResponseProto*) prototype {
  return [[ChangeClanJoinTypeResponseProto builder] mergeFrom:prototype];
}
- (ChangeClanJoinTypeResponseProto_Builder*) builder {
  return [ChangeClanJoinTypeResponseProto builder];
}
@end

BOOL ChangeClanJoinTypeResponseProto_ChangeClanJoinTypeStatusIsValidValue(ChangeClanJoinTypeResponseProto_ChangeClanJoinTypeStatus value) {
  switch (value) {
    case ChangeClanJoinTypeResponseProto_ChangeClanJoinTypeStatusSuccess:
    case ChangeClanJoinTypeResponseProto_ChangeClanJoinTypeStatusOtherFail:
    case ChangeClanJoinTypeResponseProto_ChangeClanJoinTypeStatusNotInClan:
    case ChangeClanJoinTypeResponseProto_ChangeClanJoinTypeStatusNotOwner:
      return YES;
    default:
      return NO;
  }
}
@interface ChangeClanJoinTypeResponseProto_Builder()
@property (retain) ChangeClanJoinTypeResponseProto* result;
@end

@implementation ChangeClanJoinTypeResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ChangeClanJoinTypeResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChangeClanJoinTypeResponseProto_Builder*) clear {
  self.result = [[[ChangeClanJoinTypeResponseProto alloc] init] autorelease];
  return self;
}
- (ChangeClanJoinTypeResponseProto_Builder*) clone {
  return [ChangeClanJoinTypeResponseProto builderWithPrototype:result];
}
- (ChangeClanJoinTypeResponseProto*) defaultInstance {
  return [ChangeClanJoinTypeResponseProto defaultInstance];
}
- (ChangeClanJoinTypeResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChangeClanJoinTypeResponseProto*) buildPartial {
  ChangeClanJoinTypeResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ChangeClanJoinTypeResponseProto_Builder*) mergeFrom:(ChangeClanJoinTypeResponseProto*) other {
  if (other == [ChangeClanJoinTypeResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasMinClan) {
    [self mergeMinClan:other.minClan];
  }
  if (other.hasFullClan) {
    [self mergeFullClan:other.fullClan];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChangeClanJoinTypeResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChangeClanJoinTypeResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (ChangeClanJoinTypeResponseProto_ChangeClanJoinTypeStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasMinClan) {
          [subBuilder mergeFrom:self.minClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinClan:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        if (self.hasFullClan) {
          [subBuilder mergeFrom:self.fullClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFullClan:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ChangeClanJoinTypeResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ChangeClanJoinTypeResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ChangeClanJoinTypeResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ChangeClanJoinTypeResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (ChangeClanJoinTypeResponseProto_ChangeClanJoinTypeStatus) status {
  return result.status;
}
- (ChangeClanJoinTypeResponseProto_Builder*) setStatus:(ChangeClanJoinTypeResponseProto_ChangeClanJoinTypeStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (ChangeClanJoinTypeResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = ChangeClanJoinTypeResponseProto_ChangeClanJoinTypeStatusSuccess;
  return self;
}
- (BOOL) hasMinClan {
  return result.hasMinClan;
}
- (MinimumClanProto*) minClan {
  return result.minClan;
}
- (ChangeClanJoinTypeResponseProto_Builder*) setMinClan:(MinimumClanProto*) value {
  result.hasMinClan = YES;
  result.minClan = value;
  return self;
}
- (ChangeClanJoinTypeResponseProto_Builder*) setMinClanBuilder:(MinimumClanProto_Builder*) builderForValue {
  return [self setMinClan:[builderForValue build]];
}
- (ChangeClanJoinTypeResponseProto_Builder*) mergeMinClan:(MinimumClanProto*) value {
  if (result.hasMinClan &&
      result.minClan != [MinimumClanProto defaultInstance]) {
    result.minClan =
      [[[MinimumClanProto builderWithPrototype:result.minClan] mergeFrom:value] buildPartial];
  } else {
    result.minClan = value;
  }
  result.hasMinClan = YES;
  return self;
}
- (ChangeClanJoinTypeResponseProto_Builder*) clearMinClan {
  result.hasMinClan = NO;
  result.minClan = [MinimumClanProto defaultInstance];
  return self;
}
- (BOOL) hasFullClan {
  return result.hasFullClan;
}
- (FullClanProtoWithClanSize*) fullClan {
  return result.fullClan;
}
- (ChangeClanJoinTypeResponseProto_Builder*) setFullClan:(FullClanProtoWithClanSize*) value {
  result.hasFullClan = YES;
  result.fullClan = value;
  return self;
}
- (ChangeClanJoinTypeResponseProto_Builder*) setFullClanBuilder:(FullClanProtoWithClanSize_Builder*) builderForValue {
  return [self setFullClan:[builderForValue build]];
}
- (ChangeClanJoinTypeResponseProto_Builder*) mergeFullClan:(FullClanProtoWithClanSize*) value {
  if (result.hasFullClan &&
      result.fullClan != [FullClanProtoWithClanSize defaultInstance]) {
    result.fullClan =
      [[[FullClanProtoWithClanSize builderWithPrototype:result.fullClan] mergeFrom:value] buildPartial];
  } else {
    result.fullClan = value;
  }
  result.hasFullClan = YES;
  return self;
}
- (ChangeClanJoinTypeResponseProto_Builder*) clearFullClan {
  result.hasFullClan = NO;
  result.fullClan = [FullClanProtoWithClanSize defaultInstance];
  return self;
}
@end

