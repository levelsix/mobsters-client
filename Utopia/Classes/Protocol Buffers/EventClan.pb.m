// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventClan.pb.h"
// @@protoc_insertion_point(imports)

@implementation EventClanRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventClanRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [BattleRoot registerAllExtensions:registry];
    [ClanRoot registerAllExtensions:registry];
    [MonsterStuffRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface CreateClanRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSString* name;
@property (strong) NSString* tag;
@property BOOL requestToJoinClanRequired;
@property (strong) NSString* description;
@property int32_t clanIconId;
@property int32_t gemsSpent;
@property int32_t cashChange;
@end

@implementation CreateClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasTag {
  return !!hasTag_;
}
- (void) setHasTag:(BOOL) value_ {
  hasTag_ = !!value_;
}
@synthesize tag;
- (BOOL) hasRequestToJoinClanRequired {
  return !!hasRequestToJoinClanRequired_;
}
- (void) setHasRequestToJoinClanRequired:(BOOL) value_ {
  hasRequestToJoinClanRequired_ = !!value_;
}
- (BOOL) requestToJoinClanRequired {
  return !!requestToJoinClanRequired_;
}
- (void) setRequestToJoinClanRequired:(BOOL) value_ {
  requestToJoinClanRequired_ = !!value_;
}
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) value_ {
  hasDescription_ = !!value_;
}
@synthesize description;
- (BOOL) hasClanIconId {
  return !!hasClanIconId_;
}
- (void) setHasClanIconId:(BOOL) value_ {
  hasClanIconId_ = !!value_;
}
@synthesize clanIconId;
- (BOOL) hasGemsSpent {
  return !!hasGemsSpent_;
}
- (void) setHasGemsSpent:(BOOL) value_ {
  hasGemsSpent_ = !!value_;
}
@synthesize gemsSpent;
- (BOOL) hasCashChange {
  return !!hasCashChange_;
}
- (void) setHasCashChange:(BOOL) value_ {
  hasCashChange_ = !!value_;
}
@synthesize cashChange;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.name = @"";
    self.tag = @"";
    self.requestToJoinClanRequired = NO;
    self.description = @"";
    self.clanIconId = 0;
    self.gemsSpent = 0;
    self.cashChange = 0;
  }
  return self;
}
static CreateClanRequestProto* defaultCreateClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [CreateClanRequestProto class]) {
    defaultCreateClanRequestProtoInstance = [[CreateClanRequestProto alloc] init];
  }
}
+ (CreateClanRequestProto*) defaultInstance {
  return defaultCreateClanRequestProtoInstance;
}
- (CreateClanRequestProto*) defaultInstance {
  return defaultCreateClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasTag) {
    [output writeString:3 value:self.tag];
  }
  if (self.hasRequestToJoinClanRequired) {
    [output writeBool:4 value:self.requestToJoinClanRequired];
  }
  if (self.hasDescription) {
    [output writeString:5 value:self.description];
  }
  if (self.hasClanIconId) {
    [output writeInt32:6 value:self.clanIconId];
  }
  if (self.hasGemsSpent) {
    [output writeInt32:7 value:self.gemsSpent];
  }
  if (self.hasCashChange) {
    [output writeSInt32:8 value:self.cashChange];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasTag) {
    size_ += computeStringSize(3, self.tag);
  }
  if (self.hasRequestToJoinClanRequired) {
    size_ += computeBoolSize(4, self.requestToJoinClanRequired);
  }
  if (self.hasDescription) {
    size_ += computeStringSize(5, self.description);
  }
  if (self.hasClanIconId) {
    size_ += computeInt32Size(6, self.clanIconId);
  }
  if (self.hasGemsSpent) {
    size_ += computeInt32Size(7, self.gemsSpent);
  }
  if (self.hasCashChange) {
    size_ += computeSInt32Size(8, self.cashChange);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CreateClanRequestProto*) parseFromData:(NSData*) data {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromData:data] build];
}
+ (CreateClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CreateClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (CreateClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (CreateClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateClanRequestProto_Builder*) builder {
  return [[CreateClanRequestProto_Builder alloc] init];
}
+ (CreateClanRequestProto_Builder*) builderWithPrototype:(CreateClanRequestProto*) prototype {
  return [[CreateClanRequestProto builder] mergeFrom:prototype];
}
- (CreateClanRequestProto_Builder*) builder {
  return [CreateClanRequestProto builder];
}
- (CreateClanRequestProto_Builder*) toBuilder {
  return [CreateClanRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasTag) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tag", self.tag];
  }
  if (self.hasRequestToJoinClanRequired) {
    [output appendFormat:@"%@%@: %@\n", indent, @"requestToJoinClanRequired", [NSNumber numberWithBool:self.requestToJoinClanRequired]];
  }
  if (self.hasDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"description", self.description];
  }
  if (self.hasClanIconId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanIconId", [NSNumber numberWithInteger:self.clanIconId]];
  }
  if (self.hasGemsSpent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gemsSpent", [NSNumber numberWithInteger:self.gemsSpent]];
  }
  if (self.hasCashChange) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cashChange", [NSNumber numberWithInteger:self.cashChange]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CreateClanRequestProto class]]) {
    return NO;
  }
  CreateClanRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasTag == otherMessage.hasTag &&
      (!self.hasTag || [self.tag isEqual:otherMessage.tag]) &&
      self.hasRequestToJoinClanRequired == otherMessage.hasRequestToJoinClanRequired &&
      (!self.hasRequestToJoinClanRequired || self.requestToJoinClanRequired == otherMessage.requestToJoinClanRequired) &&
      self.hasDescription == otherMessage.hasDescription &&
      (!self.hasDescription || [self.description isEqual:otherMessage.description]) &&
      self.hasClanIconId == otherMessage.hasClanIconId &&
      (!self.hasClanIconId || self.clanIconId == otherMessage.clanIconId) &&
      self.hasGemsSpent == otherMessage.hasGemsSpent &&
      (!self.hasGemsSpent || self.gemsSpent == otherMessage.gemsSpent) &&
      self.hasCashChange == otherMessage.hasCashChange &&
      (!self.hasCashChange || self.cashChange == otherMessage.cashChange) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasTag) {
    hashCode = hashCode * 31 + [self.tag hash];
  }
  if (self.hasRequestToJoinClanRequired) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.requestToJoinClanRequired] hash];
  }
  if (self.hasDescription) {
    hashCode = hashCode * 31 + [self.description hash];
  }
  if (self.hasClanIconId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clanIconId] hash];
  }
  if (self.hasGemsSpent) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.gemsSpent] hash];
  }
  if (self.hasCashChange) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cashChange] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CreateClanRequestProto_Builder()
@property (strong) CreateClanRequestProto* result;
@end

@implementation CreateClanRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[CreateClanRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CreateClanRequestProto_Builder*) clear {
  self.result = [[CreateClanRequestProto alloc] init];
  return self;
}
- (CreateClanRequestProto_Builder*) clone {
  return [CreateClanRequestProto builderWithPrototype:result];
}
- (CreateClanRequestProto*) defaultInstance {
  return [CreateClanRequestProto defaultInstance];
}
- (CreateClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CreateClanRequestProto*) buildPartial {
  CreateClanRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (CreateClanRequestProto_Builder*) mergeFrom:(CreateClanRequestProto*) other {
  if (other == [CreateClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasTag) {
    [self setTag:other.tag];
  }
  if (other.hasRequestToJoinClanRequired) {
    [self setRequestToJoinClanRequired:other.requestToJoinClanRequired];
  }
  if (other.hasDescription) {
    [self setDescription:other.description];
  }
  if (other.hasClanIconId) {
    [self setClanIconId:other.clanIconId];
  }
  if (other.hasGemsSpent) {
    [self setGemsSpent:other.gemsSpent];
  }
  if (other.hasCashChange) {
    [self setCashChange:other.cashChange];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CreateClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CreateClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setTag:[input readString]];
        break;
      }
      case 32: {
        [self setRequestToJoinClanRequired:[input readBool]];
        break;
      }
      case 42: {
        [self setDescription:[input readString]];
        break;
      }
      case 48: {
        [self setClanIconId:[input readInt32]];
        break;
      }
      case 56: {
        [self setGemsSpent:[input readInt32]];
        break;
      }
      case 64: {
        [self setCashChange:[input readSInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (CreateClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (CreateClanRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (CreateClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (CreateClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (CreateClanRequestProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasTag {
  return result.hasTag;
}
- (NSString*) tag {
  return result.tag;
}
- (CreateClanRequestProto_Builder*) setTag:(NSString*) value {
  result.hasTag = YES;
  result.tag = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearTag {
  result.hasTag = NO;
  result.tag = @"";
  return self;
}
- (BOOL) hasRequestToJoinClanRequired {
  return result.hasRequestToJoinClanRequired;
}
- (BOOL) requestToJoinClanRequired {
  return result.requestToJoinClanRequired;
}
- (CreateClanRequestProto_Builder*) setRequestToJoinClanRequired:(BOOL) value {
  result.hasRequestToJoinClanRequired = YES;
  result.requestToJoinClanRequired = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearRequestToJoinClanRequired {
  result.hasRequestToJoinClanRequired = NO;
  result.requestToJoinClanRequired = NO;
  return self;
}
- (BOOL) hasDescription {
  return result.hasDescription;
}
- (NSString*) description {
  return result.description;
}
- (CreateClanRequestProto_Builder*) setDescription:(NSString*) value {
  result.hasDescription = YES;
  result.description = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearDescription {
  result.hasDescription = NO;
  result.description = @"";
  return self;
}
- (BOOL) hasClanIconId {
  return result.hasClanIconId;
}
- (int32_t) clanIconId {
  return result.clanIconId;
}
- (CreateClanRequestProto_Builder*) setClanIconId:(int32_t) value {
  result.hasClanIconId = YES;
  result.clanIconId = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearClanIconId {
  result.hasClanIconId = NO;
  result.clanIconId = 0;
  return self;
}
- (BOOL) hasGemsSpent {
  return result.hasGemsSpent;
}
- (int32_t) gemsSpent {
  return result.gemsSpent;
}
- (CreateClanRequestProto_Builder*) setGemsSpent:(int32_t) value {
  result.hasGemsSpent = YES;
  result.gemsSpent = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearGemsSpent {
  result.hasGemsSpent = NO;
  result.gemsSpent = 0;
  return self;
}
- (BOOL) hasCashChange {
  return result.hasCashChange;
}
- (int32_t) cashChange {
  return result.cashChange;
}
- (CreateClanRequestProto_Builder*) setCashChange:(int32_t) value {
  result.hasCashChange = YES;
  result.cashChange = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearCashChange {
  result.hasCashChange = NO;
  result.cashChange = 0;
  return self;
}
@end

@interface CreateClanResponseProto ()
@property (strong) MinimumUserProto* sender;
@property CreateClanResponseProto_CreateClanStatus status;
@property (strong) MinimumClanProto* clanInfo;
@end

@implementation CreateClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasClanInfo {
  return !!hasClanInfo_;
}
- (void) setHasClanInfo:(BOOL) value_ {
  hasClanInfo_ = !!value_;
}
@synthesize clanInfo;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = CreateClanResponseProto_CreateClanStatusSuccess;
    self.clanInfo = [MinimumClanProto defaultInstance];
  }
  return self;
}
static CreateClanResponseProto* defaultCreateClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [CreateClanResponseProto class]) {
    defaultCreateClanResponseProtoInstance = [[CreateClanResponseProto alloc] init];
  }
}
+ (CreateClanResponseProto*) defaultInstance {
  return defaultCreateClanResponseProtoInstance;
}
- (CreateClanResponseProto*) defaultInstance {
  return defaultCreateClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasClanInfo) {
    [output writeMessage:3 value:self.clanInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  if (self.hasClanInfo) {
    size_ += computeMessageSize(3, self.clanInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CreateClanResponseProto*) parseFromData:(NSData*) data {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromData:data] build];
}
+ (CreateClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CreateClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (CreateClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (CreateClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateClanResponseProto_Builder*) builder {
  return [[CreateClanResponseProto_Builder alloc] init];
}
+ (CreateClanResponseProto_Builder*) builderWithPrototype:(CreateClanResponseProto*) prototype {
  return [[CreateClanResponseProto builder] mergeFrom:prototype];
}
- (CreateClanResponseProto_Builder*) builder {
  return [CreateClanResponseProto builder];
}
- (CreateClanResponseProto_Builder*) toBuilder {
  return [CreateClanResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasClanInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanInfo"];
    [self.clanInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CreateClanResponseProto class]]) {
    return NO;
  }
  CreateClanResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasClanInfo == otherMessage.hasClanInfo &&
      (!self.hasClanInfo || [self.clanInfo isEqual:otherMessage.clanInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasClanInfo) {
    hashCode = hashCode * 31 + [self.clanInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL CreateClanResponseProto_CreateClanStatusIsValidValue(CreateClanResponseProto_CreateClanStatus value) {
  switch (value) {
    case CreateClanResponseProto_CreateClanStatusSuccess:
    case CreateClanResponseProto_CreateClanStatusFailOther:
    case CreateClanResponseProto_CreateClanStatusFailNotEnoughCash:
    case CreateClanResponseProto_CreateClanStatusFailNameTaken:
    case CreateClanResponseProto_CreateClanStatusFailAlreadyInClan:
    case CreateClanResponseProto_CreateClanStatusFailInvalidTagLength:
    case CreateClanResponseProto_CreateClanStatusFailTagTaken:
    case CreateClanResponseProto_CreateClanStatusFailInsufficientFunds:
      return YES;
    default:
      return NO;
  }
}
@interface CreateClanResponseProto_Builder()
@property (strong) CreateClanResponseProto* result;
@end

@implementation CreateClanResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[CreateClanResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CreateClanResponseProto_Builder*) clear {
  self.result = [[CreateClanResponseProto alloc] init];
  return self;
}
- (CreateClanResponseProto_Builder*) clone {
  return [CreateClanResponseProto builderWithPrototype:result];
}
- (CreateClanResponseProto*) defaultInstance {
  return [CreateClanResponseProto defaultInstance];
}
- (CreateClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CreateClanResponseProto*) buildPartial {
  CreateClanResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (CreateClanResponseProto_Builder*) mergeFrom:(CreateClanResponseProto*) other {
  if (other == [CreateClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasClanInfo) {
    [self mergeClanInfo:other.clanInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CreateClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CreateClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        CreateClanResponseProto_CreateClanStatus value = (CreateClanResponseProto_CreateClanStatus)[input readEnum];
        if (CreateClanResponseProto_CreateClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasClanInfo) {
          [subBuilder mergeFrom:self.clanInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClanInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (CreateClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (CreateClanResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (CreateClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (CreateClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (CreateClanResponseProto_CreateClanStatus) status {
  return result.status;
}
- (CreateClanResponseProto_Builder*) setStatus:(CreateClanResponseProto_CreateClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (CreateClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = CreateClanResponseProto_CreateClanStatusSuccess;
  return self;
}
- (BOOL) hasClanInfo {
  return result.hasClanInfo;
}
- (MinimumClanProto*) clanInfo {
  return result.clanInfo;
}
- (CreateClanResponseProto_Builder*) setClanInfo:(MinimumClanProto*) value {
  result.hasClanInfo = YES;
  result.clanInfo = value;
  return self;
}
- (CreateClanResponseProto_Builder*) setClanInfo_Builder:(MinimumClanProto_Builder*) builderForValue {
  return [self setClanInfo:[builderForValue build]];
}
- (CreateClanResponseProto_Builder*) mergeClanInfo:(MinimumClanProto*) value {
  if (result.hasClanInfo &&
      result.clanInfo != [MinimumClanProto defaultInstance]) {
    result.clanInfo =
      [[[MinimumClanProto builderWithPrototype:result.clanInfo] mergeFrom:value] buildPartial];
  } else {
    result.clanInfo = value;
  }
  result.hasClanInfo = YES;
  return self;
}
- (CreateClanResponseProto_Builder*) clearClanInfo {
  result.hasClanInfo = NO;
  result.clanInfo = [MinimumClanProto defaultInstance];
  return self;
}
@end

@interface LeaveClanRequestProto ()
@property (strong) MinimumUserProto* sender;
@end

@implementation LeaveClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
  }
  return self;
}
static LeaveClanRequestProto* defaultLeaveClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [LeaveClanRequestProto class]) {
    defaultLeaveClanRequestProtoInstance = [[LeaveClanRequestProto alloc] init];
  }
}
+ (LeaveClanRequestProto*) defaultInstance {
  return defaultLeaveClanRequestProtoInstance;
}
- (LeaveClanRequestProto*) defaultInstance {
  return defaultLeaveClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LeaveClanRequestProto*) parseFromData:(NSData*) data {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromData:data] build];
}
+ (LeaveClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (LeaveClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (LeaveClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanRequestProto_Builder*) builder {
  return [[LeaveClanRequestProto_Builder alloc] init];
}
+ (LeaveClanRequestProto_Builder*) builderWithPrototype:(LeaveClanRequestProto*) prototype {
  return [[LeaveClanRequestProto builder] mergeFrom:prototype];
}
- (LeaveClanRequestProto_Builder*) builder {
  return [LeaveClanRequestProto builder];
}
- (LeaveClanRequestProto_Builder*) toBuilder {
  return [LeaveClanRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LeaveClanRequestProto class]]) {
    return NO;
  }
  LeaveClanRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface LeaveClanRequestProto_Builder()
@property (strong) LeaveClanRequestProto* result;
@end

@implementation LeaveClanRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[LeaveClanRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LeaveClanRequestProto_Builder*) clear {
  self.result = [[LeaveClanRequestProto alloc] init];
  return self;
}
- (LeaveClanRequestProto_Builder*) clone {
  return [LeaveClanRequestProto builderWithPrototype:result];
}
- (LeaveClanRequestProto*) defaultInstance {
  return [LeaveClanRequestProto defaultInstance];
}
- (LeaveClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LeaveClanRequestProto*) buildPartial {
  LeaveClanRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (LeaveClanRequestProto_Builder*) mergeFrom:(LeaveClanRequestProto*) other {
  if (other == [LeaveClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LeaveClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LeaveClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (LeaveClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (LeaveClanRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (LeaveClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (LeaveClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
@end

@interface LeaveClanResponseProto ()
@property (strong) MinimumUserProto* sender;
@property LeaveClanResponseProto_LeaveClanStatus status;
@end

@implementation LeaveClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = LeaveClanResponseProto_LeaveClanStatusSuccess;
  }
  return self;
}
static LeaveClanResponseProto* defaultLeaveClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [LeaveClanResponseProto class]) {
    defaultLeaveClanResponseProtoInstance = [[LeaveClanResponseProto alloc] init];
  }
}
+ (LeaveClanResponseProto*) defaultInstance {
  return defaultLeaveClanResponseProtoInstance;
}
- (LeaveClanResponseProto*) defaultInstance {
  return defaultLeaveClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LeaveClanResponseProto*) parseFromData:(NSData*) data {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromData:data] build];
}
+ (LeaveClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (LeaveClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (LeaveClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanResponseProto_Builder*) builder {
  return [[LeaveClanResponseProto_Builder alloc] init];
}
+ (LeaveClanResponseProto_Builder*) builderWithPrototype:(LeaveClanResponseProto*) prototype {
  return [[LeaveClanResponseProto builder] mergeFrom:prototype];
}
- (LeaveClanResponseProto_Builder*) builder {
  return [LeaveClanResponseProto builder];
}
- (LeaveClanResponseProto_Builder*) toBuilder {
  return [LeaveClanResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LeaveClanResponseProto class]]) {
    return NO;
  }
  LeaveClanResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL LeaveClanResponseProto_LeaveClanStatusIsValidValue(LeaveClanResponseProto_LeaveClanStatus value) {
  switch (value) {
    case LeaveClanResponseProto_LeaveClanStatusSuccess:
    case LeaveClanResponseProto_LeaveClanStatusFailOther:
    case LeaveClanResponseProto_LeaveClanStatusFailNotInClan:
    case LeaveClanResponseProto_LeaveClanStatusFailOwnerOfClanWithOthersStillIn:
      return YES;
    default:
      return NO;
  }
}
@interface LeaveClanResponseProto_Builder()
@property (strong) LeaveClanResponseProto* result;
@end

@implementation LeaveClanResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[LeaveClanResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LeaveClanResponseProto_Builder*) clear {
  self.result = [[LeaveClanResponseProto alloc] init];
  return self;
}
- (LeaveClanResponseProto_Builder*) clone {
  return [LeaveClanResponseProto builderWithPrototype:result];
}
- (LeaveClanResponseProto*) defaultInstance {
  return [LeaveClanResponseProto defaultInstance];
}
- (LeaveClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LeaveClanResponseProto*) buildPartial {
  LeaveClanResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (LeaveClanResponseProto_Builder*) mergeFrom:(LeaveClanResponseProto*) other {
  if (other == [LeaveClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LeaveClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LeaveClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        LeaveClanResponseProto_LeaveClanStatus value = (LeaveClanResponseProto_LeaveClanStatus)[input readEnum];
        if (LeaveClanResponseProto_LeaveClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (LeaveClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (LeaveClanResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (LeaveClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (LeaveClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (LeaveClanResponseProto_LeaveClanStatus) status {
  return result.status;
}
- (LeaveClanResponseProto_Builder*) setStatus:(LeaveClanResponseProto_LeaveClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (LeaveClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = LeaveClanResponseProto_LeaveClanStatusSuccess;
  return self;
}
@end

@interface RequestJoinClanRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSString* clanUuid;
@property int64_t clientTime;
@end

@implementation RequestJoinClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasClanUuid {
  return !!hasClanUuid_;
}
- (void) setHasClanUuid:(BOOL) value_ {
  hasClanUuid_ = !!value_;
}
@synthesize clanUuid;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clanUuid = @"";
    self.clientTime = 0L;
  }
  return self;
}
static RequestJoinClanRequestProto* defaultRequestJoinClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RequestJoinClanRequestProto class]) {
    defaultRequestJoinClanRequestProtoInstance = [[RequestJoinClanRequestProto alloc] init];
  }
}
+ (RequestJoinClanRequestProto*) defaultInstance {
  return defaultRequestJoinClanRequestProtoInstance;
}
- (RequestJoinClanRequestProto*) defaultInstance {
  return defaultRequestJoinClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClanUuid) {
    [output writeString:2 value:self.clanUuid];
  }
  if (self.hasClientTime) {
    [output writeInt64:3 value:self.clientTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasClanUuid) {
    size_ += computeStringSize(2, self.clanUuid);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(3, self.clientTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RequestJoinClanRequestProto*) parseFromData:(NSData*) data {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromData:data] build];
}
+ (RequestJoinClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (RequestJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RequestJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanRequestProto_Builder*) builder {
  return [[RequestJoinClanRequestProto_Builder alloc] init];
}
+ (RequestJoinClanRequestProto_Builder*) builderWithPrototype:(RequestJoinClanRequestProto*) prototype {
  return [[RequestJoinClanRequestProto builder] mergeFrom:prototype];
}
- (RequestJoinClanRequestProto_Builder*) builder {
  return [RequestJoinClanRequestProto builder];
}
- (RequestJoinClanRequestProto_Builder*) toBuilder {
  return [RequestJoinClanRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClanUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanUuid", self.clanUuid];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RequestJoinClanRequestProto class]]) {
    return NO;
  }
  RequestJoinClanRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasClanUuid == otherMessage.hasClanUuid &&
      (!self.hasClanUuid || [self.clanUuid isEqual:otherMessage.clanUuid]) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasClanUuid) {
    hashCode = hashCode * 31 + [self.clanUuid hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RequestJoinClanRequestProto_Builder()
@property (strong) RequestJoinClanRequestProto* result;
@end

@implementation RequestJoinClanRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RequestJoinClanRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RequestJoinClanRequestProto_Builder*) clear {
  self.result = [[RequestJoinClanRequestProto alloc] init];
  return self;
}
- (RequestJoinClanRequestProto_Builder*) clone {
  return [RequestJoinClanRequestProto builderWithPrototype:result];
}
- (RequestJoinClanRequestProto*) defaultInstance {
  return [RequestJoinClanRequestProto defaultInstance];
}
- (RequestJoinClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RequestJoinClanRequestProto*) buildPartial {
  RequestJoinClanRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RequestJoinClanRequestProto_Builder*) mergeFrom:(RequestJoinClanRequestProto*) other {
  if (other == [RequestJoinClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClanUuid) {
    [self setClanUuid:other.clanUuid];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RequestJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RequestJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setClanUuid:[input readString]];
        break;
      }
      case 24: {
        [self setClientTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RequestJoinClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RequestJoinClanRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RequestJoinClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RequestJoinClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanUuid {
  return result.hasClanUuid;
}
- (NSString*) clanUuid {
  return result.clanUuid;
}
- (RequestJoinClanRequestProto_Builder*) setClanUuid:(NSString*) value {
  result.hasClanUuid = YES;
  result.clanUuid = value;
  return self;
}
- (RequestJoinClanRequestProto_Builder*) clearClanUuid {
  result.hasClanUuid = NO;
  result.clanUuid = @"";
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (RequestJoinClanRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (RequestJoinClanRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
@end

@interface RequestJoinClanResponseProto ()
@property (strong) MinimumUserProto* sender;
@property RequestJoinClanResponseProto_RequestJoinClanStatus status;
@property (strong) NSString* clanUuid;
@property (strong) MinimumUserProtoForClans* requester;
@property (strong) MinimumClanProto* minClan;
@property (strong) FullClanProtoWithClanSize* fullClan;
@property (strong) PersistentClanEventClanInfoProto* eventDetails;
@property (strong) NSMutableArray * mutableClanUsersDetailsList;
@property (strong) UserCurrentMonsterTeamProto* requesterMonsters;
@property int64_t clientTime;
@end

@implementation RequestJoinClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasClanUuid {
  return !!hasClanUuid_;
}
- (void) setHasClanUuid:(BOOL) value_ {
  hasClanUuid_ = !!value_;
}
@synthesize clanUuid;
- (BOOL) hasRequester {
  return !!hasRequester_;
}
- (void) setHasRequester:(BOOL) value_ {
  hasRequester_ = !!value_;
}
@synthesize requester;
- (BOOL) hasMinClan {
  return !!hasMinClan_;
}
- (void) setHasMinClan:(BOOL) value_ {
  hasMinClan_ = !!value_;
}
@synthesize minClan;
- (BOOL) hasFullClan {
  return !!hasFullClan_;
}
- (void) setHasFullClan:(BOOL) value_ {
  hasFullClan_ = !!value_;
}
@synthesize fullClan;
- (BOOL) hasEventDetails {
  return !!hasEventDetails_;
}
- (void) setHasEventDetails:(BOOL) value_ {
  hasEventDetails_ = !!value_;
}
@synthesize eventDetails;
@synthesize mutableClanUsersDetailsList;
@dynamic clanUsersDetailsList;
- (BOOL) hasRequesterMonsters {
  return !!hasRequesterMonsters_;
}
- (void) setHasRequesterMonsters:(BOOL) value_ {
  hasRequesterMonsters_ = !!value_;
}
@synthesize requesterMonsters;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = RequestJoinClanResponseProto_RequestJoinClanStatusSuccessRequest;
    self.clanUuid = @"";
    self.requester = [MinimumUserProtoForClans defaultInstance];
    self.minClan = [MinimumClanProto defaultInstance];
    self.fullClan = [FullClanProtoWithClanSize defaultInstance];
    self.eventDetails = [PersistentClanEventClanInfoProto defaultInstance];
    self.requesterMonsters = [UserCurrentMonsterTeamProto defaultInstance];
    self.clientTime = 0L;
  }
  return self;
}
static RequestJoinClanResponseProto* defaultRequestJoinClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RequestJoinClanResponseProto class]) {
    defaultRequestJoinClanResponseProtoInstance = [[RequestJoinClanResponseProto alloc] init];
  }
}
+ (RequestJoinClanResponseProto*) defaultInstance {
  return defaultRequestJoinClanResponseProtoInstance;
}
- (RequestJoinClanResponseProto*) defaultInstance {
  return defaultRequestJoinClanResponseProtoInstance;
}
- (NSArray *)clanUsersDetailsList {
  return mutableClanUsersDetailsList;
}
- (PersistentClanEventUserInfoProto*)clanUsersDetailsAtIndex:(NSUInteger)index {
  return [mutableClanUsersDetailsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasClanUuid) {
    [output writeString:3 value:self.clanUuid];
  }
  if (self.hasRequester) {
    [output writeMessage:4 value:self.requester];
  }
  if (self.hasMinClan) {
    [output writeMessage:5 value:self.minClan];
  }
  if (self.hasFullClan) {
    [output writeMessage:6 value:self.fullClan];
  }
  if (self.hasEventDetails) {
    [output writeMessage:7 value:self.eventDetails];
  }
  [self.clanUsersDetailsList enumerateObjectsUsingBlock:^(PersistentClanEventUserInfoProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:8 value:element];
  }];
  if (self.hasRequesterMonsters) {
    [output writeMessage:9 value:self.requesterMonsters];
  }
  if (self.hasClientTime) {
    [output writeInt64:10 value:self.clientTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  if (self.hasClanUuid) {
    size_ += computeStringSize(3, self.clanUuid);
  }
  if (self.hasRequester) {
    size_ += computeMessageSize(4, self.requester);
  }
  if (self.hasMinClan) {
    size_ += computeMessageSize(5, self.minClan);
  }
  if (self.hasFullClan) {
    size_ += computeMessageSize(6, self.fullClan);
  }
  if (self.hasEventDetails) {
    size_ += computeMessageSize(7, self.eventDetails);
  }
  [self.clanUsersDetailsList enumerateObjectsUsingBlock:^(PersistentClanEventUserInfoProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(8, element);
  }];
  if (self.hasRequesterMonsters) {
    size_ += computeMessageSize(9, self.requesterMonsters);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(10, self.clientTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RequestJoinClanResponseProto*) parseFromData:(NSData*) data {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromData:data] build];
}
+ (RequestJoinClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (RequestJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RequestJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanResponseProto_Builder*) builder {
  return [[RequestJoinClanResponseProto_Builder alloc] init];
}
+ (RequestJoinClanResponseProto_Builder*) builderWithPrototype:(RequestJoinClanResponseProto*) prototype {
  return [[RequestJoinClanResponseProto builder] mergeFrom:prototype];
}
- (RequestJoinClanResponseProto_Builder*) builder {
  return [RequestJoinClanResponseProto builder];
}
- (RequestJoinClanResponseProto_Builder*) toBuilder {
  return [RequestJoinClanResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasClanUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanUuid", self.clanUuid];
  }
  if (self.hasRequester) {
    [output appendFormat:@"%@%@ {\n", indent, @"requester"];
    [self.requester writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMinClan) {
    [output appendFormat:@"%@%@ {\n", indent, @"minClan"];
    [self.minClan writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasFullClan) {
    [output appendFormat:@"%@%@ {\n", indent, @"fullClan"];
    [self.fullClan writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasEventDetails) {
    [output appendFormat:@"%@%@ {\n", indent, @"eventDetails"];
    [self.eventDetails writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.clanUsersDetailsList enumerateObjectsUsingBlock:^(PersistentClanEventUserInfoProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanUsersDetails"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasRequesterMonsters) {
    [output appendFormat:@"%@%@ {\n", indent, @"requesterMonsters"];
    [self.requesterMonsters writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RequestJoinClanResponseProto class]]) {
    return NO;
  }
  RequestJoinClanResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasClanUuid == otherMessage.hasClanUuid &&
      (!self.hasClanUuid || [self.clanUuid isEqual:otherMessage.clanUuid]) &&
      self.hasRequester == otherMessage.hasRequester &&
      (!self.hasRequester || [self.requester isEqual:otherMessage.requester]) &&
      self.hasMinClan == otherMessage.hasMinClan &&
      (!self.hasMinClan || [self.minClan isEqual:otherMessage.minClan]) &&
      self.hasFullClan == otherMessage.hasFullClan &&
      (!self.hasFullClan || [self.fullClan isEqual:otherMessage.fullClan]) &&
      self.hasEventDetails == otherMessage.hasEventDetails &&
      (!self.hasEventDetails || [self.eventDetails isEqual:otherMessage.eventDetails]) &&
      [self.clanUsersDetailsList isEqualToArray:otherMessage.clanUsersDetailsList] &&
      self.hasRequesterMonsters == otherMessage.hasRequesterMonsters &&
      (!self.hasRequesterMonsters || [self.requesterMonsters isEqual:otherMessage.requesterMonsters]) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasClanUuid) {
    hashCode = hashCode * 31 + [self.clanUuid hash];
  }
  if (self.hasRequester) {
    hashCode = hashCode * 31 + [self.requester hash];
  }
  if (self.hasMinClan) {
    hashCode = hashCode * 31 + [self.minClan hash];
  }
  if (self.hasFullClan) {
    hashCode = hashCode * 31 + [self.fullClan hash];
  }
  if (self.hasEventDetails) {
    hashCode = hashCode * 31 + [self.eventDetails hash];
  }
  [self.clanUsersDetailsList enumerateObjectsUsingBlock:^(PersistentClanEventUserInfoProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasRequesterMonsters) {
    hashCode = hashCode * 31 + [self.requesterMonsters hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL RequestJoinClanResponseProto_RequestJoinClanStatusIsValidValue(RequestJoinClanResponseProto_RequestJoinClanStatus value) {
  switch (value) {
    case RequestJoinClanResponseProto_RequestJoinClanStatusSuccessRequest:
    case RequestJoinClanResponseProto_RequestJoinClanStatusSuccessJoin:
    case RequestJoinClanResponseProto_RequestJoinClanStatusFailAlreadyInClan:
    case RequestJoinClanResponseProto_RequestJoinClanStatusFailRequestAlreadyFiled:
    case RequestJoinClanResponseProto_RequestJoinClanStatusFailClanIsFull:
    case RequestJoinClanResponseProto_RequestJoinClanStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface RequestJoinClanResponseProto_Builder()
@property (strong) RequestJoinClanResponseProto* result;
@end

@implementation RequestJoinClanResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RequestJoinClanResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RequestJoinClanResponseProto_Builder*) clear {
  self.result = [[RequestJoinClanResponseProto alloc] init];
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clone {
  return [RequestJoinClanResponseProto builderWithPrototype:result];
}
- (RequestJoinClanResponseProto*) defaultInstance {
  return [RequestJoinClanResponseProto defaultInstance];
}
- (RequestJoinClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RequestJoinClanResponseProto*) buildPartial {
  RequestJoinClanResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RequestJoinClanResponseProto_Builder*) mergeFrom:(RequestJoinClanResponseProto*) other {
  if (other == [RequestJoinClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasClanUuid) {
    [self setClanUuid:other.clanUuid];
  }
  if (other.hasRequester) {
    [self mergeRequester:other.requester];
  }
  if (other.hasMinClan) {
    [self mergeMinClan:other.minClan];
  }
  if (other.hasFullClan) {
    [self mergeFullClan:other.fullClan];
  }
  if (other.hasEventDetails) {
    [self mergeEventDetails:other.eventDetails];
  }
  if (other.mutableClanUsersDetailsList.count > 0) {
    if (result.mutableClanUsersDetailsList == nil) {
      result.mutableClanUsersDetailsList = [[NSMutableArray alloc] initWithArray:other.mutableClanUsersDetailsList];
    } else {
      [result.mutableClanUsersDetailsList addObjectsFromArray:other.mutableClanUsersDetailsList];
    }
  }
  if (other.hasRequesterMonsters) {
    [self mergeRequesterMonsters:other.requesterMonsters];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RequestJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RequestJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        RequestJoinClanResponseProto_RequestJoinClanStatus value = (RequestJoinClanResponseProto_RequestJoinClanStatus)[input readEnum];
        if (RequestJoinClanResponseProto_RequestJoinClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setClanUuid:[input readString]];
        break;
      }
      case 34: {
        MinimumUserProtoForClans_Builder* subBuilder = [MinimumUserProtoForClans builder];
        if (self.hasRequester) {
          [subBuilder mergeFrom:self.requester];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRequester:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasMinClan) {
          [subBuilder mergeFrom:self.minClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinClan:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        if (self.hasFullClan) {
          [subBuilder mergeFrom:self.fullClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFullClan:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        PersistentClanEventClanInfoProto_Builder* subBuilder = [PersistentClanEventClanInfoProto builder];
        if (self.hasEventDetails) {
          [subBuilder mergeFrom:self.eventDetails];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEventDetails:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        PersistentClanEventUserInfoProto_Builder* subBuilder = [PersistentClanEventUserInfoProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanUsersDetails:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        UserCurrentMonsterTeamProto_Builder* subBuilder = [UserCurrentMonsterTeamProto builder];
        if (self.hasRequesterMonsters) {
          [subBuilder mergeFrom:self.requesterMonsters];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRequesterMonsters:[subBuilder buildPartial]];
        break;
      }
      case 80: {
        [self setClientTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RequestJoinClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RequestJoinClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RequestJoinClanResponseProto_RequestJoinClanStatus) status {
  return result.status;
}
- (RequestJoinClanResponseProto_Builder*) setStatus:(RequestJoinClanResponseProto_RequestJoinClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = RequestJoinClanResponseProto_RequestJoinClanStatusSuccessRequest;
  return self;
}
- (BOOL) hasClanUuid {
  return result.hasClanUuid;
}
- (NSString*) clanUuid {
  return result.clanUuid;
}
- (RequestJoinClanResponseProto_Builder*) setClanUuid:(NSString*) value {
  result.hasClanUuid = YES;
  result.clanUuid = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearClanUuid {
  result.hasClanUuid = NO;
  result.clanUuid = @"";
  return self;
}
- (BOOL) hasRequester {
  return result.hasRequester;
}
- (MinimumUserProtoForClans*) requester {
  return result.requester;
}
- (RequestJoinClanResponseProto_Builder*) setRequester:(MinimumUserProtoForClans*) value {
  result.hasRequester = YES;
  result.requester = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) setRequester_Builder:(MinimumUserProtoForClans_Builder*) builderForValue {
  return [self setRequester:[builderForValue build]];
}
- (RequestJoinClanResponseProto_Builder*) mergeRequester:(MinimumUserProtoForClans*) value {
  if (result.hasRequester &&
      result.requester != [MinimumUserProtoForClans defaultInstance]) {
    result.requester =
      [[[MinimumUserProtoForClans builderWithPrototype:result.requester] mergeFrom:value] buildPartial];
  } else {
    result.requester = value;
  }
  result.hasRequester = YES;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearRequester {
  result.hasRequester = NO;
  result.requester = [MinimumUserProtoForClans defaultInstance];
  return self;
}
- (BOOL) hasMinClan {
  return result.hasMinClan;
}
- (MinimumClanProto*) minClan {
  return result.minClan;
}
- (RequestJoinClanResponseProto_Builder*) setMinClan:(MinimumClanProto*) value {
  result.hasMinClan = YES;
  result.minClan = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) setMinClan_Builder:(MinimumClanProto_Builder*) builderForValue {
  return [self setMinClan:[builderForValue build]];
}
- (RequestJoinClanResponseProto_Builder*) mergeMinClan:(MinimumClanProto*) value {
  if (result.hasMinClan &&
      result.minClan != [MinimumClanProto defaultInstance]) {
    result.minClan =
      [[[MinimumClanProto builderWithPrototype:result.minClan] mergeFrom:value] buildPartial];
  } else {
    result.minClan = value;
  }
  result.hasMinClan = YES;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearMinClan {
  result.hasMinClan = NO;
  result.minClan = [MinimumClanProto defaultInstance];
  return self;
}
- (BOOL) hasFullClan {
  return result.hasFullClan;
}
- (FullClanProtoWithClanSize*) fullClan {
  return result.fullClan;
}
- (RequestJoinClanResponseProto_Builder*) setFullClan:(FullClanProtoWithClanSize*) value {
  result.hasFullClan = YES;
  result.fullClan = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) setFullClan_Builder:(FullClanProtoWithClanSize_Builder*) builderForValue {
  return [self setFullClan:[builderForValue build]];
}
- (RequestJoinClanResponseProto_Builder*) mergeFullClan:(FullClanProtoWithClanSize*) value {
  if (result.hasFullClan &&
      result.fullClan != [FullClanProtoWithClanSize defaultInstance]) {
    result.fullClan =
      [[[FullClanProtoWithClanSize builderWithPrototype:result.fullClan] mergeFrom:value] buildPartial];
  } else {
    result.fullClan = value;
  }
  result.hasFullClan = YES;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearFullClan {
  result.hasFullClan = NO;
  result.fullClan = [FullClanProtoWithClanSize defaultInstance];
  return self;
}
- (BOOL) hasEventDetails {
  return result.hasEventDetails;
}
- (PersistentClanEventClanInfoProto*) eventDetails {
  return result.eventDetails;
}
- (RequestJoinClanResponseProto_Builder*) setEventDetails:(PersistentClanEventClanInfoProto*) value {
  result.hasEventDetails = YES;
  result.eventDetails = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) setEventDetails_Builder:(PersistentClanEventClanInfoProto_Builder*) builderForValue {
  return [self setEventDetails:[builderForValue build]];
}
- (RequestJoinClanResponseProto_Builder*) mergeEventDetails:(PersistentClanEventClanInfoProto*) value {
  if (result.hasEventDetails &&
      result.eventDetails != [PersistentClanEventClanInfoProto defaultInstance]) {
    result.eventDetails =
      [[[PersistentClanEventClanInfoProto builderWithPrototype:result.eventDetails] mergeFrom:value] buildPartial];
  } else {
    result.eventDetails = value;
  }
  result.hasEventDetails = YES;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearEventDetails {
  result.hasEventDetails = NO;
  result.eventDetails = [PersistentClanEventClanInfoProto defaultInstance];
  return self;
}
- (NSMutableArray *)clanUsersDetailsList {
  return result.mutableClanUsersDetailsList;
}
- (PersistentClanEventUserInfoProto*)clanUsersDetailsAtIndex:(NSUInteger)index {
  return [result clanUsersDetailsAtIndex:index];
}
- (RequestJoinClanResponseProto_Builder *)addClanUsersDetails:(PersistentClanEventUserInfoProto*)value {
  if (result.mutableClanUsersDetailsList == nil) {
    result.mutableClanUsersDetailsList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanUsersDetailsList addObject:value];
  return self;
}
- (RequestJoinClanResponseProto_Builder *)addAllClanUsersDetails:(NSArray *)array {
  if (result.mutableClanUsersDetailsList == nil) {
    result.mutableClanUsersDetailsList = [NSMutableArray array];
  }
  [result.mutableClanUsersDetailsList addObjectsFromArray:array];
  return self;
}
- (RequestJoinClanResponseProto_Builder *)clearClanUsersDetails {
  result.mutableClanUsersDetailsList = nil;
  return self;
}
- (BOOL) hasRequesterMonsters {
  return result.hasRequesterMonsters;
}
- (UserCurrentMonsterTeamProto*) requesterMonsters {
  return result.requesterMonsters;
}
- (RequestJoinClanResponseProto_Builder*) setRequesterMonsters:(UserCurrentMonsterTeamProto*) value {
  result.hasRequesterMonsters = YES;
  result.requesterMonsters = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) setRequesterMonsters_Builder:(UserCurrentMonsterTeamProto_Builder*) builderForValue {
  return [self setRequesterMonsters:[builderForValue build]];
}
- (RequestJoinClanResponseProto_Builder*) mergeRequesterMonsters:(UserCurrentMonsterTeamProto*) value {
  if (result.hasRequesterMonsters &&
      result.requesterMonsters != [UserCurrentMonsterTeamProto defaultInstance]) {
    result.requesterMonsters =
      [[[UserCurrentMonsterTeamProto builderWithPrototype:result.requesterMonsters] mergeFrom:value] buildPartial];
  } else {
    result.requesterMonsters = value;
  }
  result.hasRequesterMonsters = YES;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearRequesterMonsters {
  result.hasRequesterMonsters = NO;
  result.requesterMonsters = [UserCurrentMonsterTeamProto defaultInstance];
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (RequestJoinClanResponseProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
@end

@interface RetractRequestJoinClanRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSString* clanUuid;
@end

@implementation RetractRequestJoinClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasClanUuid {
  return !!hasClanUuid_;
}
- (void) setHasClanUuid:(BOOL) value_ {
  hasClanUuid_ = !!value_;
}
@synthesize clanUuid;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clanUuid = @"";
  }
  return self;
}
static RetractRequestJoinClanRequestProto* defaultRetractRequestJoinClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RetractRequestJoinClanRequestProto class]) {
    defaultRetractRequestJoinClanRequestProtoInstance = [[RetractRequestJoinClanRequestProto alloc] init];
  }
}
+ (RetractRequestJoinClanRequestProto*) defaultInstance {
  return defaultRetractRequestJoinClanRequestProtoInstance;
}
- (RetractRequestJoinClanRequestProto*) defaultInstance {
  return defaultRetractRequestJoinClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClanUuid) {
    [output writeString:2 value:self.clanUuid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasClanUuid) {
    size_ += computeStringSize(2, self.clanUuid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RetractRequestJoinClanRequestProto*) parseFromData:(NSData*) data {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromData:data] build];
}
+ (RetractRequestJoinClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (RetractRequestJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetractRequestJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanRequestProto_Builder*) builder {
  return [[RetractRequestJoinClanRequestProto_Builder alloc] init];
}
+ (RetractRequestJoinClanRequestProto_Builder*) builderWithPrototype:(RetractRequestJoinClanRequestProto*) prototype {
  return [[RetractRequestJoinClanRequestProto builder] mergeFrom:prototype];
}
- (RetractRequestJoinClanRequestProto_Builder*) builder {
  return [RetractRequestJoinClanRequestProto builder];
}
- (RetractRequestJoinClanRequestProto_Builder*) toBuilder {
  return [RetractRequestJoinClanRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClanUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanUuid", self.clanUuid];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RetractRequestJoinClanRequestProto class]]) {
    return NO;
  }
  RetractRequestJoinClanRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasClanUuid == otherMessage.hasClanUuid &&
      (!self.hasClanUuid || [self.clanUuid isEqual:otherMessage.clanUuid]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasClanUuid) {
    hashCode = hashCode * 31 + [self.clanUuid hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RetractRequestJoinClanRequestProto_Builder()
@property (strong) RetractRequestJoinClanRequestProto* result;
@end

@implementation RetractRequestJoinClanRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RetractRequestJoinClanRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetractRequestJoinClanRequestProto_Builder*) clear {
  self.result = [[RetractRequestJoinClanRequestProto alloc] init];
  return self;
}
- (RetractRequestJoinClanRequestProto_Builder*) clone {
  return [RetractRequestJoinClanRequestProto builderWithPrototype:result];
}
- (RetractRequestJoinClanRequestProto*) defaultInstance {
  return [RetractRequestJoinClanRequestProto defaultInstance];
}
- (RetractRequestJoinClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetractRequestJoinClanRequestProto*) buildPartial {
  RetractRequestJoinClanRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RetractRequestJoinClanRequestProto_Builder*) mergeFrom:(RetractRequestJoinClanRequestProto*) other {
  if (other == [RetractRequestJoinClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClanUuid) {
    [self setClanUuid:other.clanUuid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetractRequestJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetractRequestJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setClanUuid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RetractRequestJoinClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetractRequestJoinClanRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetractRequestJoinClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetractRequestJoinClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanUuid {
  return result.hasClanUuid;
}
- (NSString*) clanUuid {
  return result.clanUuid;
}
- (RetractRequestJoinClanRequestProto_Builder*) setClanUuid:(NSString*) value {
  result.hasClanUuid = YES;
  result.clanUuid = value;
  return self;
}
- (RetractRequestJoinClanRequestProto_Builder*) clearClanUuid {
  result.hasClanUuid = NO;
  result.clanUuid = @"";
  return self;
}
@end

@interface RetractRequestJoinClanResponseProto ()
@property (strong) MinimumUserProto* sender;
@property RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatus status;
@property (strong) NSString* clanUuid;
@end

@implementation RetractRequestJoinClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasClanUuid {
  return !!hasClanUuid_;
}
- (void) setHasClanUuid:(BOOL) value_ {
  hasClanUuid_ = !!value_;
}
@synthesize clanUuid;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusSuccess;
    self.clanUuid = @"";
  }
  return self;
}
static RetractRequestJoinClanResponseProto* defaultRetractRequestJoinClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RetractRequestJoinClanResponseProto class]) {
    defaultRetractRequestJoinClanResponseProtoInstance = [[RetractRequestJoinClanResponseProto alloc] init];
  }
}
+ (RetractRequestJoinClanResponseProto*) defaultInstance {
  return defaultRetractRequestJoinClanResponseProtoInstance;
}
- (RetractRequestJoinClanResponseProto*) defaultInstance {
  return defaultRetractRequestJoinClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasClanUuid) {
    [output writeString:3 value:self.clanUuid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  if (self.hasClanUuid) {
    size_ += computeStringSize(3, self.clanUuid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RetractRequestJoinClanResponseProto*) parseFromData:(NSData*) data {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromData:data] build];
}
+ (RetractRequestJoinClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (RetractRequestJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetractRequestJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanResponseProto_Builder*) builder {
  return [[RetractRequestJoinClanResponseProto_Builder alloc] init];
}
+ (RetractRequestJoinClanResponseProto_Builder*) builderWithPrototype:(RetractRequestJoinClanResponseProto*) prototype {
  return [[RetractRequestJoinClanResponseProto builder] mergeFrom:prototype];
}
- (RetractRequestJoinClanResponseProto_Builder*) builder {
  return [RetractRequestJoinClanResponseProto builder];
}
- (RetractRequestJoinClanResponseProto_Builder*) toBuilder {
  return [RetractRequestJoinClanResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasClanUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanUuid", self.clanUuid];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RetractRequestJoinClanResponseProto class]]) {
    return NO;
  }
  RetractRequestJoinClanResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasClanUuid == otherMessage.hasClanUuid &&
      (!self.hasClanUuid || [self.clanUuid isEqual:otherMessage.clanUuid]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasClanUuid) {
    hashCode = hashCode * 31 + [self.clanUuid hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusIsValidValue(RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatus value) {
  switch (value) {
    case RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusSuccess:
    case RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusFailOther:
    case RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusFailAlreadyInClan:
    case RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusFailDidNotRequest:
      return YES;
    default:
      return NO;
  }
}
@interface RetractRequestJoinClanResponseProto_Builder()
@property (strong) RetractRequestJoinClanResponseProto* result;
@end

@implementation RetractRequestJoinClanResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RetractRequestJoinClanResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetractRequestJoinClanResponseProto_Builder*) clear {
  self.result = [[RetractRequestJoinClanResponseProto alloc] init];
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) clone {
  return [RetractRequestJoinClanResponseProto builderWithPrototype:result];
}
- (RetractRequestJoinClanResponseProto*) defaultInstance {
  return [RetractRequestJoinClanResponseProto defaultInstance];
}
- (RetractRequestJoinClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetractRequestJoinClanResponseProto*) buildPartial {
  RetractRequestJoinClanResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RetractRequestJoinClanResponseProto_Builder*) mergeFrom:(RetractRequestJoinClanResponseProto*) other {
  if (other == [RetractRequestJoinClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasClanUuid) {
    [self setClanUuid:other.clanUuid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetractRequestJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatus value = (RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatus)[input readEnum];
        if (RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setClanUuid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RetractRequestJoinClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetractRequestJoinClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatus) status {
  return result.status;
}
- (RetractRequestJoinClanResponseProto_Builder*) setStatus:(RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusSuccess;
  return self;
}
- (BOOL) hasClanUuid {
  return result.hasClanUuid;
}
- (NSString*) clanUuid {
  return result.clanUuid;
}
- (RetractRequestJoinClanResponseProto_Builder*) setClanUuid:(NSString*) value {
  result.hasClanUuid = YES;
  result.clanUuid = value;
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) clearClanUuid {
  result.hasClanUuid = NO;
  result.clanUuid = @"";
  return self;
}
@end

@interface ApproveOrRejectRequestToJoinClanRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSString* requesterUuid;
@property BOOL accept;
@end

@implementation ApproveOrRejectRequestToJoinClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasRequesterUuid {
  return !!hasRequesterUuid_;
}
- (void) setHasRequesterUuid:(BOOL) value_ {
  hasRequesterUuid_ = !!value_;
}
@synthesize requesterUuid;
- (BOOL) hasAccept {
  return !!hasAccept_;
}
- (void) setHasAccept:(BOOL) value_ {
  hasAccept_ = !!value_;
}
- (BOOL) accept {
  return !!accept_;
}
- (void) setAccept:(BOOL) value_ {
  accept_ = !!value_;
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.requesterUuid = @"";
    self.accept = NO;
  }
  return self;
}
static ApproveOrRejectRequestToJoinClanRequestProto* defaultApproveOrRejectRequestToJoinClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [ApproveOrRejectRequestToJoinClanRequestProto class]) {
    defaultApproveOrRejectRequestToJoinClanRequestProtoInstance = [[ApproveOrRejectRequestToJoinClanRequestProto alloc] init];
  }
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) defaultInstance {
  return defaultApproveOrRejectRequestToJoinClanRequestProtoInstance;
}
- (ApproveOrRejectRequestToJoinClanRequestProto*) defaultInstance {
  return defaultApproveOrRejectRequestToJoinClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasRequesterUuid) {
    [output writeString:2 value:self.requesterUuid];
  }
  if (self.hasAccept) {
    [output writeBool:3 value:self.accept];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasRequesterUuid) {
    size_ += computeStringSize(2, self.requesterUuid);
  }
  if (self.hasAccept) {
    size_ += computeBoolSize(3, self.accept);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromData:(NSData*) data {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromData:data] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) builder {
  return [[ApproveOrRejectRequestToJoinClanRequestProto_Builder alloc] init];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) builderWithPrototype:(ApproveOrRejectRequestToJoinClanRequestProto*) prototype {
  return [[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFrom:prototype];
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) builder {
  return [ApproveOrRejectRequestToJoinClanRequestProto builder];
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) toBuilder {
  return [ApproveOrRejectRequestToJoinClanRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasRequesterUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"requesterUuid", self.requesterUuid];
  }
  if (self.hasAccept) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accept", [NSNumber numberWithBool:self.accept]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ApproveOrRejectRequestToJoinClanRequestProto class]]) {
    return NO;
  }
  ApproveOrRejectRequestToJoinClanRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasRequesterUuid == otherMessage.hasRequesterUuid &&
      (!self.hasRequesterUuid || [self.requesterUuid isEqual:otherMessage.requesterUuid]) &&
      self.hasAccept == otherMessage.hasAccept &&
      (!self.hasAccept || self.accept == otherMessage.accept) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasRequesterUuid) {
    hashCode = hashCode * 31 + [self.requesterUuid hash];
  }
  if (self.hasAccept) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.accept] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ApproveOrRejectRequestToJoinClanRequestProto_Builder()
@property (strong) ApproveOrRejectRequestToJoinClanRequestProto* result;
@end

@implementation ApproveOrRejectRequestToJoinClanRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ApproveOrRejectRequestToJoinClanRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) clear {
  self.result = [[ApproveOrRejectRequestToJoinClanRequestProto alloc] init];
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) clone {
  return [ApproveOrRejectRequestToJoinClanRequestProto builderWithPrototype:result];
}
- (ApproveOrRejectRequestToJoinClanRequestProto*) defaultInstance {
  return [ApproveOrRejectRequestToJoinClanRequestProto defaultInstance];
}
- (ApproveOrRejectRequestToJoinClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ApproveOrRejectRequestToJoinClanRequestProto*) buildPartial {
  ApproveOrRejectRequestToJoinClanRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) mergeFrom:(ApproveOrRejectRequestToJoinClanRequestProto*) other {
  if (other == [ApproveOrRejectRequestToJoinClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasRequesterUuid) {
    [self setRequesterUuid:other.requesterUuid];
  }
  if (other.hasAccept) {
    [self setAccept:other.accept];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setRequesterUuid:[input readString]];
        break;
      }
      case 24: {
        [self setAccept:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasRequesterUuid {
  return result.hasRequesterUuid;
}
- (NSString*) requesterUuid {
  return result.requesterUuid;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) setRequesterUuid:(NSString*) value {
  result.hasRequesterUuid = YES;
  result.requesterUuid = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) clearRequesterUuid {
  result.hasRequesterUuid = NO;
  result.requesterUuid = @"";
  return self;
}
- (BOOL) hasAccept {
  return result.hasAccept;
}
- (BOOL) accept {
  return result.accept;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) setAccept:(BOOL) value {
  result.hasAccept = YES;
  result.accept = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) clearAccept {
  result.hasAccept = NO;
  result.accept = NO;
  return self;
}
@end

@interface ApproveOrRejectRequestToJoinClanResponseProto ()
@property (strong) MinimumUserProto* sender;
@property ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatus status;
@property (strong) MinimumUserProto* requester;
@property BOOL accept;
@property (strong) MinimumClanProto* minClan;
@property (strong) FullClanProtoWithClanSize* fullClan;
@end

@implementation ApproveOrRejectRequestToJoinClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasRequester {
  return !!hasRequester_;
}
- (void) setHasRequester:(BOOL) value_ {
  hasRequester_ = !!value_;
}
@synthesize requester;
- (BOOL) hasAccept {
  return !!hasAccept_;
}
- (void) setHasAccept:(BOOL) value_ {
  hasAccept_ = !!value_;
}
- (BOOL) accept {
  return !!accept_;
}
- (void) setAccept:(BOOL) value_ {
  accept_ = !!value_;
}
- (BOOL) hasMinClan {
  return !!hasMinClan_;
}
- (void) setHasMinClan:(BOOL) value_ {
  hasMinClan_ = !!value_;
}
@synthesize minClan;
- (BOOL) hasFullClan {
  return !!hasFullClan_;
}
- (void) setHasFullClan:(BOOL) value_ {
  hasFullClan_ = !!value_;
}
@synthesize fullClan;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusSuccess;
    self.requester = [MinimumUserProto defaultInstance];
    self.accept = NO;
    self.minClan = [MinimumClanProto defaultInstance];
    self.fullClan = [FullClanProtoWithClanSize defaultInstance];
  }
  return self;
}
static ApproveOrRejectRequestToJoinClanResponseProto* defaultApproveOrRejectRequestToJoinClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [ApproveOrRejectRequestToJoinClanResponseProto class]) {
    defaultApproveOrRejectRequestToJoinClanResponseProtoInstance = [[ApproveOrRejectRequestToJoinClanResponseProto alloc] init];
  }
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) defaultInstance {
  return defaultApproveOrRejectRequestToJoinClanResponseProtoInstance;
}
- (ApproveOrRejectRequestToJoinClanResponseProto*) defaultInstance {
  return defaultApproveOrRejectRequestToJoinClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasRequester) {
    [output writeMessage:3 value:self.requester];
  }
  if (self.hasAccept) {
    [output writeBool:4 value:self.accept];
  }
  if (self.hasMinClan) {
    [output writeMessage:5 value:self.minClan];
  }
  if (self.hasFullClan) {
    [output writeMessage:6 value:self.fullClan];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  if (self.hasRequester) {
    size_ += computeMessageSize(3, self.requester);
  }
  if (self.hasAccept) {
    size_ += computeBoolSize(4, self.accept);
  }
  if (self.hasMinClan) {
    size_ += computeMessageSize(5, self.minClan);
  }
  if (self.hasFullClan) {
    size_ += computeMessageSize(6, self.fullClan);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromData:(NSData*) data {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromData:data] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) builder {
  return [[ApproveOrRejectRequestToJoinClanResponseProto_Builder alloc] init];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) builderWithPrototype:(ApproveOrRejectRequestToJoinClanResponseProto*) prototype {
  return [[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFrom:prototype];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) builder {
  return [ApproveOrRejectRequestToJoinClanResponseProto builder];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) toBuilder {
  return [ApproveOrRejectRequestToJoinClanResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasRequester) {
    [output appendFormat:@"%@%@ {\n", indent, @"requester"];
    [self.requester writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasAccept) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accept", [NSNumber numberWithBool:self.accept]];
  }
  if (self.hasMinClan) {
    [output appendFormat:@"%@%@ {\n", indent, @"minClan"];
    [self.minClan writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasFullClan) {
    [output appendFormat:@"%@%@ {\n", indent, @"fullClan"];
    [self.fullClan writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ApproveOrRejectRequestToJoinClanResponseProto class]]) {
    return NO;
  }
  ApproveOrRejectRequestToJoinClanResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasRequester == otherMessage.hasRequester &&
      (!self.hasRequester || [self.requester isEqual:otherMessage.requester]) &&
      self.hasAccept == otherMessage.hasAccept &&
      (!self.hasAccept || self.accept == otherMessage.accept) &&
      self.hasMinClan == otherMessage.hasMinClan &&
      (!self.hasMinClan || [self.minClan isEqual:otherMessage.minClan]) &&
      self.hasFullClan == otherMessage.hasFullClan &&
      (!self.hasFullClan || [self.fullClan isEqual:otherMessage.fullClan]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasRequester) {
    hashCode = hashCode * 31 + [self.requester hash];
  }
  if (self.hasAccept) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.accept] hash];
  }
  if (self.hasMinClan) {
    hashCode = hashCode * 31 + [self.minClan hash];
  }
  if (self.hasFullClan) {
    hashCode = hashCode * 31 + [self.fullClan hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusIsValidValue(ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatus value) {
  switch (value) {
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusSuccess:
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusFailOther:
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusFailNotAuthorized:
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusFailNotARequester:
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusFailAlreadyInAClan:
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusFailClanIsFull:
      return YES;
    default:
      return NO;
  }
}
@interface ApproveOrRejectRequestToJoinClanResponseProto_Builder()
@property (strong) ApproveOrRejectRequestToJoinClanResponseProto* result;
@end

@implementation ApproveOrRejectRequestToJoinClanResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ApproveOrRejectRequestToJoinClanResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clear {
  self.result = [[ApproveOrRejectRequestToJoinClanResponseProto alloc] init];
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clone {
  return [ApproveOrRejectRequestToJoinClanResponseProto builderWithPrototype:result];
}
- (ApproveOrRejectRequestToJoinClanResponseProto*) defaultInstance {
  return [ApproveOrRejectRequestToJoinClanResponseProto defaultInstance];
}
- (ApproveOrRejectRequestToJoinClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ApproveOrRejectRequestToJoinClanResponseProto*) buildPartial {
  ApproveOrRejectRequestToJoinClanResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeFrom:(ApproveOrRejectRequestToJoinClanResponseProto*) other {
  if (other == [ApproveOrRejectRequestToJoinClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasRequester) {
    [self mergeRequester:other.requester];
  }
  if (other.hasAccept) {
    [self setAccept:other.accept];
  }
  if (other.hasMinClan) {
    [self mergeMinClan:other.minClan];
  }
  if (other.hasFullClan) {
    [self mergeFullClan:other.fullClan];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatus value = (ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatus)[input readEnum];
        if (ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasRequester) {
          [subBuilder mergeFrom:self.requester];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRequester:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setAccept:[input readBool]];
        break;
      }
      case 42: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasMinClan) {
          [subBuilder mergeFrom:self.minClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinClan:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        if (self.hasFullClan) {
          [subBuilder mergeFrom:self.fullClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFullClan:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatus) status {
  return result.status;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setStatus:(ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusSuccess;
  return self;
}
- (BOOL) hasRequester {
  return result.hasRequester;
}
- (MinimumUserProto*) requester {
  return result.requester;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setRequester:(MinimumUserProto*) value {
  result.hasRequester = YES;
  result.requester = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setRequester_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setRequester:[builderForValue build]];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeRequester:(MinimumUserProto*) value {
  if (result.hasRequester &&
      result.requester != [MinimumUserProto defaultInstance]) {
    result.requester =
      [[[MinimumUserProto builderWithPrototype:result.requester] mergeFrom:value] buildPartial];
  } else {
    result.requester = value;
  }
  result.hasRequester = YES;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearRequester {
  result.hasRequester = NO;
  result.requester = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasAccept {
  return result.hasAccept;
}
- (BOOL) accept {
  return result.accept;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setAccept:(BOOL) value {
  result.hasAccept = YES;
  result.accept = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearAccept {
  result.hasAccept = NO;
  result.accept = NO;
  return self;
}
- (BOOL) hasMinClan {
  return result.hasMinClan;
}
- (MinimumClanProto*) minClan {
  return result.minClan;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setMinClan:(MinimumClanProto*) value {
  result.hasMinClan = YES;
  result.minClan = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setMinClan_Builder:(MinimumClanProto_Builder*) builderForValue {
  return [self setMinClan:[builderForValue build]];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeMinClan:(MinimumClanProto*) value {
  if (result.hasMinClan &&
      result.minClan != [MinimumClanProto defaultInstance]) {
    result.minClan =
      [[[MinimumClanProto builderWithPrototype:result.minClan] mergeFrom:value] buildPartial];
  } else {
    result.minClan = value;
  }
  result.hasMinClan = YES;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearMinClan {
  result.hasMinClan = NO;
  result.minClan = [MinimumClanProto defaultInstance];
  return self;
}
- (BOOL) hasFullClan {
  return result.hasFullClan;
}
- (FullClanProtoWithClanSize*) fullClan {
  return result.fullClan;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setFullClan:(FullClanProtoWithClanSize*) value {
  result.hasFullClan = YES;
  result.fullClan = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setFullClan_Builder:(FullClanProtoWithClanSize_Builder*) builderForValue {
  return [self setFullClan:[builderForValue build]];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeFullClan:(FullClanProtoWithClanSize*) value {
  if (result.hasFullClan &&
      result.fullClan != [FullClanProtoWithClanSize defaultInstance]) {
    result.fullClan =
      [[[FullClanProtoWithClanSize builderWithPrototype:result.fullClan] mergeFrom:value] buildPartial];
  } else {
    result.fullClan = value;
  }
  result.hasFullClan = YES;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearFullClan {
  result.hasFullClan = NO;
  result.fullClan = [FullClanProtoWithClanSize defaultInstance];
  return self;
}
@end

@interface RetrieveClanInfoRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSString* clanUuid;
@property (strong) NSString* clanName;
@property RetrieveClanInfoRequestProto_ClanInfoGrabType grabType;
@property int32_t beforeThisClanId;
@property BOOL isForBrowsingList;
@end

@implementation RetrieveClanInfoRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasClanUuid {
  return !!hasClanUuid_;
}
- (void) setHasClanUuid:(BOOL) value_ {
  hasClanUuid_ = !!value_;
}
@synthesize clanUuid;
- (BOOL) hasClanName {
  return !!hasClanName_;
}
- (void) setHasClanName:(BOOL) value_ {
  hasClanName_ = !!value_;
}
@synthesize clanName;
- (BOOL) hasGrabType {
  return !!hasGrabType_;
}
- (void) setHasGrabType:(BOOL) value_ {
  hasGrabType_ = !!value_;
}
@synthesize grabType;
- (BOOL) hasBeforeThisClanId {
  return !!hasBeforeThisClanId_;
}
- (void) setHasBeforeThisClanId:(BOOL) value_ {
  hasBeforeThisClanId_ = !!value_;
}
@synthesize beforeThisClanId;
- (BOOL) hasIsForBrowsingList {
  return !!hasIsForBrowsingList_;
}
- (void) setHasIsForBrowsingList:(BOOL) value_ {
  hasIsForBrowsingList_ = !!value_;
}
- (BOOL) isForBrowsingList {
  return !!isForBrowsingList_;
}
- (void) setIsForBrowsingList:(BOOL) value_ {
  isForBrowsingList_ = !!value_;
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clanUuid = @"";
    self.clanName = @"";
    self.grabType = RetrieveClanInfoRequestProto_ClanInfoGrabTypeAll;
    self.beforeThisClanId = 0;
    self.isForBrowsingList = NO;
  }
  return self;
}
static RetrieveClanInfoRequestProto* defaultRetrieveClanInfoRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrieveClanInfoRequestProto class]) {
    defaultRetrieveClanInfoRequestProtoInstance = [[RetrieveClanInfoRequestProto alloc] init];
  }
}
+ (RetrieveClanInfoRequestProto*) defaultInstance {
  return defaultRetrieveClanInfoRequestProtoInstance;
}
- (RetrieveClanInfoRequestProto*) defaultInstance {
  return defaultRetrieveClanInfoRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClanUuid) {
    [output writeString:2 value:self.clanUuid];
  }
  if (self.hasClanName) {
    [output writeString:3 value:self.clanName];
  }
  if (self.hasGrabType) {
    [output writeEnum:4 value:self.grabType];
  }
  if (self.hasBeforeThisClanId) {
    [output writeInt32:5 value:self.beforeThisClanId];
  }
  if (self.hasIsForBrowsingList) {
    [output writeBool:6 value:self.isForBrowsingList];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasClanUuid) {
    size_ += computeStringSize(2, self.clanUuid);
  }
  if (self.hasClanName) {
    size_ += computeStringSize(3, self.clanName);
  }
  if (self.hasGrabType) {
    size_ += computeEnumSize(4, self.grabType);
  }
  if (self.hasBeforeThisClanId) {
    size_ += computeInt32Size(5, self.beforeThisClanId);
  }
  if (self.hasIsForBrowsingList) {
    size_ += computeBoolSize(6, self.isForBrowsingList);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RetrieveClanInfoRequestProto*) parseFromData:(NSData*) data {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromData:data] build];
}
+ (RetrieveClanInfoRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromInputStream:input] build];
}
+ (RetrieveClanInfoRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrieveClanInfoRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoRequestProto_Builder*) builder {
  return [[RetrieveClanInfoRequestProto_Builder alloc] init];
}
+ (RetrieveClanInfoRequestProto_Builder*) builderWithPrototype:(RetrieveClanInfoRequestProto*) prototype {
  return [[RetrieveClanInfoRequestProto builder] mergeFrom:prototype];
}
- (RetrieveClanInfoRequestProto_Builder*) builder {
  return [RetrieveClanInfoRequestProto builder];
}
- (RetrieveClanInfoRequestProto_Builder*) toBuilder {
  return [RetrieveClanInfoRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClanUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanUuid", self.clanUuid];
  }
  if (self.hasClanName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanName", self.clanName];
  }
  if (self.hasGrabType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"grabType", [NSNumber numberWithInteger:self.grabType]];
  }
  if (self.hasBeforeThisClanId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"beforeThisClanId", [NSNumber numberWithInteger:self.beforeThisClanId]];
  }
  if (self.hasIsForBrowsingList) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isForBrowsingList", [NSNumber numberWithBool:self.isForBrowsingList]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RetrieveClanInfoRequestProto class]]) {
    return NO;
  }
  RetrieveClanInfoRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasClanUuid == otherMessage.hasClanUuid &&
      (!self.hasClanUuid || [self.clanUuid isEqual:otherMessage.clanUuid]) &&
      self.hasClanName == otherMessage.hasClanName &&
      (!self.hasClanName || [self.clanName isEqual:otherMessage.clanName]) &&
      self.hasGrabType == otherMessage.hasGrabType &&
      (!self.hasGrabType || self.grabType == otherMessage.grabType) &&
      self.hasBeforeThisClanId == otherMessage.hasBeforeThisClanId &&
      (!self.hasBeforeThisClanId || self.beforeThisClanId == otherMessage.beforeThisClanId) &&
      self.hasIsForBrowsingList == otherMessage.hasIsForBrowsingList &&
      (!self.hasIsForBrowsingList || self.isForBrowsingList == otherMessage.isForBrowsingList) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasClanUuid) {
    hashCode = hashCode * 31 + [self.clanUuid hash];
  }
  if (self.hasClanName) {
    hashCode = hashCode * 31 + [self.clanName hash];
  }
  if (self.hasGrabType) {
    hashCode = hashCode * 31 + self.grabType;
  }
  if (self.hasBeforeThisClanId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.beforeThisClanId] hash];
  }
  if (self.hasIsForBrowsingList) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isForBrowsingList] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL RetrieveClanInfoRequestProto_ClanInfoGrabTypeIsValidValue(RetrieveClanInfoRequestProto_ClanInfoGrabType value) {
  switch (value) {
    case RetrieveClanInfoRequestProto_ClanInfoGrabTypeAll:
    case RetrieveClanInfoRequestProto_ClanInfoGrabTypeClanInfo:
    case RetrieveClanInfoRequestProto_ClanInfoGrabTypeMembers:
      return YES;
    default:
      return NO;
  }
}
@interface RetrieveClanInfoRequestProto_Builder()
@property (strong) RetrieveClanInfoRequestProto* result;
@end

@implementation RetrieveClanInfoRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RetrieveClanInfoRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrieveClanInfoRequestProto_Builder*) clear {
  self.result = [[RetrieveClanInfoRequestProto alloc] init];
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clone {
  return [RetrieveClanInfoRequestProto builderWithPrototype:result];
}
- (RetrieveClanInfoRequestProto*) defaultInstance {
  return [RetrieveClanInfoRequestProto defaultInstance];
}
- (RetrieveClanInfoRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrieveClanInfoRequestProto*) buildPartial {
  RetrieveClanInfoRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RetrieveClanInfoRequestProto_Builder*) mergeFrom:(RetrieveClanInfoRequestProto*) other {
  if (other == [RetrieveClanInfoRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClanUuid) {
    [self setClanUuid:other.clanUuid];
  }
  if (other.hasClanName) {
    [self setClanName:other.clanName];
  }
  if (other.hasGrabType) {
    [self setGrabType:other.grabType];
  }
  if (other.hasBeforeThisClanId) {
    [self setBeforeThisClanId:other.beforeThisClanId];
  }
  if (other.hasIsForBrowsingList) {
    [self setIsForBrowsingList:other.isForBrowsingList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrieveClanInfoRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setClanUuid:[input readString]];
        break;
      }
      case 26: {
        [self setClanName:[input readString]];
        break;
      }
      case 32: {
        RetrieveClanInfoRequestProto_ClanInfoGrabType value = (RetrieveClanInfoRequestProto_ClanInfoGrabType)[input readEnum];
        if (RetrieveClanInfoRequestProto_ClanInfoGrabTypeIsValidValue(value)) {
          [self setGrabType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setBeforeThisClanId:[input readInt32]];
        break;
      }
      case 48: {
        [self setIsForBrowsingList:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RetrieveClanInfoRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetrieveClanInfoRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanUuid {
  return result.hasClanUuid;
}
- (NSString*) clanUuid {
  return result.clanUuid;
}
- (RetrieveClanInfoRequestProto_Builder*) setClanUuid:(NSString*) value {
  result.hasClanUuid = YES;
  result.clanUuid = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearClanUuid {
  result.hasClanUuid = NO;
  result.clanUuid = @"";
  return self;
}
- (BOOL) hasClanName {
  return result.hasClanName;
}
- (NSString*) clanName {
  return result.clanName;
}
- (RetrieveClanInfoRequestProto_Builder*) setClanName:(NSString*) value {
  result.hasClanName = YES;
  result.clanName = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearClanName {
  result.hasClanName = NO;
  result.clanName = @"";
  return self;
}
- (BOOL) hasGrabType {
  return result.hasGrabType;
}
- (RetrieveClanInfoRequestProto_ClanInfoGrabType) grabType {
  return result.grabType;
}
- (RetrieveClanInfoRequestProto_Builder*) setGrabType:(RetrieveClanInfoRequestProto_ClanInfoGrabType) value {
  result.hasGrabType = YES;
  result.grabType = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearGrabType {
  result.hasGrabType = NO;
  result.grabType = RetrieveClanInfoRequestProto_ClanInfoGrabTypeAll;
  return self;
}
- (BOOL) hasBeforeThisClanId {
  return result.hasBeforeThisClanId;
}
- (int32_t) beforeThisClanId {
  return result.beforeThisClanId;
}
- (RetrieveClanInfoRequestProto_Builder*) setBeforeThisClanId:(int32_t) value {
  result.hasBeforeThisClanId = YES;
  result.beforeThisClanId = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearBeforeThisClanId {
  result.hasBeforeThisClanId = NO;
  result.beforeThisClanId = 0;
  return self;
}
- (BOOL) hasIsForBrowsingList {
  return result.hasIsForBrowsingList;
}
- (BOOL) isForBrowsingList {
  return result.isForBrowsingList;
}
- (RetrieveClanInfoRequestProto_Builder*) setIsForBrowsingList:(BOOL) value {
  result.hasIsForBrowsingList = YES;
  result.isForBrowsingList = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearIsForBrowsingList {
  result.hasIsForBrowsingList = NO;
  result.isForBrowsingList = NO;
  return self;
}
@end

@interface RetrieveClanInfoResponseProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutableMembersList;
@property (strong) NSMutableArray * mutableClanInfoList;
@property RetrieveClanInfoResponseProto_RetrieveClanInfoStatus status;
@property BOOL isForSearch;
@property BOOL isForBrowsingList;
@property (strong) NSString* clanUuid;
@property (strong) NSString* clanName;
@property int32_t beforeThisClanId;
@property (strong) NSMutableArray * mutableMonsterTeamsList;
@end

@implementation RetrieveClanInfoResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutableMembersList;
@dynamic membersList;
@synthesize mutableClanInfoList;
@dynamic clanInfoList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasIsForSearch {
  return !!hasIsForSearch_;
}
- (void) setHasIsForSearch:(BOOL) value_ {
  hasIsForSearch_ = !!value_;
}
- (BOOL) isForSearch {
  return !!isForSearch_;
}
- (void) setIsForSearch:(BOOL) value_ {
  isForSearch_ = !!value_;
}
- (BOOL) hasIsForBrowsingList {
  return !!hasIsForBrowsingList_;
}
- (void) setHasIsForBrowsingList:(BOOL) value_ {
  hasIsForBrowsingList_ = !!value_;
}
- (BOOL) isForBrowsingList {
  return !!isForBrowsingList_;
}
- (void) setIsForBrowsingList:(BOOL) value_ {
  isForBrowsingList_ = !!value_;
}
- (BOOL) hasClanUuid {
  return !!hasClanUuid_;
}
- (void) setHasClanUuid:(BOOL) value_ {
  hasClanUuid_ = !!value_;
}
@synthesize clanUuid;
- (BOOL) hasClanName {
  return !!hasClanName_;
}
- (void) setHasClanName:(BOOL) value_ {
  hasClanName_ = !!value_;
}
@synthesize clanName;
- (BOOL) hasBeforeThisClanId {
  return !!hasBeforeThisClanId_;
}
- (void) setHasBeforeThisClanId:(BOOL) value_ {
  hasBeforeThisClanId_ = !!value_;
}
@synthesize beforeThisClanId;
@synthesize mutableMonsterTeamsList;
@dynamic monsterTeamsList;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = RetrieveClanInfoResponseProto_RetrieveClanInfoStatusSuccess;
    self.isForSearch = NO;
    self.isForBrowsingList = NO;
    self.clanUuid = @"";
    self.clanName = @"";
    self.beforeThisClanId = 0;
  }
  return self;
}
static RetrieveClanInfoResponseProto* defaultRetrieveClanInfoResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrieveClanInfoResponseProto class]) {
    defaultRetrieveClanInfoResponseProtoInstance = [[RetrieveClanInfoResponseProto alloc] init];
  }
}
+ (RetrieveClanInfoResponseProto*) defaultInstance {
  return defaultRetrieveClanInfoResponseProtoInstance;
}
- (RetrieveClanInfoResponseProto*) defaultInstance {
  return defaultRetrieveClanInfoResponseProtoInstance;
}
- (NSArray *)membersList {
  return mutableMembersList;
}
- (MinimumUserProtoForClans*)membersAtIndex:(NSUInteger)index {
  return [mutableMembersList objectAtIndex:index];
}
- (NSArray *)clanInfoList {
  return mutableClanInfoList;
}
- (FullClanProtoWithClanSize*)clanInfoAtIndex:(NSUInteger)index {
  return [mutableClanInfoList objectAtIndex:index];
}
- (NSArray *)monsterTeamsList {
  return mutableMonsterTeamsList;
}
- (UserCurrentMonsterTeamProto*)monsterTeamsAtIndex:(NSUInteger)index {
  return [mutableMonsterTeamsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.membersList enumerateObjectsUsingBlock:^(MinimumUserProtoForClans *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.clanInfoList enumerateObjectsUsingBlock:^(FullClanProtoWithClanSize *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  if (self.hasStatus) {
    [output writeEnum:4 value:self.status];
  }
  if (self.hasIsForSearch) {
    [output writeBool:5 value:self.isForSearch];
  }
  if (self.hasIsForBrowsingList) {
    [output writeBool:6 value:self.isForBrowsingList];
  }
  if (self.hasClanUuid) {
    [output writeString:7 value:self.clanUuid];
  }
  if (self.hasClanName) {
    [output writeString:8 value:self.clanName];
  }
  if (self.hasBeforeThisClanId) {
    [output writeInt32:9 value:self.beforeThisClanId];
  }
  [self.monsterTeamsList enumerateObjectsUsingBlock:^(UserCurrentMonsterTeamProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:10 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  [self.membersList enumerateObjectsUsingBlock:^(MinimumUserProtoForClans *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  [self.clanInfoList enumerateObjectsUsingBlock:^(FullClanProtoWithClanSize *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  if (self.hasStatus) {
    size_ += computeEnumSize(4, self.status);
  }
  if (self.hasIsForSearch) {
    size_ += computeBoolSize(5, self.isForSearch);
  }
  if (self.hasIsForBrowsingList) {
    size_ += computeBoolSize(6, self.isForBrowsingList);
  }
  if (self.hasClanUuid) {
    size_ += computeStringSize(7, self.clanUuid);
  }
  if (self.hasClanName) {
    size_ += computeStringSize(8, self.clanName);
  }
  if (self.hasBeforeThisClanId) {
    size_ += computeInt32Size(9, self.beforeThisClanId);
  }
  [self.monsterTeamsList enumerateObjectsUsingBlock:^(UserCurrentMonsterTeamProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(10, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RetrieveClanInfoResponseProto*) parseFromData:(NSData*) data {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromData:data] build];
}
+ (RetrieveClanInfoResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromInputStream:input] build];
}
+ (RetrieveClanInfoResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrieveClanInfoResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoResponseProto_Builder*) builder {
  return [[RetrieveClanInfoResponseProto_Builder alloc] init];
}
+ (RetrieveClanInfoResponseProto_Builder*) builderWithPrototype:(RetrieveClanInfoResponseProto*) prototype {
  return [[RetrieveClanInfoResponseProto builder] mergeFrom:prototype];
}
- (RetrieveClanInfoResponseProto_Builder*) builder {
  return [RetrieveClanInfoResponseProto builder];
}
- (RetrieveClanInfoResponseProto_Builder*) toBuilder {
  return [RetrieveClanInfoResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.membersList enumerateObjectsUsingBlock:^(MinimumUserProtoForClans *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"members"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.clanInfoList enumerateObjectsUsingBlock:^(FullClanProtoWithClanSize *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanInfo"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasIsForSearch) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isForSearch", [NSNumber numberWithBool:self.isForSearch]];
  }
  if (self.hasIsForBrowsingList) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isForBrowsingList", [NSNumber numberWithBool:self.isForBrowsingList]];
  }
  if (self.hasClanUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanUuid", self.clanUuid];
  }
  if (self.hasClanName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanName", self.clanName];
  }
  if (self.hasBeforeThisClanId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"beforeThisClanId", [NSNumber numberWithInteger:self.beforeThisClanId]];
  }
  [self.monsterTeamsList enumerateObjectsUsingBlock:^(UserCurrentMonsterTeamProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"monsterTeams"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RetrieveClanInfoResponseProto class]]) {
    return NO;
  }
  RetrieveClanInfoResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.membersList isEqualToArray:otherMessage.membersList] &&
      [self.clanInfoList isEqualToArray:otherMessage.clanInfoList] &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasIsForSearch == otherMessage.hasIsForSearch &&
      (!self.hasIsForSearch || self.isForSearch == otherMessage.isForSearch) &&
      self.hasIsForBrowsingList == otherMessage.hasIsForBrowsingList &&
      (!self.hasIsForBrowsingList || self.isForBrowsingList == otherMessage.isForBrowsingList) &&
      self.hasClanUuid == otherMessage.hasClanUuid &&
      (!self.hasClanUuid || [self.clanUuid isEqual:otherMessage.clanUuid]) &&
      self.hasClanName == otherMessage.hasClanName &&
      (!self.hasClanName || [self.clanName isEqual:otherMessage.clanName]) &&
      self.hasBeforeThisClanId == otherMessage.hasBeforeThisClanId &&
      (!self.hasBeforeThisClanId || self.beforeThisClanId == otherMessage.beforeThisClanId) &&
      [self.monsterTeamsList isEqualToArray:otherMessage.monsterTeamsList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.membersList enumerateObjectsUsingBlock:^(MinimumUserProtoForClans *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.clanInfoList enumerateObjectsUsingBlock:^(FullClanProtoWithClanSize *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasIsForSearch) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isForSearch] hash];
  }
  if (self.hasIsForBrowsingList) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isForBrowsingList] hash];
  }
  if (self.hasClanUuid) {
    hashCode = hashCode * 31 + [self.clanUuid hash];
  }
  if (self.hasClanName) {
    hashCode = hashCode * 31 + [self.clanName hash];
  }
  if (self.hasBeforeThisClanId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.beforeThisClanId] hash];
  }
  [self.monsterTeamsList enumerateObjectsUsingBlock:^(UserCurrentMonsterTeamProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL RetrieveClanInfoResponseProto_RetrieveClanInfoStatusIsValidValue(RetrieveClanInfoResponseProto_RetrieveClanInfoStatus value) {
  switch (value) {
    case RetrieveClanInfoResponseProto_RetrieveClanInfoStatusSuccess:
    case RetrieveClanInfoResponseProto_RetrieveClanInfoStatusOtherFail:
      return YES;
    default:
      return NO;
  }
}
@interface RetrieveClanInfoResponseProto_Builder()
@property (strong) RetrieveClanInfoResponseProto* result;
@end

@implementation RetrieveClanInfoResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RetrieveClanInfoResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrieveClanInfoResponseProto_Builder*) clear {
  self.result = [[RetrieveClanInfoResponseProto alloc] init];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clone {
  return [RetrieveClanInfoResponseProto builderWithPrototype:result];
}
- (RetrieveClanInfoResponseProto*) defaultInstance {
  return [RetrieveClanInfoResponseProto defaultInstance];
}
- (RetrieveClanInfoResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrieveClanInfoResponseProto*) buildPartial {
  RetrieveClanInfoResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RetrieveClanInfoResponseProto_Builder*) mergeFrom:(RetrieveClanInfoResponseProto*) other {
  if (other == [RetrieveClanInfoResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableMembersList.count > 0) {
    if (result.mutableMembersList == nil) {
      result.mutableMembersList = [[NSMutableArray alloc] initWithArray:other.mutableMembersList];
    } else {
      [result.mutableMembersList addObjectsFromArray:other.mutableMembersList];
    }
  }
  if (other.mutableClanInfoList.count > 0) {
    if (result.mutableClanInfoList == nil) {
      result.mutableClanInfoList = [[NSMutableArray alloc] initWithArray:other.mutableClanInfoList];
    } else {
      [result.mutableClanInfoList addObjectsFromArray:other.mutableClanInfoList];
    }
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasIsForSearch) {
    [self setIsForSearch:other.isForSearch];
  }
  if (other.hasIsForBrowsingList) {
    [self setIsForBrowsingList:other.isForBrowsingList];
  }
  if (other.hasClanUuid) {
    [self setClanUuid:other.clanUuid];
  }
  if (other.hasClanName) {
    [self setClanName:other.clanName];
  }
  if (other.hasBeforeThisClanId) {
    [self setBeforeThisClanId:other.beforeThisClanId];
  }
  if (other.mutableMonsterTeamsList.count > 0) {
    if (result.mutableMonsterTeamsList == nil) {
      result.mutableMonsterTeamsList = [[NSMutableArray alloc] initWithArray:other.mutableMonsterTeamsList];
    } else {
      [result.mutableMonsterTeamsList addObjectsFromArray:other.mutableMonsterTeamsList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrieveClanInfoResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        MinimumUserProtoForClans_Builder* subBuilder = [MinimumUserProtoForClans builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMembers:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanInfo:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        RetrieveClanInfoResponseProto_RetrieveClanInfoStatus value = (RetrieveClanInfoResponseProto_RetrieveClanInfoStatus)[input readEnum];
        if (RetrieveClanInfoResponseProto_RetrieveClanInfoStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setIsForSearch:[input readBool]];
        break;
      }
      case 48: {
        [self setIsForBrowsingList:[input readBool]];
        break;
      }
      case 58: {
        [self setClanUuid:[input readString]];
        break;
      }
      case 66: {
        [self setClanName:[input readString]];
        break;
      }
      case 72: {
        [self setBeforeThisClanId:[input readInt32]];
        break;
      }
      case 82: {
        UserCurrentMonsterTeamProto_Builder* subBuilder = [UserCurrentMonsterTeamProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMonsterTeams:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RetrieveClanInfoResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetrieveClanInfoResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)membersList {
  return result.mutableMembersList;
}
- (MinimumUserProtoForClans*)membersAtIndex:(NSUInteger)index {
  return [result membersAtIndex:index];
}
- (RetrieveClanInfoResponseProto_Builder *)addMembers:(MinimumUserProtoForClans*)value {
  if (result.mutableMembersList == nil) {
    result.mutableMembersList = [[NSMutableArray alloc]init];
  }
  [result.mutableMembersList addObject:value];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder *)addAllMembers:(NSArray *)array {
  if (result.mutableMembersList == nil) {
    result.mutableMembersList = [NSMutableArray array];
  }
  [result.mutableMembersList addObjectsFromArray:array];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder *)clearMembers {
  result.mutableMembersList = nil;
  return self;
}
- (NSMutableArray *)clanInfoList {
  return result.mutableClanInfoList;
}
- (FullClanProtoWithClanSize*)clanInfoAtIndex:(NSUInteger)index {
  return [result clanInfoAtIndex:index];
}
- (RetrieveClanInfoResponseProto_Builder *)addClanInfo:(FullClanProtoWithClanSize*)value {
  if (result.mutableClanInfoList == nil) {
    result.mutableClanInfoList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanInfoList addObject:value];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder *)addAllClanInfo:(NSArray *)array {
  if (result.mutableClanInfoList == nil) {
    result.mutableClanInfoList = [NSMutableArray array];
  }
  [result.mutableClanInfoList addObjectsFromArray:array];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder *)clearClanInfo {
  result.mutableClanInfoList = nil;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RetrieveClanInfoResponseProto_RetrieveClanInfoStatus) status {
  return result.status;
}
- (RetrieveClanInfoResponseProto_Builder*) setStatus:(RetrieveClanInfoResponseProto_RetrieveClanInfoStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = RetrieveClanInfoResponseProto_RetrieveClanInfoStatusSuccess;
  return self;
}
- (BOOL) hasIsForSearch {
  return result.hasIsForSearch;
}
- (BOOL) isForSearch {
  return result.isForSearch;
}
- (RetrieveClanInfoResponseProto_Builder*) setIsForSearch:(BOOL) value {
  result.hasIsForSearch = YES;
  result.isForSearch = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearIsForSearch {
  result.hasIsForSearch = NO;
  result.isForSearch = NO;
  return self;
}
- (BOOL) hasIsForBrowsingList {
  return result.hasIsForBrowsingList;
}
- (BOOL) isForBrowsingList {
  return result.isForBrowsingList;
}
- (RetrieveClanInfoResponseProto_Builder*) setIsForBrowsingList:(BOOL) value {
  result.hasIsForBrowsingList = YES;
  result.isForBrowsingList = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearIsForBrowsingList {
  result.hasIsForBrowsingList = NO;
  result.isForBrowsingList = NO;
  return self;
}
- (BOOL) hasClanUuid {
  return result.hasClanUuid;
}
- (NSString*) clanUuid {
  return result.clanUuid;
}
- (RetrieveClanInfoResponseProto_Builder*) setClanUuid:(NSString*) value {
  result.hasClanUuid = YES;
  result.clanUuid = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearClanUuid {
  result.hasClanUuid = NO;
  result.clanUuid = @"";
  return self;
}
- (BOOL) hasClanName {
  return result.hasClanName;
}
- (NSString*) clanName {
  return result.clanName;
}
- (RetrieveClanInfoResponseProto_Builder*) setClanName:(NSString*) value {
  result.hasClanName = YES;
  result.clanName = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearClanName {
  result.hasClanName = NO;
  result.clanName = @"";
  return self;
}
- (BOOL) hasBeforeThisClanId {
  return result.hasBeforeThisClanId;
}
- (int32_t) beforeThisClanId {
  return result.beforeThisClanId;
}
- (RetrieveClanInfoResponseProto_Builder*) setBeforeThisClanId:(int32_t) value {
  result.hasBeforeThisClanId = YES;
  result.beforeThisClanId = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearBeforeThisClanId {
  result.hasBeforeThisClanId = NO;
  result.beforeThisClanId = 0;
  return self;
}
- (NSMutableArray *)monsterTeamsList {
  return result.mutableMonsterTeamsList;
}
- (UserCurrentMonsterTeamProto*)monsterTeamsAtIndex:(NSUInteger)index {
  return [result monsterTeamsAtIndex:index];
}
- (RetrieveClanInfoResponseProto_Builder *)addMonsterTeams:(UserCurrentMonsterTeamProto*)value {
  if (result.mutableMonsterTeamsList == nil) {
    result.mutableMonsterTeamsList = [[NSMutableArray alloc]init];
  }
  [result.mutableMonsterTeamsList addObject:value];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder *)addAllMonsterTeams:(NSArray *)array {
  if (result.mutableMonsterTeamsList == nil) {
    result.mutableMonsterTeamsList = [NSMutableArray array];
  }
  [result.mutableMonsterTeamsList addObjectsFromArray:array];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder *)clearMonsterTeams {
  result.mutableMonsterTeamsList = nil;
  return self;
}
@end

@interface TransferClanOwnershipRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSString* clanOwnerUuidNew;
@end

@implementation TransferClanOwnershipRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasClanOwnerUuidNew {
  return !!hasClanOwnerUuidNew_;
}
- (void) setHasClanOwnerUuidNew:(BOOL) value_ {
  hasClanOwnerUuidNew_ = !!value_;
}
@synthesize clanOwnerUuidNew;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clanOwnerUuidNew = @"";
  }
  return self;
}
static TransferClanOwnershipRequestProto* defaultTransferClanOwnershipRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [TransferClanOwnershipRequestProto class]) {
    defaultTransferClanOwnershipRequestProtoInstance = [[TransferClanOwnershipRequestProto alloc] init];
  }
}
+ (TransferClanOwnershipRequestProto*) defaultInstance {
  return defaultTransferClanOwnershipRequestProtoInstance;
}
- (TransferClanOwnershipRequestProto*) defaultInstance {
  return defaultTransferClanOwnershipRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClanOwnerUuidNew) {
    [output writeString:2 value:self.clanOwnerUuidNew];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasClanOwnerUuidNew) {
    size_ += computeStringSize(2, self.clanOwnerUuidNew);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TransferClanOwnershipRequestProto*) parseFromData:(NSData*) data {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromData:data] build];
}
+ (TransferClanOwnershipRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromInputStream:input] build];
}
+ (TransferClanOwnershipRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (TransferClanOwnershipRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipRequestProto_Builder*) builder {
  return [[TransferClanOwnershipRequestProto_Builder alloc] init];
}
+ (TransferClanOwnershipRequestProto_Builder*) builderWithPrototype:(TransferClanOwnershipRequestProto*) prototype {
  return [[TransferClanOwnershipRequestProto builder] mergeFrom:prototype];
}
- (TransferClanOwnershipRequestProto_Builder*) builder {
  return [TransferClanOwnershipRequestProto builder];
}
- (TransferClanOwnershipRequestProto_Builder*) toBuilder {
  return [TransferClanOwnershipRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClanOwnerUuidNew) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanOwnerUuidNew", self.clanOwnerUuidNew];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TransferClanOwnershipRequestProto class]]) {
    return NO;
  }
  TransferClanOwnershipRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasClanOwnerUuidNew == otherMessage.hasClanOwnerUuidNew &&
      (!self.hasClanOwnerUuidNew || [self.clanOwnerUuidNew isEqual:otherMessage.clanOwnerUuidNew]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasClanOwnerUuidNew) {
    hashCode = hashCode * 31 + [self.clanOwnerUuidNew hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TransferClanOwnershipRequestProto_Builder()
@property (strong) TransferClanOwnershipRequestProto* result;
@end

@implementation TransferClanOwnershipRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[TransferClanOwnershipRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (TransferClanOwnershipRequestProto_Builder*) clear {
  self.result = [[TransferClanOwnershipRequestProto alloc] init];
  return self;
}
- (TransferClanOwnershipRequestProto_Builder*) clone {
  return [TransferClanOwnershipRequestProto builderWithPrototype:result];
}
- (TransferClanOwnershipRequestProto*) defaultInstance {
  return [TransferClanOwnershipRequestProto defaultInstance];
}
- (TransferClanOwnershipRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TransferClanOwnershipRequestProto*) buildPartial {
  TransferClanOwnershipRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (TransferClanOwnershipRequestProto_Builder*) mergeFrom:(TransferClanOwnershipRequestProto*) other {
  if (other == [TransferClanOwnershipRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClanOwnerUuidNew) {
    [self setClanOwnerUuidNew:other.clanOwnerUuidNew];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TransferClanOwnershipRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TransferClanOwnershipRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setClanOwnerUuidNew:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (TransferClanOwnershipRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (TransferClanOwnershipRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (TransferClanOwnershipRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (TransferClanOwnershipRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanOwnerUuidNew {
  return result.hasClanOwnerUuidNew;
}
- (NSString*) clanOwnerUuidNew {
  return result.clanOwnerUuidNew;
}
- (TransferClanOwnershipRequestProto_Builder*) setClanOwnerUuidNew:(NSString*) value {
  result.hasClanOwnerUuidNew = YES;
  result.clanOwnerUuidNew = value;
  return self;
}
- (TransferClanOwnershipRequestProto_Builder*) clearClanOwnerUuidNew {
  result.hasClanOwnerUuidNew = NO;
  result.clanOwnerUuidNew = @"";
  return self;
}
@end

@interface TransferClanOwnershipResponseProto ()
@property (strong) MinimumUserProto* sender;
@property TransferClanOwnershipResponseProto_TransferClanOwnershipStatus status;
@property (strong) MinimumClanProto* minClan;
@property (strong) FullClanProtoWithClanSize* fullClan;
@property (strong) MinimumUserProto* clanOwnerNew;
@end

@implementation TransferClanOwnershipResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasMinClan {
  return !!hasMinClan_;
}
- (void) setHasMinClan:(BOOL) value_ {
  hasMinClan_ = !!value_;
}
@synthesize minClan;
- (BOOL) hasFullClan {
  return !!hasFullClan_;
}
- (void) setHasFullClan:(BOOL) value_ {
  hasFullClan_ = !!value_;
}
@synthesize fullClan;
- (BOOL) hasClanOwnerNew {
  return !!hasClanOwnerNew_;
}
- (void) setHasClanOwnerNew:(BOOL) value_ {
  hasClanOwnerNew_ = !!value_;
}
@synthesize clanOwnerNew;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = TransferClanOwnershipResponseProto_TransferClanOwnershipStatusSuccess;
    self.minClan = [MinimumClanProto defaultInstance];
    self.fullClan = [FullClanProtoWithClanSize defaultInstance];
    self.clanOwnerNew = [MinimumUserProto defaultInstance];
  }
  return self;
}
static TransferClanOwnershipResponseProto* defaultTransferClanOwnershipResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [TransferClanOwnershipResponseProto class]) {
    defaultTransferClanOwnershipResponseProtoInstance = [[TransferClanOwnershipResponseProto alloc] init];
  }
}
+ (TransferClanOwnershipResponseProto*) defaultInstance {
  return defaultTransferClanOwnershipResponseProtoInstance;
}
- (TransferClanOwnershipResponseProto*) defaultInstance {
  return defaultTransferClanOwnershipResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasMinClan) {
    [output writeMessage:3 value:self.minClan];
  }
  if (self.hasFullClan) {
    [output writeMessage:4 value:self.fullClan];
  }
  if (self.hasClanOwnerNew) {
    [output writeMessage:5 value:self.clanOwnerNew];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  if (self.hasMinClan) {
    size_ += computeMessageSize(3, self.minClan);
  }
  if (self.hasFullClan) {
    size_ += computeMessageSize(4, self.fullClan);
  }
  if (self.hasClanOwnerNew) {
    size_ += computeMessageSize(5, self.clanOwnerNew);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TransferClanOwnershipResponseProto*) parseFromData:(NSData*) data {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromData:data] build];
}
+ (TransferClanOwnershipResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromInputStream:input] build];
}
+ (TransferClanOwnershipResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (TransferClanOwnershipResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipResponseProto_Builder*) builder {
  return [[TransferClanOwnershipResponseProto_Builder alloc] init];
}
+ (TransferClanOwnershipResponseProto_Builder*) builderWithPrototype:(TransferClanOwnershipResponseProto*) prototype {
  return [[TransferClanOwnershipResponseProto builder] mergeFrom:prototype];
}
- (TransferClanOwnershipResponseProto_Builder*) builder {
  return [TransferClanOwnershipResponseProto builder];
}
- (TransferClanOwnershipResponseProto_Builder*) toBuilder {
  return [TransferClanOwnershipResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasMinClan) {
    [output appendFormat:@"%@%@ {\n", indent, @"minClan"];
    [self.minClan writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasFullClan) {
    [output appendFormat:@"%@%@ {\n", indent, @"fullClan"];
    [self.fullClan writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClanOwnerNew) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanOwnerNew"];
    [self.clanOwnerNew writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TransferClanOwnershipResponseProto class]]) {
    return NO;
  }
  TransferClanOwnershipResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasMinClan == otherMessage.hasMinClan &&
      (!self.hasMinClan || [self.minClan isEqual:otherMessage.minClan]) &&
      self.hasFullClan == otherMessage.hasFullClan &&
      (!self.hasFullClan || [self.fullClan isEqual:otherMessage.fullClan]) &&
      self.hasClanOwnerNew == otherMessage.hasClanOwnerNew &&
      (!self.hasClanOwnerNew || [self.clanOwnerNew isEqual:otherMessage.clanOwnerNew]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasMinClan) {
    hashCode = hashCode * 31 + [self.minClan hash];
  }
  if (self.hasFullClan) {
    hashCode = hashCode * 31 + [self.fullClan hash];
  }
  if (self.hasClanOwnerNew) {
    hashCode = hashCode * 31 + [self.clanOwnerNew hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL TransferClanOwnershipResponseProto_TransferClanOwnershipStatusIsValidValue(TransferClanOwnershipResponseProto_TransferClanOwnershipStatus value) {
  switch (value) {
    case TransferClanOwnershipResponseProto_TransferClanOwnershipStatusSuccess:
    case TransferClanOwnershipResponseProto_TransferClanOwnershipStatusFailOther:
    case TransferClanOwnershipResponseProto_TransferClanOwnershipStatusFailNotAuthorized:
    case TransferClanOwnershipResponseProto_TransferClanOwnershipStatusFailNewOwnerNotInClan:
      return YES;
    default:
      return NO;
  }
}
@interface TransferClanOwnershipResponseProto_Builder()
@property (strong) TransferClanOwnershipResponseProto* result;
@end

@implementation TransferClanOwnershipResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[TransferClanOwnershipResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (TransferClanOwnershipResponseProto_Builder*) clear {
  self.result = [[TransferClanOwnershipResponseProto alloc] init];
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clone {
  return [TransferClanOwnershipResponseProto builderWithPrototype:result];
}
- (TransferClanOwnershipResponseProto*) defaultInstance {
  return [TransferClanOwnershipResponseProto defaultInstance];
}
- (TransferClanOwnershipResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TransferClanOwnershipResponseProto*) buildPartial {
  TransferClanOwnershipResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (TransferClanOwnershipResponseProto_Builder*) mergeFrom:(TransferClanOwnershipResponseProto*) other {
  if (other == [TransferClanOwnershipResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasMinClan) {
    [self mergeMinClan:other.minClan];
  }
  if (other.hasFullClan) {
    [self mergeFullClan:other.fullClan];
  }
  if (other.hasClanOwnerNew) {
    [self mergeClanOwnerNew:other.clanOwnerNew];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TransferClanOwnershipResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        TransferClanOwnershipResponseProto_TransferClanOwnershipStatus value = (TransferClanOwnershipResponseProto_TransferClanOwnershipStatus)[input readEnum];
        if (TransferClanOwnershipResponseProto_TransferClanOwnershipStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasMinClan) {
          [subBuilder mergeFrom:self.minClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinClan:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        if (self.hasFullClan) {
          [subBuilder mergeFrom:self.fullClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFullClan:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasClanOwnerNew) {
          [subBuilder mergeFrom:self.clanOwnerNew];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClanOwnerNew:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (TransferClanOwnershipResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (TransferClanOwnershipResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (TransferClanOwnershipResponseProto_TransferClanOwnershipStatus) status {
  return result.status;
}
- (TransferClanOwnershipResponseProto_Builder*) setStatus:(TransferClanOwnershipResponseProto_TransferClanOwnershipStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = TransferClanOwnershipResponseProto_TransferClanOwnershipStatusSuccess;
  return self;
}
- (BOOL) hasMinClan {
  return result.hasMinClan;
}
- (MinimumClanProto*) minClan {
  return result.minClan;
}
- (TransferClanOwnershipResponseProto_Builder*) setMinClan:(MinimumClanProto*) value {
  result.hasMinClan = YES;
  result.minClan = value;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) setMinClan_Builder:(MinimumClanProto_Builder*) builderForValue {
  return [self setMinClan:[builderForValue build]];
}
- (TransferClanOwnershipResponseProto_Builder*) mergeMinClan:(MinimumClanProto*) value {
  if (result.hasMinClan &&
      result.minClan != [MinimumClanProto defaultInstance]) {
    result.minClan =
      [[[MinimumClanProto builderWithPrototype:result.minClan] mergeFrom:value] buildPartial];
  } else {
    result.minClan = value;
  }
  result.hasMinClan = YES;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clearMinClan {
  result.hasMinClan = NO;
  result.minClan = [MinimumClanProto defaultInstance];
  return self;
}
- (BOOL) hasFullClan {
  return result.hasFullClan;
}
- (FullClanProtoWithClanSize*) fullClan {
  return result.fullClan;
}
- (TransferClanOwnershipResponseProto_Builder*) setFullClan:(FullClanProtoWithClanSize*) value {
  result.hasFullClan = YES;
  result.fullClan = value;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) setFullClan_Builder:(FullClanProtoWithClanSize_Builder*) builderForValue {
  return [self setFullClan:[builderForValue build]];
}
- (TransferClanOwnershipResponseProto_Builder*) mergeFullClan:(FullClanProtoWithClanSize*) value {
  if (result.hasFullClan &&
      result.fullClan != [FullClanProtoWithClanSize defaultInstance]) {
    result.fullClan =
      [[[FullClanProtoWithClanSize builderWithPrototype:result.fullClan] mergeFrom:value] buildPartial];
  } else {
    result.fullClan = value;
  }
  result.hasFullClan = YES;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clearFullClan {
  result.hasFullClan = NO;
  result.fullClan = [FullClanProtoWithClanSize defaultInstance];
  return self;
}
- (BOOL) hasClanOwnerNew {
  return result.hasClanOwnerNew;
}
- (MinimumUserProto*) clanOwnerNew {
  return result.clanOwnerNew;
}
- (TransferClanOwnershipResponseProto_Builder*) setClanOwnerNew:(MinimumUserProto*) value {
  result.hasClanOwnerNew = YES;
  result.clanOwnerNew = value;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) setClanOwnerNew_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setClanOwnerNew:[builderForValue build]];
}
- (TransferClanOwnershipResponseProto_Builder*) mergeClanOwnerNew:(MinimumUserProto*) value {
  if (result.hasClanOwnerNew &&
      result.clanOwnerNew != [MinimumUserProto defaultInstance]) {
    result.clanOwnerNew =
      [[[MinimumUserProto builderWithPrototype:result.clanOwnerNew] mergeFrom:value] buildPartial];
  } else {
    result.clanOwnerNew = value;
  }
  result.hasClanOwnerNew = YES;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clearClanOwnerNew {
  result.hasClanOwnerNew = NO;
  result.clanOwnerNew = [MinimumUserProto defaultInstance];
  return self;
}
@end

@interface BootPlayerFromClanRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSString* playerToBootUuid;
@end

@implementation BootPlayerFromClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasPlayerToBootUuid {
  return !!hasPlayerToBootUuid_;
}
- (void) setHasPlayerToBootUuid:(BOOL) value_ {
  hasPlayerToBootUuid_ = !!value_;
}
@synthesize playerToBootUuid;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.playerToBootUuid = @"";
  }
  return self;
}
static BootPlayerFromClanRequestProto* defaultBootPlayerFromClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [BootPlayerFromClanRequestProto class]) {
    defaultBootPlayerFromClanRequestProtoInstance = [[BootPlayerFromClanRequestProto alloc] init];
  }
}
+ (BootPlayerFromClanRequestProto*) defaultInstance {
  return defaultBootPlayerFromClanRequestProtoInstance;
}
- (BootPlayerFromClanRequestProto*) defaultInstance {
  return defaultBootPlayerFromClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasPlayerToBootUuid) {
    [output writeString:2 value:self.playerToBootUuid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasPlayerToBootUuid) {
    size_ += computeStringSize(2, self.playerToBootUuid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BootPlayerFromClanRequestProto*) parseFromData:(NSData*) data {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromData:data] build];
}
+ (BootPlayerFromClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (BootPlayerFromClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (BootPlayerFromClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanRequestProto_Builder*) builder {
  return [[BootPlayerFromClanRequestProto_Builder alloc] init];
}
+ (BootPlayerFromClanRequestProto_Builder*) builderWithPrototype:(BootPlayerFromClanRequestProto*) prototype {
  return [[BootPlayerFromClanRequestProto builder] mergeFrom:prototype];
}
- (BootPlayerFromClanRequestProto_Builder*) builder {
  return [BootPlayerFromClanRequestProto builder];
}
- (BootPlayerFromClanRequestProto_Builder*) toBuilder {
  return [BootPlayerFromClanRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPlayerToBootUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"playerToBootUuid", self.playerToBootUuid];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BootPlayerFromClanRequestProto class]]) {
    return NO;
  }
  BootPlayerFromClanRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasPlayerToBootUuid == otherMessage.hasPlayerToBootUuid &&
      (!self.hasPlayerToBootUuid || [self.playerToBootUuid isEqual:otherMessage.playerToBootUuid]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasPlayerToBootUuid) {
    hashCode = hashCode * 31 + [self.playerToBootUuid hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BootPlayerFromClanRequestProto_Builder()
@property (strong) BootPlayerFromClanRequestProto* result;
@end

@implementation BootPlayerFromClanRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BootPlayerFromClanRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BootPlayerFromClanRequestProto_Builder*) clear {
  self.result = [[BootPlayerFromClanRequestProto alloc] init];
  return self;
}
- (BootPlayerFromClanRequestProto_Builder*) clone {
  return [BootPlayerFromClanRequestProto builderWithPrototype:result];
}
- (BootPlayerFromClanRequestProto*) defaultInstance {
  return [BootPlayerFromClanRequestProto defaultInstance];
}
- (BootPlayerFromClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BootPlayerFromClanRequestProto*) buildPartial {
  BootPlayerFromClanRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BootPlayerFromClanRequestProto_Builder*) mergeFrom:(BootPlayerFromClanRequestProto*) other {
  if (other == [BootPlayerFromClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasPlayerToBootUuid) {
    [self setPlayerToBootUuid:other.playerToBootUuid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BootPlayerFromClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BootPlayerFromClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setPlayerToBootUuid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BootPlayerFromClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BootPlayerFromClanRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BootPlayerFromClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BootPlayerFromClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasPlayerToBootUuid {
  return result.hasPlayerToBootUuid;
}
- (NSString*) playerToBootUuid {
  return result.playerToBootUuid;
}
- (BootPlayerFromClanRequestProto_Builder*) setPlayerToBootUuid:(NSString*) value {
  result.hasPlayerToBootUuid = YES;
  result.playerToBootUuid = value;
  return self;
}
- (BootPlayerFromClanRequestProto_Builder*) clearPlayerToBootUuid {
  result.hasPlayerToBootUuid = NO;
  result.playerToBootUuid = @"";
  return self;
}
@end

@interface BootPlayerFromClanResponseProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) MinimumUserProto* playerToBoot;
@property BootPlayerFromClanResponseProto_BootPlayerFromClanStatus status;
@end

@implementation BootPlayerFromClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasPlayerToBoot {
  return !!hasPlayerToBoot_;
}
- (void) setHasPlayerToBoot:(BOOL) value_ {
  hasPlayerToBoot_ = !!value_;
}
@synthesize playerToBoot;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.playerToBoot = [MinimumUserProto defaultInstance];
    self.status = BootPlayerFromClanResponseProto_BootPlayerFromClanStatusSuccess;
  }
  return self;
}
static BootPlayerFromClanResponseProto* defaultBootPlayerFromClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [BootPlayerFromClanResponseProto class]) {
    defaultBootPlayerFromClanResponseProtoInstance = [[BootPlayerFromClanResponseProto alloc] init];
  }
}
+ (BootPlayerFromClanResponseProto*) defaultInstance {
  return defaultBootPlayerFromClanResponseProtoInstance;
}
- (BootPlayerFromClanResponseProto*) defaultInstance {
  return defaultBootPlayerFromClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasPlayerToBoot) {
    [output writeMessage:2 value:self.playerToBoot];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasPlayerToBoot) {
    size_ += computeMessageSize(2, self.playerToBoot);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(3, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BootPlayerFromClanResponseProto*) parseFromData:(NSData*) data {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromData:data] build];
}
+ (BootPlayerFromClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (BootPlayerFromClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (BootPlayerFromClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanResponseProto_Builder*) builder {
  return [[BootPlayerFromClanResponseProto_Builder alloc] init];
}
+ (BootPlayerFromClanResponseProto_Builder*) builderWithPrototype:(BootPlayerFromClanResponseProto*) prototype {
  return [[BootPlayerFromClanResponseProto builder] mergeFrom:prototype];
}
- (BootPlayerFromClanResponseProto_Builder*) builder {
  return [BootPlayerFromClanResponseProto builder];
}
- (BootPlayerFromClanResponseProto_Builder*) toBuilder {
  return [BootPlayerFromClanResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPlayerToBoot) {
    [output appendFormat:@"%@%@ {\n", indent, @"playerToBoot"];
    [self.playerToBoot writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BootPlayerFromClanResponseProto class]]) {
    return NO;
  }
  BootPlayerFromClanResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasPlayerToBoot == otherMessage.hasPlayerToBoot &&
      (!self.hasPlayerToBoot || [self.playerToBoot isEqual:otherMessage.playerToBoot]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasPlayerToBoot) {
    hashCode = hashCode * 31 + [self.playerToBoot hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL BootPlayerFromClanResponseProto_BootPlayerFromClanStatusIsValidValue(BootPlayerFromClanResponseProto_BootPlayerFromClanStatus value) {
  switch (value) {
    case BootPlayerFromClanResponseProto_BootPlayerFromClanStatusSuccess:
    case BootPlayerFromClanResponseProto_BootPlayerFromClanStatusFailOther:
    case BootPlayerFromClanResponseProto_BootPlayerFromClanStatusFailNotAuthorized:
    case BootPlayerFromClanResponseProto_BootPlayerFromClanStatusFailBootedNotInClan:
      return YES;
    default:
      return NO;
  }
}
@interface BootPlayerFromClanResponseProto_Builder()
@property (strong) BootPlayerFromClanResponseProto* result;
@end

@implementation BootPlayerFromClanResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BootPlayerFromClanResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BootPlayerFromClanResponseProto_Builder*) clear {
  self.result = [[BootPlayerFromClanResponseProto alloc] init];
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) clone {
  return [BootPlayerFromClanResponseProto builderWithPrototype:result];
}
- (BootPlayerFromClanResponseProto*) defaultInstance {
  return [BootPlayerFromClanResponseProto defaultInstance];
}
- (BootPlayerFromClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BootPlayerFromClanResponseProto*) buildPartial {
  BootPlayerFromClanResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BootPlayerFromClanResponseProto_Builder*) mergeFrom:(BootPlayerFromClanResponseProto*) other {
  if (other == [BootPlayerFromClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasPlayerToBoot) {
    [self mergePlayerToBoot:other.playerToBoot];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BootPlayerFromClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasPlayerToBoot) {
          [subBuilder mergeFrom:self.playerToBoot];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPlayerToBoot:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        BootPlayerFromClanResponseProto_BootPlayerFromClanStatus value = (BootPlayerFromClanResponseProto_BootPlayerFromClanStatus)[input readEnum];
        if (BootPlayerFromClanResponseProto_BootPlayerFromClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BootPlayerFromClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BootPlayerFromClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasPlayerToBoot {
  return result.hasPlayerToBoot;
}
- (MinimumUserProto*) playerToBoot {
  return result.playerToBoot;
}
- (BootPlayerFromClanResponseProto_Builder*) setPlayerToBoot:(MinimumUserProto*) value {
  result.hasPlayerToBoot = YES;
  result.playerToBoot = value;
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) setPlayerToBoot_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setPlayerToBoot:[builderForValue build]];
}
- (BootPlayerFromClanResponseProto_Builder*) mergePlayerToBoot:(MinimumUserProto*) value {
  if (result.hasPlayerToBoot &&
      result.playerToBoot != [MinimumUserProto defaultInstance]) {
    result.playerToBoot =
      [[[MinimumUserProto builderWithPrototype:result.playerToBoot] mergeFrom:value] buildPartial];
  } else {
    result.playerToBoot = value;
  }
  result.hasPlayerToBoot = YES;
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) clearPlayerToBoot {
  result.hasPlayerToBoot = NO;
  result.playerToBoot = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (BootPlayerFromClanResponseProto_BootPlayerFromClanStatus) status {
  return result.status;
}
- (BootPlayerFromClanResponseProto_Builder*) setStatus:(BootPlayerFromClanResponseProto_BootPlayerFromClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = BootPlayerFromClanResponseProto_BootPlayerFromClanStatusSuccess;
  return self;
}
@end

@interface ChangeClanSettingsRequestProto ()
@property (strong) MinimumUserProto* sender;
@property BOOL isChangeDescription;
@property (strong) NSString* descriptionNow;
@property BOOL isChangeJoinType;
@property BOOL requestToJoinRequired;
@property BOOL isChangeIcon;
@property int32_t iconId;
@end

@implementation ChangeClanSettingsRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasIsChangeDescription {
  return !!hasIsChangeDescription_;
}
- (void) setHasIsChangeDescription:(BOOL) value_ {
  hasIsChangeDescription_ = !!value_;
}
- (BOOL) isChangeDescription {
  return !!isChangeDescription_;
}
- (void) setIsChangeDescription:(BOOL) value_ {
  isChangeDescription_ = !!value_;
}
- (BOOL) hasDescriptionNow {
  return !!hasDescriptionNow_;
}
- (void) setHasDescriptionNow:(BOOL) value_ {
  hasDescriptionNow_ = !!value_;
}
@synthesize descriptionNow;
- (BOOL) hasIsChangeJoinType {
  return !!hasIsChangeJoinType_;
}
- (void) setHasIsChangeJoinType:(BOOL) value_ {
  hasIsChangeJoinType_ = !!value_;
}
- (BOOL) isChangeJoinType {
  return !!isChangeJoinType_;
}
- (void) setIsChangeJoinType:(BOOL) value_ {
  isChangeJoinType_ = !!value_;
}
- (BOOL) hasRequestToJoinRequired {
  return !!hasRequestToJoinRequired_;
}
- (void) setHasRequestToJoinRequired:(BOOL) value_ {
  hasRequestToJoinRequired_ = !!value_;
}
- (BOOL) requestToJoinRequired {
  return !!requestToJoinRequired_;
}
- (void) setRequestToJoinRequired:(BOOL) value_ {
  requestToJoinRequired_ = !!value_;
}
- (BOOL) hasIsChangeIcon {
  return !!hasIsChangeIcon_;
}
- (void) setHasIsChangeIcon:(BOOL) value_ {
  hasIsChangeIcon_ = !!value_;
}
- (BOOL) isChangeIcon {
  return !!isChangeIcon_;
}
- (void) setIsChangeIcon:(BOOL) value_ {
  isChangeIcon_ = !!value_;
}
- (BOOL) hasIconId {
  return !!hasIconId_;
}
- (void) setHasIconId:(BOOL) value_ {
  hasIconId_ = !!value_;
}
@synthesize iconId;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.isChangeDescription = NO;
    self.descriptionNow = @"";
    self.isChangeJoinType = NO;
    self.requestToJoinRequired = NO;
    self.isChangeIcon = NO;
    self.iconId = 0;
  }
  return self;
}
static ChangeClanSettingsRequestProto* defaultChangeClanSettingsRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [ChangeClanSettingsRequestProto class]) {
    defaultChangeClanSettingsRequestProtoInstance = [[ChangeClanSettingsRequestProto alloc] init];
  }
}
+ (ChangeClanSettingsRequestProto*) defaultInstance {
  return defaultChangeClanSettingsRequestProtoInstance;
}
- (ChangeClanSettingsRequestProto*) defaultInstance {
  return defaultChangeClanSettingsRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasIsChangeDescription) {
    [output writeBool:2 value:self.isChangeDescription];
  }
  if (self.hasDescriptionNow) {
    [output writeString:3 value:self.descriptionNow];
  }
  if (self.hasIsChangeJoinType) {
    [output writeBool:4 value:self.isChangeJoinType];
  }
  if (self.hasRequestToJoinRequired) {
    [output writeBool:5 value:self.requestToJoinRequired];
  }
  if (self.hasIsChangeIcon) {
    [output writeBool:6 value:self.isChangeIcon];
  }
  if (self.hasIconId) {
    [output writeInt32:7 value:self.iconId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasIsChangeDescription) {
    size_ += computeBoolSize(2, self.isChangeDescription);
  }
  if (self.hasDescriptionNow) {
    size_ += computeStringSize(3, self.descriptionNow);
  }
  if (self.hasIsChangeJoinType) {
    size_ += computeBoolSize(4, self.isChangeJoinType);
  }
  if (self.hasRequestToJoinRequired) {
    size_ += computeBoolSize(5, self.requestToJoinRequired);
  }
  if (self.hasIsChangeIcon) {
    size_ += computeBoolSize(6, self.isChangeIcon);
  }
  if (self.hasIconId) {
    size_ += computeInt32Size(7, self.iconId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ChangeClanSettingsRequestProto*) parseFromData:(NSData*) data {
  return (ChangeClanSettingsRequestProto*)[[[ChangeClanSettingsRequestProto builder] mergeFromData:data] build];
}
+ (ChangeClanSettingsRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanSettingsRequestProto*)[[[ChangeClanSettingsRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanSettingsRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (ChangeClanSettingsRequestProto*)[[[ChangeClanSettingsRequestProto builder] mergeFromInputStream:input] build];
}
+ (ChangeClanSettingsRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanSettingsRequestProto*)[[[ChangeClanSettingsRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanSettingsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChangeClanSettingsRequestProto*)[[[ChangeClanSettingsRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (ChangeClanSettingsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanSettingsRequestProto*)[[[ChangeClanSettingsRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanSettingsRequestProto_Builder*) builder {
  return [[ChangeClanSettingsRequestProto_Builder alloc] init];
}
+ (ChangeClanSettingsRequestProto_Builder*) builderWithPrototype:(ChangeClanSettingsRequestProto*) prototype {
  return [[ChangeClanSettingsRequestProto builder] mergeFrom:prototype];
}
- (ChangeClanSettingsRequestProto_Builder*) builder {
  return [ChangeClanSettingsRequestProto builder];
}
- (ChangeClanSettingsRequestProto_Builder*) toBuilder {
  return [ChangeClanSettingsRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasIsChangeDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isChangeDescription", [NSNumber numberWithBool:self.isChangeDescription]];
  }
  if (self.hasDescriptionNow) {
    [output appendFormat:@"%@%@: %@\n", indent, @"descriptionNow", self.descriptionNow];
  }
  if (self.hasIsChangeJoinType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isChangeJoinType", [NSNumber numberWithBool:self.isChangeJoinType]];
  }
  if (self.hasRequestToJoinRequired) {
    [output appendFormat:@"%@%@: %@\n", indent, @"requestToJoinRequired", [NSNumber numberWithBool:self.requestToJoinRequired]];
  }
  if (self.hasIsChangeIcon) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isChangeIcon", [NSNumber numberWithBool:self.isChangeIcon]];
  }
  if (self.hasIconId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"iconId", [NSNumber numberWithInteger:self.iconId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ChangeClanSettingsRequestProto class]]) {
    return NO;
  }
  ChangeClanSettingsRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasIsChangeDescription == otherMessage.hasIsChangeDescription &&
      (!self.hasIsChangeDescription || self.isChangeDescription == otherMessage.isChangeDescription) &&
      self.hasDescriptionNow == otherMessage.hasDescriptionNow &&
      (!self.hasDescriptionNow || [self.descriptionNow isEqual:otherMessage.descriptionNow]) &&
      self.hasIsChangeJoinType == otherMessage.hasIsChangeJoinType &&
      (!self.hasIsChangeJoinType || self.isChangeJoinType == otherMessage.isChangeJoinType) &&
      self.hasRequestToJoinRequired == otherMessage.hasRequestToJoinRequired &&
      (!self.hasRequestToJoinRequired || self.requestToJoinRequired == otherMessage.requestToJoinRequired) &&
      self.hasIsChangeIcon == otherMessage.hasIsChangeIcon &&
      (!self.hasIsChangeIcon || self.isChangeIcon == otherMessage.isChangeIcon) &&
      self.hasIconId == otherMessage.hasIconId &&
      (!self.hasIconId || self.iconId == otherMessage.iconId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasIsChangeDescription) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isChangeDescription] hash];
  }
  if (self.hasDescriptionNow) {
    hashCode = hashCode * 31 + [self.descriptionNow hash];
  }
  if (self.hasIsChangeJoinType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isChangeJoinType] hash];
  }
  if (self.hasRequestToJoinRequired) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.requestToJoinRequired] hash];
  }
  if (self.hasIsChangeIcon) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isChangeIcon] hash];
  }
  if (self.hasIconId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.iconId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ChangeClanSettingsRequestProto_Builder()
@property (strong) ChangeClanSettingsRequestProto* result;
@end

@implementation ChangeClanSettingsRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ChangeClanSettingsRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChangeClanSettingsRequestProto_Builder*) clear {
  self.result = [[ChangeClanSettingsRequestProto alloc] init];
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) clone {
  return [ChangeClanSettingsRequestProto builderWithPrototype:result];
}
- (ChangeClanSettingsRequestProto*) defaultInstance {
  return [ChangeClanSettingsRequestProto defaultInstance];
}
- (ChangeClanSettingsRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChangeClanSettingsRequestProto*) buildPartial {
  ChangeClanSettingsRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ChangeClanSettingsRequestProto_Builder*) mergeFrom:(ChangeClanSettingsRequestProto*) other {
  if (other == [ChangeClanSettingsRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasIsChangeDescription) {
    [self setIsChangeDescription:other.isChangeDescription];
  }
  if (other.hasDescriptionNow) {
    [self setDescriptionNow:other.descriptionNow];
  }
  if (other.hasIsChangeJoinType) {
    [self setIsChangeJoinType:other.isChangeJoinType];
  }
  if (other.hasRequestToJoinRequired) {
    [self setRequestToJoinRequired:other.requestToJoinRequired];
  }
  if (other.hasIsChangeIcon) {
    [self setIsChangeIcon:other.isChangeIcon];
  }
  if (other.hasIconId) {
    [self setIconId:other.iconId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChangeClanSettingsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setIsChangeDescription:[input readBool]];
        break;
      }
      case 26: {
        [self setDescriptionNow:[input readString]];
        break;
      }
      case 32: {
        [self setIsChangeJoinType:[input readBool]];
        break;
      }
      case 40: {
        [self setRequestToJoinRequired:[input readBool]];
        break;
      }
      case 48: {
        [self setIsChangeIcon:[input readBool]];
        break;
      }
      case 56: {
        [self setIconId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ChangeClanSettingsRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ChangeClanSettingsRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasIsChangeDescription {
  return result.hasIsChangeDescription;
}
- (BOOL) isChangeDescription {
  return result.isChangeDescription;
}
- (ChangeClanSettingsRequestProto_Builder*) setIsChangeDescription:(BOOL) value {
  result.hasIsChangeDescription = YES;
  result.isChangeDescription = value;
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) clearIsChangeDescription {
  result.hasIsChangeDescription = NO;
  result.isChangeDescription = NO;
  return self;
}
- (BOOL) hasDescriptionNow {
  return result.hasDescriptionNow;
}
- (NSString*) descriptionNow {
  return result.descriptionNow;
}
- (ChangeClanSettingsRequestProto_Builder*) setDescriptionNow:(NSString*) value {
  result.hasDescriptionNow = YES;
  result.descriptionNow = value;
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) clearDescriptionNow {
  result.hasDescriptionNow = NO;
  result.descriptionNow = @"";
  return self;
}
- (BOOL) hasIsChangeJoinType {
  return result.hasIsChangeJoinType;
}
- (BOOL) isChangeJoinType {
  return result.isChangeJoinType;
}
- (ChangeClanSettingsRequestProto_Builder*) setIsChangeJoinType:(BOOL) value {
  result.hasIsChangeJoinType = YES;
  result.isChangeJoinType = value;
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) clearIsChangeJoinType {
  result.hasIsChangeJoinType = NO;
  result.isChangeJoinType = NO;
  return self;
}
- (BOOL) hasRequestToJoinRequired {
  return result.hasRequestToJoinRequired;
}
- (BOOL) requestToJoinRequired {
  return result.requestToJoinRequired;
}
- (ChangeClanSettingsRequestProto_Builder*) setRequestToJoinRequired:(BOOL) value {
  result.hasRequestToJoinRequired = YES;
  result.requestToJoinRequired = value;
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) clearRequestToJoinRequired {
  result.hasRequestToJoinRequired = NO;
  result.requestToJoinRequired = NO;
  return self;
}
- (BOOL) hasIsChangeIcon {
  return result.hasIsChangeIcon;
}
- (BOOL) isChangeIcon {
  return result.isChangeIcon;
}
- (ChangeClanSettingsRequestProto_Builder*) setIsChangeIcon:(BOOL) value {
  result.hasIsChangeIcon = YES;
  result.isChangeIcon = value;
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) clearIsChangeIcon {
  result.hasIsChangeIcon = NO;
  result.isChangeIcon = NO;
  return self;
}
- (BOOL) hasIconId {
  return result.hasIconId;
}
- (int32_t) iconId {
  return result.iconId;
}
- (ChangeClanSettingsRequestProto_Builder*) setIconId:(int32_t) value {
  result.hasIconId = YES;
  result.iconId = value;
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) clearIconId {
  result.hasIconId = NO;
  result.iconId = 0;
  return self;
}
@end

@interface ChangeClanSettingsResponseProto ()
@property (strong) MinimumUserProto* sender;
@property ChangeClanSettingsResponseProto_ChangeClanSettingsStatus status;
@property (strong) MinimumClanProto* minClan;
@property (strong) FullClanProtoWithClanSize* fullClan;
@end

@implementation ChangeClanSettingsResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasMinClan {
  return !!hasMinClan_;
}
- (void) setHasMinClan:(BOOL) value_ {
  hasMinClan_ = !!value_;
}
@synthesize minClan;
- (BOOL) hasFullClan {
  return !!hasFullClan_;
}
- (void) setHasFullClan:(BOOL) value_ {
  hasFullClan_ = !!value_;
}
@synthesize fullClan;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = ChangeClanSettingsResponseProto_ChangeClanSettingsStatusSuccess;
    self.minClan = [MinimumClanProto defaultInstance];
    self.fullClan = [FullClanProtoWithClanSize defaultInstance];
  }
  return self;
}
static ChangeClanSettingsResponseProto* defaultChangeClanSettingsResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [ChangeClanSettingsResponseProto class]) {
    defaultChangeClanSettingsResponseProtoInstance = [[ChangeClanSettingsResponseProto alloc] init];
  }
}
+ (ChangeClanSettingsResponseProto*) defaultInstance {
  return defaultChangeClanSettingsResponseProtoInstance;
}
- (ChangeClanSettingsResponseProto*) defaultInstance {
  return defaultChangeClanSettingsResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasMinClan) {
    [output writeMessage:3 value:self.minClan];
  }
  if (self.hasFullClan) {
    [output writeMessage:4 value:self.fullClan];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  if (self.hasMinClan) {
    size_ += computeMessageSize(3, self.minClan);
  }
  if (self.hasFullClan) {
    size_ += computeMessageSize(4, self.fullClan);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ChangeClanSettingsResponseProto*) parseFromData:(NSData*) data {
  return (ChangeClanSettingsResponseProto*)[[[ChangeClanSettingsResponseProto builder] mergeFromData:data] build];
}
+ (ChangeClanSettingsResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanSettingsResponseProto*)[[[ChangeClanSettingsResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanSettingsResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (ChangeClanSettingsResponseProto*)[[[ChangeClanSettingsResponseProto builder] mergeFromInputStream:input] build];
}
+ (ChangeClanSettingsResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanSettingsResponseProto*)[[[ChangeClanSettingsResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanSettingsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChangeClanSettingsResponseProto*)[[[ChangeClanSettingsResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (ChangeClanSettingsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanSettingsResponseProto*)[[[ChangeClanSettingsResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanSettingsResponseProto_Builder*) builder {
  return [[ChangeClanSettingsResponseProto_Builder alloc] init];
}
+ (ChangeClanSettingsResponseProto_Builder*) builderWithPrototype:(ChangeClanSettingsResponseProto*) prototype {
  return [[ChangeClanSettingsResponseProto builder] mergeFrom:prototype];
}
- (ChangeClanSettingsResponseProto_Builder*) builder {
  return [ChangeClanSettingsResponseProto builder];
}
- (ChangeClanSettingsResponseProto_Builder*) toBuilder {
  return [ChangeClanSettingsResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasMinClan) {
    [output appendFormat:@"%@%@ {\n", indent, @"minClan"];
    [self.minClan writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasFullClan) {
    [output appendFormat:@"%@%@ {\n", indent, @"fullClan"];
    [self.fullClan writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ChangeClanSettingsResponseProto class]]) {
    return NO;
  }
  ChangeClanSettingsResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasMinClan == otherMessage.hasMinClan &&
      (!self.hasMinClan || [self.minClan isEqual:otherMessage.minClan]) &&
      self.hasFullClan == otherMessage.hasFullClan &&
      (!self.hasFullClan || [self.fullClan isEqual:otherMessage.fullClan]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasMinClan) {
    hashCode = hashCode * 31 + [self.minClan hash];
  }
  if (self.hasFullClan) {
    hashCode = hashCode * 31 + [self.fullClan hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL ChangeClanSettingsResponseProto_ChangeClanSettingsStatusIsValidValue(ChangeClanSettingsResponseProto_ChangeClanSettingsStatus value) {
  switch (value) {
    case ChangeClanSettingsResponseProto_ChangeClanSettingsStatusSuccess:
    case ChangeClanSettingsResponseProto_ChangeClanSettingsStatusFailNotAuthorized:
    case ChangeClanSettingsResponseProto_ChangeClanSettingsStatusFailNotInClan:
    case ChangeClanSettingsResponseProto_ChangeClanSettingsStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface ChangeClanSettingsResponseProto_Builder()
@property (strong) ChangeClanSettingsResponseProto* result;
@end

@implementation ChangeClanSettingsResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ChangeClanSettingsResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChangeClanSettingsResponseProto_Builder*) clear {
  self.result = [[ChangeClanSettingsResponseProto alloc] init];
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) clone {
  return [ChangeClanSettingsResponseProto builderWithPrototype:result];
}
- (ChangeClanSettingsResponseProto*) defaultInstance {
  return [ChangeClanSettingsResponseProto defaultInstance];
}
- (ChangeClanSettingsResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChangeClanSettingsResponseProto*) buildPartial {
  ChangeClanSettingsResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ChangeClanSettingsResponseProto_Builder*) mergeFrom:(ChangeClanSettingsResponseProto*) other {
  if (other == [ChangeClanSettingsResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasMinClan) {
    [self mergeMinClan:other.minClan];
  }
  if (other.hasFullClan) {
    [self mergeFullClan:other.fullClan];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChangeClanSettingsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        ChangeClanSettingsResponseProto_ChangeClanSettingsStatus value = (ChangeClanSettingsResponseProto_ChangeClanSettingsStatus)[input readEnum];
        if (ChangeClanSettingsResponseProto_ChangeClanSettingsStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasMinClan) {
          [subBuilder mergeFrom:self.minClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinClan:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        if (self.hasFullClan) {
          [subBuilder mergeFrom:self.fullClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFullClan:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ChangeClanSettingsResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ChangeClanSettingsResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (ChangeClanSettingsResponseProto_ChangeClanSettingsStatus) status {
  return result.status;
}
- (ChangeClanSettingsResponseProto_Builder*) setStatus:(ChangeClanSettingsResponseProto_ChangeClanSettingsStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = ChangeClanSettingsResponseProto_ChangeClanSettingsStatusSuccess;
  return self;
}
- (BOOL) hasMinClan {
  return result.hasMinClan;
}
- (MinimumClanProto*) minClan {
  return result.minClan;
}
- (ChangeClanSettingsResponseProto_Builder*) setMinClan:(MinimumClanProto*) value {
  result.hasMinClan = YES;
  result.minClan = value;
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) setMinClan_Builder:(MinimumClanProto_Builder*) builderForValue {
  return [self setMinClan:[builderForValue build]];
}
- (ChangeClanSettingsResponseProto_Builder*) mergeMinClan:(MinimumClanProto*) value {
  if (result.hasMinClan &&
      result.minClan != [MinimumClanProto defaultInstance]) {
    result.minClan =
      [[[MinimumClanProto builderWithPrototype:result.minClan] mergeFrom:value] buildPartial];
  } else {
    result.minClan = value;
  }
  result.hasMinClan = YES;
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) clearMinClan {
  result.hasMinClan = NO;
  result.minClan = [MinimumClanProto defaultInstance];
  return self;
}
- (BOOL) hasFullClan {
  return result.hasFullClan;
}
- (FullClanProtoWithClanSize*) fullClan {
  return result.fullClan;
}
- (ChangeClanSettingsResponseProto_Builder*) setFullClan:(FullClanProtoWithClanSize*) value {
  result.hasFullClan = YES;
  result.fullClan = value;
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) setFullClan_Builder:(FullClanProtoWithClanSize_Builder*) builderForValue {
  return [self setFullClan:[builderForValue build]];
}
- (ChangeClanSettingsResponseProto_Builder*) mergeFullClan:(FullClanProtoWithClanSize*) value {
  if (result.hasFullClan &&
      result.fullClan != [FullClanProtoWithClanSize defaultInstance]) {
    result.fullClan =
      [[[FullClanProtoWithClanSize builderWithPrototype:result.fullClan] mergeFrom:value] buildPartial];
  } else {
    result.fullClan = value;
  }
  result.hasFullClan = YES;
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) clearFullClan {
  result.hasFullClan = NO;
  result.fullClan = [FullClanProtoWithClanSize defaultInstance];
  return self;
}
@end

@interface BeginClanRaidRequestProto ()
@property (strong) MinimumUserProto* sender;
@property int64_t curTime;
@property int32_t raidId;
@property int32_t clanEventId;
@property BOOL setMonsterTeamForRaid;
@property (strong) NSMutableArray * mutableUserMonstersList;
@property BOOL isFirstStage;
@end

@implementation BeginClanRaidRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasCurTime {
  return !!hasCurTime_;
}
- (void) setHasCurTime:(BOOL) value_ {
  hasCurTime_ = !!value_;
}
@synthesize curTime;
- (BOOL) hasRaidId {
  return !!hasRaidId_;
}
- (void) setHasRaidId:(BOOL) value_ {
  hasRaidId_ = !!value_;
}
@synthesize raidId;
- (BOOL) hasClanEventId {
  return !!hasClanEventId_;
}
- (void) setHasClanEventId:(BOOL) value_ {
  hasClanEventId_ = !!value_;
}
@synthesize clanEventId;
- (BOOL) hasSetMonsterTeamForRaid {
  return !!hasSetMonsterTeamForRaid_;
}
- (void) setHasSetMonsterTeamForRaid:(BOOL) value_ {
  hasSetMonsterTeamForRaid_ = !!value_;
}
- (BOOL) setMonsterTeamForRaid {
  return !!setMonsterTeamForRaid_;
}
- (void) setSetMonsterTeamForRaid:(BOOL) value_ {
  setMonsterTeamForRaid_ = !!value_;
}
@synthesize mutableUserMonstersList;
@dynamic userMonstersList;
- (BOOL) hasIsFirstStage {
  return !!hasIsFirstStage_;
}
- (void) setHasIsFirstStage:(BOOL) value_ {
  hasIsFirstStage_ = !!value_;
}
- (BOOL) isFirstStage {
  return !!isFirstStage_;
}
- (void) setIsFirstStage:(BOOL) value_ {
  isFirstStage_ = !!value_;
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.curTime = 0L;
    self.raidId = 0;
    self.clanEventId = 0;
    self.setMonsterTeamForRaid = NO;
    self.isFirstStage = NO;
  }
  return self;
}
static BeginClanRaidRequestProto* defaultBeginClanRaidRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [BeginClanRaidRequestProto class]) {
    defaultBeginClanRaidRequestProtoInstance = [[BeginClanRaidRequestProto alloc] init];
  }
}
+ (BeginClanRaidRequestProto*) defaultInstance {
  return defaultBeginClanRaidRequestProtoInstance;
}
- (BeginClanRaidRequestProto*) defaultInstance {
  return defaultBeginClanRaidRequestProtoInstance;
}
- (NSArray *)userMonstersList {
  return mutableUserMonstersList;
}
- (FullUserMonsterProto*)userMonstersAtIndex:(NSUInteger)index {
  return [mutableUserMonstersList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasCurTime) {
    [output writeInt64:2 value:self.curTime];
  }
  if (self.hasRaidId) {
    [output writeInt32:3 value:self.raidId];
  }
  if (self.hasSetMonsterTeamForRaid) {
    [output writeBool:4 value:self.setMonsterTeamForRaid];
  }
  [self.userMonstersList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:5 value:element];
  }];
  if (self.hasIsFirstStage) {
    [output writeBool:6 value:self.isFirstStage];
  }
  if (self.hasClanEventId) {
    [output writeInt32:7 value:self.clanEventId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasCurTime) {
    size_ += computeInt64Size(2, self.curTime);
  }
  if (self.hasRaidId) {
    size_ += computeInt32Size(3, self.raidId);
  }
  if (self.hasSetMonsterTeamForRaid) {
    size_ += computeBoolSize(4, self.setMonsterTeamForRaid);
  }
  [self.userMonstersList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(5, element);
  }];
  if (self.hasIsFirstStage) {
    size_ += computeBoolSize(6, self.isFirstStage);
  }
  if (self.hasClanEventId) {
    size_ += computeInt32Size(7, self.clanEventId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BeginClanRaidRequestProto*) parseFromData:(NSData*) data {
  return (BeginClanRaidRequestProto*)[[[BeginClanRaidRequestProto builder] mergeFromData:data] build];
}
+ (BeginClanRaidRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanRaidRequestProto*)[[[BeginClanRaidRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BeginClanRaidRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (BeginClanRaidRequestProto*)[[[BeginClanRaidRequestProto builder] mergeFromInputStream:input] build];
}
+ (BeginClanRaidRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanRaidRequestProto*)[[[BeginClanRaidRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginClanRaidRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BeginClanRaidRequestProto*)[[[BeginClanRaidRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (BeginClanRaidRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanRaidRequestProto*)[[[BeginClanRaidRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginClanRaidRequestProto_Builder*) builder {
  return [[BeginClanRaidRequestProto_Builder alloc] init];
}
+ (BeginClanRaidRequestProto_Builder*) builderWithPrototype:(BeginClanRaidRequestProto*) prototype {
  return [[BeginClanRaidRequestProto builder] mergeFrom:prototype];
}
- (BeginClanRaidRequestProto_Builder*) builder {
  return [BeginClanRaidRequestProto builder];
}
- (BeginClanRaidRequestProto_Builder*) toBuilder {
  return [BeginClanRaidRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCurTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"curTime", [NSNumber numberWithLongLong:self.curTime]];
  }
  if (self.hasRaidId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"raidId", [NSNumber numberWithInteger:self.raidId]];
  }
  if (self.hasSetMonsterTeamForRaid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"setMonsterTeamForRaid", [NSNumber numberWithBool:self.setMonsterTeamForRaid]];
  }
  [self.userMonstersList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userMonsters"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasIsFirstStage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isFirstStage", [NSNumber numberWithBool:self.isFirstStage]];
  }
  if (self.hasClanEventId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanEventId", [NSNumber numberWithInteger:self.clanEventId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BeginClanRaidRequestProto class]]) {
    return NO;
  }
  BeginClanRaidRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasCurTime == otherMessage.hasCurTime &&
      (!self.hasCurTime || self.curTime == otherMessage.curTime) &&
      self.hasRaidId == otherMessage.hasRaidId &&
      (!self.hasRaidId || self.raidId == otherMessage.raidId) &&
      self.hasSetMonsterTeamForRaid == otherMessage.hasSetMonsterTeamForRaid &&
      (!self.hasSetMonsterTeamForRaid || self.setMonsterTeamForRaid == otherMessage.setMonsterTeamForRaid) &&
      [self.userMonstersList isEqualToArray:otherMessage.userMonstersList] &&
      self.hasIsFirstStage == otherMessage.hasIsFirstStage &&
      (!self.hasIsFirstStage || self.isFirstStage == otherMessage.isFirstStage) &&
      self.hasClanEventId == otherMessage.hasClanEventId &&
      (!self.hasClanEventId || self.clanEventId == otherMessage.clanEventId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasCurTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.curTime] hash];
  }
  if (self.hasRaidId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.raidId] hash];
  }
  if (self.hasSetMonsterTeamForRaid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.setMonsterTeamForRaid] hash];
  }
  [self.userMonstersList enumerateObjectsUsingBlock:^(FullUserMonsterProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasIsFirstStage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isFirstStage] hash];
  }
  if (self.hasClanEventId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clanEventId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BeginClanRaidRequestProto_Builder()
@property (strong) BeginClanRaidRequestProto* result;
@end

@implementation BeginClanRaidRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BeginClanRaidRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BeginClanRaidRequestProto_Builder*) clear {
  self.result = [[BeginClanRaidRequestProto alloc] init];
  return self;
}
- (BeginClanRaidRequestProto_Builder*) clone {
  return [BeginClanRaidRequestProto builderWithPrototype:result];
}
- (BeginClanRaidRequestProto*) defaultInstance {
  return [BeginClanRaidRequestProto defaultInstance];
}
- (BeginClanRaidRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BeginClanRaidRequestProto*) buildPartial {
  BeginClanRaidRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BeginClanRaidRequestProto_Builder*) mergeFrom:(BeginClanRaidRequestProto*) other {
  if (other == [BeginClanRaidRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasCurTime) {
    [self setCurTime:other.curTime];
  }
  if (other.hasRaidId) {
    [self setRaidId:other.raidId];
  }
  if (other.hasClanEventId) {
    [self setClanEventId:other.clanEventId];
  }
  if (other.hasSetMonsterTeamForRaid) {
    [self setSetMonsterTeamForRaid:other.setMonsterTeamForRaid];
  }
  if (other.mutableUserMonstersList.count > 0) {
    if (result.mutableUserMonstersList == nil) {
      result.mutableUserMonstersList = [[NSMutableArray alloc] initWithArray:other.mutableUserMonstersList];
    } else {
      [result.mutableUserMonstersList addObjectsFromArray:other.mutableUserMonstersList];
    }
  }
  if (other.hasIsFirstStage) {
    [self setIsFirstStage:other.isFirstStage];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BeginClanRaidRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BeginClanRaidRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setCurTime:[input readInt64]];
        break;
      }
      case 24: {
        [self setRaidId:[input readInt32]];
        break;
      }
      case 32: {
        [self setSetMonsterTeamForRaid:[input readBool]];
        break;
      }
      case 42: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserMonsters:[subBuilder buildPartial]];
        break;
      }
      case 48: {
        [self setIsFirstStage:[input readBool]];
        break;
      }
      case 56: {
        [self setClanEventId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BeginClanRaidRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BeginClanRaidRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BeginClanRaidRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BeginClanRaidRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasCurTime {
  return result.hasCurTime;
}
- (int64_t) curTime {
  return result.curTime;
}
- (BeginClanRaidRequestProto_Builder*) setCurTime:(int64_t) value {
  result.hasCurTime = YES;
  result.curTime = value;
  return self;
}
- (BeginClanRaidRequestProto_Builder*) clearCurTime {
  result.hasCurTime = NO;
  result.curTime = 0L;
  return self;
}
- (BOOL) hasRaidId {
  return result.hasRaidId;
}
- (int32_t) raidId {
  return result.raidId;
}
- (BeginClanRaidRequestProto_Builder*) setRaidId:(int32_t) value {
  result.hasRaidId = YES;
  result.raidId = value;
  return self;
}
- (BeginClanRaidRequestProto_Builder*) clearRaidId {
  result.hasRaidId = NO;
  result.raidId = 0;
  return self;
}
- (BOOL) hasClanEventId {
  return result.hasClanEventId;
}
- (int32_t) clanEventId {
  return result.clanEventId;
}
- (BeginClanRaidRequestProto_Builder*) setClanEventId:(int32_t) value {
  result.hasClanEventId = YES;
  result.clanEventId = value;
  return self;
}
- (BeginClanRaidRequestProto_Builder*) clearClanEventId {
  result.hasClanEventId = NO;
  result.clanEventId = 0;
  return self;
}
- (BOOL) hasSetMonsterTeamForRaid {
  return result.hasSetMonsterTeamForRaid;
}
- (BOOL) setMonsterTeamForRaid {
  return result.setMonsterTeamForRaid;
}
- (BeginClanRaidRequestProto_Builder*) setSetMonsterTeamForRaid:(BOOL) value {
  result.hasSetMonsterTeamForRaid = YES;
  result.setMonsterTeamForRaid = value;
  return self;
}
- (BeginClanRaidRequestProto_Builder*) clearSetMonsterTeamForRaid {
  result.hasSetMonsterTeamForRaid = NO;
  result.setMonsterTeamForRaid = NO;
  return self;
}
- (NSMutableArray *)userMonstersList {
  return result.mutableUserMonstersList;
}
- (FullUserMonsterProto*)userMonstersAtIndex:(NSUInteger)index {
  return [result userMonstersAtIndex:index];
}
- (BeginClanRaidRequestProto_Builder *)addUserMonsters:(FullUserMonsterProto*)value {
  if (result.mutableUserMonstersList == nil) {
    result.mutableUserMonstersList = [[NSMutableArray alloc]init];
  }
  [result.mutableUserMonstersList addObject:value];
  return self;
}
- (BeginClanRaidRequestProto_Builder *)addAllUserMonsters:(NSArray *)array {
  if (result.mutableUserMonstersList == nil) {
    result.mutableUserMonstersList = [NSMutableArray array];
  }
  [result.mutableUserMonstersList addObjectsFromArray:array];
  return self;
}
- (BeginClanRaidRequestProto_Builder *)clearUserMonsters {
  result.mutableUserMonstersList = nil;
  return self;
}
- (BOOL) hasIsFirstStage {
  return result.hasIsFirstStage;
}
- (BOOL) isFirstStage {
  return result.isFirstStage;
}
- (BeginClanRaidRequestProto_Builder*) setIsFirstStage:(BOOL) value {
  result.hasIsFirstStage = YES;
  result.isFirstStage = value;
  return self;
}
- (BeginClanRaidRequestProto_Builder*) clearIsFirstStage {
  result.hasIsFirstStage = NO;
  result.isFirstStage = NO;
  return self;
}
@end

@interface BeginClanRaidResponseProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) PersistentClanEventClanInfoProto* eventDetails;
@property BeginClanRaidResponseProto_BeginClanRaidStatus status;
@property (strong) PersistentClanEventUserInfoProto* userDetails;
@end

@implementation BeginClanRaidResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasEventDetails {
  return !!hasEventDetails_;
}
- (void) setHasEventDetails:(BOOL) value_ {
  hasEventDetails_ = !!value_;
}
@synthesize eventDetails;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasUserDetails {
  return !!hasUserDetails_;
}
- (void) setHasUserDetails:(BOOL) value_ {
  hasUserDetails_ = !!value_;
}
@synthesize userDetails;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.eventDetails = [PersistentClanEventClanInfoProto defaultInstance];
    self.status = BeginClanRaidResponseProto_BeginClanRaidStatusSuccess;
    self.userDetails = [PersistentClanEventUserInfoProto defaultInstance];
  }
  return self;
}
static BeginClanRaidResponseProto* defaultBeginClanRaidResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [BeginClanRaidResponseProto class]) {
    defaultBeginClanRaidResponseProtoInstance = [[BeginClanRaidResponseProto alloc] init];
  }
}
+ (BeginClanRaidResponseProto*) defaultInstance {
  return defaultBeginClanRaidResponseProtoInstance;
}
- (BeginClanRaidResponseProto*) defaultInstance {
  return defaultBeginClanRaidResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasEventDetails) {
    [output writeMessage:2 value:self.eventDetails];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  if (self.hasUserDetails) {
    [output writeMessage:4 value:self.userDetails];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasEventDetails) {
    size_ += computeMessageSize(2, self.eventDetails);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(3, self.status);
  }
  if (self.hasUserDetails) {
    size_ += computeMessageSize(4, self.userDetails);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BeginClanRaidResponseProto*) parseFromData:(NSData*) data {
  return (BeginClanRaidResponseProto*)[[[BeginClanRaidResponseProto builder] mergeFromData:data] build];
}
+ (BeginClanRaidResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanRaidResponseProto*)[[[BeginClanRaidResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BeginClanRaidResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (BeginClanRaidResponseProto*)[[[BeginClanRaidResponseProto builder] mergeFromInputStream:input] build];
}
+ (BeginClanRaidResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanRaidResponseProto*)[[[BeginClanRaidResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginClanRaidResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BeginClanRaidResponseProto*)[[[BeginClanRaidResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (BeginClanRaidResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanRaidResponseProto*)[[[BeginClanRaidResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginClanRaidResponseProto_Builder*) builder {
  return [[BeginClanRaidResponseProto_Builder alloc] init];
}
+ (BeginClanRaidResponseProto_Builder*) builderWithPrototype:(BeginClanRaidResponseProto*) prototype {
  return [[BeginClanRaidResponseProto builder] mergeFrom:prototype];
}
- (BeginClanRaidResponseProto_Builder*) builder {
  return [BeginClanRaidResponseProto builder];
}
- (BeginClanRaidResponseProto_Builder*) toBuilder {
  return [BeginClanRaidResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasEventDetails) {
    [output appendFormat:@"%@%@ {\n", indent, @"eventDetails"];
    [self.eventDetails writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasUserDetails) {
    [output appendFormat:@"%@%@ {\n", indent, @"userDetails"];
    [self.userDetails writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BeginClanRaidResponseProto class]]) {
    return NO;
  }
  BeginClanRaidResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasEventDetails == otherMessage.hasEventDetails &&
      (!self.hasEventDetails || [self.eventDetails isEqual:otherMessage.eventDetails]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasUserDetails == otherMessage.hasUserDetails &&
      (!self.hasUserDetails || [self.userDetails isEqual:otherMessage.userDetails]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasEventDetails) {
    hashCode = hashCode * 31 + [self.eventDetails hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasUserDetails) {
    hashCode = hashCode * 31 + [self.userDetails hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL BeginClanRaidResponseProto_BeginClanRaidStatusIsValidValue(BeginClanRaidResponseProto_BeginClanRaidStatus value) {
  switch (value) {
    case BeginClanRaidResponseProto_BeginClanRaidStatusSuccess:
    case BeginClanRaidResponseProto_BeginClanRaidStatusFailAlreadyStarted:
    case BeginClanRaidResponseProto_BeginClanRaidStatusFailNotAuthorized:
    case BeginClanRaidResponseProto_BeginClanRaidStatusFailNoActiveClanRaid:
    case BeginClanRaidResponseProto_BeginClanRaidStatusFailNoMonstersSent:
    case BeginClanRaidResponseProto_BeginClanRaidStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface BeginClanRaidResponseProto_Builder()
@property (strong) BeginClanRaidResponseProto* result;
@end

@implementation BeginClanRaidResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BeginClanRaidResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BeginClanRaidResponseProto_Builder*) clear {
  self.result = [[BeginClanRaidResponseProto alloc] init];
  return self;
}
- (BeginClanRaidResponseProto_Builder*) clone {
  return [BeginClanRaidResponseProto builderWithPrototype:result];
}
- (BeginClanRaidResponseProto*) defaultInstance {
  return [BeginClanRaidResponseProto defaultInstance];
}
- (BeginClanRaidResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BeginClanRaidResponseProto*) buildPartial {
  BeginClanRaidResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BeginClanRaidResponseProto_Builder*) mergeFrom:(BeginClanRaidResponseProto*) other {
  if (other == [BeginClanRaidResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasEventDetails) {
    [self mergeEventDetails:other.eventDetails];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasUserDetails) {
    [self mergeUserDetails:other.userDetails];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BeginClanRaidResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BeginClanRaidResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PersistentClanEventClanInfoProto_Builder* subBuilder = [PersistentClanEventClanInfoProto builder];
        if (self.hasEventDetails) {
          [subBuilder mergeFrom:self.eventDetails];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEventDetails:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        BeginClanRaidResponseProto_BeginClanRaidStatus value = (BeginClanRaidResponseProto_BeginClanRaidStatus)[input readEnum];
        if (BeginClanRaidResponseProto_BeginClanRaidStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 34: {
        PersistentClanEventUserInfoProto_Builder* subBuilder = [PersistentClanEventUserInfoProto builder];
        if (self.hasUserDetails) {
          [subBuilder mergeFrom:self.userDetails];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserDetails:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BeginClanRaidResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BeginClanRaidResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BeginClanRaidResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BeginClanRaidResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasEventDetails {
  return result.hasEventDetails;
}
- (PersistentClanEventClanInfoProto*) eventDetails {
  return result.eventDetails;
}
- (BeginClanRaidResponseProto_Builder*) setEventDetails:(PersistentClanEventClanInfoProto*) value {
  result.hasEventDetails = YES;
  result.eventDetails = value;
  return self;
}
- (BeginClanRaidResponseProto_Builder*) setEventDetails_Builder:(PersistentClanEventClanInfoProto_Builder*) builderForValue {
  return [self setEventDetails:[builderForValue build]];
}
- (BeginClanRaidResponseProto_Builder*) mergeEventDetails:(PersistentClanEventClanInfoProto*) value {
  if (result.hasEventDetails &&
      result.eventDetails != [PersistentClanEventClanInfoProto defaultInstance]) {
    result.eventDetails =
      [[[PersistentClanEventClanInfoProto builderWithPrototype:result.eventDetails] mergeFrom:value] buildPartial];
  } else {
    result.eventDetails = value;
  }
  result.hasEventDetails = YES;
  return self;
}
- (BeginClanRaidResponseProto_Builder*) clearEventDetails {
  result.hasEventDetails = NO;
  result.eventDetails = [PersistentClanEventClanInfoProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (BeginClanRaidResponseProto_BeginClanRaidStatus) status {
  return result.status;
}
- (BeginClanRaidResponseProto_Builder*) setStatus:(BeginClanRaidResponseProto_BeginClanRaidStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (BeginClanRaidResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = BeginClanRaidResponseProto_BeginClanRaidStatusSuccess;
  return self;
}
- (BOOL) hasUserDetails {
  return result.hasUserDetails;
}
- (PersistentClanEventUserInfoProto*) userDetails {
  return result.userDetails;
}
- (BeginClanRaidResponseProto_Builder*) setUserDetails:(PersistentClanEventUserInfoProto*) value {
  result.hasUserDetails = YES;
  result.userDetails = value;
  return self;
}
- (BeginClanRaidResponseProto_Builder*) setUserDetails_Builder:(PersistentClanEventUserInfoProto_Builder*) builderForValue {
  return [self setUserDetails:[builderForValue build]];
}
- (BeginClanRaidResponseProto_Builder*) mergeUserDetails:(PersistentClanEventUserInfoProto*) value {
  if (result.hasUserDetails &&
      result.userDetails != [PersistentClanEventUserInfoProto defaultInstance]) {
    result.userDetails =
      [[[PersistentClanEventUserInfoProto builderWithPrototype:result.userDetails] mergeFrom:value] buildPartial];
  } else {
    result.userDetails = value;
  }
  result.hasUserDetails = YES;
  return self;
}
- (BeginClanRaidResponseProto_Builder*) clearUserDetails {
  result.hasUserDetails = NO;
  result.userDetails = [PersistentClanEventUserInfoProto defaultInstance];
  return self;
}
@end

@interface AttackClanRaidMonsterRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) PersistentClanEventClanInfoProto* eventDetails;
@property int64_t clientTime;
@property int32_t damageDealt;
@property (strong) NSMutableArray * mutableMonsterHealthsList;
@property (strong) FullUserMonsterProto* userMonsterThatAttacked;
@property (strong) UserCurrentMonsterTeamProto* userMonsterTeam;
@end

@implementation AttackClanRaidMonsterRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasEventDetails {
  return !!hasEventDetails_;
}
- (void) setHasEventDetails:(BOOL) value_ {
  hasEventDetails_ = !!value_;
}
@synthesize eventDetails;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (BOOL) hasDamageDealt {
  return !!hasDamageDealt_;
}
- (void) setHasDamageDealt:(BOOL) value_ {
  hasDamageDealt_ = !!value_;
}
@synthesize damageDealt;
@synthesize mutableMonsterHealthsList;
@dynamic monsterHealthsList;
- (BOOL) hasUserMonsterThatAttacked {
  return !!hasUserMonsterThatAttacked_;
}
- (void) setHasUserMonsterThatAttacked:(BOOL) value_ {
  hasUserMonsterThatAttacked_ = !!value_;
}
@synthesize userMonsterThatAttacked;
- (BOOL) hasUserMonsterTeam {
  return !!hasUserMonsterTeam_;
}
- (void) setHasUserMonsterTeam:(BOOL) value_ {
  hasUserMonsterTeam_ = !!value_;
}
@synthesize userMonsterTeam;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.eventDetails = [PersistentClanEventClanInfoProto defaultInstance];
    self.clientTime = 0L;
    self.damageDealt = 0;
    self.userMonsterThatAttacked = [FullUserMonsterProto defaultInstance];
    self.userMonsterTeam = [UserCurrentMonsterTeamProto defaultInstance];
  }
  return self;
}
static AttackClanRaidMonsterRequestProto* defaultAttackClanRaidMonsterRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [AttackClanRaidMonsterRequestProto class]) {
    defaultAttackClanRaidMonsterRequestProtoInstance = [[AttackClanRaidMonsterRequestProto alloc] init];
  }
}
+ (AttackClanRaidMonsterRequestProto*) defaultInstance {
  return defaultAttackClanRaidMonsterRequestProtoInstance;
}
- (AttackClanRaidMonsterRequestProto*) defaultInstance {
  return defaultAttackClanRaidMonsterRequestProtoInstance;
}
- (NSArray *)monsterHealthsList {
  return mutableMonsterHealthsList;
}
- (UserMonsterCurrentHealthProto*)monsterHealthsAtIndex:(NSUInteger)index {
  return [mutableMonsterHealthsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasEventDetails) {
    [output writeMessage:2 value:self.eventDetails];
  }
  if (self.hasClientTime) {
    [output writeInt64:3 value:self.clientTime];
  }
  if (self.hasDamageDealt) {
    [output writeInt32:4 value:self.damageDealt];
  }
  [self.monsterHealthsList enumerateObjectsUsingBlock:^(UserMonsterCurrentHealthProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:5 value:element];
  }];
  if (self.hasUserMonsterThatAttacked) {
    [output writeMessage:9 value:self.userMonsterThatAttacked];
  }
  if (self.hasUserMonsterTeam) {
    [output writeMessage:10 value:self.userMonsterTeam];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasEventDetails) {
    size_ += computeMessageSize(2, self.eventDetails);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(3, self.clientTime);
  }
  if (self.hasDamageDealt) {
    size_ += computeInt32Size(4, self.damageDealt);
  }
  [self.monsterHealthsList enumerateObjectsUsingBlock:^(UserMonsterCurrentHealthProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(5, element);
  }];
  if (self.hasUserMonsterThatAttacked) {
    size_ += computeMessageSize(9, self.userMonsterThatAttacked);
  }
  if (self.hasUserMonsterTeam) {
    size_ += computeMessageSize(10, self.userMonsterTeam);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AttackClanRaidMonsterRequestProto*) parseFromData:(NSData*) data {
  return (AttackClanRaidMonsterRequestProto*)[[[AttackClanRaidMonsterRequestProto builder] mergeFromData:data] build];
}
+ (AttackClanRaidMonsterRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AttackClanRaidMonsterRequestProto*)[[[AttackClanRaidMonsterRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AttackClanRaidMonsterRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (AttackClanRaidMonsterRequestProto*)[[[AttackClanRaidMonsterRequestProto builder] mergeFromInputStream:input] build];
}
+ (AttackClanRaidMonsterRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AttackClanRaidMonsterRequestProto*)[[[AttackClanRaidMonsterRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AttackClanRaidMonsterRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AttackClanRaidMonsterRequestProto*)[[[AttackClanRaidMonsterRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (AttackClanRaidMonsterRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AttackClanRaidMonsterRequestProto*)[[[AttackClanRaidMonsterRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AttackClanRaidMonsterRequestProto_Builder*) builder {
  return [[AttackClanRaidMonsterRequestProto_Builder alloc] init];
}
+ (AttackClanRaidMonsterRequestProto_Builder*) builderWithPrototype:(AttackClanRaidMonsterRequestProto*) prototype {
  return [[AttackClanRaidMonsterRequestProto builder] mergeFrom:prototype];
}
- (AttackClanRaidMonsterRequestProto_Builder*) builder {
  return [AttackClanRaidMonsterRequestProto builder];
}
- (AttackClanRaidMonsterRequestProto_Builder*) toBuilder {
  return [AttackClanRaidMonsterRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasEventDetails) {
    [output appendFormat:@"%@%@ {\n", indent, @"eventDetails"];
    [self.eventDetails writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  if (self.hasDamageDealt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"damageDealt", [NSNumber numberWithInteger:self.damageDealt]];
  }
  [self.monsterHealthsList enumerateObjectsUsingBlock:^(UserMonsterCurrentHealthProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"monsterHealths"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasUserMonsterThatAttacked) {
    [output appendFormat:@"%@%@ {\n", indent, @"userMonsterThatAttacked"];
    [self.userMonsterThatAttacked writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasUserMonsterTeam) {
    [output appendFormat:@"%@%@ {\n", indent, @"userMonsterTeam"];
    [self.userMonsterTeam writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AttackClanRaidMonsterRequestProto class]]) {
    return NO;
  }
  AttackClanRaidMonsterRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasEventDetails == otherMessage.hasEventDetails &&
      (!self.hasEventDetails || [self.eventDetails isEqual:otherMessage.eventDetails]) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      self.hasDamageDealt == otherMessage.hasDamageDealt &&
      (!self.hasDamageDealt || self.damageDealt == otherMessage.damageDealt) &&
      [self.monsterHealthsList isEqualToArray:otherMessage.monsterHealthsList] &&
      self.hasUserMonsterThatAttacked == otherMessage.hasUserMonsterThatAttacked &&
      (!self.hasUserMonsterThatAttacked || [self.userMonsterThatAttacked isEqual:otherMessage.userMonsterThatAttacked]) &&
      self.hasUserMonsterTeam == otherMessage.hasUserMonsterTeam &&
      (!self.hasUserMonsterTeam || [self.userMonsterTeam isEqual:otherMessage.userMonsterTeam]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasEventDetails) {
    hashCode = hashCode * 31 + [self.eventDetails hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  if (self.hasDamageDealt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.damageDealt] hash];
  }
  [self.monsterHealthsList enumerateObjectsUsingBlock:^(UserMonsterCurrentHealthProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasUserMonsterThatAttacked) {
    hashCode = hashCode * 31 + [self.userMonsterThatAttacked hash];
  }
  if (self.hasUserMonsterTeam) {
    hashCode = hashCode * 31 + [self.userMonsterTeam hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AttackClanRaidMonsterRequestProto_Builder()
@property (strong) AttackClanRaidMonsterRequestProto* result;
@end

@implementation AttackClanRaidMonsterRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[AttackClanRaidMonsterRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clear {
  self.result = [[AttackClanRaidMonsterRequestProto alloc] init];
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clone {
  return [AttackClanRaidMonsterRequestProto builderWithPrototype:result];
}
- (AttackClanRaidMonsterRequestProto*) defaultInstance {
  return [AttackClanRaidMonsterRequestProto defaultInstance];
}
- (AttackClanRaidMonsterRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AttackClanRaidMonsterRequestProto*) buildPartial {
  AttackClanRaidMonsterRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (AttackClanRaidMonsterRequestProto_Builder*) mergeFrom:(AttackClanRaidMonsterRequestProto*) other {
  if (other == [AttackClanRaidMonsterRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasEventDetails) {
    [self mergeEventDetails:other.eventDetails];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.hasDamageDealt) {
    [self setDamageDealt:other.damageDealt];
  }
  if (other.mutableMonsterHealthsList.count > 0) {
    if (result.mutableMonsterHealthsList == nil) {
      result.mutableMonsterHealthsList = [[NSMutableArray alloc] initWithArray:other.mutableMonsterHealthsList];
    } else {
      [result.mutableMonsterHealthsList addObjectsFromArray:other.mutableMonsterHealthsList];
    }
  }
  if (other.hasUserMonsterThatAttacked) {
    [self mergeUserMonsterThatAttacked:other.userMonsterThatAttacked];
  }
  if (other.hasUserMonsterTeam) {
    [self mergeUserMonsterTeam:other.userMonsterTeam];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AttackClanRaidMonsterRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PersistentClanEventClanInfoProto_Builder* subBuilder = [PersistentClanEventClanInfoProto builder];
        if (self.hasEventDetails) {
          [subBuilder mergeFrom:self.eventDetails];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEventDetails:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 32: {
        [self setDamageDealt:[input readInt32]];
        break;
      }
      case 42: {
        UserMonsterCurrentHealthProto_Builder* subBuilder = [UserMonsterCurrentHealthProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMonsterHealths:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        if (self.hasUserMonsterThatAttacked) {
          [subBuilder mergeFrom:self.userMonsterThatAttacked];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserMonsterThatAttacked:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        UserCurrentMonsterTeamProto_Builder* subBuilder = [UserCurrentMonsterTeamProto builder];
        if (self.hasUserMonsterTeam) {
          [subBuilder mergeFrom:self.userMonsterTeam];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserMonsterTeam:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (AttackClanRaidMonsterRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasEventDetails {
  return result.hasEventDetails;
}
- (PersistentClanEventClanInfoProto*) eventDetails {
  return result.eventDetails;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setEventDetails:(PersistentClanEventClanInfoProto*) value {
  result.hasEventDetails = YES;
  result.eventDetails = value;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setEventDetails_Builder:(PersistentClanEventClanInfoProto_Builder*) builderForValue {
  return [self setEventDetails:[builderForValue build]];
}
- (AttackClanRaidMonsterRequestProto_Builder*) mergeEventDetails:(PersistentClanEventClanInfoProto*) value {
  if (result.hasEventDetails &&
      result.eventDetails != [PersistentClanEventClanInfoProto defaultInstance]) {
    result.eventDetails =
      [[[PersistentClanEventClanInfoProto builderWithPrototype:result.eventDetails] mergeFrom:value] buildPartial];
  } else {
    result.eventDetails = value;
  }
  result.hasEventDetails = YES;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clearEventDetails {
  result.hasEventDetails = NO;
  result.eventDetails = [PersistentClanEventClanInfoProto defaultInstance];
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (BOOL) hasDamageDealt {
  return result.hasDamageDealt;
}
- (int32_t) damageDealt {
  return result.damageDealt;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setDamageDealt:(int32_t) value {
  result.hasDamageDealt = YES;
  result.damageDealt = value;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clearDamageDealt {
  result.hasDamageDealt = NO;
  result.damageDealt = 0;
  return self;
}
- (NSMutableArray *)monsterHealthsList {
  return result.mutableMonsterHealthsList;
}
- (UserMonsterCurrentHealthProto*)monsterHealthsAtIndex:(NSUInteger)index {
  return [result monsterHealthsAtIndex:index];
}
- (AttackClanRaidMonsterRequestProto_Builder *)addMonsterHealths:(UserMonsterCurrentHealthProto*)value {
  if (result.mutableMonsterHealthsList == nil) {
    result.mutableMonsterHealthsList = [[NSMutableArray alloc]init];
  }
  [result.mutableMonsterHealthsList addObject:value];
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder *)addAllMonsterHealths:(NSArray *)array {
  if (result.mutableMonsterHealthsList == nil) {
    result.mutableMonsterHealthsList = [NSMutableArray array];
  }
  [result.mutableMonsterHealthsList addObjectsFromArray:array];
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder *)clearMonsterHealths {
  result.mutableMonsterHealthsList = nil;
  return self;
}
- (BOOL) hasUserMonsterThatAttacked {
  return result.hasUserMonsterThatAttacked;
}
- (FullUserMonsterProto*) userMonsterThatAttacked {
  return result.userMonsterThatAttacked;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setUserMonsterThatAttacked:(FullUserMonsterProto*) value {
  result.hasUserMonsterThatAttacked = YES;
  result.userMonsterThatAttacked = value;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setUserMonsterThatAttacked_Builder:(FullUserMonsterProto_Builder*) builderForValue {
  return [self setUserMonsterThatAttacked:[builderForValue build]];
}
- (AttackClanRaidMonsterRequestProto_Builder*) mergeUserMonsterThatAttacked:(FullUserMonsterProto*) value {
  if (result.hasUserMonsterThatAttacked &&
      result.userMonsterThatAttacked != [FullUserMonsterProto defaultInstance]) {
    result.userMonsterThatAttacked =
      [[[FullUserMonsterProto builderWithPrototype:result.userMonsterThatAttacked] mergeFrom:value] buildPartial];
  } else {
    result.userMonsterThatAttacked = value;
  }
  result.hasUserMonsterThatAttacked = YES;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clearUserMonsterThatAttacked {
  result.hasUserMonsterThatAttacked = NO;
  result.userMonsterThatAttacked = [FullUserMonsterProto defaultInstance];
  return self;
}
- (BOOL) hasUserMonsterTeam {
  return result.hasUserMonsterTeam;
}
- (UserCurrentMonsterTeamProto*) userMonsterTeam {
  return result.userMonsterTeam;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setUserMonsterTeam:(UserCurrentMonsterTeamProto*) value {
  result.hasUserMonsterTeam = YES;
  result.userMonsterTeam = value;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setUserMonsterTeam_Builder:(UserCurrentMonsterTeamProto_Builder*) builderForValue {
  return [self setUserMonsterTeam:[builderForValue build]];
}
- (AttackClanRaidMonsterRequestProto_Builder*) mergeUserMonsterTeam:(UserCurrentMonsterTeamProto*) value {
  if (result.hasUserMonsterTeam &&
      result.userMonsterTeam != [UserCurrentMonsterTeamProto defaultInstance]) {
    result.userMonsterTeam =
      [[[UserCurrentMonsterTeamProto builderWithPrototype:result.userMonsterTeam] mergeFrom:value] buildPartial];
  } else {
    result.userMonsterTeam = value;
  }
  result.hasUserMonsterTeam = YES;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clearUserMonsterTeam {
  result.hasUserMonsterTeam = NO;
  result.userMonsterTeam = [UserCurrentMonsterTeamProto defaultInstance];
  return self;
}
@end

@interface AttackClanRaidMonsterResponseProto ()
@property (strong) MinimumUserProto* sender;
@property int32_t dmgDealt;
@property (strong) PersistentClanEventClanInfoProto* eventDetails;
@property (strong) NSMutableArray * mutableClanUsersDetailsList;
@property (strong) FullUserMonsterProto* userMonsterThatAttacked;
@property AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatus status;
@end

@implementation AttackClanRaidMonsterResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasDmgDealt {
  return !!hasDmgDealt_;
}
- (void) setHasDmgDealt:(BOOL) value_ {
  hasDmgDealt_ = !!value_;
}
@synthesize dmgDealt;
- (BOOL) hasEventDetails {
  return !!hasEventDetails_;
}
- (void) setHasEventDetails:(BOOL) value_ {
  hasEventDetails_ = !!value_;
}
@synthesize eventDetails;
@synthesize mutableClanUsersDetailsList;
@dynamic clanUsersDetailsList;
- (BOOL) hasUserMonsterThatAttacked {
  return !!hasUserMonsterThatAttacked_;
}
- (void) setHasUserMonsterThatAttacked:(BOOL) value_ {
  hasUserMonsterThatAttacked_ = !!value_;
}
@synthesize userMonsterThatAttacked;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.dmgDealt = 0;
    self.eventDetails = [PersistentClanEventClanInfoProto defaultInstance];
    self.userMonsterThatAttacked = [FullUserMonsterProto defaultInstance];
    self.status = AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusSuccess;
  }
  return self;
}
static AttackClanRaidMonsterResponseProto* defaultAttackClanRaidMonsterResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [AttackClanRaidMonsterResponseProto class]) {
    defaultAttackClanRaidMonsterResponseProtoInstance = [[AttackClanRaidMonsterResponseProto alloc] init];
  }
}
+ (AttackClanRaidMonsterResponseProto*) defaultInstance {
  return defaultAttackClanRaidMonsterResponseProtoInstance;
}
- (AttackClanRaidMonsterResponseProto*) defaultInstance {
  return defaultAttackClanRaidMonsterResponseProtoInstance;
}
- (NSArray *)clanUsersDetailsList {
  return mutableClanUsersDetailsList;
}
- (PersistentClanEventUserInfoProto*)clanUsersDetailsAtIndex:(NSUInteger)index {
  return [mutableClanUsersDetailsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasDmgDealt) {
    [output writeInt32:2 value:self.dmgDealt];
  }
  if (self.hasEventDetails) {
    [output writeMessage:3 value:self.eventDetails];
  }
  [self.clanUsersDetailsList enumerateObjectsUsingBlock:^(PersistentClanEventUserInfoProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  if (self.hasUserMonsterThatAttacked) {
    [output writeMessage:5 value:self.userMonsterThatAttacked];
  }
  if (self.hasStatus) {
    [output writeEnum:6 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasDmgDealt) {
    size_ += computeInt32Size(2, self.dmgDealt);
  }
  if (self.hasEventDetails) {
    size_ += computeMessageSize(3, self.eventDetails);
  }
  [self.clanUsersDetailsList enumerateObjectsUsingBlock:^(PersistentClanEventUserInfoProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  if (self.hasUserMonsterThatAttacked) {
    size_ += computeMessageSize(5, self.userMonsterThatAttacked);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(6, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AttackClanRaidMonsterResponseProto*) parseFromData:(NSData*) data {
  return (AttackClanRaidMonsterResponseProto*)[[[AttackClanRaidMonsterResponseProto builder] mergeFromData:data] build];
}
+ (AttackClanRaidMonsterResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AttackClanRaidMonsterResponseProto*)[[[AttackClanRaidMonsterResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AttackClanRaidMonsterResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (AttackClanRaidMonsterResponseProto*)[[[AttackClanRaidMonsterResponseProto builder] mergeFromInputStream:input] build];
}
+ (AttackClanRaidMonsterResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AttackClanRaidMonsterResponseProto*)[[[AttackClanRaidMonsterResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AttackClanRaidMonsterResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AttackClanRaidMonsterResponseProto*)[[[AttackClanRaidMonsterResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (AttackClanRaidMonsterResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AttackClanRaidMonsterResponseProto*)[[[AttackClanRaidMonsterResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AttackClanRaidMonsterResponseProto_Builder*) builder {
  return [[AttackClanRaidMonsterResponseProto_Builder alloc] init];
}
+ (AttackClanRaidMonsterResponseProto_Builder*) builderWithPrototype:(AttackClanRaidMonsterResponseProto*) prototype {
  return [[AttackClanRaidMonsterResponseProto builder] mergeFrom:prototype];
}
- (AttackClanRaidMonsterResponseProto_Builder*) builder {
  return [AttackClanRaidMonsterResponseProto builder];
}
- (AttackClanRaidMonsterResponseProto_Builder*) toBuilder {
  return [AttackClanRaidMonsterResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasDmgDealt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dmgDealt", [NSNumber numberWithInteger:self.dmgDealt]];
  }
  if (self.hasEventDetails) {
    [output appendFormat:@"%@%@ {\n", indent, @"eventDetails"];
    [self.eventDetails writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.clanUsersDetailsList enumerateObjectsUsingBlock:^(PersistentClanEventUserInfoProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanUsersDetails"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasUserMonsterThatAttacked) {
    [output appendFormat:@"%@%@ {\n", indent, @"userMonsterThatAttacked"];
    [self.userMonsterThatAttacked writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AttackClanRaidMonsterResponseProto class]]) {
    return NO;
  }
  AttackClanRaidMonsterResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasDmgDealt == otherMessage.hasDmgDealt &&
      (!self.hasDmgDealt || self.dmgDealt == otherMessage.dmgDealt) &&
      self.hasEventDetails == otherMessage.hasEventDetails &&
      (!self.hasEventDetails || [self.eventDetails isEqual:otherMessage.eventDetails]) &&
      [self.clanUsersDetailsList isEqualToArray:otherMessage.clanUsersDetailsList] &&
      self.hasUserMonsterThatAttacked == otherMessage.hasUserMonsterThatAttacked &&
      (!self.hasUserMonsterThatAttacked || [self.userMonsterThatAttacked isEqual:otherMessage.userMonsterThatAttacked]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasDmgDealt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.dmgDealt] hash];
  }
  if (self.hasEventDetails) {
    hashCode = hashCode * 31 + [self.eventDetails hash];
  }
  [self.clanUsersDetailsList enumerateObjectsUsingBlock:^(PersistentClanEventUserInfoProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasUserMonsterThatAttacked) {
    hashCode = hashCode * 31 + [self.userMonsterThatAttacked hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusIsValidValue(AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatus value) {
  switch (value) {
    case AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusSuccess:
    case AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusSuccessMonsterJustDied:
    case AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusFailUserNotInClan:
    case AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusFailNoStageRaidInProgress:
    case AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusFailMonsterAlreadyDead:
    case AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface AttackClanRaidMonsterResponseProto_Builder()
@property (strong) AttackClanRaidMonsterResponseProto* result;
@end

@implementation AttackClanRaidMonsterResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[AttackClanRaidMonsterResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AttackClanRaidMonsterResponseProto_Builder*) clear {
  self.result = [[AttackClanRaidMonsterResponseProto alloc] init];
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) clone {
  return [AttackClanRaidMonsterResponseProto builderWithPrototype:result];
}
- (AttackClanRaidMonsterResponseProto*) defaultInstance {
  return [AttackClanRaidMonsterResponseProto defaultInstance];
}
- (AttackClanRaidMonsterResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AttackClanRaidMonsterResponseProto*) buildPartial {
  AttackClanRaidMonsterResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (AttackClanRaidMonsterResponseProto_Builder*) mergeFrom:(AttackClanRaidMonsterResponseProto*) other {
  if (other == [AttackClanRaidMonsterResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasDmgDealt) {
    [self setDmgDealt:other.dmgDealt];
  }
  if (other.hasEventDetails) {
    [self mergeEventDetails:other.eventDetails];
  }
  if (other.mutableClanUsersDetailsList.count > 0) {
    if (result.mutableClanUsersDetailsList == nil) {
      result.mutableClanUsersDetailsList = [[NSMutableArray alloc] initWithArray:other.mutableClanUsersDetailsList];
    } else {
      [result.mutableClanUsersDetailsList addObjectsFromArray:other.mutableClanUsersDetailsList];
    }
  }
  if (other.hasUserMonsterThatAttacked) {
    [self mergeUserMonsterThatAttacked:other.userMonsterThatAttacked];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AttackClanRaidMonsterResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setDmgDealt:[input readInt32]];
        break;
      }
      case 26: {
        PersistentClanEventClanInfoProto_Builder* subBuilder = [PersistentClanEventClanInfoProto builder];
        if (self.hasEventDetails) {
          [subBuilder mergeFrom:self.eventDetails];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEventDetails:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        PersistentClanEventUserInfoProto_Builder* subBuilder = [PersistentClanEventUserInfoProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanUsersDetails:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        if (self.hasUserMonsterThatAttacked) {
          [subBuilder mergeFrom:self.userMonsterThatAttacked];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserMonsterThatAttacked:[subBuilder buildPartial]];
        break;
      }
      case 48: {
        AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatus value = (AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatus)[input readEnum];
        if (AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (AttackClanRaidMonsterResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (AttackClanRaidMonsterResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasDmgDealt {
  return result.hasDmgDealt;
}
- (int32_t) dmgDealt {
  return result.dmgDealt;
}
- (AttackClanRaidMonsterResponseProto_Builder*) setDmgDealt:(int32_t) value {
  result.hasDmgDealt = YES;
  result.dmgDealt = value;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) clearDmgDealt {
  result.hasDmgDealt = NO;
  result.dmgDealt = 0;
  return self;
}
- (BOOL) hasEventDetails {
  return result.hasEventDetails;
}
- (PersistentClanEventClanInfoProto*) eventDetails {
  return result.eventDetails;
}
- (AttackClanRaidMonsterResponseProto_Builder*) setEventDetails:(PersistentClanEventClanInfoProto*) value {
  result.hasEventDetails = YES;
  result.eventDetails = value;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) setEventDetails_Builder:(PersistentClanEventClanInfoProto_Builder*) builderForValue {
  return [self setEventDetails:[builderForValue build]];
}
- (AttackClanRaidMonsterResponseProto_Builder*) mergeEventDetails:(PersistentClanEventClanInfoProto*) value {
  if (result.hasEventDetails &&
      result.eventDetails != [PersistentClanEventClanInfoProto defaultInstance]) {
    result.eventDetails =
      [[[PersistentClanEventClanInfoProto builderWithPrototype:result.eventDetails] mergeFrom:value] buildPartial];
  } else {
    result.eventDetails = value;
  }
  result.hasEventDetails = YES;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) clearEventDetails {
  result.hasEventDetails = NO;
  result.eventDetails = [PersistentClanEventClanInfoProto defaultInstance];
  return self;
}
- (NSMutableArray *)clanUsersDetailsList {
  return result.mutableClanUsersDetailsList;
}
- (PersistentClanEventUserInfoProto*)clanUsersDetailsAtIndex:(NSUInteger)index {
  return [result clanUsersDetailsAtIndex:index];
}
- (AttackClanRaidMonsterResponseProto_Builder *)addClanUsersDetails:(PersistentClanEventUserInfoProto*)value {
  if (result.mutableClanUsersDetailsList == nil) {
    result.mutableClanUsersDetailsList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanUsersDetailsList addObject:value];
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder *)addAllClanUsersDetails:(NSArray *)array {
  if (result.mutableClanUsersDetailsList == nil) {
    result.mutableClanUsersDetailsList = [NSMutableArray array];
  }
  [result.mutableClanUsersDetailsList addObjectsFromArray:array];
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder *)clearClanUsersDetails {
  result.mutableClanUsersDetailsList = nil;
  return self;
}
- (BOOL) hasUserMonsterThatAttacked {
  return result.hasUserMonsterThatAttacked;
}
- (FullUserMonsterProto*) userMonsterThatAttacked {
  return result.userMonsterThatAttacked;
}
- (AttackClanRaidMonsterResponseProto_Builder*) setUserMonsterThatAttacked:(FullUserMonsterProto*) value {
  result.hasUserMonsterThatAttacked = YES;
  result.userMonsterThatAttacked = value;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) setUserMonsterThatAttacked_Builder:(FullUserMonsterProto_Builder*) builderForValue {
  return [self setUserMonsterThatAttacked:[builderForValue build]];
}
- (AttackClanRaidMonsterResponseProto_Builder*) mergeUserMonsterThatAttacked:(FullUserMonsterProto*) value {
  if (result.hasUserMonsterThatAttacked &&
      result.userMonsterThatAttacked != [FullUserMonsterProto defaultInstance]) {
    result.userMonsterThatAttacked =
      [[[FullUserMonsterProto builderWithPrototype:result.userMonsterThatAttacked] mergeFrom:value] buildPartial];
  } else {
    result.userMonsterThatAttacked = value;
  }
  result.hasUserMonsterThatAttacked = YES;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) clearUserMonsterThatAttacked {
  result.hasUserMonsterThatAttacked = NO;
  result.userMonsterThatAttacked = [FullUserMonsterProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatus) status {
  return result.status;
}
- (AttackClanRaidMonsterResponseProto_Builder*) setStatus:(AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusSuccess;
  return self;
}
@end

@interface AwardClanRaidStageRewardResponseProto ()
@property int32_t crsId;
@property (strong) NSMutableArray * mutableAllRewardsList;
@end

@implementation AwardClanRaidStageRewardResponseProto

- (BOOL) hasCrsId {
  return !!hasCrsId_;
}
- (void) setHasCrsId:(BOOL) value_ {
  hasCrsId_ = !!value_;
}
@synthesize crsId;
@synthesize mutableAllRewardsList;
@dynamic allRewardsList;
- (id) init {
  if ((self = [super init])) {
    self.crsId = 0;
  }
  return self;
}
static AwardClanRaidStageRewardResponseProto* defaultAwardClanRaidStageRewardResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [AwardClanRaidStageRewardResponseProto class]) {
    defaultAwardClanRaidStageRewardResponseProtoInstance = [[AwardClanRaidStageRewardResponseProto alloc] init];
  }
}
+ (AwardClanRaidStageRewardResponseProto*) defaultInstance {
  return defaultAwardClanRaidStageRewardResponseProtoInstance;
}
- (AwardClanRaidStageRewardResponseProto*) defaultInstance {
  return defaultAwardClanRaidStageRewardResponseProtoInstance;
}
- (NSArray *)allRewardsList {
  return mutableAllRewardsList;
}
- (PersistentClanEventUserRewardProto*)allRewardsAtIndex:(NSUInteger)index {
  return [mutableAllRewardsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCrsId) {
    [output writeInt32:1 value:self.crsId];
  }
  [self.allRewardsList enumerateObjectsUsingBlock:^(PersistentClanEventUserRewardProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCrsId) {
    size_ += computeInt32Size(1, self.crsId);
  }
  [self.allRewardsList enumerateObjectsUsingBlock:^(PersistentClanEventUserRewardProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AwardClanRaidStageRewardResponseProto*) parseFromData:(NSData*) data {
  return (AwardClanRaidStageRewardResponseProto*)[[[AwardClanRaidStageRewardResponseProto builder] mergeFromData:data] build];
}
+ (AwardClanRaidStageRewardResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AwardClanRaidStageRewardResponseProto*)[[[AwardClanRaidStageRewardResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AwardClanRaidStageRewardResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (AwardClanRaidStageRewardResponseProto*)[[[AwardClanRaidStageRewardResponseProto builder] mergeFromInputStream:input] build];
}
+ (AwardClanRaidStageRewardResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AwardClanRaidStageRewardResponseProto*)[[[AwardClanRaidStageRewardResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AwardClanRaidStageRewardResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AwardClanRaidStageRewardResponseProto*)[[[AwardClanRaidStageRewardResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (AwardClanRaidStageRewardResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AwardClanRaidStageRewardResponseProto*)[[[AwardClanRaidStageRewardResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AwardClanRaidStageRewardResponseProto_Builder*) builder {
  return [[AwardClanRaidStageRewardResponseProto_Builder alloc] init];
}
+ (AwardClanRaidStageRewardResponseProto_Builder*) builderWithPrototype:(AwardClanRaidStageRewardResponseProto*) prototype {
  return [[AwardClanRaidStageRewardResponseProto builder] mergeFrom:prototype];
}
- (AwardClanRaidStageRewardResponseProto_Builder*) builder {
  return [AwardClanRaidStageRewardResponseProto builder];
}
- (AwardClanRaidStageRewardResponseProto_Builder*) toBuilder {
  return [AwardClanRaidStageRewardResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCrsId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"crsId", [NSNumber numberWithInteger:self.crsId]];
  }
  [self.allRewardsList enumerateObjectsUsingBlock:^(PersistentClanEventUserRewardProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"allRewards"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AwardClanRaidStageRewardResponseProto class]]) {
    return NO;
  }
  AwardClanRaidStageRewardResponseProto *otherMessage = other;
  return
      self.hasCrsId == otherMessage.hasCrsId &&
      (!self.hasCrsId || self.crsId == otherMessage.crsId) &&
      [self.allRewardsList isEqualToArray:otherMessage.allRewardsList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCrsId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.crsId] hash];
  }
  [self.allRewardsList enumerateObjectsUsingBlock:^(PersistentClanEventUserRewardProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AwardClanRaidStageRewardResponseProto_Builder()
@property (strong) AwardClanRaidStageRewardResponseProto* result;
@end

@implementation AwardClanRaidStageRewardResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[AwardClanRaidStageRewardResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AwardClanRaidStageRewardResponseProto_Builder*) clear {
  self.result = [[AwardClanRaidStageRewardResponseProto alloc] init];
  return self;
}
- (AwardClanRaidStageRewardResponseProto_Builder*) clone {
  return [AwardClanRaidStageRewardResponseProto builderWithPrototype:result];
}
- (AwardClanRaidStageRewardResponseProto*) defaultInstance {
  return [AwardClanRaidStageRewardResponseProto defaultInstance];
}
- (AwardClanRaidStageRewardResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AwardClanRaidStageRewardResponseProto*) buildPartial {
  AwardClanRaidStageRewardResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (AwardClanRaidStageRewardResponseProto_Builder*) mergeFrom:(AwardClanRaidStageRewardResponseProto*) other {
  if (other == [AwardClanRaidStageRewardResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasCrsId) {
    [self setCrsId:other.crsId];
  }
  if (other.mutableAllRewardsList.count > 0) {
    if (result.mutableAllRewardsList == nil) {
      result.mutableAllRewardsList = [[NSMutableArray alloc] initWithArray:other.mutableAllRewardsList];
    } else {
      [result.mutableAllRewardsList addObjectsFromArray:other.mutableAllRewardsList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AwardClanRaidStageRewardResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AwardClanRaidStageRewardResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCrsId:[input readInt32]];
        break;
      }
      case 18: {
        PersistentClanEventUserRewardProto_Builder* subBuilder = [PersistentClanEventUserRewardProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAllRewards:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCrsId {
  return result.hasCrsId;
}
- (int32_t) crsId {
  return result.crsId;
}
- (AwardClanRaidStageRewardResponseProto_Builder*) setCrsId:(int32_t) value {
  result.hasCrsId = YES;
  result.crsId = value;
  return self;
}
- (AwardClanRaidStageRewardResponseProto_Builder*) clearCrsId {
  result.hasCrsId = NO;
  result.crsId = 0;
  return self;
}
- (NSMutableArray *)allRewardsList {
  return result.mutableAllRewardsList;
}
- (PersistentClanEventUserRewardProto*)allRewardsAtIndex:(NSUInteger)index {
  return [result allRewardsAtIndex:index];
}
- (AwardClanRaidStageRewardResponseProto_Builder *)addAllRewards:(PersistentClanEventUserRewardProto*)value {
  if (result.mutableAllRewardsList == nil) {
    result.mutableAllRewardsList = [[NSMutableArray alloc]init];
  }
  [result.mutableAllRewardsList addObject:value];
  return self;
}
- (AwardClanRaidStageRewardResponseProto_Builder *)addAllAllRewards:(NSArray *)array {
  if (result.mutableAllRewardsList == nil) {
    result.mutableAllRewardsList = [NSMutableArray array];
  }
  [result.mutableAllRewardsList addObjectsFromArray:array];
  return self;
}
- (AwardClanRaidStageRewardResponseProto_Builder *)clearAllRewards {
  result.mutableAllRewardsList = nil;
  return self;
}
@end

@interface RecordClanRaidStatsRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSString* clanUuid;
@property int64_t clientTime;
@end

@implementation RecordClanRaidStatsRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasClanUuid {
  return !!hasClanUuid_;
}
- (void) setHasClanUuid:(BOOL) value_ {
  hasClanUuid_ = !!value_;
}
@synthesize clanUuid;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clanUuid = @"";
    self.clientTime = 0L;
  }
  return self;
}
static RecordClanRaidStatsRequestProto* defaultRecordClanRaidStatsRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RecordClanRaidStatsRequestProto class]) {
    defaultRecordClanRaidStatsRequestProtoInstance = [[RecordClanRaidStatsRequestProto alloc] init];
  }
}
+ (RecordClanRaidStatsRequestProto*) defaultInstance {
  return defaultRecordClanRaidStatsRequestProtoInstance;
}
- (RecordClanRaidStatsRequestProto*) defaultInstance {
  return defaultRecordClanRaidStatsRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClanUuid) {
    [output writeString:2 value:self.clanUuid];
  }
  if (self.hasClientTime) {
    [output writeInt64:3 value:self.clientTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasClanUuid) {
    size_ += computeStringSize(2, self.clanUuid);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(3, self.clientTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RecordClanRaidStatsRequestProto*) parseFromData:(NSData*) data {
  return (RecordClanRaidStatsRequestProto*)[[[RecordClanRaidStatsRequestProto builder] mergeFromData:data] build];
}
+ (RecordClanRaidStatsRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordClanRaidStatsRequestProto*)[[[RecordClanRaidStatsRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecordClanRaidStatsRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RecordClanRaidStatsRequestProto*)[[[RecordClanRaidStatsRequestProto builder] mergeFromInputStream:input] build];
}
+ (RecordClanRaidStatsRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordClanRaidStatsRequestProto*)[[[RecordClanRaidStatsRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordClanRaidStatsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecordClanRaidStatsRequestProto*)[[[RecordClanRaidStatsRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RecordClanRaidStatsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordClanRaidStatsRequestProto*)[[[RecordClanRaidStatsRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordClanRaidStatsRequestProto_Builder*) builder {
  return [[RecordClanRaidStatsRequestProto_Builder alloc] init];
}
+ (RecordClanRaidStatsRequestProto_Builder*) builderWithPrototype:(RecordClanRaidStatsRequestProto*) prototype {
  return [[RecordClanRaidStatsRequestProto builder] mergeFrom:prototype];
}
- (RecordClanRaidStatsRequestProto_Builder*) builder {
  return [RecordClanRaidStatsRequestProto builder];
}
- (RecordClanRaidStatsRequestProto_Builder*) toBuilder {
  return [RecordClanRaidStatsRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClanUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanUuid", self.clanUuid];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RecordClanRaidStatsRequestProto class]]) {
    return NO;
  }
  RecordClanRaidStatsRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasClanUuid == otherMessage.hasClanUuid &&
      (!self.hasClanUuid || [self.clanUuid isEqual:otherMessage.clanUuid]) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasClanUuid) {
    hashCode = hashCode * 31 + [self.clanUuid hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RecordClanRaidStatsRequestProto_Builder()
@property (strong) RecordClanRaidStatsRequestProto* result;
@end

@implementation RecordClanRaidStatsRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RecordClanRaidStatsRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RecordClanRaidStatsRequestProto_Builder*) clear {
  self.result = [[RecordClanRaidStatsRequestProto alloc] init];
  return self;
}
- (RecordClanRaidStatsRequestProto_Builder*) clone {
  return [RecordClanRaidStatsRequestProto builderWithPrototype:result];
}
- (RecordClanRaidStatsRequestProto*) defaultInstance {
  return [RecordClanRaidStatsRequestProto defaultInstance];
}
- (RecordClanRaidStatsRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecordClanRaidStatsRequestProto*) buildPartial {
  RecordClanRaidStatsRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RecordClanRaidStatsRequestProto_Builder*) mergeFrom:(RecordClanRaidStatsRequestProto*) other {
  if (other == [RecordClanRaidStatsRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClanUuid) {
    [self setClanUuid:other.clanUuid];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecordClanRaidStatsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecordClanRaidStatsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setClanUuid:[input readString]];
        break;
      }
      case 24: {
        [self setClientTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RecordClanRaidStatsRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RecordClanRaidStatsRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RecordClanRaidStatsRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RecordClanRaidStatsRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanUuid {
  return result.hasClanUuid;
}
- (NSString*) clanUuid {
  return result.clanUuid;
}
- (RecordClanRaidStatsRequestProto_Builder*) setClanUuid:(NSString*) value {
  result.hasClanUuid = YES;
  result.clanUuid = value;
  return self;
}
- (RecordClanRaidStatsRequestProto_Builder*) clearClanUuid {
  result.hasClanUuid = NO;
  result.clanUuid = @"";
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (RecordClanRaidStatsRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (RecordClanRaidStatsRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
@end

@interface RecordClanRaidStatsResponseProto ()
@property (strong) MinimumUserProto* sender;
@property RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatus status;
@end

@implementation RecordClanRaidStatsResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatusSuccess;
  }
  return self;
}
static RecordClanRaidStatsResponseProto* defaultRecordClanRaidStatsResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RecordClanRaidStatsResponseProto class]) {
    defaultRecordClanRaidStatsResponseProtoInstance = [[RecordClanRaidStatsResponseProto alloc] init];
  }
}
+ (RecordClanRaidStatsResponseProto*) defaultInstance {
  return defaultRecordClanRaidStatsResponseProtoInstance;
}
- (RecordClanRaidStatsResponseProto*) defaultInstance {
  return defaultRecordClanRaidStatsResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RecordClanRaidStatsResponseProto*) parseFromData:(NSData*) data {
  return (RecordClanRaidStatsResponseProto*)[[[RecordClanRaidStatsResponseProto builder] mergeFromData:data] build];
}
+ (RecordClanRaidStatsResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordClanRaidStatsResponseProto*)[[[RecordClanRaidStatsResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecordClanRaidStatsResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RecordClanRaidStatsResponseProto*)[[[RecordClanRaidStatsResponseProto builder] mergeFromInputStream:input] build];
}
+ (RecordClanRaidStatsResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordClanRaidStatsResponseProto*)[[[RecordClanRaidStatsResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordClanRaidStatsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecordClanRaidStatsResponseProto*)[[[RecordClanRaidStatsResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RecordClanRaidStatsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordClanRaidStatsResponseProto*)[[[RecordClanRaidStatsResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordClanRaidStatsResponseProto_Builder*) builder {
  return [[RecordClanRaidStatsResponseProto_Builder alloc] init];
}
+ (RecordClanRaidStatsResponseProto_Builder*) builderWithPrototype:(RecordClanRaidStatsResponseProto*) prototype {
  return [[RecordClanRaidStatsResponseProto builder] mergeFrom:prototype];
}
- (RecordClanRaidStatsResponseProto_Builder*) builder {
  return [RecordClanRaidStatsResponseProto builder];
}
- (RecordClanRaidStatsResponseProto_Builder*) toBuilder {
  return [RecordClanRaidStatsResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RecordClanRaidStatsResponseProto class]]) {
    return NO;
  }
  RecordClanRaidStatsResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatusIsValidValue(RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatus value) {
  switch (value) {
    case RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatusSuccess:
    case RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatusFailMonsterAlreadyDead:
    case RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface RecordClanRaidStatsResponseProto_Builder()
@property (strong) RecordClanRaidStatsResponseProto* result;
@end

@implementation RecordClanRaidStatsResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RecordClanRaidStatsResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RecordClanRaidStatsResponseProto_Builder*) clear {
  self.result = [[RecordClanRaidStatsResponseProto alloc] init];
  return self;
}
- (RecordClanRaidStatsResponseProto_Builder*) clone {
  return [RecordClanRaidStatsResponseProto builderWithPrototype:result];
}
- (RecordClanRaidStatsResponseProto*) defaultInstance {
  return [RecordClanRaidStatsResponseProto defaultInstance];
}
- (RecordClanRaidStatsResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecordClanRaidStatsResponseProto*) buildPartial {
  RecordClanRaidStatsResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RecordClanRaidStatsResponseProto_Builder*) mergeFrom:(RecordClanRaidStatsResponseProto*) other {
  if (other == [RecordClanRaidStatsResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecordClanRaidStatsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecordClanRaidStatsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatus value = (RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatus)[input readEnum];
        if (RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RecordClanRaidStatsResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RecordClanRaidStatsResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RecordClanRaidStatsResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RecordClanRaidStatsResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatus) status {
  return result.status;
}
- (RecordClanRaidStatsResponseProto_Builder*) setStatus:(RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RecordClanRaidStatsResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatusSuccess;
  return self;
}
@end

@interface PromoteDemoteClanMemberRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSString* victimUuid;
@property UserClanStatus userClanStatus;
@end

@implementation PromoteDemoteClanMemberRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasVictimUuid {
  return !!hasVictimUuid_;
}
- (void) setHasVictimUuid:(BOOL) value_ {
  hasVictimUuid_ = !!value_;
}
@synthesize victimUuid;
- (BOOL) hasUserClanStatus {
  return !!hasUserClanStatus_;
}
- (void) setHasUserClanStatus:(BOOL) value_ {
  hasUserClanStatus_ = !!value_;
}
@synthesize userClanStatus;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.victimUuid = @"";
    self.userClanStatus = UserClanStatusMember;
  }
  return self;
}
static PromoteDemoteClanMemberRequestProto* defaultPromoteDemoteClanMemberRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [PromoteDemoteClanMemberRequestProto class]) {
    defaultPromoteDemoteClanMemberRequestProtoInstance = [[PromoteDemoteClanMemberRequestProto alloc] init];
  }
}
+ (PromoteDemoteClanMemberRequestProto*) defaultInstance {
  return defaultPromoteDemoteClanMemberRequestProtoInstance;
}
- (PromoteDemoteClanMemberRequestProto*) defaultInstance {
  return defaultPromoteDemoteClanMemberRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasVictimUuid) {
    [output writeString:2 value:self.victimUuid];
  }
  if (self.hasUserClanStatus) {
    [output writeEnum:3 value:self.userClanStatus];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasVictimUuid) {
    size_ += computeStringSize(2, self.victimUuid);
  }
  if (self.hasUserClanStatus) {
    size_ += computeEnumSize(3, self.userClanStatus);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PromoteDemoteClanMemberRequestProto*) parseFromData:(NSData*) data {
  return (PromoteDemoteClanMemberRequestProto*)[[[PromoteDemoteClanMemberRequestProto builder] mergeFromData:data] build];
}
+ (PromoteDemoteClanMemberRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PromoteDemoteClanMemberRequestProto*)[[[PromoteDemoteClanMemberRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PromoteDemoteClanMemberRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (PromoteDemoteClanMemberRequestProto*)[[[PromoteDemoteClanMemberRequestProto builder] mergeFromInputStream:input] build];
}
+ (PromoteDemoteClanMemberRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PromoteDemoteClanMemberRequestProto*)[[[PromoteDemoteClanMemberRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PromoteDemoteClanMemberRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PromoteDemoteClanMemberRequestProto*)[[[PromoteDemoteClanMemberRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (PromoteDemoteClanMemberRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PromoteDemoteClanMemberRequestProto*)[[[PromoteDemoteClanMemberRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PromoteDemoteClanMemberRequestProto_Builder*) builder {
  return [[PromoteDemoteClanMemberRequestProto_Builder alloc] init];
}
+ (PromoteDemoteClanMemberRequestProto_Builder*) builderWithPrototype:(PromoteDemoteClanMemberRequestProto*) prototype {
  return [[PromoteDemoteClanMemberRequestProto builder] mergeFrom:prototype];
}
- (PromoteDemoteClanMemberRequestProto_Builder*) builder {
  return [PromoteDemoteClanMemberRequestProto builder];
}
- (PromoteDemoteClanMemberRequestProto_Builder*) toBuilder {
  return [PromoteDemoteClanMemberRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasVictimUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"victimUuid", self.victimUuid];
  }
  if (self.hasUserClanStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userClanStatus", [NSNumber numberWithInteger:self.userClanStatus]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PromoteDemoteClanMemberRequestProto class]]) {
    return NO;
  }
  PromoteDemoteClanMemberRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasVictimUuid == otherMessage.hasVictimUuid &&
      (!self.hasVictimUuid || [self.victimUuid isEqual:otherMessage.victimUuid]) &&
      self.hasUserClanStatus == otherMessage.hasUserClanStatus &&
      (!self.hasUserClanStatus || self.userClanStatus == otherMessage.userClanStatus) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasVictimUuid) {
    hashCode = hashCode * 31 + [self.victimUuid hash];
  }
  if (self.hasUserClanStatus) {
    hashCode = hashCode * 31 + self.userClanStatus;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PromoteDemoteClanMemberRequestProto_Builder()
@property (strong) PromoteDemoteClanMemberRequestProto* result;
@end

@implementation PromoteDemoteClanMemberRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PromoteDemoteClanMemberRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) clear {
  self.result = [[PromoteDemoteClanMemberRequestProto alloc] init];
  return self;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) clone {
  return [PromoteDemoteClanMemberRequestProto builderWithPrototype:result];
}
- (PromoteDemoteClanMemberRequestProto*) defaultInstance {
  return [PromoteDemoteClanMemberRequestProto defaultInstance];
}
- (PromoteDemoteClanMemberRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PromoteDemoteClanMemberRequestProto*) buildPartial {
  PromoteDemoteClanMemberRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) mergeFrom:(PromoteDemoteClanMemberRequestProto*) other {
  if (other == [PromoteDemoteClanMemberRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasVictimUuid) {
    [self setVictimUuid:other.victimUuid];
  }
  if (other.hasUserClanStatus) {
    [self setUserClanStatus:other.userClanStatus];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PromoteDemoteClanMemberRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setVictimUuid:[input readString]];
        break;
      }
      case 24: {
        UserClanStatus value = (UserClanStatus)[input readEnum];
        if (UserClanStatusIsValidValue(value)) {
          [self setUserClanStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (PromoteDemoteClanMemberRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasVictimUuid {
  return result.hasVictimUuid;
}
- (NSString*) victimUuid {
  return result.victimUuid;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) setVictimUuid:(NSString*) value {
  result.hasVictimUuid = YES;
  result.victimUuid = value;
  return self;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) clearVictimUuid {
  result.hasVictimUuid = NO;
  result.victimUuid = @"";
  return self;
}
- (BOOL) hasUserClanStatus {
  return result.hasUserClanStatus;
}
- (UserClanStatus) userClanStatus {
  return result.userClanStatus;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) setUserClanStatus:(UserClanStatus) value {
  result.hasUserClanStatus = YES;
  result.userClanStatus = value;
  return self;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) clearUserClanStatus {
  result.hasUserClanStatus = NO;
  result.userClanStatus = UserClanStatusMember;
  return self;
}
@end

@interface PromoteDemoteClanMemberResponseProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) MinimumUserProto* victim;
@property UserClanStatus userClanStatus;
@property UserClanStatus prevUserClanStatus;
@property PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatus status;
@end

@implementation PromoteDemoteClanMemberResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasVictim {
  return !!hasVictim_;
}
- (void) setHasVictim:(BOOL) value_ {
  hasVictim_ = !!value_;
}
@synthesize victim;
- (BOOL) hasUserClanStatus {
  return !!hasUserClanStatus_;
}
- (void) setHasUserClanStatus:(BOOL) value_ {
  hasUserClanStatus_ = !!value_;
}
@synthesize userClanStatus;
- (BOOL) hasPrevUserClanStatus {
  return !!hasPrevUserClanStatus_;
}
- (void) setHasPrevUserClanStatus:(BOOL) value_ {
  hasPrevUserClanStatus_ = !!value_;
}
@synthesize prevUserClanStatus;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.victim = [MinimumUserProto defaultInstance];
    self.userClanStatus = UserClanStatusMember;
    self.prevUserClanStatus = UserClanStatusMember;
    self.status = PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatusSuccess;
  }
  return self;
}
static PromoteDemoteClanMemberResponseProto* defaultPromoteDemoteClanMemberResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [PromoteDemoteClanMemberResponseProto class]) {
    defaultPromoteDemoteClanMemberResponseProtoInstance = [[PromoteDemoteClanMemberResponseProto alloc] init];
  }
}
+ (PromoteDemoteClanMemberResponseProto*) defaultInstance {
  return defaultPromoteDemoteClanMemberResponseProtoInstance;
}
- (PromoteDemoteClanMemberResponseProto*) defaultInstance {
  return defaultPromoteDemoteClanMemberResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasVictim) {
    [output writeMessage:2 value:self.victim];
  }
  if (self.hasUserClanStatus) {
    [output writeEnum:3 value:self.userClanStatus];
  }
  if (self.hasStatus) {
    [output writeEnum:4 value:self.status];
  }
  if (self.hasPrevUserClanStatus) {
    [output writeEnum:5 value:self.prevUserClanStatus];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasVictim) {
    size_ += computeMessageSize(2, self.victim);
  }
  if (self.hasUserClanStatus) {
    size_ += computeEnumSize(3, self.userClanStatus);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(4, self.status);
  }
  if (self.hasPrevUserClanStatus) {
    size_ += computeEnumSize(5, self.prevUserClanStatus);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PromoteDemoteClanMemberResponseProto*) parseFromData:(NSData*) data {
  return (PromoteDemoteClanMemberResponseProto*)[[[PromoteDemoteClanMemberResponseProto builder] mergeFromData:data] build];
}
+ (PromoteDemoteClanMemberResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PromoteDemoteClanMemberResponseProto*)[[[PromoteDemoteClanMemberResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PromoteDemoteClanMemberResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (PromoteDemoteClanMemberResponseProto*)[[[PromoteDemoteClanMemberResponseProto builder] mergeFromInputStream:input] build];
}
+ (PromoteDemoteClanMemberResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PromoteDemoteClanMemberResponseProto*)[[[PromoteDemoteClanMemberResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PromoteDemoteClanMemberResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PromoteDemoteClanMemberResponseProto*)[[[PromoteDemoteClanMemberResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (PromoteDemoteClanMemberResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PromoteDemoteClanMemberResponseProto*)[[[PromoteDemoteClanMemberResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PromoteDemoteClanMemberResponseProto_Builder*) builder {
  return [[PromoteDemoteClanMemberResponseProto_Builder alloc] init];
}
+ (PromoteDemoteClanMemberResponseProto_Builder*) builderWithPrototype:(PromoteDemoteClanMemberResponseProto*) prototype {
  return [[PromoteDemoteClanMemberResponseProto builder] mergeFrom:prototype];
}
- (PromoteDemoteClanMemberResponseProto_Builder*) builder {
  return [PromoteDemoteClanMemberResponseProto builder];
}
- (PromoteDemoteClanMemberResponseProto_Builder*) toBuilder {
  return [PromoteDemoteClanMemberResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasVictim) {
    [output appendFormat:@"%@%@ {\n", indent, @"victim"];
    [self.victim writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasUserClanStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userClanStatus", [NSNumber numberWithInteger:self.userClanStatus]];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasPrevUserClanStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prevUserClanStatus", [NSNumber numberWithInteger:self.prevUserClanStatus]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PromoteDemoteClanMemberResponseProto class]]) {
    return NO;
  }
  PromoteDemoteClanMemberResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasVictim == otherMessage.hasVictim &&
      (!self.hasVictim || [self.victim isEqual:otherMessage.victim]) &&
      self.hasUserClanStatus == otherMessage.hasUserClanStatus &&
      (!self.hasUserClanStatus || self.userClanStatus == otherMessage.userClanStatus) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasPrevUserClanStatus == otherMessage.hasPrevUserClanStatus &&
      (!self.hasPrevUserClanStatus || self.prevUserClanStatus == otherMessage.prevUserClanStatus) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasVictim) {
    hashCode = hashCode * 31 + [self.victim hash];
  }
  if (self.hasUserClanStatus) {
    hashCode = hashCode * 31 + self.userClanStatus;
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasPrevUserClanStatus) {
    hashCode = hashCode * 31 + self.prevUserClanStatus;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatusIsValidValue(PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatus value) {
  switch (value) {
    case PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatusSuccess:
    case PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatusFailNotInClan:
    case PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatusFailNotAuthorized:
    case PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface PromoteDemoteClanMemberResponseProto_Builder()
@property (strong) PromoteDemoteClanMemberResponseProto* result;
@end

@implementation PromoteDemoteClanMemberResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PromoteDemoteClanMemberResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) clear {
  self.result = [[PromoteDemoteClanMemberResponseProto alloc] init];
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) clone {
  return [PromoteDemoteClanMemberResponseProto builderWithPrototype:result];
}
- (PromoteDemoteClanMemberResponseProto*) defaultInstance {
  return [PromoteDemoteClanMemberResponseProto defaultInstance];
}
- (PromoteDemoteClanMemberResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PromoteDemoteClanMemberResponseProto*) buildPartial {
  PromoteDemoteClanMemberResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) mergeFrom:(PromoteDemoteClanMemberResponseProto*) other {
  if (other == [PromoteDemoteClanMemberResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasVictim) {
    [self mergeVictim:other.victim];
  }
  if (other.hasUserClanStatus) {
    [self setUserClanStatus:other.userClanStatus];
  }
  if (other.hasPrevUserClanStatus) {
    [self setPrevUserClanStatus:other.prevUserClanStatus];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PromoteDemoteClanMemberResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasVictim) {
          [subBuilder mergeFrom:self.victim];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setVictim:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        UserClanStatus value = (UserClanStatus)[input readEnum];
        if (UserClanStatusIsValidValue(value)) {
          [self setUserClanStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatus value = (PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatus)[input readEnum];
        if (PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        UserClanStatus value = (UserClanStatus)[input readEnum];
        if (UserClanStatusIsValidValue(value)) {
          [self setPrevUserClanStatus:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (PromoteDemoteClanMemberResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasVictim {
  return result.hasVictim;
}
- (MinimumUserProto*) victim {
  return result.victim;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) setVictim:(MinimumUserProto*) value {
  result.hasVictim = YES;
  result.victim = value;
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) setVictim_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setVictim:[builderForValue build]];
}
- (PromoteDemoteClanMemberResponseProto_Builder*) mergeVictim:(MinimumUserProto*) value {
  if (result.hasVictim &&
      result.victim != [MinimumUserProto defaultInstance]) {
    result.victim =
      [[[MinimumUserProto builderWithPrototype:result.victim] mergeFrom:value] buildPartial];
  } else {
    result.victim = value;
  }
  result.hasVictim = YES;
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) clearVictim {
  result.hasVictim = NO;
  result.victim = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasUserClanStatus {
  return result.hasUserClanStatus;
}
- (UserClanStatus) userClanStatus {
  return result.userClanStatus;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) setUserClanStatus:(UserClanStatus) value {
  result.hasUserClanStatus = YES;
  result.userClanStatus = value;
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) clearUserClanStatus {
  result.hasUserClanStatus = NO;
  result.userClanStatus = UserClanStatusMember;
  return self;
}
- (BOOL) hasPrevUserClanStatus {
  return result.hasPrevUserClanStatus;
}
- (UserClanStatus) prevUserClanStatus {
  return result.prevUserClanStatus;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) setPrevUserClanStatus:(UserClanStatus) value {
  result.hasPrevUserClanStatus = YES;
  result.prevUserClanStatus = value;
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) clearPrevUserClanStatus {
  result.hasPrevUserClanStatus = NO;
  result.prevUserClanStatus = UserClanStatusMember;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatus) status {
  return result.status;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) setStatus:(PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatusSuccess;
  return self;
}
@end

@interface SolicitClanHelpRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutableNoticeList;
@property int64_t clientTime;
@property int32_t maxHelpers;
@end

@implementation SolicitClanHelpRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutableNoticeList;
@dynamic noticeList;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (BOOL) hasMaxHelpers {
  return !!hasMaxHelpers_;
}
- (void) setHasMaxHelpers:(BOOL) value_ {
  hasMaxHelpers_ = !!value_;
}
@synthesize maxHelpers;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clientTime = 0L;
    self.maxHelpers = 0;
  }
  return self;
}
static SolicitClanHelpRequestProto* defaultSolicitClanHelpRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [SolicitClanHelpRequestProto class]) {
    defaultSolicitClanHelpRequestProtoInstance = [[SolicitClanHelpRequestProto alloc] init];
  }
}
+ (SolicitClanHelpRequestProto*) defaultInstance {
  return defaultSolicitClanHelpRequestProtoInstance;
}
- (SolicitClanHelpRequestProto*) defaultInstance {
  return defaultSolicitClanHelpRequestProtoInstance;
}
- (NSArray *)noticeList {
  return mutableNoticeList;
}
- (ClanHelpNoticeProto*)noticeAtIndex:(NSUInteger)index {
  return [mutableNoticeList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.noticeList enumerateObjectsUsingBlock:^(ClanHelpNoticeProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasClientTime) {
    [output writeInt64:4 value:self.clientTime];
  }
  if (self.hasMaxHelpers) {
    [output writeInt32:5 value:self.maxHelpers];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  [self.noticeList enumerateObjectsUsingBlock:^(ClanHelpNoticeProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasClientTime) {
    size_ += computeInt64Size(4, self.clientTime);
  }
  if (self.hasMaxHelpers) {
    size_ += computeInt32Size(5, self.maxHelpers);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SolicitClanHelpRequestProto*) parseFromData:(NSData*) data {
  return (SolicitClanHelpRequestProto*)[[[SolicitClanHelpRequestProto builder] mergeFromData:data] build];
}
+ (SolicitClanHelpRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SolicitClanHelpRequestProto*)[[[SolicitClanHelpRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SolicitClanHelpRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (SolicitClanHelpRequestProto*)[[[SolicitClanHelpRequestProto builder] mergeFromInputStream:input] build];
}
+ (SolicitClanHelpRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SolicitClanHelpRequestProto*)[[[SolicitClanHelpRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SolicitClanHelpRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SolicitClanHelpRequestProto*)[[[SolicitClanHelpRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (SolicitClanHelpRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SolicitClanHelpRequestProto*)[[[SolicitClanHelpRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SolicitClanHelpRequestProto_Builder*) builder {
  return [[SolicitClanHelpRequestProto_Builder alloc] init];
}
+ (SolicitClanHelpRequestProto_Builder*) builderWithPrototype:(SolicitClanHelpRequestProto*) prototype {
  return [[SolicitClanHelpRequestProto builder] mergeFrom:prototype];
}
- (SolicitClanHelpRequestProto_Builder*) builder {
  return [SolicitClanHelpRequestProto builder];
}
- (SolicitClanHelpRequestProto_Builder*) toBuilder {
  return [SolicitClanHelpRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.noticeList enumerateObjectsUsingBlock:^(ClanHelpNoticeProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"notice"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  if (self.hasMaxHelpers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxHelpers", [NSNumber numberWithInteger:self.maxHelpers]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SolicitClanHelpRequestProto class]]) {
    return NO;
  }
  SolicitClanHelpRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.noticeList isEqualToArray:otherMessage.noticeList] &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      self.hasMaxHelpers == otherMessage.hasMaxHelpers &&
      (!self.hasMaxHelpers || self.maxHelpers == otherMessage.maxHelpers) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.noticeList enumerateObjectsUsingBlock:^(ClanHelpNoticeProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  if (self.hasMaxHelpers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxHelpers] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SolicitClanHelpRequestProto_Builder()
@property (strong) SolicitClanHelpRequestProto* result;
@end

@implementation SolicitClanHelpRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[SolicitClanHelpRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SolicitClanHelpRequestProto_Builder*) clear {
  self.result = [[SolicitClanHelpRequestProto alloc] init];
  return self;
}
- (SolicitClanHelpRequestProto_Builder*) clone {
  return [SolicitClanHelpRequestProto builderWithPrototype:result];
}
- (SolicitClanHelpRequestProto*) defaultInstance {
  return [SolicitClanHelpRequestProto defaultInstance];
}
- (SolicitClanHelpRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SolicitClanHelpRequestProto*) buildPartial {
  SolicitClanHelpRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (SolicitClanHelpRequestProto_Builder*) mergeFrom:(SolicitClanHelpRequestProto*) other {
  if (other == [SolicitClanHelpRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableNoticeList.count > 0) {
    if (result.mutableNoticeList == nil) {
      result.mutableNoticeList = [[NSMutableArray alloc] initWithArray:other.mutableNoticeList];
    } else {
      [result.mutableNoticeList addObjectsFromArray:other.mutableNoticeList];
    }
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.hasMaxHelpers) {
    [self setMaxHelpers:other.maxHelpers];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SolicitClanHelpRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SolicitClanHelpRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        ClanHelpNoticeProto_Builder* subBuilder = [ClanHelpNoticeProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNotice:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 40: {
        [self setMaxHelpers:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (SolicitClanHelpRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SolicitClanHelpRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SolicitClanHelpRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SolicitClanHelpRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)noticeList {
  return result.mutableNoticeList;
}
- (ClanHelpNoticeProto*)noticeAtIndex:(NSUInteger)index {
  return [result noticeAtIndex:index];
}
- (SolicitClanHelpRequestProto_Builder *)addNotice:(ClanHelpNoticeProto*)value {
  if (result.mutableNoticeList == nil) {
    result.mutableNoticeList = [[NSMutableArray alloc]init];
  }
  [result.mutableNoticeList addObject:value];
  return self;
}
- (SolicitClanHelpRequestProto_Builder *)addAllNotice:(NSArray *)array {
  if (result.mutableNoticeList == nil) {
    result.mutableNoticeList = [NSMutableArray array];
  }
  [result.mutableNoticeList addObjectsFromArray:array];
  return self;
}
- (SolicitClanHelpRequestProto_Builder *)clearNotice {
  result.mutableNoticeList = nil;
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (SolicitClanHelpRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (SolicitClanHelpRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (BOOL) hasMaxHelpers {
  return result.hasMaxHelpers;
}
- (int32_t) maxHelpers {
  return result.maxHelpers;
}
- (SolicitClanHelpRequestProto_Builder*) setMaxHelpers:(int32_t) value {
  result.hasMaxHelpers = YES;
  result.maxHelpers = value;
  return self;
}
- (SolicitClanHelpRequestProto_Builder*) clearMaxHelpers {
  result.hasMaxHelpers = NO;
  result.maxHelpers = 0;
  return self;
}
@end

@interface SolicitClanHelpResponseProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutableHelpProtoList;
@property SolicitClanHelpResponseProto_SolicitClanHelpStatus status;
@end

@implementation SolicitClanHelpResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutableHelpProtoList;
@dynamic helpProtoList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = SolicitClanHelpResponseProto_SolicitClanHelpStatusSuccess;
  }
  return self;
}
static SolicitClanHelpResponseProto* defaultSolicitClanHelpResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [SolicitClanHelpResponseProto class]) {
    defaultSolicitClanHelpResponseProtoInstance = [[SolicitClanHelpResponseProto alloc] init];
  }
}
+ (SolicitClanHelpResponseProto*) defaultInstance {
  return defaultSolicitClanHelpResponseProtoInstance;
}
- (SolicitClanHelpResponseProto*) defaultInstance {
  return defaultSolicitClanHelpResponseProtoInstance;
}
- (NSArray *)helpProtoList {
  return mutableHelpProtoList;
}
- (ClanHelpProto*)helpProtoAtIndex:(NSUInteger)index {
  return [mutableHelpProtoList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.helpProtoList enumerateObjectsUsingBlock:^(ClanHelpProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  [self.helpProtoList enumerateObjectsUsingBlock:^(ClanHelpProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasStatus) {
    size_ += computeEnumSize(3, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SolicitClanHelpResponseProto*) parseFromData:(NSData*) data {
  return (SolicitClanHelpResponseProto*)[[[SolicitClanHelpResponseProto builder] mergeFromData:data] build];
}
+ (SolicitClanHelpResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SolicitClanHelpResponseProto*)[[[SolicitClanHelpResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SolicitClanHelpResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (SolicitClanHelpResponseProto*)[[[SolicitClanHelpResponseProto builder] mergeFromInputStream:input] build];
}
+ (SolicitClanHelpResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SolicitClanHelpResponseProto*)[[[SolicitClanHelpResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SolicitClanHelpResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SolicitClanHelpResponseProto*)[[[SolicitClanHelpResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (SolicitClanHelpResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SolicitClanHelpResponseProto*)[[[SolicitClanHelpResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SolicitClanHelpResponseProto_Builder*) builder {
  return [[SolicitClanHelpResponseProto_Builder alloc] init];
}
+ (SolicitClanHelpResponseProto_Builder*) builderWithPrototype:(SolicitClanHelpResponseProto*) prototype {
  return [[SolicitClanHelpResponseProto builder] mergeFrom:prototype];
}
- (SolicitClanHelpResponseProto_Builder*) builder {
  return [SolicitClanHelpResponseProto builder];
}
- (SolicitClanHelpResponseProto_Builder*) toBuilder {
  return [SolicitClanHelpResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.helpProtoList enumerateObjectsUsingBlock:^(ClanHelpProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"helpProto"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SolicitClanHelpResponseProto class]]) {
    return NO;
  }
  SolicitClanHelpResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.helpProtoList isEqualToArray:otherMessage.helpProtoList] &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.helpProtoList enumerateObjectsUsingBlock:^(ClanHelpProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL SolicitClanHelpResponseProto_SolicitClanHelpStatusIsValidValue(SolicitClanHelpResponseProto_SolicitClanHelpStatus value) {
  switch (value) {
    case SolicitClanHelpResponseProto_SolicitClanHelpStatusSuccess:
    case SolicitClanHelpResponseProto_SolicitClanHelpStatusFailOther:
    case SolicitClanHelpResponseProto_SolicitClanHelpStatusFailNotInClan:
      return YES;
    default:
      return NO;
  }
}
@interface SolicitClanHelpResponseProto_Builder()
@property (strong) SolicitClanHelpResponseProto* result;
@end

@implementation SolicitClanHelpResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[SolicitClanHelpResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SolicitClanHelpResponseProto_Builder*) clear {
  self.result = [[SolicitClanHelpResponseProto alloc] init];
  return self;
}
- (SolicitClanHelpResponseProto_Builder*) clone {
  return [SolicitClanHelpResponseProto builderWithPrototype:result];
}
- (SolicitClanHelpResponseProto*) defaultInstance {
  return [SolicitClanHelpResponseProto defaultInstance];
}
- (SolicitClanHelpResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SolicitClanHelpResponseProto*) buildPartial {
  SolicitClanHelpResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (SolicitClanHelpResponseProto_Builder*) mergeFrom:(SolicitClanHelpResponseProto*) other {
  if (other == [SolicitClanHelpResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableHelpProtoList.count > 0) {
    if (result.mutableHelpProtoList == nil) {
      result.mutableHelpProtoList = [[NSMutableArray alloc] initWithArray:other.mutableHelpProtoList];
    } else {
      [result.mutableHelpProtoList addObjectsFromArray:other.mutableHelpProtoList];
    }
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SolicitClanHelpResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SolicitClanHelpResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        ClanHelpProto_Builder* subBuilder = [ClanHelpProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addHelpProto:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        SolicitClanHelpResponseProto_SolicitClanHelpStatus value = (SolicitClanHelpResponseProto_SolicitClanHelpStatus)[input readEnum];
        if (SolicitClanHelpResponseProto_SolicitClanHelpStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (SolicitClanHelpResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SolicitClanHelpResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SolicitClanHelpResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SolicitClanHelpResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)helpProtoList {
  return result.mutableHelpProtoList;
}
- (ClanHelpProto*)helpProtoAtIndex:(NSUInteger)index {
  return [result helpProtoAtIndex:index];
}
- (SolicitClanHelpResponseProto_Builder *)addHelpProto:(ClanHelpProto*)value {
  if (result.mutableHelpProtoList == nil) {
    result.mutableHelpProtoList = [[NSMutableArray alloc]init];
  }
  [result.mutableHelpProtoList addObject:value];
  return self;
}
- (SolicitClanHelpResponseProto_Builder *)addAllHelpProto:(NSArray *)array {
  if (result.mutableHelpProtoList == nil) {
    result.mutableHelpProtoList = [NSMutableArray array];
  }
  [result.mutableHelpProtoList addObjectsFromArray:array];
  return self;
}
- (SolicitClanHelpResponseProto_Builder *)clearHelpProto {
  result.mutableHelpProtoList = nil;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (SolicitClanHelpResponseProto_SolicitClanHelpStatus) status {
  return result.status;
}
- (SolicitClanHelpResponseProto_Builder*) setStatus:(SolicitClanHelpResponseProto_SolicitClanHelpStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (SolicitClanHelpResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = SolicitClanHelpResponseProto_SolicitClanHelpStatusSuccess;
  return self;
}
@end

@interface GiveClanHelpRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutableClanHelpUuidsList;
@end

@implementation GiveClanHelpRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutableClanHelpUuidsList;
@dynamic clanHelpUuidsList;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
  }
  return self;
}
static GiveClanHelpRequestProto* defaultGiveClanHelpRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [GiveClanHelpRequestProto class]) {
    defaultGiveClanHelpRequestProtoInstance = [[GiveClanHelpRequestProto alloc] init];
  }
}
+ (GiveClanHelpRequestProto*) defaultInstance {
  return defaultGiveClanHelpRequestProtoInstance;
}
- (GiveClanHelpRequestProto*) defaultInstance {
  return defaultGiveClanHelpRequestProtoInstance;
}
- (NSArray *)clanHelpUuidsList {
  return mutableClanHelpUuidsList;
}
- (NSString*)clanHelpUuidsAtIndex:(NSUInteger)index {
  return [mutableClanHelpUuidsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.clanHelpUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.clanHelpUuidsList.count;
    [self.clanHelpUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GiveClanHelpRequestProto*) parseFromData:(NSData*) data {
  return (GiveClanHelpRequestProto*)[[[GiveClanHelpRequestProto builder] mergeFromData:data] build];
}
+ (GiveClanHelpRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiveClanHelpRequestProto*)[[[GiveClanHelpRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GiveClanHelpRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (GiveClanHelpRequestProto*)[[[GiveClanHelpRequestProto builder] mergeFromInputStream:input] build];
}
+ (GiveClanHelpRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiveClanHelpRequestProto*)[[[GiveClanHelpRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiveClanHelpRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GiveClanHelpRequestProto*)[[[GiveClanHelpRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (GiveClanHelpRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiveClanHelpRequestProto*)[[[GiveClanHelpRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiveClanHelpRequestProto_Builder*) builder {
  return [[GiveClanHelpRequestProto_Builder alloc] init];
}
+ (GiveClanHelpRequestProto_Builder*) builderWithPrototype:(GiveClanHelpRequestProto*) prototype {
  return [[GiveClanHelpRequestProto builder] mergeFrom:prototype];
}
- (GiveClanHelpRequestProto_Builder*) builder {
  return [GiveClanHelpRequestProto builder];
}
- (GiveClanHelpRequestProto_Builder*) toBuilder {
  return [GiveClanHelpRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.clanHelpUuidsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanHelpUuids", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GiveClanHelpRequestProto class]]) {
    return NO;
  }
  GiveClanHelpRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.clanHelpUuidsList isEqualToArray:otherMessage.clanHelpUuidsList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.clanHelpUuidsList enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GiveClanHelpRequestProto_Builder()
@property (strong) GiveClanHelpRequestProto* result;
@end

@implementation GiveClanHelpRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[GiveClanHelpRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GiveClanHelpRequestProto_Builder*) clear {
  self.result = [[GiveClanHelpRequestProto alloc] init];
  return self;
}
- (GiveClanHelpRequestProto_Builder*) clone {
  return [GiveClanHelpRequestProto builderWithPrototype:result];
}
- (GiveClanHelpRequestProto*) defaultInstance {
  return [GiveClanHelpRequestProto defaultInstance];
}
- (GiveClanHelpRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GiveClanHelpRequestProto*) buildPartial {
  GiveClanHelpRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (GiveClanHelpRequestProto_Builder*) mergeFrom:(GiveClanHelpRequestProto*) other {
  if (other == [GiveClanHelpRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableClanHelpUuidsList.count > 0) {
    if (result.mutableClanHelpUuidsList == nil) {
      result.mutableClanHelpUuidsList = [[NSMutableArray alloc] initWithArray:other.mutableClanHelpUuidsList];
    } else {
      [result.mutableClanHelpUuidsList addObjectsFromArray:other.mutableClanHelpUuidsList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GiveClanHelpRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GiveClanHelpRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self addClanHelpUuids:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (GiveClanHelpRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (GiveClanHelpRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (GiveClanHelpRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (GiveClanHelpRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)clanHelpUuidsList {
  return result.mutableClanHelpUuidsList;
}
- (NSString*)clanHelpUuidsAtIndex:(NSUInteger)index {
  return [result clanHelpUuidsAtIndex:index];
}
- (GiveClanHelpRequestProto_Builder *)addClanHelpUuids:(NSString*)value {
  if (result.mutableClanHelpUuidsList == nil) {
    result.mutableClanHelpUuidsList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanHelpUuidsList addObject:value];
  return self;
}
- (GiveClanHelpRequestProto_Builder *)addAllClanHelpUuids:(NSArray *)array {
  if (result.mutableClanHelpUuidsList == nil) {
    result.mutableClanHelpUuidsList = [NSMutableArray array];
  }
  [result.mutableClanHelpUuidsList addObjectsFromArray:array];
  return self;
}
- (GiveClanHelpRequestProto_Builder *)clearClanHelpUuids {
  result.mutableClanHelpUuidsList = nil;
  return self;
}
@end

@interface GiveClanHelpResponseProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutableClanHelpsList;
@property GiveClanHelpResponseProto_GiveClanHelpStatus status;
@end

@implementation GiveClanHelpResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutableClanHelpsList;
@dynamic clanHelpsList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = GiveClanHelpResponseProto_GiveClanHelpStatusSuccess;
  }
  return self;
}
static GiveClanHelpResponseProto* defaultGiveClanHelpResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [GiveClanHelpResponseProto class]) {
    defaultGiveClanHelpResponseProtoInstance = [[GiveClanHelpResponseProto alloc] init];
  }
}
+ (GiveClanHelpResponseProto*) defaultInstance {
  return defaultGiveClanHelpResponseProtoInstance;
}
- (GiveClanHelpResponseProto*) defaultInstance {
  return defaultGiveClanHelpResponseProtoInstance;
}
- (NSArray *)clanHelpsList {
  return mutableClanHelpsList;
}
- (ClanHelpProto*)clanHelpsAtIndex:(NSUInteger)index {
  return [mutableClanHelpsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.clanHelpsList enumerateObjectsUsingBlock:^(ClanHelpProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  [self.clanHelpsList enumerateObjectsUsingBlock:^(ClanHelpProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasStatus) {
    size_ += computeEnumSize(3, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GiveClanHelpResponseProto*) parseFromData:(NSData*) data {
  return (GiveClanHelpResponseProto*)[[[GiveClanHelpResponseProto builder] mergeFromData:data] build];
}
+ (GiveClanHelpResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiveClanHelpResponseProto*)[[[GiveClanHelpResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GiveClanHelpResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (GiveClanHelpResponseProto*)[[[GiveClanHelpResponseProto builder] mergeFromInputStream:input] build];
}
+ (GiveClanHelpResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiveClanHelpResponseProto*)[[[GiveClanHelpResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiveClanHelpResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GiveClanHelpResponseProto*)[[[GiveClanHelpResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (GiveClanHelpResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GiveClanHelpResponseProto*)[[[GiveClanHelpResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GiveClanHelpResponseProto_Builder*) builder {
  return [[GiveClanHelpResponseProto_Builder alloc] init];
}
+ (GiveClanHelpResponseProto_Builder*) builderWithPrototype:(GiveClanHelpResponseProto*) prototype {
  return [[GiveClanHelpResponseProto builder] mergeFrom:prototype];
}
- (GiveClanHelpResponseProto_Builder*) builder {
  return [GiveClanHelpResponseProto builder];
}
- (GiveClanHelpResponseProto_Builder*) toBuilder {
  return [GiveClanHelpResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.clanHelpsList enumerateObjectsUsingBlock:^(ClanHelpProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanHelps"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GiveClanHelpResponseProto class]]) {
    return NO;
  }
  GiveClanHelpResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.clanHelpsList isEqualToArray:otherMessage.clanHelpsList] &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.clanHelpsList enumerateObjectsUsingBlock:^(ClanHelpProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL GiveClanHelpResponseProto_GiveClanHelpStatusIsValidValue(GiveClanHelpResponseProto_GiveClanHelpStatus value) {
  switch (value) {
    case GiveClanHelpResponseProto_GiveClanHelpStatusSuccess:
    case GiveClanHelpResponseProto_GiveClanHelpStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface GiveClanHelpResponseProto_Builder()
@property (strong) GiveClanHelpResponseProto* result;
@end

@implementation GiveClanHelpResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[GiveClanHelpResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GiveClanHelpResponseProto_Builder*) clear {
  self.result = [[GiveClanHelpResponseProto alloc] init];
  return self;
}
- (GiveClanHelpResponseProto_Builder*) clone {
  return [GiveClanHelpResponseProto builderWithPrototype:result];
}
- (GiveClanHelpResponseProto*) defaultInstance {
  return [GiveClanHelpResponseProto defaultInstance];
}
- (GiveClanHelpResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GiveClanHelpResponseProto*) buildPartial {
  GiveClanHelpResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (GiveClanHelpResponseProto_Builder*) mergeFrom:(GiveClanHelpResponseProto*) other {
  if (other == [GiveClanHelpResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableClanHelpsList.count > 0) {
    if (result.mutableClanHelpsList == nil) {
      result.mutableClanHelpsList = [[NSMutableArray alloc] initWithArray:other.mutableClanHelpsList];
    } else {
      [result.mutableClanHelpsList addObjectsFromArray:other.mutableClanHelpsList];
    }
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GiveClanHelpResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GiveClanHelpResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        ClanHelpProto_Builder* subBuilder = [ClanHelpProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanHelps:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        GiveClanHelpResponseProto_GiveClanHelpStatus value = (GiveClanHelpResponseProto_GiveClanHelpStatus)[input readEnum];
        if (GiveClanHelpResponseProto_GiveClanHelpStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (GiveClanHelpResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (GiveClanHelpResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (GiveClanHelpResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (GiveClanHelpResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)clanHelpsList {
  return result.mutableClanHelpsList;
}
- (ClanHelpProto*)clanHelpsAtIndex:(NSUInteger)index {
  return [result clanHelpsAtIndex:index];
}
- (GiveClanHelpResponseProto_Builder *)addClanHelps:(ClanHelpProto*)value {
  if (result.mutableClanHelpsList == nil) {
    result.mutableClanHelpsList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanHelpsList addObject:value];
  return self;
}
- (GiveClanHelpResponseProto_Builder *)addAllClanHelps:(NSArray *)array {
  if (result.mutableClanHelpsList == nil) {
    result.mutableClanHelpsList = [NSMutableArray array];
  }
  [result.mutableClanHelpsList addObjectsFromArray:array];
  return self;
}
- (GiveClanHelpResponseProto_Builder *)clearClanHelps {
  result.mutableClanHelpsList = nil;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (GiveClanHelpResponseProto_GiveClanHelpStatus) status {
  return result.status;
}
- (GiveClanHelpResponseProto_Builder*) setStatus:(GiveClanHelpResponseProto_GiveClanHelpStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (GiveClanHelpResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = GiveClanHelpResponseProto_GiveClanHelpStatusSuccess;
  return self;
}
@end

@interface EndClanHelpRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutableClanHelpUuidsList;
@end

@implementation EndClanHelpRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutableClanHelpUuidsList;
@dynamic clanHelpUuidsList;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
  }
  return self;
}
static EndClanHelpRequestProto* defaultEndClanHelpRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [EndClanHelpRequestProto class]) {
    defaultEndClanHelpRequestProtoInstance = [[EndClanHelpRequestProto alloc] init];
  }
}
+ (EndClanHelpRequestProto*) defaultInstance {
  return defaultEndClanHelpRequestProtoInstance;
}
- (EndClanHelpRequestProto*) defaultInstance {
  return defaultEndClanHelpRequestProtoInstance;
}
- (NSArray *)clanHelpUuidsList {
  return mutableClanHelpUuidsList;
}
- (NSString*)clanHelpUuidsAtIndex:(NSUInteger)index {
  return [mutableClanHelpUuidsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.clanHelpUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.clanHelpUuidsList.count;
    [self.clanHelpUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (EndClanHelpRequestProto*) parseFromData:(NSData*) data {
  return (EndClanHelpRequestProto*)[[[EndClanHelpRequestProto builder] mergeFromData:data] build];
}
+ (EndClanHelpRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndClanHelpRequestProto*)[[[EndClanHelpRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EndClanHelpRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (EndClanHelpRequestProto*)[[[EndClanHelpRequestProto builder] mergeFromInputStream:input] build];
}
+ (EndClanHelpRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndClanHelpRequestProto*)[[[EndClanHelpRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndClanHelpRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EndClanHelpRequestProto*)[[[EndClanHelpRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (EndClanHelpRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndClanHelpRequestProto*)[[[EndClanHelpRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndClanHelpRequestProto_Builder*) builder {
  return [[EndClanHelpRequestProto_Builder alloc] init];
}
+ (EndClanHelpRequestProto_Builder*) builderWithPrototype:(EndClanHelpRequestProto*) prototype {
  return [[EndClanHelpRequestProto builder] mergeFrom:prototype];
}
- (EndClanHelpRequestProto_Builder*) builder {
  return [EndClanHelpRequestProto builder];
}
- (EndClanHelpRequestProto_Builder*) toBuilder {
  return [EndClanHelpRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.clanHelpUuidsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanHelpUuids", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[EndClanHelpRequestProto class]]) {
    return NO;
  }
  EndClanHelpRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.clanHelpUuidsList isEqualToArray:otherMessage.clanHelpUuidsList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.clanHelpUuidsList enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface EndClanHelpRequestProto_Builder()
@property (strong) EndClanHelpRequestProto* result;
@end

@implementation EndClanHelpRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[EndClanHelpRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EndClanHelpRequestProto_Builder*) clear {
  self.result = [[EndClanHelpRequestProto alloc] init];
  return self;
}
- (EndClanHelpRequestProto_Builder*) clone {
  return [EndClanHelpRequestProto builderWithPrototype:result];
}
- (EndClanHelpRequestProto*) defaultInstance {
  return [EndClanHelpRequestProto defaultInstance];
}
- (EndClanHelpRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EndClanHelpRequestProto*) buildPartial {
  EndClanHelpRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (EndClanHelpRequestProto_Builder*) mergeFrom:(EndClanHelpRequestProto*) other {
  if (other == [EndClanHelpRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableClanHelpUuidsList.count > 0) {
    if (result.mutableClanHelpUuidsList == nil) {
      result.mutableClanHelpUuidsList = [[NSMutableArray alloc] initWithArray:other.mutableClanHelpUuidsList];
    } else {
      [result.mutableClanHelpUuidsList addObjectsFromArray:other.mutableClanHelpUuidsList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EndClanHelpRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EndClanHelpRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self addClanHelpUuids:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (EndClanHelpRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (EndClanHelpRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (EndClanHelpRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (EndClanHelpRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)clanHelpUuidsList {
  return result.mutableClanHelpUuidsList;
}
- (NSString*)clanHelpUuidsAtIndex:(NSUInteger)index {
  return [result clanHelpUuidsAtIndex:index];
}
- (EndClanHelpRequestProto_Builder *)addClanHelpUuids:(NSString*)value {
  if (result.mutableClanHelpUuidsList == nil) {
    result.mutableClanHelpUuidsList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanHelpUuidsList addObject:value];
  return self;
}
- (EndClanHelpRequestProto_Builder *)addAllClanHelpUuids:(NSArray *)array {
  if (result.mutableClanHelpUuidsList == nil) {
    result.mutableClanHelpUuidsList = [NSMutableArray array];
  }
  [result.mutableClanHelpUuidsList addObjectsFromArray:array];
  return self;
}
- (EndClanHelpRequestProto_Builder *)clearClanHelpUuids {
  result.mutableClanHelpUuidsList = nil;
  return self;
}
@end

@interface EndClanHelpResponseProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutableClanHelpUuidsList;
@property EndClanHelpResponseProto_EndClanHelpStatus status;
@end

@implementation EndClanHelpResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutableClanHelpUuidsList;
@dynamic clanHelpUuidsList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = EndClanHelpResponseProto_EndClanHelpStatusSuccess;
  }
  return self;
}
static EndClanHelpResponseProto* defaultEndClanHelpResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [EndClanHelpResponseProto class]) {
    defaultEndClanHelpResponseProtoInstance = [[EndClanHelpResponseProto alloc] init];
  }
}
+ (EndClanHelpResponseProto*) defaultInstance {
  return defaultEndClanHelpResponseProtoInstance;
}
- (EndClanHelpResponseProto*) defaultInstance {
  return defaultEndClanHelpResponseProtoInstance;
}
- (NSArray *)clanHelpUuidsList {
  return mutableClanHelpUuidsList;
}
- (NSString*)clanHelpUuidsAtIndex:(NSUInteger)index {
  return [mutableClanHelpUuidsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.clanHelpUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:2 value:element];
  }];
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.clanHelpUuidsList.count;
    [self.clanHelpUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(3, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (EndClanHelpResponseProto*) parseFromData:(NSData*) data {
  return (EndClanHelpResponseProto*)[[[EndClanHelpResponseProto builder] mergeFromData:data] build];
}
+ (EndClanHelpResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndClanHelpResponseProto*)[[[EndClanHelpResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EndClanHelpResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (EndClanHelpResponseProto*)[[[EndClanHelpResponseProto builder] mergeFromInputStream:input] build];
}
+ (EndClanHelpResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndClanHelpResponseProto*)[[[EndClanHelpResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndClanHelpResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EndClanHelpResponseProto*)[[[EndClanHelpResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (EndClanHelpResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndClanHelpResponseProto*)[[[EndClanHelpResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndClanHelpResponseProto_Builder*) builder {
  return [[EndClanHelpResponseProto_Builder alloc] init];
}
+ (EndClanHelpResponseProto_Builder*) builderWithPrototype:(EndClanHelpResponseProto*) prototype {
  return [[EndClanHelpResponseProto builder] mergeFrom:prototype];
}
- (EndClanHelpResponseProto_Builder*) builder {
  return [EndClanHelpResponseProto builder];
}
- (EndClanHelpResponseProto_Builder*) toBuilder {
  return [EndClanHelpResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.clanHelpUuidsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanHelpUuids", obj];
  }];
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[EndClanHelpResponseProto class]]) {
    return NO;
  }
  EndClanHelpResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.clanHelpUuidsList isEqualToArray:otherMessage.clanHelpUuidsList] &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.clanHelpUuidsList enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL EndClanHelpResponseProto_EndClanHelpStatusIsValidValue(EndClanHelpResponseProto_EndClanHelpStatus value) {
  switch (value) {
    case EndClanHelpResponseProto_EndClanHelpStatusSuccess:
    case EndClanHelpResponseProto_EndClanHelpStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface EndClanHelpResponseProto_Builder()
@property (strong) EndClanHelpResponseProto* result;
@end

@implementation EndClanHelpResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[EndClanHelpResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EndClanHelpResponseProto_Builder*) clear {
  self.result = [[EndClanHelpResponseProto alloc] init];
  return self;
}
- (EndClanHelpResponseProto_Builder*) clone {
  return [EndClanHelpResponseProto builderWithPrototype:result];
}
- (EndClanHelpResponseProto*) defaultInstance {
  return [EndClanHelpResponseProto defaultInstance];
}
- (EndClanHelpResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EndClanHelpResponseProto*) buildPartial {
  EndClanHelpResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (EndClanHelpResponseProto_Builder*) mergeFrom:(EndClanHelpResponseProto*) other {
  if (other == [EndClanHelpResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableClanHelpUuidsList.count > 0) {
    if (result.mutableClanHelpUuidsList == nil) {
      result.mutableClanHelpUuidsList = [[NSMutableArray alloc] initWithArray:other.mutableClanHelpUuidsList];
    } else {
      [result.mutableClanHelpUuidsList addObjectsFromArray:other.mutableClanHelpUuidsList];
    }
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EndClanHelpResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EndClanHelpResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self addClanHelpUuids:[input readString]];
        break;
      }
      case 24: {
        EndClanHelpResponseProto_EndClanHelpStatus value = (EndClanHelpResponseProto_EndClanHelpStatus)[input readEnum];
        if (EndClanHelpResponseProto_EndClanHelpStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (EndClanHelpResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (EndClanHelpResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (EndClanHelpResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (EndClanHelpResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)clanHelpUuidsList {
  return result.mutableClanHelpUuidsList;
}
- (NSString*)clanHelpUuidsAtIndex:(NSUInteger)index {
  return [result clanHelpUuidsAtIndex:index];
}
- (EndClanHelpResponseProto_Builder *)addClanHelpUuids:(NSString*)value {
  if (result.mutableClanHelpUuidsList == nil) {
    result.mutableClanHelpUuidsList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanHelpUuidsList addObject:value];
  return self;
}
- (EndClanHelpResponseProto_Builder *)addAllClanHelpUuids:(NSArray *)array {
  if (result.mutableClanHelpUuidsList == nil) {
    result.mutableClanHelpUuidsList = [NSMutableArray array];
  }
  [result.mutableClanHelpUuidsList addObjectsFromArray:array];
  return self;
}
- (EndClanHelpResponseProto_Builder *)clearClanHelpUuids {
  result.mutableClanHelpUuidsList = nil;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (EndClanHelpResponseProto_EndClanHelpStatus) status {
  return result.status;
}
- (EndClanHelpResponseProto_Builder*) setStatus:(EndClanHelpResponseProto_EndClanHelpStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (EndClanHelpResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = EndClanHelpResponseProto_EndClanHelpStatusSuccess;
  return self;
}
@end

@interface InviteToClanRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSString* prospectiveMember;
@property int64_t clientTime;
@end

@implementation InviteToClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasProspectiveMember {
  return !!hasProspectiveMember_;
}
- (void) setHasProspectiveMember:(BOOL) value_ {
  hasProspectiveMember_ = !!value_;
}
@synthesize prospectiveMember;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.prospectiveMember = @"";
    self.clientTime = 0L;
  }
  return self;
}
static InviteToClanRequestProto* defaultInviteToClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [InviteToClanRequestProto class]) {
    defaultInviteToClanRequestProtoInstance = [[InviteToClanRequestProto alloc] init];
  }
}
+ (InviteToClanRequestProto*) defaultInstance {
  return defaultInviteToClanRequestProtoInstance;
}
- (InviteToClanRequestProto*) defaultInstance {
  return defaultInviteToClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasProspectiveMember) {
    [output writeString:2 value:self.prospectiveMember];
  }
  if (self.hasClientTime) {
    [output writeInt64:3 value:self.clientTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasProspectiveMember) {
    size_ += computeStringSize(2, self.prospectiveMember);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(3, self.clientTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (InviteToClanRequestProto*) parseFromData:(NSData*) data {
  return (InviteToClanRequestProto*)[[[InviteToClanRequestProto builder] mergeFromData:data] build];
}
+ (InviteToClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InviteToClanRequestProto*)[[[InviteToClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (InviteToClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (InviteToClanRequestProto*)[[[InviteToClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (InviteToClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InviteToClanRequestProto*)[[[InviteToClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InviteToClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (InviteToClanRequestProto*)[[[InviteToClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (InviteToClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InviteToClanRequestProto*)[[[InviteToClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InviteToClanRequestProto_Builder*) builder {
  return [[InviteToClanRequestProto_Builder alloc] init];
}
+ (InviteToClanRequestProto_Builder*) builderWithPrototype:(InviteToClanRequestProto*) prototype {
  return [[InviteToClanRequestProto builder] mergeFrom:prototype];
}
- (InviteToClanRequestProto_Builder*) builder {
  return [InviteToClanRequestProto builder];
}
- (InviteToClanRequestProto_Builder*) toBuilder {
  return [InviteToClanRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasProspectiveMember) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prospectiveMember", self.prospectiveMember];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[InviteToClanRequestProto class]]) {
    return NO;
  }
  InviteToClanRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasProspectiveMember == otherMessage.hasProspectiveMember &&
      (!self.hasProspectiveMember || [self.prospectiveMember isEqual:otherMessage.prospectiveMember]) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasProspectiveMember) {
    hashCode = hashCode * 31 + [self.prospectiveMember hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface InviteToClanRequestProto_Builder()
@property (strong) InviteToClanRequestProto* result;
@end

@implementation InviteToClanRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[InviteToClanRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (InviteToClanRequestProto_Builder*) clear {
  self.result = [[InviteToClanRequestProto alloc] init];
  return self;
}
- (InviteToClanRequestProto_Builder*) clone {
  return [InviteToClanRequestProto builderWithPrototype:result];
}
- (InviteToClanRequestProto*) defaultInstance {
  return [InviteToClanRequestProto defaultInstance];
}
- (InviteToClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (InviteToClanRequestProto*) buildPartial {
  InviteToClanRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (InviteToClanRequestProto_Builder*) mergeFrom:(InviteToClanRequestProto*) other {
  if (other == [InviteToClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasProspectiveMember) {
    [self setProspectiveMember:other.prospectiveMember];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (InviteToClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (InviteToClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setProspectiveMember:[input readString]];
        break;
      }
      case 24: {
        [self setClientTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (InviteToClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (InviteToClanRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (InviteToClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (InviteToClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasProspectiveMember {
  return result.hasProspectiveMember;
}
- (NSString*) prospectiveMember {
  return result.prospectiveMember;
}
- (InviteToClanRequestProto_Builder*) setProspectiveMember:(NSString*) value {
  result.hasProspectiveMember = YES;
  result.prospectiveMember = value;
  return self;
}
- (InviteToClanRequestProto_Builder*) clearProspectiveMember {
  result.hasProspectiveMember = NO;
  result.prospectiveMember = @"";
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (InviteToClanRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (InviteToClanRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
@end

@interface InviteToClanResponseProto ()
@property (strong) MinimumUserProto* sender;
@property InviteToClanResponseProto_InviteToClanStatus status;
@property (strong) ClanInviteProto* invite;
@end

@implementation InviteToClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasInvite {
  return !!hasInvite_;
}
- (void) setHasInvite:(BOOL) value_ {
  hasInvite_ = !!value_;
}
@synthesize invite;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = InviteToClanResponseProto_InviteToClanStatusSuccess;
    self.invite = [ClanInviteProto defaultInstance];
  }
  return self;
}
static InviteToClanResponseProto* defaultInviteToClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [InviteToClanResponseProto class]) {
    defaultInviteToClanResponseProtoInstance = [[InviteToClanResponseProto alloc] init];
  }
}
+ (InviteToClanResponseProto*) defaultInstance {
  return defaultInviteToClanResponseProtoInstance;
}
- (InviteToClanResponseProto*) defaultInstance {
  return defaultInviteToClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasInvite) {
    [output writeMessage:3 value:self.invite];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  if (self.hasInvite) {
    size_ += computeMessageSize(3, self.invite);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (InviteToClanResponseProto*) parseFromData:(NSData*) data {
  return (InviteToClanResponseProto*)[[[InviteToClanResponseProto builder] mergeFromData:data] build];
}
+ (InviteToClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InviteToClanResponseProto*)[[[InviteToClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (InviteToClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (InviteToClanResponseProto*)[[[InviteToClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (InviteToClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InviteToClanResponseProto*)[[[InviteToClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InviteToClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (InviteToClanResponseProto*)[[[InviteToClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (InviteToClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InviteToClanResponseProto*)[[[InviteToClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InviteToClanResponseProto_Builder*) builder {
  return [[InviteToClanResponseProto_Builder alloc] init];
}
+ (InviteToClanResponseProto_Builder*) builderWithPrototype:(InviteToClanResponseProto*) prototype {
  return [[InviteToClanResponseProto builder] mergeFrom:prototype];
}
- (InviteToClanResponseProto_Builder*) builder {
  return [InviteToClanResponseProto builder];
}
- (InviteToClanResponseProto_Builder*) toBuilder {
  return [InviteToClanResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasInvite) {
    [output appendFormat:@"%@%@ {\n", indent, @"invite"];
    [self.invite writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[InviteToClanResponseProto class]]) {
    return NO;
  }
  InviteToClanResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasInvite == otherMessage.hasInvite &&
      (!self.hasInvite || [self.invite isEqual:otherMessage.invite]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasInvite) {
    hashCode = hashCode * 31 + [self.invite hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL InviteToClanResponseProto_InviteToClanStatusIsValidValue(InviteToClanResponseProto_InviteToClanStatus value) {
  switch (value) {
    case InviteToClanResponseProto_InviteToClanStatusSuccess:
    case InviteToClanResponseProto_InviteToClanStatusFailOther:
    case InviteToClanResponseProto_InviteToClanStatusFailNotAuthorized:
      return YES;
    default:
      return NO;
  }
}
@interface InviteToClanResponseProto_Builder()
@property (strong) InviteToClanResponseProto* result;
@end

@implementation InviteToClanResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[InviteToClanResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (InviteToClanResponseProto_Builder*) clear {
  self.result = [[InviteToClanResponseProto alloc] init];
  return self;
}
- (InviteToClanResponseProto_Builder*) clone {
  return [InviteToClanResponseProto builderWithPrototype:result];
}
- (InviteToClanResponseProto*) defaultInstance {
  return [InviteToClanResponseProto defaultInstance];
}
- (InviteToClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (InviteToClanResponseProto*) buildPartial {
  InviteToClanResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (InviteToClanResponseProto_Builder*) mergeFrom:(InviteToClanResponseProto*) other {
  if (other == [InviteToClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasInvite) {
    [self mergeInvite:other.invite];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (InviteToClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (InviteToClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        InviteToClanResponseProto_InviteToClanStatus value = (InviteToClanResponseProto_InviteToClanStatus)[input readEnum];
        if (InviteToClanResponseProto_InviteToClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        ClanInviteProto_Builder* subBuilder = [ClanInviteProto builder];
        if (self.hasInvite) {
          [subBuilder mergeFrom:self.invite];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setInvite:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (InviteToClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (InviteToClanResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (InviteToClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (InviteToClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (InviteToClanResponseProto_InviteToClanStatus) status {
  return result.status;
}
- (InviteToClanResponseProto_Builder*) setStatus:(InviteToClanResponseProto_InviteToClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (InviteToClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = InviteToClanResponseProto_InviteToClanStatusSuccess;
  return self;
}
- (BOOL) hasInvite {
  return result.hasInvite;
}
- (ClanInviteProto*) invite {
  return result.invite;
}
- (InviteToClanResponseProto_Builder*) setInvite:(ClanInviteProto*) value {
  result.hasInvite = YES;
  result.invite = value;
  return self;
}
- (InviteToClanResponseProto_Builder*) setInvite_Builder:(ClanInviteProto_Builder*) builderForValue {
  return [self setInvite:[builderForValue build]];
}
- (InviteToClanResponseProto_Builder*) mergeInvite:(ClanInviteProto*) value {
  if (result.hasInvite &&
      result.invite != [ClanInviteProto defaultInstance]) {
    result.invite =
      [[[ClanInviteProto builderWithPrototype:result.invite] mergeFrom:value] buildPartial];
  } else {
    result.invite = value;
  }
  result.hasInvite = YES;
  return self;
}
- (InviteToClanResponseProto_Builder*) clearInvite {
  result.hasInvite = NO;
  result.invite = [ClanInviteProto defaultInstance];
  return self;
}
@end

@interface AcceptOrRejectClanInviteRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) ClanInviteProto* accepted;
@property (strong) NSMutableArray * mutableRejectedList;
@property int64_t clientTime;
@end

@implementation AcceptOrRejectClanInviteRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasAccepted {
  return !!hasAccepted_;
}
- (void) setHasAccepted:(BOOL) value_ {
  hasAccepted_ = !!value_;
}
@synthesize accepted;
@synthesize mutableRejectedList;
@dynamic rejectedList;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.accepted = [ClanInviteProto defaultInstance];
    self.clientTime = 0L;
  }
  return self;
}
static AcceptOrRejectClanInviteRequestProto* defaultAcceptOrRejectClanInviteRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [AcceptOrRejectClanInviteRequestProto class]) {
    defaultAcceptOrRejectClanInviteRequestProtoInstance = [[AcceptOrRejectClanInviteRequestProto alloc] init];
  }
}
+ (AcceptOrRejectClanInviteRequestProto*) defaultInstance {
  return defaultAcceptOrRejectClanInviteRequestProtoInstance;
}
- (AcceptOrRejectClanInviteRequestProto*) defaultInstance {
  return defaultAcceptOrRejectClanInviteRequestProtoInstance;
}
- (NSArray *)rejectedList {
  return mutableRejectedList;
}
- (ClanInviteProto*)rejectedAtIndex:(NSUInteger)index {
  return [mutableRejectedList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasAccepted) {
    [output writeMessage:2 value:self.accepted];
  }
  [self.rejectedList enumerateObjectsUsingBlock:^(ClanInviteProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  if (self.hasClientTime) {
    [output writeInt64:4 value:self.clientTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasAccepted) {
    size_ += computeMessageSize(2, self.accepted);
  }
  [self.rejectedList enumerateObjectsUsingBlock:^(ClanInviteProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  if (self.hasClientTime) {
    size_ += computeInt64Size(4, self.clientTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AcceptOrRejectClanInviteRequestProto*) parseFromData:(NSData*) data {
  return (AcceptOrRejectClanInviteRequestProto*)[[[AcceptOrRejectClanInviteRequestProto builder] mergeFromData:data] build];
}
+ (AcceptOrRejectClanInviteRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AcceptOrRejectClanInviteRequestProto*)[[[AcceptOrRejectClanInviteRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AcceptOrRejectClanInviteRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (AcceptOrRejectClanInviteRequestProto*)[[[AcceptOrRejectClanInviteRequestProto builder] mergeFromInputStream:input] build];
}
+ (AcceptOrRejectClanInviteRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AcceptOrRejectClanInviteRequestProto*)[[[AcceptOrRejectClanInviteRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AcceptOrRejectClanInviteRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AcceptOrRejectClanInviteRequestProto*)[[[AcceptOrRejectClanInviteRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (AcceptOrRejectClanInviteRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AcceptOrRejectClanInviteRequestProto*)[[[AcceptOrRejectClanInviteRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AcceptOrRejectClanInviteRequestProto_Builder*) builder {
  return [[AcceptOrRejectClanInviteRequestProto_Builder alloc] init];
}
+ (AcceptOrRejectClanInviteRequestProto_Builder*) builderWithPrototype:(AcceptOrRejectClanInviteRequestProto*) prototype {
  return [[AcceptOrRejectClanInviteRequestProto builder] mergeFrom:prototype];
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) builder {
  return [AcceptOrRejectClanInviteRequestProto builder];
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) toBuilder {
  return [AcceptOrRejectClanInviteRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasAccepted) {
    [output appendFormat:@"%@%@ {\n", indent, @"accepted"];
    [self.accepted writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.rejectedList enumerateObjectsUsingBlock:^(ClanInviteProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"rejected"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AcceptOrRejectClanInviteRequestProto class]]) {
    return NO;
  }
  AcceptOrRejectClanInviteRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasAccepted == otherMessage.hasAccepted &&
      (!self.hasAccepted || [self.accepted isEqual:otherMessage.accepted]) &&
      [self.rejectedList isEqualToArray:otherMessage.rejectedList] &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasAccepted) {
    hashCode = hashCode * 31 + [self.accepted hash];
  }
  [self.rejectedList enumerateObjectsUsingBlock:^(ClanInviteProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AcceptOrRejectClanInviteRequestProto_Builder()
@property (strong) AcceptOrRejectClanInviteRequestProto* result;
@end

@implementation AcceptOrRejectClanInviteRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[AcceptOrRejectClanInviteRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) clear {
  self.result = [[AcceptOrRejectClanInviteRequestProto alloc] init];
  return self;
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) clone {
  return [AcceptOrRejectClanInviteRequestProto builderWithPrototype:result];
}
- (AcceptOrRejectClanInviteRequestProto*) defaultInstance {
  return [AcceptOrRejectClanInviteRequestProto defaultInstance];
}
- (AcceptOrRejectClanInviteRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AcceptOrRejectClanInviteRequestProto*) buildPartial {
  AcceptOrRejectClanInviteRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) mergeFrom:(AcceptOrRejectClanInviteRequestProto*) other {
  if (other == [AcceptOrRejectClanInviteRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasAccepted) {
    [self mergeAccepted:other.accepted];
  }
  if (other.mutableRejectedList.count > 0) {
    if (result.mutableRejectedList == nil) {
      result.mutableRejectedList = [[NSMutableArray alloc] initWithArray:other.mutableRejectedList];
    } else {
      [result.mutableRejectedList addObjectsFromArray:other.mutableRejectedList];
    }
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        ClanInviteProto_Builder* subBuilder = [ClanInviteProto builder];
        if (self.hasAccepted) {
          [subBuilder mergeFrom:self.accepted];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAccepted:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        ClanInviteProto_Builder* subBuilder = [ClanInviteProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRejected:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setClientTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasAccepted {
  return result.hasAccepted;
}
- (ClanInviteProto*) accepted {
  return result.accepted;
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) setAccepted:(ClanInviteProto*) value {
  result.hasAccepted = YES;
  result.accepted = value;
  return self;
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) setAccepted_Builder:(ClanInviteProto_Builder*) builderForValue {
  return [self setAccepted:[builderForValue build]];
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) mergeAccepted:(ClanInviteProto*) value {
  if (result.hasAccepted &&
      result.accepted != [ClanInviteProto defaultInstance]) {
    result.accepted =
      [[[ClanInviteProto builderWithPrototype:result.accepted] mergeFrom:value] buildPartial];
  } else {
    result.accepted = value;
  }
  result.hasAccepted = YES;
  return self;
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) clearAccepted {
  result.hasAccepted = NO;
  result.accepted = [ClanInviteProto defaultInstance];
  return self;
}
- (NSMutableArray *)rejectedList {
  return result.mutableRejectedList;
}
- (ClanInviteProto*)rejectedAtIndex:(NSUInteger)index {
  return [result rejectedAtIndex:index];
}
- (AcceptOrRejectClanInviteRequestProto_Builder *)addRejected:(ClanInviteProto*)value {
  if (result.mutableRejectedList == nil) {
    result.mutableRejectedList = [[NSMutableArray alloc]init];
  }
  [result.mutableRejectedList addObject:value];
  return self;
}
- (AcceptOrRejectClanInviteRequestProto_Builder *)addAllRejected:(NSArray *)array {
  if (result.mutableRejectedList == nil) {
    result.mutableRejectedList = [NSMutableArray array];
  }
  [result.mutableRejectedList addObjectsFromArray:array];
  return self;
}
- (AcceptOrRejectClanInviteRequestProto_Builder *)clearRejected {
  result.mutableRejectedList = nil;
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (AcceptOrRejectClanInviteRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
@end

@interface AcceptOrRejectClanInviteResponseProto ()
@property (strong) MinimumUserProto* sender;
@property AcceptOrRejectClanInviteResponseProto_AcceptOrRejectClanInviteStatus status;
@property (strong) FullClanProtoWithClanSize* fullClan;
@end

@implementation AcceptOrRejectClanInviteResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasFullClan {
  return !!hasFullClan_;
}
- (void) setHasFullClan:(BOOL) value_ {
  hasFullClan_ = !!value_;
}
@synthesize fullClan;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = AcceptOrRejectClanInviteResponseProto_AcceptOrRejectClanInviteStatusSuccess;
    self.fullClan = [FullClanProtoWithClanSize defaultInstance];
  }
  return self;
}
static AcceptOrRejectClanInviteResponseProto* defaultAcceptOrRejectClanInviteResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [AcceptOrRejectClanInviteResponseProto class]) {
    defaultAcceptOrRejectClanInviteResponseProtoInstance = [[AcceptOrRejectClanInviteResponseProto alloc] init];
  }
}
+ (AcceptOrRejectClanInviteResponseProto*) defaultInstance {
  return defaultAcceptOrRejectClanInviteResponseProtoInstance;
}
- (AcceptOrRejectClanInviteResponseProto*) defaultInstance {
  return defaultAcceptOrRejectClanInviteResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasFullClan) {
    [output writeMessage:3 value:self.fullClan];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  if (self.hasFullClan) {
    size_ += computeMessageSize(3, self.fullClan);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AcceptOrRejectClanInviteResponseProto*) parseFromData:(NSData*) data {
  return (AcceptOrRejectClanInviteResponseProto*)[[[AcceptOrRejectClanInviteResponseProto builder] mergeFromData:data] build];
}
+ (AcceptOrRejectClanInviteResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AcceptOrRejectClanInviteResponseProto*)[[[AcceptOrRejectClanInviteResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AcceptOrRejectClanInviteResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (AcceptOrRejectClanInviteResponseProto*)[[[AcceptOrRejectClanInviteResponseProto builder] mergeFromInputStream:input] build];
}
+ (AcceptOrRejectClanInviteResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AcceptOrRejectClanInviteResponseProto*)[[[AcceptOrRejectClanInviteResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AcceptOrRejectClanInviteResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AcceptOrRejectClanInviteResponseProto*)[[[AcceptOrRejectClanInviteResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (AcceptOrRejectClanInviteResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AcceptOrRejectClanInviteResponseProto*)[[[AcceptOrRejectClanInviteResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AcceptOrRejectClanInviteResponseProto_Builder*) builder {
  return [[AcceptOrRejectClanInviteResponseProto_Builder alloc] init];
}
+ (AcceptOrRejectClanInviteResponseProto_Builder*) builderWithPrototype:(AcceptOrRejectClanInviteResponseProto*) prototype {
  return [[AcceptOrRejectClanInviteResponseProto builder] mergeFrom:prototype];
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) builder {
  return [AcceptOrRejectClanInviteResponseProto builder];
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) toBuilder {
  return [AcceptOrRejectClanInviteResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasFullClan) {
    [output appendFormat:@"%@%@ {\n", indent, @"fullClan"];
    [self.fullClan writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AcceptOrRejectClanInviteResponseProto class]]) {
    return NO;
  }
  AcceptOrRejectClanInviteResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasFullClan == otherMessage.hasFullClan &&
      (!self.hasFullClan || [self.fullClan isEqual:otherMessage.fullClan]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasFullClan) {
    hashCode = hashCode * 31 + [self.fullClan hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL AcceptOrRejectClanInviteResponseProto_AcceptOrRejectClanInviteStatusIsValidValue(AcceptOrRejectClanInviteResponseProto_AcceptOrRejectClanInviteStatus value) {
  switch (value) {
    case AcceptOrRejectClanInviteResponseProto_AcceptOrRejectClanInviteStatusSuccess:
    case AcceptOrRejectClanInviteResponseProto_AcceptOrRejectClanInviteStatusFailOther:
    case AcceptOrRejectClanInviteResponseProto_AcceptOrRejectClanInviteStatusFailClanIsFull:
      return YES;
    default:
      return NO;
  }
}
@interface AcceptOrRejectClanInviteResponseProto_Builder()
@property (strong) AcceptOrRejectClanInviteResponseProto* result;
@end

@implementation AcceptOrRejectClanInviteResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[AcceptOrRejectClanInviteResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) clear {
  self.result = [[AcceptOrRejectClanInviteResponseProto alloc] init];
  return self;
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) clone {
  return [AcceptOrRejectClanInviteResponseProto builderWithPrototype:result];
}
- (AcceptOrRejectClanInviteResponseProto*) defaultInstance {
  return [AcceptOrRejectClanInviteResponseProto defaultInstance];
}
- (AcceptOrRejectClanInviteResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AcceptOrRejectClanInviteResponseProto*) buildPartial {
  AcceptOrRejectClanInviteResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) mergeFrom:(AcceptOrRejectClanInviteResponseProto*) other {
  if (other == [AcceptOrRejectClanInviteResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasFullClan) {
    [self mergeFullClan:other.fullClan];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        AcceptOrRejectClanInviteResponseProto_AcceptOrRejectClanInviteStatus value = (AcceptOrRejectClanInviteResponseProto_AcceptOrRejectClanInviteStatus)[input readEnum];
        if (AcceptOrRejectClanInviteResponseProto_AcceptOrRejectClanInviteStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        if (self.hasFullClan) {
          [subBuilder mergeFrom:self.fullClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFullClan:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (AcceptOrRejectClanInviteResponseProto_AcceptOrRejectClanInviteStatus) status {
  return result.status;
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) setStatus:(AcceptOrRejectClanInviteResponseProto_AcceptOrRejectClanInviteStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = AcceptOrRejectClanInviteResponseProto_AcceptOrRejectClanInviteStatusSuccess;
  return self;
}
- (BOOL) hasFullClan {
  return result.hasFullClan;
}
- (FullClanProtoWithClanSize*) fullClan {
  return result.fullClan;
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) setFullClan:(FullClanProtoWithClanSize*) value {
  result.hasFullClan = YES;
  result.fullClan = value;
  return self;
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) setFullClan_Builder:(FullClanProtoWithClanSize_Builder*) builderForValue {
  return [self setFullClan:[builderForValue build]];
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) mergeFullClan:(FullClanProtoWithClanSize*) value {
  if (result.hasFullClan &&
      result.fullClan != [FullClanProtoWithClanSize defaultInstance]) {
    result.fullClan =
      [[[FullClanProtoWithClanSize builderWithPrototype:result.fullClan] mergeFrom:value] buildPartial];
  } else {
    result.fullClan = value;
  }
  result.hasFullClan = YES;
  return self;
}
- (AcceptOrRejectClanInviteResponseProto_Builder*) clearFullClan {
  result.hasFullClan = NO;
  result.fullClan = [FullClanProtoWithClanSize defaultInstance];
  return self;
}
@end

@interface RetrieveClanDataResponseProto ()
@property (strong) MinimumUserProto* mup;
@property (strong) ClanDataProto* clanData;
@end

@implementation RetrieveClanDataResponseProto

- (BOOL) hasMup {
  return !!hasMup_;
}
- (void) setHasMup:(BOOL) value_ {
  hasMup_ = !!value_;
}
@synthesize mup;
- (BOOL) hasClanData {
  return !!hasClanData_;
}
- (void) setHasClanData:(BOOL) value_ {
  hasClanData_ = !!value_;
}
@synthesize clanData;
- (id) init {
  if ((self = [super init])) {
    self.mup = [MinimumUserProto defaultInstance];
    self.clanData = [ClanDataProto defaultInstance];
  }
  return self;
}
static RetrieveClanDataResponseProto* defaultRetrieveClanDataResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrieveClanDataResponseProto class]) {
    defaultRetrieveClanDataResponseProtoInstance = [[RetrieveClanDataResponseProto alloc] init];
  }
}
+ (RetrieveClanDataResponseProto*) defaultInstance {
  return defaultRetrieveClanDataResponseProtoInstance;
}
- (RetrieveClanDataResponseProto*) defaultInstance {
  return defaultRetrieveClanDataResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMup) {
    [output writeMessage:1 value:self.mup];
  }
  if (self.hasClanData) {
    [output writeMessage:2 value:self.clanData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMup) {
    size_ += computeMessageSize(1, self.mup);
  }
  if (self.hasClanData) {
    size_ += computeMessageSize(2, self.clanData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RetrieveClanDataResponseProto*) parseFromData:(NSData*) data {
  return (RetrieveClanDataResponseProto*)[[[RetrieveClanDataResponseProto builder] mergeFromData:data] build];
}
+ (RetrieveClanDataResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanDataResponseProto*)[[[RetrieveClanDataResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanDataResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrieveClanDataResponseProto*)[[[RetrieveClanDataResponseProto builder] mergeFromInputStream:input] build];
}
+ (RetrieveClanDataResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanDataResponseProto*)[[[RetrieveClanDataResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanDataResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrieveClanDataResponseProto*)[[[RetrieveClanDataResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrieveClanDataResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanDataResponseProto*)[[[RetrieveClanDataResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanDataResponseProto_Builder*) builder {
  return [[RetrieveClanDataResponseProto_Builder alloc] init];
}
+ (RetrieveClanDataResponseProto_Builder*) builderWithPrototype:(RetrieveClanDataResponseProto*) prototype {
  return [[RetrieveClanDataResponseProto builder] mergeFrom:prototype];
}
- (RetrieveClanDataResponseProto_Builder*) builder {
  return [RetrieveClanDataResponseProto builder];
}
- (RetrieveClanDataResponseProto_Builder*) toBuilder {
  return [RetrieveClanDataResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMup) {
    [output appendFormat:@"%@%@ {\n", indent, @"mup"];
    [self.mup writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClanData) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanData"];
    [self.clanData writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RetrieveClanDataResponseProto class]]) {
    return NO;
  }
  RetrieveClanDataResponseProto *otherMessage = other;
  return
      self.hasMup == otherMessage.hasMup &&
      (!self.hasMup || [self.mup isEqual:otherMessage.mup]) &&
      self.hasClanData == otherMessage.hasClanData &&
      (!self.hasClanData || [self.clanData isEqual:otherMessage.clanData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMup) {
    hashCode = hashCode * 31 + [self.mup hash];
  }
  if (self.hasClanData) {
    hashCode = hashCode * 31 + [self.clanData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RetrieveClanDataResponseProto_Builder()
@property (strong) RetrieveClanDataResponseProto* result;
@end

@implementation RetrieveClanDataResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RetrieveClanDataResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrieveClanDataResponseProto_Builder*) clear {
  self.result = [[RetrieveClanDataResponseProto alloc] init];
  return self;
}
- (RetrieveClanDataResponseProto_Builder*) clone {
  return [RetrieveClanDataResponseProto builderWithPrototype:result];
}
- (RetrieveClanDataResponseProto*) defaultInstance {
  return [RetrieveClanDataResponseProto defaultInstance];
}
- (RetrieveClanDataResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrieveClanDataResponseProto*) buildPartial {
  RetrieveClanDataResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RetrieveClanDataResponseProto_Builder*) mergeFrom:(RetrieveClanDataResponseProto*) other {
  if (other == [RetrieveClanDataResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasMup) {
    [self mergeMup:other.mup];
  }
  if (other.hasClanData) {
    [self mergeClanData:other.clanData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrieveClanDataResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrieveClanDataResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasMup) {
          [subBuilder mergeFrom:self.mup];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMup:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        ClanDataProto_Builder* subBuilder = [ClanDataProto builder];
        if (self.hasClanData) {
          [subBuilder mergeFrom:self.clanData];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClanData:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasMup {
  return result.hasMup;
}
- (MinimumUserProto*) mup {
  return result.mup;
}
- (RetrieveClanDataResponseProto_Builder*) setMup:(MinimumUserProto*) value {
  result.hasMup = YES;
  result.mup = value;
  return self;
}
- (RetrieveClanDataResponseProto_Builder*) setMup_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setMup:[builderForValue build]];
}
- (RetrieveClanDataResponseProto_Builder*) mergeMup:(MinimumUserProto*) value {
  if (result.hasMup &&
      result.mup != [MinimumUserProto defaultInstance]) {
    result.mup =
      [[[MinimumUserProto builderWithPrototype:result.mup] mergeFrom:value] buildPartial];
  } else {
    result.mup = value;
  }
  result.hasMup = YES;
  return self;
}
- (RetrieveClanDataResponseProto_Builder*) clearMup {
  result.hasMup = NO;
  result.mup = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanData {
  return result.hasClanData;
}
- (ClanDataProto*) clanData {
  return result.clanData;
}
- (RetrieveClanDataResponseProto_Builder*) setClanData:(ClanDataProto*) value {
  result.hasClanData = YES;
  result.clanData = value;
  return self;
}
- (RetrieveClanDataResponseProto_Builder*) setClanData_Builder:(ClanDataProto_Builder*) builderForValue {
  return [self setClanData:[builderForValue build]];
}
- (RetrieveClanDataResponseProto_Builder*) mergeClanData:(ClanDataProto*) value {
  if (result.hasClanData &&
      result.clanData != [ClanDataProto defaultInstance]) {
    result.clanData =
      [[[ClanDataProto builderWithPrototype:result.clanData] mergeFrom:value] buildPartial];
  } else {
    result.clanData = value;
  }
  result.hasClanData = YES;
  return self;
}
- (RetrieveClanDataResponseProto_Builder*) clearClanData {
  result.hasClanData = NO;
  result.clanData = [ClanDataProto defaultInstance];
  return self;
}
@end

@interface BeginClanAvengingRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutableRecentNbattlesList;
@property int64_t clientTime;
@end

@implementation BeginClanAvengingRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutableRecentNbattlesList;
@dynamic recentNbattlesList;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clientTime = 0L;
  }
  return self;
}
static BeginClanAvengingRequestProto* defaultBeginClanAvengingRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [BeginClanAvengingRequestProto class]) {
    defaultBeginClanAvengingRequestProtoInstance = [[BeginClanAvengingRequestProto alloc] init];
  }
}
+ (BeginClanAvengingRequestProto*) defaultInstance {
  return defaultBeginClanAvengingRequestProtoInstance;
}
- (BeginClanAvengingRequestProto*) defaultInstance {
  return defaultBeginClanAvengingRequestProtoInstance;
}
- (NSArray *)recentNbattlesList {
  return mutableRecentNbattlesList;
}
- (PvpHistoryProto*)recentNbattlesAtIndex:(NSUInteger)index {
  return [mutableRecentNbattlesList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.recentNbattlesList enumerateObjectsUsingBlock:^(PvpHistoryProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasClientTime) {
    [output writeInt64:3 value:self.clientTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  [self.recentNbattlesList enumerateObjectsUsingBlock:^(PvpHistoryProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasClientTime) {
    size_ += computeInt64Size(3, self.clientTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BeginClanAvengingRequestProto*) parseFromData:(NSData*) data {
  return (BeginClanAvengingRequestProto*)[[[BeginClanAvengingRequestProto builder] mergeFromData:data] build];
}
+ (BeginClanAvengingRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanAvengingRequestProto*)[[[BeginClanAvengingRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BeginClanAvengingRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (BeginClanAvengingRequestProto*)[[[BeginClanAvengingRequestProto builder] mergeFromInputStream:input] build];
}
+ (BeginClanAvengingRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanAvengingRequestProto*)[[[BeginClanAvengingRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginClanAvengingRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BeginClanAvengingRequestProto*)[[[BeginClanAvengingRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (BeginClanAvengingRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanAvengingRequestProto*)[[[BeginClanAvengingRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginClanAvengingRequestProto_Builder*) builder {
  return [[BeginClanAvengingRequestProto_Builder alloc] init];
}
+ (BeginClanAvengingRequestProto_Builder*) builderWithPrototype:(BeginClanAvengingRequestProto*) prototype {
  return [[BeginClanAvengingRequestProto builder] mergeFrom:prototype];
}
- (BeginClanAvengingRequestProto_Builder*) builder {
  return [BeginClanAvengingRequestProto builder];
}
- (BeginClanAvengingRequestProto_Builder*) toBuilder {
  return [BeginClanAvengingRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.recentNbattlesList enumerateObjectsUsingBlock:^(PvpHistoryProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"recentNbattles"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BeginClanAvengingRequestProto class]]) {
    return NO;
  }
  BeginClanAvengingRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.recentNbattlesList isEqualToArray:otherMessage.recentNbattlesList] &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.recentNbattlesList enumerateObjectsUsingBlock:^(PvpHistoryProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BeginClanAvengingRequestProto_Builder()
@property (strong) BeginClanAvengingRequestProto* result;
@end

@implementation BeginClanAvengingRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BeginClanAvengingRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BeginClanAvengingRequestProto_Builder*) clear {
  self.result = [[BeginClanAvengingRequestProto alloc] init];
  return self;
}
- (BeginClanAvengingRequestProto_Builder*) clone {
  return [BeginClanAvengingRequestProto builderWithPrototype:result];
}
- (BeginClanAvengingRequestProto*) defaultInstance {
  return [BeginClanAvengingRequestProto defaultInstance];
}
- (BeginClanAvengingRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BeginClanAvengingRequestProto*) buildPartial {
  BeginClanAvengingRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BeginClanAvengingRequestProto_Builder*) mergeFrom:(BeginClanAvengingRequestProto*) other {
  if (other == [BeginClanAvengingRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableRecentNbattlesList.count > 0) {
    if (result.mutableRecentNbattlesList == nil) {
      result.mutableRecentNbattlesList = [[NSMutableArray alloc] initWithArray:other.mutableRecentNbattlesList];
    } else {
      [result.mutableRecentNbattlesList addObjectsFromArray:other.mutableRecentNbattlesList];
    }
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BeginClanAvengingRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BeginClanAvengingRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PvpHistoryProto_Builder* subBuilder = [PvpHistoryProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRecentNbattles:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setClientTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BeginClanAvengingRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BeginClanAvengingRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BeginClanAvengingRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BeginClanAvengingRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)recentNbattlesList {
  return result.mutableRecentNbattlesList;
}
- (PvpHistoryProto*)recentNbattlesAtIndex:(NSUInteger)index {
  return [result recentNbattlesAtIndex:index];
}
- (BeginClanAvengingRequestProto_Builder *)addRecentNbattles:(PvpHistoryProto*)value {
  if (result.mutableRecentNbattlesList == nil) {
    result.mutableRecentNbattlesList = [[NSMutableArray alloc]init];
  }
  [result.mutableRecentNbattlesList addObject:value];
  return self;
}
- (BeginClanAvengingRequestProto_Builder *)addAllRecentNbattles:(NSArray *)array {
  if (result.mutableRecentNbattlesList == nil) {
    result.mutableRecentNbattlesList = [NSMutableArray array];
  }
  [result.mutableRecentNbattlesList addObjectsFromArray:array];
  return self;
}
- (BeginClanAvengingRequestProto_Builder *)clearRecentNbattles {
  result.mutableRecentNbattlesList = nil;
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (BeginClanAvengingRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (BeginClanAvengingRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
@end

@interface BeginClanAvengingResponseProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutableClanAvengingsList;
@property BeginClanAvengingResponseProto_BeginClanAvengingStatus status;
@end

@implementation BeginClanAvengingResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutableClanAvengingsList;
@dynamic clanAvengingsList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = BeginClanAvengingResponseProto_BeginClanAvengingStatusSuccess;
  }
  return self;
}
static BeginClanAvengingResponseProto* defaultBeginClanAvengingResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [BeginClanAvengingResponseProto class]) {
    defaultBeginClanAvengingResponseProtoInstance = [[BeginClanAvengingResponseProto alloc] init];
  }
}
+ (BeginClanAvengingResponseProto*) defaultInstance {
  return defaultBeginClanAvengingResponseProtoInstance;
}
- (BeginClanAvengingResponseProto*) defaultInstance {
  return defaultBeginClanAvengingResponseProtoInstance;
}
- (NSArray *)clanAvengingsList {
  return mutableClanAvengingsList;
}
- (PvpClanAvengeProto*)clanAvengingsAtIndex:(NSUInteger)index {
  return [mutableClanAvengingsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.clanAvengingsList enumerateObjectsUsingBlock:^(PvpClanAvengeProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  [self.clanAvengingsList enumerateObjectsUsingBlock:^(PvpClanAvengeProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasStatus) {
    size_ += computeEnumSize(3, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BeginClanAvengingResponseProto*) parseFromData:(NSData*) data {
  return (BeginClanAvengingResponseProto*)[[[BeginClanAvengingResponseProto builder] mergeFromData:data] build];
}
+ (BeginClanAvengingResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanAvengingResponseProto*)[[[BeginClanAvengingResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BeginClanAvengingResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (BeginClanAvengingResponseProto*)[[[BeginClanAvengingResponseProto builder] mergeFromInputStream:input] build];
}
+ (BeginClanAvengingResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanAvengingResponseProto*)[[[BeginClanAvengingResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginClanAvengingResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BeginClanAvengingResponseProto*)[[[BeginClanAvengingResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (BeginClanAvengingResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanAvengingResponseProto*)[[[BeginClanAvengingResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginClanAvengingResponseProto_Builder*) builder {
  return [[BeginClanAvengingResponseProto_Builder alloc] init];
}
+ (BeginClanAvengingResponseProto_Builder*) builderWithPrototype:(BeginClanAvengingResponseProto*) prototype {
  return [[BeginClanAvengingResponseProto builder] mergeFrom:prototype];
}
- (BeginClanAvengingResponseProto_Builder*) builder {
  return [BeginClanAvengingResponseProto builder];
}
- (BeginClanAvengingResponseProto_Builder*) toBuilder {
  return [BeginClanAvengingResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.clanAvengingsList enumerateObjectsUsingBlock:^(PvpClanAvengeProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanAvengings"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BeginClanAvengingResponseProto class]]) {
    return NO;
  }
  BeginClanAvengingResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.clanAvengingsList isEqualToArray:otherMessage.clanAvengingsList] &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.clanAvengingsList enumerateObjectsUsingBlock:^(PvpClanAvengeProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL BeginClanAvengingResponseProto_BeginClanAvengingStatusIsValidValue(BeginClanAvengingResponseProto_BeginClanAvengingStatus value) {
  switch (value) {
    case BeginClanAvengingResponseProto_BeginClanAvengingStatusSuccess:
    case BeginClanAvengingResponseProto_BeginClanAvengingStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface BeginClanAvengingResponseProto_Builder()
@property (strong) BeginClanAvengingResponseProto* result;
@end

@implementation BeginClanAvengingResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BeginClanAvengingResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BeginClanAvengingResponseProto_Builder*) clear {
  self.result = [[BeginClanAvengingResponseProto alloc] init];
  return self;
}
- (BeginClanAvengingResponseProto_Builder*) clone {
  return [BeginClanAvengingResponseProto builderWithPrototype:result];
}
- (BeginClanAvengingResponseProto*) defaultInstance {
  return [BeginClanAvengingResponseProto defaultInstance];
}
- (BeginClanAvengingResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BeginClanAvengingResponseProto*) buildPartial {
  BeginClanAvengingResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BeginClanAvengingResponseProto_Builder*) mergeFrom:(BeginClanAvengingResponseProto*) other {
  if (other == [BeginClanAvengingResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableClanAvengingsList.count > 0) {
    if (result.mutableClanAvengingsList == nil) {
      result.mutableClanAvengingsList = [[NSMutableArray alloc] initWithArray:other.mutableClanAvengingsList];
    } else {
      [result.mutableClanAvengingsList addObjectsFromArray:other.mutableClanAvengingsList];
    }
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BeginClanAvengingResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BeginClanAvengingResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PvpClanAvengeProto_Builder* subBuilder = [PvpClanAvengeProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanAvengings:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        BeginClanAvengingResponseProto_BeginClanAvengingStatus value = (BeginClanAvengingResponseProto_BeginClanAvengingStatus)[input readEnum];
        if (BeginClanAvengingResponseProto_BeginClanAvengingStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BeginClanAvengingResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BeginClanAvengingResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BeginClanAvengingResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BeginClanAvengingResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)clanAvengingsList {
  return result.mutableClanAvengingsList;
}
- (PvpClanAvengeProto*)clanAvengingsAtIndex:(NSUInteger)index {
  return [result clanAvengingsAtIndex:index];
}
- (BeginClanAvengingResponseProto_Builder *)addClanAvengings:(PvpClanAvengeProto*)value {
  if (result.mutableClanAvengingsList == nil) {
    result.mutableClanAvengingsList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanAvengingsList addObject:value];
  return self;
}
- (BeginClanAvengingResponseProto_Builder *)addAllClanAvengings:(NSArray *)array {
  if (result.mutableClanAvengingsList == nil) {
    result.mutableClanAvengingsList = [NSMutableArray array];
  }
  [result.mutableClanAvengingsList addObjectsFromArray:array];
  return self;
}
- (BeginClanAvengingResponseProto_Builder *)clearClanAvengings {
  result.mutableClanAvengingsList = nil;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (BeginClanAvengingResponseProto_BeginClanAvengingStatus) status {
  return result.status;
}
- (BeginClanAvengingResponseProto_Builder*) setStatus:(BeginClanAvengingResponseProto_BeginClanAvengingStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (BeginClanAvengingResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = BeginClanAvengingResponseProto_BeginClanAvengingStatusSuccess;
  return self;
}
@end

@interface EndClanAvengingRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutableClanAvengeUuidsList;
@end

@implementation EndClanAvengingRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutableClanAvengeUuidsList;
@dynamic clanAvengeUuidsList;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
  }
  return self;
}
static EndClanAvengingRequestProto* defaultEndClanAvengingRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [EndClanAvengingRequestProto class]) {
    defaultEndClanAvengingRequestProtoInstance = [[EndClanAvengingRequestProto alloc] init];
  }
}
+ (EndClanAvengingRequestProto*) defaultInstance {
  return defaultEndClanAvengingRequestProtoInstance;
}
- (EndClanAvengingRequestProto*) defaultInstance {
  return defaultEndClanAvengingRequestProtoInstance;
}
- (NSArray *)clanAvengeUuidsList {
  return mutableClanAvengeUuidsList;
}
- (NSString*)clanAvengeUuidsAtIndex:(NSUInteger)index {
  return [mutableClanAvengeUuidsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.clanAvengeUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.clanAvengeUuidsList.count;
    [self.clanAvengeUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (EndClanAvengingRequestProto*) parseFromData:(NSData*) data {
  return (EndClanAvengingRequestProto*)[[[EndClanAvengingRequestProto builder] mergeFromData:data] build];
}
+ (EndClanAvengingRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndClanAvengingRequestProto*)[[[EndClanAvengingRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EndClanAvengingRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (EndClanAvengingRequestProto*)[[[EndClanAvengingRequestProto builder] mergeFromInputStream:input] build];
}
+ (EndClanAvengingRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndClanAvengingRequestProto*)[[[EndClanAvengingRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndClanAvengingRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EndClanAvengingRequestProto*)[[[EndClanAvengingRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (EndClanAvengingRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndClanAvengingRequestProto*)[[[EndClanAvengingRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndClanAvengingRequestProto_Builder*) builder {
  return [[EndClanAvengingRequestProto_Builder alloc] init];
}
+ (EndClanAvengingRequestProto_Builder*) builderWithPrototype:(EndClanAvengingRequestProto*) prototype {
  return [[EndClanAvengingRequestProto builder] mergeFrom:prototype];
}
- (EndClanAvengingRequestProto_Builder*) builder {
  return [EndClanAvengingRequestProto builder];
}
- (EndClanAvengingRequestProto_Builder*) toBuilder {
  return [EndClanAvengingRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.clanAvengeUuidsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanAvengeUuids", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[EndClanAvengingRequestProto class]]) {
    return NO;
  }
  EndClanAvengingRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.clanAvengeUuidsList isEqualToArray:otherMessage.clanAvengeUuidsList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.clanAvengeUuidsList enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface EndClanAvengingRequestProto_Builder()
@property (strong) EndClanAvengingRequestProto* result;
@end

@implementation EndClanAvengingRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[EndClanAvengingRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EndClanAvengingRequestProto_Builder*) clear {
  self.result = [[EndClanAvengingRequestProto alloc] init];
  return self;
}
- (EndClanAvengingRequestProto_Builder*) clone {
  return [EndClanAvengingRequestProto builderWithPrototype:result];
}
- (EndClanAvengingRequestProto*) defaultInstance {
  return [EndClanAvengingRequestProto defaultInstance];
}
- (EndClanAvengingRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EndClanAvengingRequestProto*) buildPartial {
  EndClanAvengingRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (EndClanAvengingRequestProto_Builder*) mergeFrom:(EndClanAvengingRequestProto*) other {
  if (other == [EndClanAvengingRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableClanAvengeUuidsList.count > 0) {
    if (result.mutableClanAvengeUuidsList == nil) {
      result.mutableClanAvengeUuidsList = [[NSMutableArray alloc] initWithArray:other.mutableClanAvengeUuidsList];
    } else {
      [result.mutableClanAvengeUuidsList addObjectsFromArray:other.mutableClanAvengeUuidsList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EndClanAvengingRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EndClanAvengingRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self addClanAvengeUuids:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (EndClanAvengingRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (EndClanAvengingRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (EndClanAvengingRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (EndClanAvengingRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)clanAvengeUuidsList {
  return result.mutableClanAvengeUuidsList;
}
- (NSString*)clanAvengeUuidsAtIndex:(NSUInteger)index {
  return [result clanAvengeUuidsAtIndex:index];
}
- (EndClanAvengingRequestProto_Builder *)addClanAvengeUuids:(NSString*)value {
  if (result.mutableClanAvengeUuidsList == nil) {
    result.mutableClanAvengeUuidsList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanAvengeUuidsList addObject:value];
  return self;
}
- (EndClanAvengingRequestProto_Builder *)addAllClanAvengeUuids:(NSArray *)array {
  if (result.mutableClanAvengeUuidsList == nil) {
    result.mutableClanAvengeUuidsList = [NSMutableArray array];
  }
  [result.mutableClanAvengeUuidsList addObjectsFromArray:array];
  return self;
}
- (EndClanAvengingRequestProto_Builder *)clearClanAvengeUuids {
  result.mutableClanAvengeUuidsList = nil;
  return self;
}
@end

@interface EndClanAvengingResponseProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutableClanAvengeUuidsList;
@property EndClanAvengingResponseProto_EndClanAvengingStatus status;
@end

@implementation EndClanAvengingResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutableClanAvengeUuidsList;
@dynamic clanAvengeUuidsList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = EndClanAvengingResponseProto_EndClanAvengingStatusSuccess;
  }
  return self;
}
static EndClanAvengingResponseProto* defaultEndClanAvengingResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [EndClanAvengingResponseProto class]) {
    defaultEndClanAvengingResponseProtoInstance = [[EndClanAvengingResponseProto alloc] init];
  }
}
+ (EndClanAvengingResponseProto*) defaultInstance {
  return defaultEndClanAvengingResponseProtoInstance;
}
- (EndClanAvengingResponseProto*) defaultInstance {
  return defaultEndClanAvengingResponseProtoInstance;
}
- (NSArray *)clanAvengeUuidsList {
  return mutableClanAvengeUuidsList;
}
- (NSString*)clanAvengeUuidsAtIndex:(NSUInteger)index {
  return [mutableClanAvengeUuidsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.clanAvengeUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:2 value:element];
  }];
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.clanAvengeUuidsList.count;
    [self.clanAvengeUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(3, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (EndClanAvengingResponseProto*) parseFromData:(NSData*) data {
  return (EndClanAvengingResponseProto*)[[[EndClanAvengingResponseProto builder] mergeFromData:data] build];
}
+ (EndClanAvengingResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndClanAvengingResponseProto*)[[[EndClanAvengingResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EndClanAvengingResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (EndClanAvengingResponseProto*)[[[EndClanAvengingResponseProto builder] mergeFromInputStream:input] build];
}
+ (EndClanAvengingResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndClanAvengingResponseProto*)[[[EndClanAvengingResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndClanAvengingResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EndClanAvengingResponseProto*)[[[EndClanAvengingResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (EndClanAvengingResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndClanAvengingResponseProto*)[[[EndClanAvengingResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndClanAvengingResponseProto_Builder*) builder {
  return [[EndClanAvengingResponseProto_Builder alloc] init];
}
+ (EndClanAvengingResponseProto_Builder*) builderWithPrototype:(EndClanAvengingResponseProto*) prototype {
  return [[EndClanAvengingResponseProto builder] mergeFrom:prototype];
}
- (EndClanAvengingResponseProto_Builder*) builder {
  return [EndClanAvengingResponseProto builder];
}
- (EndClanAvengingResponseProto_Builder*) toBuilder {
  return [EndClanAvengingResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.clanAvengeUuidsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanAvengeUuids", obj];
  }];
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[EndClanAvengingResponseProto class]]) {
    return NO;
  }
  EndClanAvengingResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.clanAvengeUuidsList isEqualToArray:otherMessage.clanAvengeUuidsList] &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.clanAvengeUuidsList enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL EndClanAvengingResponseProto_EndClanAvengingStatusIsValidValue(EndClanAvengingResponseProto_EndClanAvengingStatus value) {
  switch (value) {
    case EndClanAvengingResponseProto_EndClanAvengingStatusSuccess:
    case EndClanAvengingResponseProto_EndClanAvengingStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface EndClanAvengingResponseProto_Builder()
@property (strong) EndClanAvengingResponseProto* result;
@end

@implementation EndClanAvengingResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[EndClanAvengingResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EndClanAvengingResponseProto_Builder*) clear {
  self.result = [[EndClanAvengingResponseProto alloc] init];
  return self;
}
- (EndClanAvengingResponseProto_Builder*) clone {
  return [EndClanAvengingResponseProto builderWithPrototype:result];
}
- (EndClanAvengingResponseProto*) defaultInstance {
  return [EndClanAvengingResponseProto defaultInstance];
}
- (EndClanAvengingResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EndClanAvengingResponseProto*) buildPartial {
  EndClanAvengingResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (EndClanAvengingResponseProto_Builder*) mergeFrom:(EndClanAvengingResponseProto*) other {
  if (other == [EndClanAvengingResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableClanAvengeUuidsList.count > 0) {
    if (result.mutableClanAvengeUuidsList == nil) {
      result.mutableClanAvengeUuidsList = [[NSMutableArray alloc] initWithArray:other.mutableClanAvengeUuidsList];
    } else {
      [result.mutableClanAvengeUuidsList addObjectsFromArray:other.mutableClanAvengeUuidsList];
    }
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EndClanAvengingResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EndClanAvengingResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self addClanAvengeUuids:[input readString]];
        break;
      }
      case 24: {
        EndClanAvengingResponseProto_EndClanAvengingStatus value = (EndClanAvengingResponseProto_EndClanAvengingStatus)[input readEnum];
        if (EndClanAvengingResponseProto_EndClanAvengingStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (EndClanAvengingResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (EndClanAvengingResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (EndClanAvengingResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (EndClanAvengingResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)clanAvengeUuidsList {
  return result.mutableClanAvengeUuidsList;
}
- (NSString*)clanAvengeUuidsAtIndex:(NSUInteger)index {
  return [result clanAvengeUuidsAtIndex:index];
}
- (EndClanAvengingResponseProto_Builder *)addClanAvengeUuids:(NSString*)value {
  if (result.mutableClanAvengeUuidsList == nil) {
    result.mutableClanAvengeUuidsList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanAvengeUuidsList addObject:value];
  return self;
}
- (EndClanAvengingResponseProto_Builder *)addAllClanAvengeUuids:(NSArray *)array {
  if (result.mutableClanAvengeUuidsList == nil) {
    result.mutableClanAvengeUuidsList = [NSMutableArray array];
  }
  [result.mutableClanAvengeUuidsList addObjectsFromArray:array];
  return self;
}
- (EndClanAvengingResponseProto_Builder *)clearClanAvengeUuids {
  result.mutableClanAvengeUuidsList = nil;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (EndClanAvengingResponseProto_EndClanAvengingStatus) status {
  return result.status;
}
- (EndClanAvengingResponseProto_Builder*) setStatus:(EndClanAvengingResponseProto_EndClanAvengingStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (EndClanAvengingResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = EndClanAvengingResponseProto_EndClanAvengingStatusSuccess;
  return self;
}
@end

@interface AvengeClanMateRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) PvpClanAvengeProto* clanAvenge;
@property int64_t clientTime;
@end

@implementation AvengeClanMateRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasClanAvenge {
  return !!hasClanAvenge_;
}
- (void) setHasClanAvenge:(BOOL) value_ {
  hasClanAvenge_ = !!value_;
}
@synthesize clanAvenge;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clanAvenge = [PvpClanAvengeProto defaultInstance];
    self.clientTime = 0L;
  }
  return self;
}
static AvengeClanMateRequestProto* defaultAvengeClanMateRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [AvengeClanMateRequestProto class]) {
    defaultAvengeClanMateRequestProtoInstance = [[AvengeClanMateRequestProto alloc] init];
  }
}
+ (AvengeClanMateRequestProto*) defaultInstance {
  return defaultAvengeClanMateRequestProtoInstance;
}
- (AvengeClanMateRequestProto*) defaultInstance {
  return defaultAvengeClanMateRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClanAvenge) {
    [output writeMessage:2 value:self.clanAvenge];
  }
  if (self.hasClientTime) {
    [output writeInt64:3 value:self.clientTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasClanAvenge) {
    size_ += computeMessageSize(2, self.clanAvenge);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(3, self.clientTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AvengeClanMateRequestProto*) parseFromData:(NSData*) data {
  return (AvengeClanMateRequestProto*)[[[AvengeClanMateRequestProto builder] mergeFromData:data] build];
}
+ (AvengeClanMateRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AvengeClanMateRequestProto*)[[[AvengeClanMateRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AvengeClanMateRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (AvengeClanMateRequestProto*)[[[AvengeClanMateRequestProto builder] mergeFromInputStream:input] build];
}
+ (AvengeClanMateRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AvengeClanMateRequestProto*)[[[AvengeClanMateRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AvengeClanMateRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AvengeClanMateRequestProto*)[[[AvengeClanMateRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (AvengeClanMateRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AvengeClanMateRequestProto*)[[[AvengeClanMateRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AvengeClanMateRequestProto_Builder*) builder {
  return [[AvengeClanMateRequestProto_Builder alloc] init];
}
+ (AvengeClanMateRequestProto_Builder*) builderWithPrototype:(AvengeClanMateRequestProto*) prototype {
  return [[AvengeClanMateRequestProto builder] mergeFrom:prototype];
}
- (AvengeClanMateRequestProto_Builder*) builder {
  return [AvengeClanMateRequestProto builder];
}
- (AvengeClanMateRequestProto_Builder*) toBuilder {
  return [AvengeClanMateRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClanAvenge) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanAvenge"];
    [self.clanAvenge writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AvengeClanMateRequestProto class]]) {
    return NO;
  }
  AvengeClanMateRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasClanAvenge == otherMessage.hasClanAvenge &&
      (!self.hasClanAvenge || [self.clanAvenge isEqual:otherMessage.clanAvenge]) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasClanAvenge) {
    hashCode = hashCode * 31 + [self.clanAvenge hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AvengeClanMateRequestProto_Builder()
@property (strong) AvengeClanMateRequestProto* result;
@end

@implementation AvengeClanMateRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[AvengeClanMateRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AvengeClanMateRequestProto_Builder*) clear {
  self.result = [[AvengeClanMateRequestProto alloc] init];
  return self;
}
- (AvengeClanMateRequestProto_Builder*) clone {
  return [AvengeClanMateRequestProto builderWithPrototype:result];
}
- (AvengeClanMateRequestProto*) defaultInstance {
  return [AvengeClanMateRequestProto defaultInstance];
}
- (AvengeClanMateRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AvengeClanMateRequestProto*) buildPartial {
  AvengeClanMateRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (AvengeClanMateRequestProto_Builder*) mergeFrom:(AvengeClanMateRequestProto*) other {
  if (other == [AvengeClanMateRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClanAvenge) {
    [self mergeClanAvenge:other.clanAvenge];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AvengeClanMateRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AvengeClanMateRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PvpClanAvengeProto_Builder* subBuilder = [PvpClanAvengeProto builder];
        if (self.hasClanAvenge) {
          [subBuilder mergeFrom:self.clanAvenge];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClanAvenge:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setClientTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (AvengeClanMateRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (AvengeClanMateRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (AvengeClanMateRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (AvengeClanMateRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanAvenge {
  return result.hasClanAvenge;
}
- (PvpClanAvengeProto*) clanAvenge {
  return result.clanAvenge;
}
- (AvengeClanMateRequestProto_Builder*) setClanAvenge:(PvpClanAvengeProto*) value {
  result.hasClanAvenge = YES;
  result.clanAvenge = value;
  return self;
}
- (AvengeClanMateRequestProto_Builder*) setClanAvenge_Builder:(PvpClanAvengeProto_Builder*) builderForValue {
  return [self setClanAvenge:[builderForValue build]];
}
- (AvengeClanMateRequestProto_Builder*) mergeClanAvenge:(PvpClanAvengeProto*) value {
  if (result.hasClanAvenge &&
      result.clanAvenge != [PvpClanAvengeProto defaultInstance]) {
    result.clanAvenge =
      [[[PvpClanAvengeProto builderWithPrototype:result.clanAvenge] mergeFrom:value] buildPartial];
  } else {
    result.clanAvenge = value;
  }
  result.hasClanAvenge = YES;
  return self;
}
- (AvengeClanMateRequestProto_Builder*) clearClanAvenge {
  result.hasClanAvenge = NO;
  result.clanAvenge = [PvpClanAvengeProto defaultInstance];
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (AvengeClanMateRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (AvengeClanMateRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
@end

@interface AvengeClanMateResponseProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) PvpProto* victim;
@property AvengeClanMateResponseProto_AvengeClanMateStatus status;
@end

@implementation AvengeClanMateResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasVictim {
  return !!hasVictim_;
}
- (void) setHasVictim:(BOOL) value_ {
  hasVictim_ = !!value_;
}
@synthesize victim;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.victim = [PvpProto defaultInstance];
    self.status = AvengeClanMateResponseProto_AvengeClanMateStatusSuccess;
  }
  return self;
}
static AvengeClanMateResponseProto* defaultAvengeClanMateResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [AvengeClanMateResponseProto class]) {
    defaultAvengeClanMateResponseProtoInstance = [[AvengeClanMateResponseProto alloc] init];
  }
}
+ (AvengeClanMateResponseProto*) defaultInstance {
  return defaultAvengeClanMateResponseProtoInstance;
}
- (AvengeClanMateResponseProto*) defaultInstance {
  return defaultAvengeClanMateResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasVictim) {
    [output writeMessage:2 value:self.victim];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasVictim) {
    size_ += computeMessageSize(2, self.victim);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(3, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AvengeClanMateResponseProto*) parseFromData:(NSData*) data {
  return (AvengeClanMateResponseProto*)[[[AvengeClanMateResponseProto builder] mergeFromData:data] build];
}
+ (AvengeClanMateResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AvengeClanMateResponseProto*)[[[AvengeClanMateResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AvengeClanMateResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (AvengeClanMateResponseProto*)[[[AvengeClanMateResponseProto builder] mergeFromInputStream:input] build];
}
+ (AvengeClanMateResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AvengeClanMateResponseProto*)[[[AvengeClanMateResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AvengeClanMateResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AvengeClanMateResponseProto*)[[[AvengeClanMateResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (AvengeClanMateResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AvengeClanMateResponseProto*)[[[AvengeClanMateResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AvengeClanMateResponseProto_Builder*) builder {
  return [[AvengeClanMateResponseProto_Builder alloc] init];
}
+ (AvengeClanMateResponseProto_Builder*) builderWithPrototype:(AvengeClanMateResponseProto*) prototype {
  return [[AvengeClanMateResponseProto builder] mergeFrom:prototype];
}
- (AvengeClanMateResponseProto_Builder*) builder {
  return [AvengeClanMateResponseProto builder];
}
- (AvengeClanMateResponseProto_Builder*) toBuilder {
  return [AvengeClanMateResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasVictim) {
    [output appendFormat:@"%@%@ {\n", indent, @"victim"];
    [self.victim writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AvengeClanMateResponseProto class]]) {
    return NO;
  }
  AvengeClanMateResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasVictim == otherMessage.hasVictim &&
      (!self.hasVictim || [self.victim isEqual:otherMessage.victim]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasVictim) {
    hashCode = hashCode * 31 + [self.victim hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL AvengeClanMateResponseProto_AvengeClanMateStatusIsValidValue(AvengeClanMateResponseProto_AvengeClanMateStatus value) {
  switch (value) {
    case AvengeClanMateResponseProto_AvengeClanMateStatusSuccess:
    case AvengeClanMateResponseProto_AvengeClanMateStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface AvengeClanMateResponseProto_Builder()
@property (strong) AvengeClanMateResponseProto* result;
@end

@implementation AvengeClanMateResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[AvengeClanMateResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AvengeClanMateResponseProto_Builder*) clear {
  self.result = [[AvengeClanMateResponseProto alloc] init];
  return self;
}
- (AvengeClanMateResponseProto_Builder*) clone {
  return [AvengeClanMateResponseProto builderWithPrototype:result];
}
- (AvengeClanMateResponseProto*) defaultInstance {
  return [AvengeClanMateResponseProto defaultInstance];
}
- (AvengeClanMateResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AvengeClanMateResponseProto*) buildPartial {
  AvengeClanMateResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (AvengeClanMateResponseProto_Builder*) mergeFrom:(AvengeClanMateResponseProto*) other {
  if (other == [AvengeClanMateResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasVictim) {
    [self mergeVictim:other.victim];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AvengeClanMateResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AvengeClanMateResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PvpProto_Builder* subBuilder = [PvpProto builder];
        if (self.hasVictim) {
          [subBuilder mergeFrom:self.victim];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setVictim:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        AvengeClanMateResponseProto_AvengeClanMateStatus value = (AvengeClanMateResponseProto_AvengeClanMateStatus)[input readEnum];
        if (AvengeClanMateResponseProto_AvengeClanMateStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (AvengeClanMateResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (AvengeClanMateResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (AvengeClanMateResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (AvengeClanMateResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasVictim {
  return result.hasVictim;
}
- (PvpProto*) victim {
  return result.victim;
}
- (AvengeClanMateResponseProto_Builder*) setVictim:(PvpProto*) value {
  result.hasVictim = YES;
  result.victim = value;
  return self;
}
- (AvengeClanMateResponseProto_Builder*) setVictim_Builder:(PvpProto_Builder*) builderForValue {
  return [self setVictim:[builderForValue build]];
}
- (AvengeClanMateResponseProto_Builder*) mergeVictim:(PvpProto*) value {
  if (result.hasVictim &&
      result.victim != [PvpProto defaultInstance]) {
    result.victim =
      [[[PvpProto builderWithPrototype:result.victim] mergeFrom:value] buildPartial];
  } else {
    result.victim = value;
  }
  result.hasVictim = YES;
  return self;
}
- (AvengeClanMateResponseProto_Builder*) clearVictim {
  result.hasVictim = NO;
  result.victim = [PvpProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (AvengeClanMateResponseProto_AvengeClanMateStatus) status {
  return result.status;
}
- (AvengeClanMateResponseProto_Builder*) setStatus:(AvengeClanMateResponseProto_AvengeClanMateStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (AvengeClanMateResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = AvengeClanMateResponseProto_AvengeClanMateStatusSuccess;
  return self;
}
@end

@interface SolicitTeamDonationRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSString* msg;
@property int32_t powerLimit;
@property int64_t clientTime;
@property int32_t gemsSpent;
@end

@implementation SolicitTeamDonationRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasMsg {
  return !!hasMsg_;
}
- (void) setHasMsg:(BOOL) value_ {
  hasMsg_ = !!value_;
}
@synthesize msg;
- (BOOL) hasPowerLimit {
  return !!hasPowerLimit_;
}
- (void) setHasPowerLimit:(BOOL) value_ {
  hasPowerLimit_ = !!value_;
}
@synthesize powerLimit;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (BOOL) hasGemsSpent {
  return !!hasGemsSpent_;
}
- (void) setHasGemsSpent:(BOOL) value_ {
  hasGemsSpent_ = !!value_;
}
@synthesize gemsSpent;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.msg = @"";
    self.powerLimit = 0;
    self.clientTime = 0L;
    self.gemsSpent = 0;
  }
  return self;
}
static SolicitTeamDonationRequestProto* defaultSolicitTeamDonationRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [SolicitTeamDonationRequestProto class]) {
    defaultSolicitTeamDonationRequestProtoInstance = [[SolicitTeamDonationRequestProto alloc] init];
  }
}
+ (SolicitTeamDonationRequestProto*) defaultInstance {
  return defaultSolicitTeamDonationRequestProtoInstance;
}
- (SolicitTeamDonationRequestProto*) defaultInstance {
  return defaultSolicitTeamDonationRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasMsg) {
    [output writeString:2 value:self.msg];
  }
  if (self.hasPowerLimit) {
    [output writeInt32:3 value:self.powerLimit];
  }
  if (self.hasClientTime) {
    [output writeInt64:4 value:self.clientTime];
  }
  if (self.hasGemsSpent) {
    [output writeInt32:5 value:self.gemsSpent];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasMsg) {
    size_ += computeStringSize(2, self.msg);
  }
  if (self.hasPowerLimit) {
    size_ += computeInt32Size(3, self.powerLimit);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(4, self.clientTime);
  }
  if (self.hasGemsSpent) {
    size_ += computeInt32Size(5, self.gemsSpent);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SolicitTeamDonationRequestProto*) parseFromData:(NSData*) data {
  return (SolicitTeamDonationRequestProto*)[[[SolicitTeamDonationRequestProto builder] mergeFromData:data] build];
}
+ (SolicitTeamDonationRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SolicitTeamDonationRequestProto*)[[[SolicitTeamDonationRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SolicitTeamDonationRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (SolicitTeamDonationRequestProto*)[[[SolicitTeamDonationRequestProto builder] mergeFromInputStream:input] build];
}
+ (SolicitTeamDonationRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SolicitTeamDonationRequestProto*)[[[SolicitTeamDonationRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SolicitTeamDonationRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SolicitTeamDonationRequestProto*)[[[SolicitTeamDonationRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (SolicitTeamDonationRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SolicitTeamDonationRequestProto*)[[[SolicitTeamDonationRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SolicitTeamDonationRequestProto_Builder*) builder {
  return [[SolicitTeamDonationRequestProto_Builder alloc] init];
}
+ (SolicitTeamDonationRequestProto_Builder*) builderWithPrototype:(SolicitTeamDonationRequestProto*) prototype {
  return [[SolicitTeamDonationRequestProto builder] mergeFrom:prototype];
}
- (SolicitTeamDonationRequestProto_Builder*) builder {
  return [SolicitTeamDonationRequestProto builder];
}
- (SolicitTeamDonationRequestProto_Builder*) toBuilder {
  return [SolicitTeamDonationRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msg", self.msg];
  }
  if (self.hasPowerLimit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"powerLimit", [NSNumber numberWithInteger:self.powerLimit]];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  if (self.hasGemsSpent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gemsSpent", [NSNumber numberWithInteger:self.gemsSpent]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SolicitTeamDonationRequestProto class]]) {
    return NO;
  }
  SolicitTeamDonationRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasMsg == otherMessage.hasMsg &&
      (!self.hasMsg || [self.msg isEqual:otherMessage.msg]) &&
      self.hasPowerLimit == otherMessage.hasPowerLimit &&
      (!self.hasPowerLimit || self.powerLimit == otherMessage.powerLimit) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      self.hasGemsSpent == otherMessage.hasGemsSpent &&
      (!self.hasGemsSpent || self.gemsSpent == otherMessage.gemsSpent) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasMsg) {
    hashCode = hashCode * 31 + [self.msg hash];
  }
  if (self.hasPowerLimit) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.powerLimit] hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  if (self.hasGemsSpent) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.gemsSpent] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SolicitTeamDonationRequestProto_Builder()
@property (strong) SolicitTeamDonationRequestProto* result;
@end

@implementation SolicitTeamDonationRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[SolicitTeamDonationRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SolicitTeamDonationRequestProto_Builder*) clear {
  self.result = [[SolicitTeamDonationRequestProto alloc] init];
  return self;
}
- (SolicitTeamDonationRequestProto_Builder*) clone {
  return [SolicitTeamDonationRequestProto builderWithPrototype:result];
}
- (SolicitTeamDonationRequestProto*) defaultInstance {
  return [SolicitTeamDonationRequestProto defaultInstance];
}
- (SolicitTeamDonationRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SolicitTeamDonationRequestProto*) buildPartial {
  SolicitTeamDonationRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (SolicitTeamDonationRequestProto_Builder*) mergeFrom:(SolicitTeamDonationRequestProto*) other {
  if (other == [SolicitTeamDonationRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasMsg) {
    [self setMsg:other.msg];
  }
  if (other.hasPowerLimit) {
    [self setPowerLimit:other.powerLimit];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.hasGemsSpent) {
    [self setGemsSpent:other.gemsSpent];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SolicitTeamDonationRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SolicitTeamDonationRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setMsg:[input readString]];
        break;
      }
      case 24: {
        [self setPowerLimit:[input readInt32]];
        break;
      }
      case 32: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 40: {
        [self setGemsSpent:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (SolicitTeamDonationRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SolicitTeamDonationRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SolicitTeamDonationRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SolicitTeamDonationRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasMsg {
  return result.hasMsg;
}
- (NSString*) msg {
  return result.msg;
}
- (SolicitTeamDonationRequestProto_Builder*) setMsg:(NSString*) value {
  result.hasMsg = YES;
  result.msg = value;
  return self;
}
- (SolicitTeamDonationRequestProto_Builder*) clearMsg {
  result.hasMsg = NO;
  result.msg = @"";
  return self;
}
- (BOOL) hasPowerLimit {
  return result.hasPowerLimit;
}
- (int32_t) powerLimit {
  return result.powerLimit;
}
- (SolicitTeamDonationRequestProto_Builder*) setPowerLimit:(int32_t) value {
  result.hasPowerLimit = YES;
  result.powerLimit = value;
  return self;
}
- (SolicitTeamDonationRequestProto_Builder*) clearPowerLimit {
  result.hasPowerLimit = NO;
  result.powerLimit = 0;
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (SolicitTeamDonationRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (SolicitTeamDonationRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (BOOL) hasGemsSpent {
  return result.hasGemsSpent;
}
- (int32_t) gemsSpent {
  return result.gemsSpent;
}
- (SolicitTeamDonationRequestProto_Builder*) setGemsSpent:(int32_t) value {
  result.hasGemsSpent = YES;
  result.gemsSpent = value;
  return self;
}
- (SolicitTeamDonationRequestProto_Builder*) clearGemsSpent {
  result.hasGemsSpent = NO;
  result.gemsSpent = 0;
  return self;
}
@end

@interface SolicitTeamDonationResponseProto ()
@property (strong) MinimumUserProto* sender;
@property SolicitTeamDonationResponseProto_SolicitTeamDonationStatus status;
@property (strong) ClanMemberTeamDonationProto* solicitation;
@end

@implementation SolicitTeamDonationResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasSolicitation {
  return !!hasSolicitation_;
}
- (void) setHasSolicitation:(BOOL) value_ {
  hasSolicitation_ = !!value_;
}
@synthesize solicitation;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = SolicitTeamDonationResponseProto_SolicitTeamDonationStatusSuccess;
    self.solicitation = [ClanMemberTeamDonationProto defaultInstance];
  }
  return self;
}
static SolicitTeamDonationResponseProto* defaultSolicitTeamDonationResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [SolicitTeamDonationResponseProto class]) {
    defaultSolicitTeamDonationResponseProtoInstance = [[SolicitTeamDonationResponseProto alloc] init];
  }
}
+ (SolicitTeamDonationResponseProto*) defaultInstance {
  return defaultSolicitTeamDonationResponseProtoInstance;
}
- (SolicitTeamDonationResponseProto*) defaultInstance {
  return defaultSolicitTeamDonationResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasSolicitation) {
    [output writeMessage:3 value:self.solicitation];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  if (self.hasSolicitation) {
    size_ += computeMessageSize(3, self.solicitation);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SolicitTeamDonationResponseProto*) parseFromData:(NSData*) data {
  return (SolicitTeamDonationResponseProto*)[[[SolicitTeamDonationResponseProto builder] mergeFromData:data] build];
}
+ (SolicitTeamDonationResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SolicitTeamDonationResponseProto*)[[[SolicitTeamDonationResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SolicitTeamDonationResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (SolicitTeamDonationResponseProto*)[[[SolicitTeamDonationResponseProto builder] mergeFromInputStream:input] build];
}
+ (SolicitTeamDonationResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SolicitTeamDonationResponseProto*)[[[SolicitTeamDonationResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SolicitTeamDonationResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SolicitTeamDonationResponseProto*)[[[SolicitTeamDonationResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (SolicitTeamDonationResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SolicitTeamDonationResponseProto*)[[[SolicitTeamDonationResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SolicitTeamDonationResponseProto_Builder*) builder {
  return [[SolicitTeamDonationResponseProto_Builder alloc] init];
}
+ (SolicitTeamDonationResponseProto_Builder*) builderWithPrototype:(SolicitTeamDonationResponseProto*) prototype {
  return [[SolicitTeamDonationResponseProto builder] mergeFrom:prototype];
}
- (SolicitTeamDonationResponseProto_Builder*) builder {
  return [SolicitTeamDonationResponseProto builder];
}
- (SolicitTeamDonationResponseProto_Builder*) toBuilder {
  return [SolicitTeamDonationResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasSolicitation) {
    [output appendFormat:@"%@%@ {\n", indent, @"solicitation"];
    [self.solicitation writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SolicitTeamDonationResponseProto class]]) {
    return NO;
  }
  SolicitTeamDonationResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasSolicitation == otherMessage.hasSolicitation &&
      (!self.hasSolicitation || [self.solicitation isEqual:otherMessage.solicitation]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasSolicitation) {
    hashCode = hashCode * 31 + [self.solicitation hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL SolicitTeamDonationResponseProto_SolicitTeamDonationStatusIsValidValue(SolicitTeamDonationResponseProto_SolicitTeamDonationStatus value) {
  switch (value) {
    case SolicitTeamDonationResponseProto_SolicitTeamDonationStatusSuccess:
    case SolicitTeamDonationResponseProto_SolicitTeamDonationStatusFailOther:
    case SolicitTeamDonationResponseProto_SolicitTeamDonationStatusFailInsufficientGems:
    case SolicitTeamDonationResponseProto_SolicitTeamDonationStatusFailFulfilledRequestExists:
      return YES;
    default:
      return NO;
  }
}
@interface SolicitTeamDonationResponseProto_Builder()
@property (strong) SolicitTeamDonationResponseProto* result;
@end

@implementation SolicitTeamDonationResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[SolicitTeamDonationResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SolicitTeamDonationResponseProto_Builder*) clear {
  self.result = [[SolicitTeamDonationResponseProto alloc] init];
  return self;
}
- (SolicitTeamDonationResponseProto_Builder*) clone {
  return [SolicitTeamDonationResponseProto builderWithPrototype:result];
}
- (SolicitTeamDonationResponseProto*) defaultInstance {
  return [SolicitTeamDonationResponseProto defaultInstance];
}
- (SolicitTeamDonationResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SolicitTeamDonationResponseProto*) buildPartial {
  SolicitTeamDonationResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (SolicitTeamDonationResponseProto_Builder*) mergeFrom:(SolicitTeamDonationResponseProto*) other {
  if (other == [SolicitTeamDonationResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasSolicitation) {
    [self mergeSolicitation:other.solicitation];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SolicitTeamDonationResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SolicitTeamDonationResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        SolicitTeamDonationResponseProto_SolicitTeamDonationStatus value = (SolicitTeamDonationResponseProto_SolicitTeamDonationStatus)[input readEnum];
        if (SolicitTeamDonationResponseProto_SolicitTeamDonationStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        ClanMemberTeamDonationProto_Builder* subBuilder = [ClanMemberTeamDonationProto builder];
        if (self.hasSolicitation) {
          [subBuilder mergeFrom:self.solicitation];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSolicitation:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (SolicitTeamDonationResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SolicitTeamDonationResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SolicitTeamDonationResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SolicitTeamDonationResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (SolicitTeamDonationResponseProto_SolicitTeamDonationStatus) status {
  return result.status;
}
- (SolicitTeamDonationResponseProto_Builder*) setStatus:(SolicitTeamDonationResponseProto_SolicitTeamDonationStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (SolicitTeamDonationResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = SolicitTeamDonationResponseProto_SolicitTeamDonationStatusSuccess;
  return self;
}
- (BOOL) hasSolicitation {
  return result.hasSolicitation;
}
- (ClanMemberTeamDonationProto*) solicitation {
  return result.solicitation;
}
- (SolicitTeamDonationResponseProto_Builder*) setSolicitation:(ClanMemberTeamDonationProto*) value {
  result.hasSolicitation = YES;
  result.solicitation = value;
  return self;
}
- (SolicitTeamDonationResponseProto_Builder*) setSolicitation_Builder:(ClanMemberTeamDonationProto_Builder*) builderForValue {
  return [self setSolicitation:[builderForValue build]];
}
- (SolicitTeamDonationResponseProto_Builder*) mergeSolicitation:(ClanMemberTeamDonationProto*) value {
  if (result.hasSolicitation &&
      result.solicitation != [ClanMemberTeamDonationProto defaultInstance]) {
    result.solicitation =
      [[[ClanMemberTeamDonationProto builderWithPrototype:result.solicitation] mergeFrom:value] buildPartial];
  } else {
    result.solicitation = value;
  }
  result.hasSolicitation = YES;
  return self;
}
- (SolicitTeamDonationResponseProto_Builder*) clearSolicitation {
  result.hasSolicitation = NO;
  result.solicitation = [ClanMemberTeamDonationProto defaultInstance];
  return self;
}
@end

@interface FulfillTeamDonationSolicitationRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) FullUserMonsterProto* fump;
@property int64_t clientTime;
@property (strong) ClanMemberTeamDonationProto* solicitation;
@end

@implementation FulfillTeamDonationSolicitationRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasFump {
  return !!hasFump_;
}
- (void) setHasFump:(BOOL) value_ {
  hasFump_ = !!value_;
}
@synthesize fump;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (BOOL) hasSolicitation {
  return !!hasSolicitation_;
}
- (void) setHasSolicitation:(BOOL) value_ {
  hasSolicitation_ = !!value_;
}
@synthesize solicitation;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.fump = [FullUserMonsterProto defaultInstance];
    self.clientTime = 0L;
    self.solicitation = [ClanMemberTeamDonationProto defaultInstance];
  }
  return self;
}
static FulfillTeamDonationSolicitationRequestProto* defaultFulfillTeamDonationSolicitationRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [FulfillTeamDonationSolicitationRequestProto class]) {
    defaultFulfillTeamDonationSolicitationRequestProtoInstance = [[FulfillTeamDonationSolicitationRequestProto alloc] init];
  }
}
+ (FulfillTeamDonationSolicitationRequestProto*) defaultInstance {
  return defaultFulfillTeamDonationSolicitationRequestProtoInstance;
}
- (FulfillTeamDonationSolicitationRequestProto*) defaultInstance {
  return defaultFulfillTeamDonationSolicitationRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasFump) {
    [output writeMessage:2 value:self.fump];
  }
  if (self.hasClientTime) {
    [output writeInt64:3 value:self.clientTime];
  }
  if (self.hasSolicitation) {
    [output writeMessage:4 value:self.solicitation];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasFump) {
    size_ += computeMessageSize(2, self.fump);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(3, self.clientTime);
  }
  if (self.hasSolicitation) {
    size_ += computeMessageSize(4, self.solicitation);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FulfillTeamDonationSolicitationRequestProto*) parseFromData:(NSData*) data {
  return (FulfillTeamDonationSolicitationRequestProto*)[[[FulfillTeamDonationSolicitationRequestProto builder] mergeFromData:data] build];
}
+ (FulfillTeamDonationSolicitationRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FulfillTeamDonationSolicitationRequestProto*)[[[FulfillTeamDonationSolicitationRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FulfillTeamDonationSolicitationRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (FulfillTeamDonationSolicitationRequestProto*)[[[FulfillTeamDonationSolicitationRequestProto builder] mergeFromInputStream:input] build];
}
+ (FulfillTeamDonationSolicitationRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FulfillTeamDonationSolicitationRequestProto*)[[[FulfillTeamDonationSolicitationRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FulfillTeamDonationSolicitationRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FulfillTeamDonationSolicitationRequestProto*)[[[FulfillTeamDonationSolicitationRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (FulfillTeamDonationSolicitationRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FulfillTeamDonationSolicitationRequestProto*)[[[FulfillTeamDonationSolicitationRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FulfillTeamDonationSolicitationRequestProto_Builder*) builder {
  return [[FulfillTeamDonationSolicitationRequestProto_Builder alloc] init];
}
+ (FulfillTeamDonationSolicitationRequestProto_Builder*) builderWithPrototype:(FulfillTeamDonationSolicitationRequestProto*) prototype {
  return [[FulfillTeamDonationSolicitationRequestProto builder] mergeFrom:prototype];
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) builder {
  return [FulfillTeamDonationSolicitationRequestProto builder];
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) toBuilder {
  return [FulfillTeamDonationSolicitationRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasFump) {
    [output appendFormat:@"%@%@ {\n", indent, @"fump"];
    [self.fump writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  if (self.hasSolicitation) {
    [output appendFormat:@"%@%@ {\n", indent, @"solicitation"];
    [self.solicitation writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FulfillTeamDonationSolicitationRequestProto class]]) {
    return NO;
  }
  FulfillTeamDonationSolicitationRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasFump == otherMessage.hasFump &&
      (!self.hasFump || [self.fump isEqual:otherMessage.fump]) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      self.hasSolicitation == otherMessage.hasSolicitation &&
      (!self.hasSolicitation || [self.solicitation isEqual:otherMessage.solicitation]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasFump) {
    hashCode = hashCode * 31 + [self.fump hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  if (self.hasSolicitation) {
    hashCode = hashCode * 31 + [self.solicitation hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FulfillTeamDonationSolicitationRequestProto_Builder()
@property (strong) FulfillTeamDonationSolicitationRequestProto* result;
@end

@implementation FulfillTeamDonationSolicitationRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[FulfillTeamDonationSolicitationRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) clear {
  self.result = [[FulfillTeamDonationSolicitationRequestProto alloc] init];
  return self;
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) clone {
  return [FulfillTeamDonationSolicitationRequestProto builderWithPrototype:result];
}
- (FulfillTeamDonationSolicitationRequestProto*) defaultInstance {
  return [FulfillTeamDonationSolicitationRequestProto defaultInstance];
}
- (FulfillTeamDonationSolicitationRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FulfillTeamDonationSolicitationRequestProto*) buildPartial {
  FulfillTeamDonationSolicitationRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) mergeFrom:(FulfillTeamDonationSolicitationRequestProto*) other {
  if (other == [FulfillTeamDonationSolicitationRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasFump) {
    [self mergeFump:other.fump];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.hasSolicitation) {
    [self mergeSolicitation:other.solicitation];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        if (self.hasFump) {
          [subBuilder mergeFrom:self.fump];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFump:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 34: {
        ClanMemberTeamDonationProto_Builder* subBuilder = [ClanMemberTeamDonationProto builder];
        if (self.hasSolicitation) {
          [subBuilder mergeFrom:self.solicitation];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSolicitation:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasFump {
  return result.hasFump;
}
- (FullUserMonsterProto*) fump {
  return result.fump;
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) setFump:(FullUserMonsterProto*) value {
  result.hasFump = YES;
  result.fump = value;
  return self;
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) setFump_Builder:(FullUserMonsterProto_Builder*) builderForValue {
  return [self setFump:[builderForValue build]];
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) mergeFump:(FullUserMonsterProto*) value {
  if (result.hasFump &&
      result.fump != [FullUserMonsterProto defaultInstance]) {
    result.fump =
      [[[FullUserMonsterProto builderWithPrototype:result.fump] mergeFrom:value] buildPartial];
  } else {
    result.fump = value;
  }
  result.hasFump = YES;
  return self;
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) clearFump {
  result.hasFump = NO;
  result.fump = [FullUserMonsterProto defaultInstance];
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (BOOL) hasSolicitation {
  return result.hasSolicitation;
}
- (ClanMemberTeamDonationProto*) solicitation {
  return result.solicitation;
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) setSolicitation:(ClanMemberTeamDonationProto*) value {
  result.hasSolicitation = YES;
  result.solicitation = value;
  return self;
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) setSolicitation_Builder:(ClanMemberTeamDonationProto_Builder*) builderForValue {
  return [self setSolicitation:[builderForValue build]];
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) mergeSolicitation:(ClanMemberTeamDonationProto*) value {
  if (result.hasSolicitation &&
      result.solicitation != [ClanMemberTeamDonationProto defaultInstance]) {
    result.solicitation =
      [[[ClanMemberTeamDonationProto builderWithPrototype:result.solicitation] mergeFrom:value] buildPartial];
  } else {
    result.solicitation = value;
  }
  result.hasSolicitation = YES;
  return self;
}
- (FulfillTeamDonationSolicitationRequestProto_Builder*) clearSolicitation {
  result.hasSolicitation = NO;
  result.solicitation = [ClanMemberTeamDonationProto defaultInstance];
  return self;
}
@end

@interface FulfillTeamDonationSolicitationResponseProto ()
@property (strong) MinimumUserProto* sender;
@property FulfillTeamDonationSolicitationResponseProto_FulfillTeamDonationSolicitationStatus status;
@property (strong) ClanMemberTeamDonationProto* solicitation;
@end

@implementation FulfillTeamDonationSolicitationResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasSolicitation {
  return !!hasSolicitation_;
}
- (void) setHasSolicitation:(BOOL) value_ {
  hasSolicitation_ = !!value_;
}
@synthesize solicitation;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = FulfillTeamDonationSolicitationResponseProto_FulfillTeamDonationSolicitationStatusSuccess;
    self.solicitation = [ClanMemberTeamDonationProto defaultInstance];
  }
  return self;
}
static FulfillTeamDonationSolicitationResponseProto* defaultFulfillTeamDonationSolicitationResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [FulfillTeamDonationSolicitationResponseProto class]) {
    defaultFulfillTeamDonationSolicitationResponseProtoInstance = [[FulfillTeamDonationSolicitationResponseProto alloc] init];
  }
}
+ (FulfillTeamDonationSolicitationResponseProto*) defaultInstance {
  return defaultFulfillTeamDonationSolicitationResponseProtoInstance;
}
- (FulfillTeamDonationSolicitationResponseProto*) defaultInstance {
  return defaultFulfillTeamDonationSolicitationResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasSolicitation) {
    [output writeMessage:3 value:self.solicitation];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  if (self.hasSolicitation) {
    size_ += computeMessageSize(3, self.solicitation);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FulfillTeamDonationSolicitationResponseProto*) parseFromData:(NSData*) data {
  return (FulfillTeamDonationSolicitationResponseProto*)[[[FulfillTeamDonationSolicitationResponseProto builder] mergeFromData:data] build];
}
+ (FulfillTeamDonationSolicitationResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FulfillTeamDonationSolicitationResponseProto*)[[[FulfillTeamDonationSolicitationResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FulfillTeamDonationSolicitationResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (FulfillTeamDonationSolicitationResponseProto*)[[[FulfillTeamDonationSolicitationResponseProto builder] mergeFromInputStream:input] build];
}
+ (FulfillTeamDonationSolicitationResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FulfillTeamDonationSolicitationResponseProto*)[[[FulfillTeamDonationSolicitationResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FulfillTeamDonationSolicitationResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FulfillTeamDonationSolicitationResponseProto*)[[[FulfillTeamDonationSolicitationResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (FulfillTeamDonationSolicitationResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FulfillTeamDonationSolicitationResponseProto*)[[[FulfillTeamDonationSolicitationResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FulfillTeamDonationSolicitationResponseProto_Builder*) builder {
  return [[FulfillTeamDonationSolicitationResponseProto_Builder alloc] init];
}
+ (FulfillTeamDonationSolicitationResponseProto_Builder*) builderWithPrototype:(FulfillTeamDonationSolicitationResponseProto*) prototype {
  return [[FulfillTeamDonationSolicitationResponseProto builder] mergeFrom:prototype];
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) builder {
  return [FulfillTeamDonationSolicitationResponseProto builder];
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) toBuilder {
  return [FulfillTeamDonationSolicitationResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasSolicitation) {
    [output appendFormat:@"%@%@ {\n", indent, @"solicitation"];
    [self.solicitation writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FulfillTeamDonationSolicitationResponseProto class]]) {
    return NO;
  }
  FulfillTeamDonationSolicitationResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasSolicitation == otherMessage.hasSolicitation &&
      (!self.hasSolicitation || [self.solicitation isEqual:otherMessage.solicitation]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasSolicitation) {
    hashCode = hashCode * 31 + [self.solicitation hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL FulfillTeamDonationSolicitationResponseProto_FulfillTeamDonationSolicitationStatusIsValidValue(FulfillTeamDonationSolicitationResponseProto_FulfillTeamDonationSolicitationStatus value) {
  switch (value) {
    case FulfillTeamDonationSolicitationResponseProto_FulfillTeamDonationSolicitationStatusSuccess:
    case FulfillTeamDonationSolicitationResponseProto_FulfillTeamDonationSolicitationStatusFailOther:
    case FulfillTeamDonationSolicitationResponseProto_FulfillTeamDonationSolicitationStatusFailNonexistentSolicitation:
    case FulfillTeamDonationSolicitationResponseProto_FulfillTeamDonationSolicitationStatusFailAlreadyFulfilled:
      return YES;
    default:
      return NO;
  }
}
@interface FulfillTeamDonationSolicitationResponseProto_Builder()
@property (strong) FulfillTeamDonationSolicitationResponseProto* result;
@end

@implementation FulfillTeamDonationSolicitationResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[FulfillTeamDonationSolicitationResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) clear {
  self.result = [[FulfillTeamDonationSolicitationResponseProto alloc] init];
  return self;
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) clone {
  return [FulfillTeamDonationSolicitationResponseProto builderWithPrototype:result];
}
- (FulfillTeamDonationSolicitationResponseProto*) defaultInstance {
  return [FulfillTeamDonationSolicitationResponseProto defaultInstance];
}
- (FulfillTeamDonationSolicitationResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FulfillTeamDonationSolicitationResponseProto*) buildPartial {
  FulfillTeamDonationSolicitationResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) mergeFrom:(FulfillTeamDonationSolicitationResponseProto*) other {
  if (other == [FulfillTeamDonationSolicitationResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasSolicitation) {
    [self mergeSolicitation:other.solicitation];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        FulfillTeamDonationSolicitationResponseProto_FulfillTeamDonationSolicitationStatus value = (FulfillTeamDonationSolicitationResponseProto_FulfillTeamDonationSolicitationStatus)[input readEnum];
        if (FulfillTeamDonationSolicitationResponseProto_FulfillTeamDonationSolicitationStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        ClanMemberTeamDonationProto_Builder* subBuilder = [ClanMemberTeamDonationProto builder];
        if (self.hasSolicitation) {
          [subBuilder mergeFrom:self.solicitation];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSolicitation:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (FulfillTeamDonationSolicitationResponseProto_FulfillTeamDonationSolicitationStatus) status {
  return result.status;
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) setStatus:(FulfillTeamDonationSolicitationResponseProto_FulfillTeamDonationSolicitationStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = FulfillTeamDonationSolicitationResponseProto_FulfillTeamDonationSolicitationStatusSuccess;
  return self;
}
- (BOOL) hasSolicitation {
  return result.hasSolicitation;
}
- (ClanMemberTeamDonationProto*) solicitation {
  return result.solicitation;
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) setSolicitation:(ClanMemberTeamDonationProto*) value {
  result.hasSolicitation = YES;
  result.solicitation = value;
  return self;
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) setSolicitation_Builder:(ClanMemberTeamDonationProto_Builder*) builderForValue {
  return [self setSolicitation:[builderForValue build]];
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) mergeSolicitation:(ClanMemberTeamDonationProto*) value {
  if (result.hasSolicitation &&
      result.solicitation != [ClanMemberTeamDonationProto defaultInstance]) {
    result.solicitation =
      [[[ClanMemberTeamDonationProto builderWithPrototype:result.solicitation] mergeFrom:value] buildPartial];
  } else {
    result.solicitation = value;
  }
  result.hasSolicitation = YES;
  return self;
}
- (FulfillTeamDonationSolicitationResponseProto_Builder*) clearSolicitation {
  result.hasSolicitation = NO;
  result.solicitation = [ClanMemberTeamDonationProto defaultInstance];
  return self;
}
@end

@interface VoidTeamDonationSolicitationRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutableSolicitationsList;
@end

@implementation VoidTeamDonationSolicitationRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutableSolicitationsList;
@dynamic solicitationsList;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
  }
  return self;
}
static VoidTeamDonationSolicitationRequestProto* defaultVoidTeamDonationSolicitationRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [VoidTeamDonationSolicitationRequestProto class]) {
    defaultVoidTeamDonationSolicitationRequestProtoInstance = [[VoidTeamDonationSolicitationRequestProto alloc] init];
  }
}
+ (VoidTeamDonationSolicitationRequestProto*) defaultInstance {
  return defaultVoidTeamDonationSolicitationRequestProtoInstance;
}
- (VoidTeamDonationSolicitationRequestProto*) defaultInstance {
  return defaultVoidTeamDonationSolicitationRequestProtoInstance;
}
- (NSArray *)solicitationsList {
  return mutableSolicitationsList;
}
- (ClanMemberTeamDonationProto*)solicitationsAtIndex:(NSUInteger)index {
  return [mutableSolicitationsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.solicitationsList enumerateObjectsUsingBlock:^(ClanMemberTeamDonationProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  [self.solicitationsList enumerateObjectsUsingBlock:^(ClanMemberTeamDonationProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (VoidTeamDonationSolicitationRequestProto*) parseFromData:(NSData*) data {
  return (VoidTeamDonationSolicitationRequestProto*)[[[VoidTeamDonationSolicitationRequestProto builder] mergeFromData:data] build];
}
+ (VoidTeamDonationSolicitationRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VoidTeamDonationSolicitationRequestProto*)[[[VoidTeamDonationSolicitationRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (VoidTeamDonationSolicitationRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (VoidTeamDonationSolicitationRequestProto*)[[[VoidTeamDonationSolicitationRequestProto builder] mergeFromInputStream:input] build];
}
+ (VoidTeamDonationSolicitationRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VoidTeamDonationSolicitationRequestProto*)[[[VoidTeamDonationSolicitationRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (VoidTeamDonationSolicitationRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (VoidTeamDonationSolicitationRequestProto*)[[[VoidTeamDonationSolicitationRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (VoidTeamDonationSolicitationRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VoidTeamDonationSolicitationRequestProto*)[[[VoidTeamDonationSolicitationRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (VoidTeamDonationSolicitationRequestProto_Builder*) builder {
  return [[VoidTeamDonationSolicitationRequestProto_Builder alloc] init];
}
+ (VoidTeamDonationSolicitationRequestProto_Builder*) builderWithPrototype:(VoidTeamDonationSolicitationRequestProto*) prototype {
  return [[VoidTeamDonationSolicitationRequestProto builder] mergeFrom:prototype];
}
- (VoidTeamDonationSolicitationRequestProto_Builder*) builder {
  return [VoidTeamDonationSolicitationRequestProto builder];
}
- (VoidTeamDonationSolicitationRequestProto_Builder*) toBuilder {
  return [VoidTeamDonationSolicitationRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.solicitationsList enumerateObjectsUsingBlock:^(ClanMemberTeamDonationProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"solicitations"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[VoidTeamDonationSolicitationRequestProto class]]) {
    return NO;
  }
  VoidTeamDonationSolicitationRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.solicitationsList isEqualToArray:otherMessage.solicitationsList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.solicitationsList enumerateObjectsUsingBlock:^(ClanMemberTeamDonationProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface VoidTeamDonationSolicitationRequestProto_Builder()
@property (strong) VoidTeamDonationSolicitationRequestProto* result;
@end

@implementation VoidTeamDonationSolicitationRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[VoidTeamDonationSolicitationRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (VoidTeamDonationSolicitationRequestProto_Builder*) clear {
  self.result = [[VoidTeamDonationSolicitationRequestProto alloc] init];
  return self;
}
- (VoidTeamDonationSolicitationRequestProto_Builder*) clone {
  return [VoidTeamDonationSolicitationRequestProto builderWithPrototype:result];
}
- (VoidTeamDonationSolicitationRequestProto*) defaultInstance {
  return [VoidTeamDonationSolicitationRequestProto defaultInstance];
}
- (VoidTeamDonationSolicitationRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (VoidTeamDonationSolicitationRequestProto*) buildPartial {
  VoidTeamDonationSolicitationRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (VoidTeamDonationSolicitationRequestProto_Builder*) mergeFrom:(VoidTeamDonationSolicitationRequestProto*) other {
  if (other == [VoidTeamDonationSolicitationRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableSolicitationsList.count > 0) {
    if (result.mutableSolicitationsList == nil) {
      result.mutableSolicitationsList = [[NSMutableArray alloc] initWithArray:other.mutableSolicitationsList];
    } else {
      [result.mutableSolicitationsList addObjectsFromArray:other.mutableSolicitationsList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (VoidTeamDonationSolicitationRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (VoidTeamDonationSolicitationRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        ClanMemberTeamDonationProto_Builder* subBuilder = [ClanMemberTeamDonationProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSolicitations:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (VoidTeamDonationSolicitationRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (VoidTeamDonationSolicitationRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (VoidTeamDonationSolicitationRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (VoidTeamDonationSolicitationRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)solicitationsList {
  return result.mutableSolicitationsList;
}
- (ClanMemberTeamDonationProto*)solicitationsAtIndex:(NSUInteger)index {
  return [result solicitationsAtIndex:index];
}
- (VoidTeamDonationSolicitationRequestProto_Builder *)addSolicitations:(ClanMemberTeamDonationProto*)value {
  if (result.mutableSolicitationsList == nil) {
    result.mutableSolicitationsList = [[NSMutableArray alloc]init];
  }
  [result.mutableSolicitationsList addObject:value];
  return self;
}
- (VoidTeamDonationSolicitationRequestProto_Builder *)addAllSolicitations:(NSArray *)array {
  if (result.mutableSolicitationsList == nil) {
    result.mutableSolicitationsList = [NSMutableArray array];
  }
  [result.mutableSolicitationsList addObjectsFromArray:array];
  return self;
}
- (VoidTeamDonationSolicitationRequestProto_Builder *)clearSolicitations {
  result.mutableSolicitationsList = nil;
  return self;
}
@end

@interface VoidTeamDonationSolicitationResponseProto ()
@property (strong) MinimumUserProto* sender;
@property VoidTeamDonationSolicitationResponseProto_VoidTeamDonationSolicitationStatus status;
@property (strong) NSMutableArray * mutableClanTeamDonateUuidList;
@end

@implementation VoidTeamDonationSolicitationResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
@synthesize mutableClanTeamDonateUuidList;
@dynamic clanTeamDonateUuidList;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = VoidTeamDonationSolicitationResponseProto_VoidTeamDonationSolicitationStatusSuccess;
  }
  return self;
}
static VoidTeamDonationSolicitationResponseProto* defaultVoidTeamDonationSolicitationResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [VoidTeamDonationSolicitationResponseProto class]) {
    defaultVoidTeamDonationSolicitationResponseProtoInstance = [[VoidTeamDonationSolicitationResponseProto alloc] init];
  }
}
+ (VoidTeamDonationSolicitationResponseProto*) defaultInstance {
  return defaultVoidTeamDonationSolicitationResponseProtoInstance;
}
- (VoidTeamDonationSolicitationResponseProto*) defaultInstance {
  return defaultVoidTeamDonationSolicitationResponseProtoInstance;
}
- (NSArray *)clanTeamDonateUuidList {
  return mutableClanTeamDonateUuidList;
}
- (NSString*)clanTeamDonateUuidAtIndex:(NSUInteger)index {
  return [mutableClanTeamDonateUuidList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.clanTeamDonateUuidList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.clanTeamDonateUuidList.count;
    [self.clanTeamDonateUuidList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (VoidTeamDonationSolicitationResponseProto*) parseFromData:(NSData*) data {
  return (VoidTeamDonationSolicitationResponseProto*)[[[VoidTeamDonationSolicitationResponseProto builder] mergeFromData:data] build];
}
+ (VoidTeamDonationSolicitationResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VoidTeamDonationSolicitationResponseProto*)[[[VoidTeamDonationSolicitationResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (VoidTeamDonationSolicitationResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (VoidTeamDonationSolicitationResponseProto*)[[[VoidTeamDonationSolicitationResponseProto builder] mergeFromInputStream:input] build];
}
+ (VoidTeamDonationSolicitationResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VoidTeamDonationSolicitationResponseProto*)[[[VoidTeamDonationSolicitationResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (VoidTeamDonationSolicitationResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (VoidTeamDonationSolicitationResponseProto*)[[[VoidTeamDonationSolicitationResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (VoidTeamDonationSolicitationResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VoidTeamDonationSolicitationResponseProto*)[[[VoidTeamDonationSolicitationResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (VoidTeamDonationSolicitationResponseProto_Builder*) builder {
  return [[VoidTeamDonationSolicitationResponseProto_Builder alloc] init];
}
+ (VoidTeamDonationSolicitationResponseProto_Builder*) builderWithPrototype:(VoidTeamDonationSolicitationResponseProto*) prototype {
  return [[VoidTeamDonationSolicitationResponseProto builder] mergeFrom:prototype];
}
- (VoidTeamDonationSolicitationResponseProto_Builder*) builder {
  return [VoidTeamDonationSolicitationResponseProto builder];
}
- (VoidTeamDonationSolicitationResponseProto_Builder*) toBuilder {
  return [VoidTeamDonationSolicitationResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.clanTeamDonateUuidList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanTeamDonateUuid", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[VoidTeamDonationSolicitationResponseProto class]]) {
    return NO;
  }
  VoidTeamDonationSolicitationResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      [self.clanTeamDonateUuidList isEqualToArray:otherMessage.clanTeamDonateUuidList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  [self.clanTeamDonateUuidList enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL VoidTeamDonationSolicitationResponseProto_VoidTeamDonationSolicitationStatusIsValidValue(VoidTeamDonationSolicitationResponseProto_VoidTeamDonationSolicitationStatus value) {
  switch (value) {
    case VoidTeamDonationSolicitationResponseProto_VoidTeamDonationSolicitationStatusSuccess:
    case VoidTeamDonationSolicitationResponseProto_VoidTeamDonationSolicitationStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface VoidTeamDonationSolicitationResponseProto_Builder()
@property (strong) VoidTeamDonationSolicitationResponseProto* result;
@end

@implementation VoidTeamDonationSolicitationResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[VoidTeamDonationSolicitationResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (VoidTeamDonationSolicitationResponseProto_Builder*) clear {
  self.result = [[VoidTeamDonationSolicitationResponseProto alloc] init];
  return self;
}
- (VoidTeamDonationSolicitationResponseProto_Builder*) clone {
  return [VoidTeamDonationSolicitationResponseProto builderWithPrototype:result];
}
- (VoidTeamDonationSolicitationResponseProto*) defaultInstance {
  return [VoidTeamDonationSolicitationResponseProto defaultInstance];
}
- (VoidTeamDonationSolicitationResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (VoidTeamDonationSolicitationResponseProto*) buildPartial {
  VoidTeamDonationSolicitationResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (VoidTeamDonationSolicitationResponseProto_Builder*) mergeFrom:(VoidTeamDonationSolicitationResponseProto*) other {
  if (other == [VoidTeamDonationSolicitationResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.mutableClanTeamDonateUuidList.count > 0) {
    if (result.mutableClanTeamDonateUuidList == nil) {
      result.mutableClanTeamDonateUuidList = [[NSMutableArray alloc] initWithArray:other.mutableClanTeamDonateUuidList];
    } else {
      [result.mutableClanTeamDonateUuidList addObjectsFromArray:other.mutableClanTeamDonateUuidList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (VoidTeamDonationSolicitationResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (VoidTeamDonationSolicitationResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        VoidTeamDonationSolicitationResponseProto_VoidTeamDonationSolicitationStatus value = (VoidTeamDonationSolicitationResponseProto_VoidTeamDonationSolicitationStatus)[input readEnum];
        if (VoidTeamDonationSolicitationResponseProto_VoidTeamDonationSolicitationStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self addClanTeamDonateUuid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (VoidTeamDonationSolicitationResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (VoidTeamDonationSolicitationResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (VoidTeamDonationSolicitationResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (VoidTeamDonationSolicitationResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (VoidTeamDonationSolicitationResponseProto_VoidTeamDonationSolicitationStatus) status {
  return result.status;
}
- (VoidTeamDonationSolicitationResponseProto_Builder*) setStatus:(VoidTeamDonationSolicitationResponseProto_VoidTeamDonationSolicitationStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (VoidTeamDonationSolicitationResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = VoidTeamDonationSolicitationResponseProto_VoidTeamDonationSolicitationStatusSuccess;
  return self;
}
- (NSMutableArray *)clanTeamDonateUuidList {
  return result.mutableClanTeamDonateUuidList;
}
- (NSString*)clanTeamDonateUuidAtIndex:(NSUInteger)index {
  return [result clanTeamDonateUuidAtIndex:index];
}
- (VoidTeamDonationSolicitationResponseProto_Builder *)addClanTeamDonateUuid:(NSString*)value {
  if (result.mutableClanTeamDonateUuidList == nil) {
    result.mutableClanTeamDonateUuidList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanTeamDonateUuidList addObject:value];
  return self;
}
- (VoidTeamDonationSolicitationResponseProto_Builder *)addAllClanTeamDonateUuid:(NSArray *)array {
  if (result.mutableClanTeamDonateUuidList == nil) {
    result.mutableClanTeamDonateUuidList = [NSMutableArray array];
  }
  [result.mutableClanTeamDonateUuidList addObjectsFromArray:array];
  return self;
}
- (VoidTeamDonationSolicitationResponseProto_Builder *)clearClanTeamDonateUuid {
  result.mutableClanTeamDonateUuidList = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
