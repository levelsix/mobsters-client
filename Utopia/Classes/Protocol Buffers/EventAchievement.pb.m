// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventAchievement.pb.h"
// @@protoc_insertion_point(imports)

@implementation EventAchievementRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventAchievementRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [AchievementStuffRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface AchievementProgressRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutableUapListList;
@property int64_t clientTime;
@end

@implementation AchievementProgressRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutableUapListList;
@dynamic uapListList;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clientTime = 0L;
  }
  return self;
}
static AchievementProgressRequestProto* defaultAchievementProgressRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [AchievementProgressRequestProto class]) {
    defaultAchievementProgressRequestProtoInstance = [[AchievementProgressRequestProto alloc] init];
  }
}
+ (AchievementProgressRequestProto*) defaultInstance {
  return defaultAchievementProgressRequestProtoInstance;
}
- (AchievementProgressRequestProto*) defaultInstance {
  return defaultAchievementProgressRequestProtoInstance;
}
- (NSArray *)uapListList {
  return mutableUapListList;
}
- (UserAchievementProto*)uapListAtIndex:(NSUInteger)index {
  return [mutableUapListList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.uapListList enumerateObjectsUsingBlock:^(UserAchievementProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasClientTime) {
    [output writeInt64:3 value:self.clientTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  [self.uapListList enumerateObjectsUsingBlock:^(UserAchievementProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasClientTime) {
    size_ += computeInt64Size(3, self.clientTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AchievementProgressRequestProto*) parseFromData:(NSData*) data {
  return (AchievementProgressRequestProto*)[[[AchievementProgressRequestProto builder] mergeFromData:data] build];
}
+ (AchievementProgressRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AchievementProgressRequestProto*)[[[AchievementProgressRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AchievementProgressRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (AchievementProgressRequestProto*)[[[AchievementProgressRequestProto builder] mergeFromInputStream:input] build];
}
+ (AchievementProgressRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AchievementProgressRequestProto*)[[[AchievementProgressRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AchievementProgressRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AchievementProgressRequestProto*)[[[AchievementProgressRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (AchievementProgressRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AchievementProgressRequestProto*)[[[AchievementProgressRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AchievementProgressRequestProto_Builder*) builder {
  return [[AchievementProgressRequestProto_Builder alloc] init];
}
+ (AchievementProgressRequestProto_Builder*) builderWithPrototype:(AchievementProgressRequestProto*) prototype {
  return [[AchievementProgressRequestProto builder] mergeFrom:prototype];
}
- (AchievementProgressRequestProto_Builder*) builder {
  return [AchievementProgressRequestProto builder];
}
- (AchievementProgressRequestProto_Builder*) toBuilder {
  return [AchievementProgressRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.uapListList enumerateObjectsUsingBlock:^(UserAchievementProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"uapList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AchievementProgressRequestProto class]]) {
    return NO;
  }
  AchievementProgressRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.uapListList isEqualToArray:otherMessage.uapListList] &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.uapListList enumerateObjectsUsingBlock:^(UserAchievementProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AchievementProgressRequestProto_Builder()
@property (strong) AchievementProgressRequestProto* result;
@end

@implementation AchievementProgressRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[AchievementProgressRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AchievementProgressRequestProto_Builder*) clear {
  self.result = [[AchievementProgressRequestProto alloc] init];
  return self;
}
- (AchievementProgressRequestProto_Builder*) clone {
  return [AchievementProgressRequestProto builderWithPrototype:result];
}
- (AchievementProgressRequestProto*) defaultInstance {
  return [AchievementProgressRequestProto defaultInstance];
}
- (AchievementProgressRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AchievementProgressRequestProto*) buildPartial {
  AchievementProgressRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (AchievementProgressRequestProto_Builder*) mergeFrom:(AchievementProgressRequestProto*) other {
  if (other == [AchievementProgressRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableUapListList.count > 0) {
    if (result.mutableUapListList == nil) {
      result.mutableUapListList = [[NSMutableArray alloc] initWithArray:other.mutableUapListList];
    } else {
      [result.mutableUapListList addObjectsFromArray:other.mutableUapListList];
    }
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AchievementProgressRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AchievementProgressRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        UserAchievementProto_Builder* subBuilder = [UserAchievementProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUapList:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setClientTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (AchievementProgressRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (AchievementProgressRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (AchievementProgressRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (AchievementProgressRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)uapListList {
  return result.mutableUapListList;
}
- (UserAchievementProto*)uapListAtIndex:(NSUInteger)index {
  return [result uapListAtIndex:index];
}
- (AchievementProgressRequestProto_Builder *)addUapList:(UserAchievementProto*)value {
  if (result.mutableUapListList == nil) {
    result.mutableUapListList = [[NSMutableArray alloc]init];
  }
  [result.mutableUapListList addObject:value];
  return self;
}
- (AchievementProgressRequestProto_Builder *)addAllUapList:(NSArray *)array {
  if (result.mutableUapListList == nil) {
    result.mutableUapListList = [NSMutableArray array];
  }
  [result.mutableUapListList addObjectsFromArray:array];
  return self;
}
- (AchievementProgressRequestProto_Builder *)clearUapList {
  result.mutableUapListList = nil;
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (AchievementProgressRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (AchievementProgressRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
@end

@interface AchievementProgressResponseProto ()
@property (strong) MinimumUserProto* sender;
@property AchievementProgressResponseProto_AchievementProgressStatus status;
@end

@implementation AchievementProgressResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = AchievementProgressResponseProto_AchievementProgressStatusSuccess;
  }
  return self;
}
static AchievementProgressResponseProto* defaultAchievementProgressResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [AchievementProgressResponseProto class]) {
    defaultAchievementProgressResponseProtoInstance = [[AchievementProgressResponseProto alloc] init];
  }
}
+ (AchievementProgressResponseProto*) defaultInstance {
  return defaultAchievementProgressResponseProtoInstance;
}
- (AchievementProgressResponseProto*) defaultInstance {
  return defaultAchievementProgressResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AchievementProgressResponseProto*) parseFromData:(NSData*) data {
  return (AchievementProgressResponseProto*)[[[AchievementProgressResponseProto builder] mergeFromData:data] build];
}
+ (AchievementProgressResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AchievementProgressResponseProto*)[[[AchievementProgressResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AchievementProgressResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (AchievementProgressResponseProto*)[[[AchievementProgressResponseProto builder] mergeFromInputStream:input] build];
}
+ (AchievementProgressResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AchievementProgressResponseProto*)[[[AchievementProgressResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AchievementProgressResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AchievementProgressResponseProto*)[[[AchievementProgressResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (AchievementProgressResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AchievementProgressResponseProto*)[[[AchievementProgressResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AchievementProgressResponseProto_Builder*) builder {
  return [[AchievementProgressResponseProto_Builder alloc] init];
}
+ (AchievementProgressResponseProto_Builder*) builderWithPrototype:(AchievementProgressResponseProto*) prototype {
  return [[AchievementProgressResponseProto builder] mergeFrom:prototype];
}
- (AchievementProgressResponseProto_Builder*) builder {
  return [AchievementProgressResponseProto builder];
}
- (AchievementProgressResponseProto_Builder*) toBuilder {
  return [AchievementProgressResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AchievementProgressResponseProto class]]) {
    return NO;
  }
  AchievementProgressResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL AchievementProgressResponseProto_AchievementProgressStatusIsValidValue(AchievementProgressResponseProto_AchievementProgressStatus value) {
  switch (value) {
    case AchievementProgressResponseProto_AchievementProgressStatusSuccess:
    case AchievementProgressResponseProto_AchievementProgressStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface AchievementProgressResponseProto_Builder()
@property (strong) AchievementProgressResponseProto* result;
@end

@implementation AchievementProgressResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[AchievementProgressResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AchievementProgressResponseProto_Builder*) clear {
  self.result = [[AchievementProgressResponseProto alloc] init];
  return self;
}
- (AchievementProgressResponseProto_Builder*) clone {
  return [AchievementProgressResponseProto builderWithPrototype:result];
}
- (AchievementProgressResponseProto*) defaultInstance {
  return [AchievementProgressResponseProto defaultInstance];
}
- (AchievementProgressResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AchievementProgressResponseProto*) buildPartial {
  AchievementProgressResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (AchievementProgressResponseProto_Builder*) mergeFrom:(AchievementProgressResponseProto*) other {
  if (other == [AchievementProgressResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AchievementProgressResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AchievementProgressResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        AchievementProgressResponseProto_AchievementProgressStatus value = (AchievementProgressResponseProto_AchievementProgressStatus)[input readEnum];
        if (AchievementProgressResponseProto_AchievementProgressStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (AchievementProgressResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (AchievementProgressResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (AchievementProgressResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (AchievementProgressResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (AchievementProgressResponseProto_AchievementProgressStatus) status {
  return result.status;
}
- (AchievementProgressResponseProto_Builder*) setStatus:(AchievementProgressResponseProto_AchievementProgressStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (AchievementProgressResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = AchievementProgressResponseProto_AchievementProgressStatusSuccess;
  return self;
}
@end

@interface AchievementRedeemRequestProto ()
@property (strong) MinimumUserProto* sender;
@property int32_t achievementId;
@property int64_t clientTime;
@end

@implementation AchievementRedeemRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasAchievementId {
  return !!hasAchievementId_;
}
- (void) setHasAchievementId:(BOOL) value_ {
  hasAchievementId_ = !!value_;
}
@synthesize achievementId;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.achievementId = 0;
    self.clientTime = 0L;
  }
  return self;
}
static AchievementRedeemRequestProto* defaultAchievementRedeemRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [AchievementRedeemRequestProto class]) {
    defaultAchievementRedeemRequestProtoInstance = [[AchievementRedeemRequestProto alloc] init];
  }
}
+ (AchievementRedeemRequestProto*) defaultInstance {
  return defaultAchievementRedeemRequestProtoInstance;
}
- (AchievementRedeemRequestProto*) defaultInstance {
  return defaultAchievementRedeemRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasAchievementId) {
    [output writeInt32:2 value:self.achievementId];
  }
  if (self.hasClientTime) {
    [output writeInt64:3 value:self.clientTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasAchievementId) {
    size_ += computeInt32Size(2, self.achievementId);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(3, self.clientTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AchievementRedeemRequestProto*) parseFromData:(NSData*) data {
  return (AchievementRedeemRequestProto*)[[[AchievementRedeemRequestProto builder] mergeFromData:data] build];
}
+ (AchievementRedeemRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AchievementRedeemRequestProto*)[[[AchievementRedeemRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AchievementRedeemRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (AchievementRedeemRequestProto*)[[[AchievementRedeemRequestProto builder] mergeFromInputStream:input] build];
}
+ (AchievementRedeemRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AchievementRedeemRequestProto*)[[[AchievementRedeemRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AchievementRedeemRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AchievementRedeemRequestProto*)[[[AchievementRedeemRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (AchievementRedeemRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AchievementRedeemRequestProto*)[[[AchievementRedeemRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AchievementRedeemRequestProto_Builder*) builder {
  return [[AchievementRedeemRequestProto_Builder alloc] init];
}
+ (AchievementRedeemRequestProto_Builder*) builderWithPrototype:(AchievementRedeemRequestProto*) prototype {
  return [[AchievementRedeemRequestProto builder] mergeFrom:prototype];
}
- (AchievementRedeemRequestProto_Builder*) builder {
  return [AchievementRedeemRequestProto builder];
}
- (AchievementRedeemRequestProto_Builder*) toBuilder {
  return [AchievementRedeemRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasAchievementId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"achievementId", [NSNumber numberWithInteger:self.achievementId]];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AchievementRedeemRequestProto class]]) {
    return NO;
  }
  AchievementRedeemRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasAchievementId == otherMessage.hasAchievementId &&
      (!self.hasAchievementId || self.achievementId == otherMessage.achievementId) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasAchievementId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.achievementId] hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AchievementRedeemRequestProto_Builder()
@property (strong) AchievementRedeemRequestProto* result;
@end

@implementation AchievementRedeemRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[AchievementRedeemRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AchievementRedeemRequestProto_Builder*) clear {
  self.result = [[AchievementRedeemRequestProto alloc] init];
  return self;
}
- (AchievementRedeemRequestProto_Builder*) clone {
  return [AchievementRedeemRequestProto builderWithPrototype:result];
}
- (AchievementRedeemRequestProto*) defaultInstance {
  return [AchievementRedeemRequestProto defaultInstance];
}
- (AchievementRedeemRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AchievementRedeemRequestProto*) buildPartial {
  AchievementRedeemRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (AchievementRedeemRequestProto_Builder*) mergeFrom:(AchievementRedeemRequestProto*) other {
  if (other == [AchievementRedeemRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasAchievementId) {
    [self setAchievementId:other.achievementId];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AchievementRedeemRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AchievementRedeemRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setAchievementId:[input readInt32]];
        break;
      }
      case 24: {
        [self setClientTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (AchievementRedeemRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (AchievementRedeemRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (AchievementRedeemRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (AchievementRedeemRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasAchievementId {
  return result.hasAchievementId;
}
- (int32_t) achievementId {
  return result.achievementId;
}
- (AchievementRedeemRequestProto_Builder*) setAchievementId:(int32_t) value {
  result.hasAchievementId = YES;
  result.achievementId = value;
  return self;
}
- (AchievementRedeemRequestProto_Builder*) clearAchievementId {
  result.hasAchievementId = NO;
  result.achievementId = 0;
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (AchievementRedeemRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (AchievementRedeemRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
@end

@interface AchievementRedeemResponseProto ()
@property (strong) MinimumUserProto* sender;
@property AchievementRedeemResponseProto_AchievementRedeemStatus status;
@end

@implementation AchievementRedeemResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = AchievementRedeemResponseProto_AchievementRedeemStatusSuccess;
  }
  return self;
}
static AchievementRedeemResponseProto* defaultAchievementRedeemResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [AchievementRedeemResponseProto class]) {
    defaultAchievementRedeemResponseProtoInstance = [[AchievementRedeemResponseProto alloc] init];
  }
}
+ (AchievementRedeemResponseProto*) defaultInstance {
  return defaultAchievementRedeemResponseProtoInstance;
}
- (AchievementRedeemResponseProto*) defaultInstance {
  return defaultAchievementRedeemResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AchievementRedeemResponseProto*) parseFromData:(NSData*) data {
  return (AchievementRedeemResponseProto*)[[[AchievementRedeemResponseProto builder] mergeFromData:data] build];
}
+ (AchievementRedeemResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AchievementRedeemResponseProto*)[[[AchievementRedeemResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AchievementRedeemResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (AchievementRedeemResponseProto*)[[[AchievementRedeemResponseProto builder] mergeFromInputStream:input] build];
}
+ (AchievementRedeemResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AchievementRedeemResponseProto*)[[[AchievementRedeemResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AchievementRedeemResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AchievementRedeemResponseProto*)[[[AchievementRedeemResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (AchievementRedeemResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AchievementRedeemResponseProto*)[[[AchievementRedeemResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AchievementRedeemResponseProto_Builder*) builder {
  return [[AchievementRedeemResponseProto_Builder alloc] init];
}
+ (AchievementRedeemResponseProto_Builder*) builderWithPrototype:(AchievementRedeemResponseProto*) prototype {
  return [[AchievementRedeemResponseProto builder] mergeFrom:prototype];
}
- (AchievementRedeemResponseProto_Builder*) builder {
  return [AchievementRedeemResponseProto builder];
}
- (AchievementRedeemResponseProto_Builder*) toBuilder {
  return [AchievementRedeemResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AchievementRedeemResponseProto class]]) {
    return NO;
  }
  AchievementRedeemResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL AchievementRedeemResponseProto_AchievementRedeemStatusIsValidValue(AchievementRedeemResponseProto_AchievementRedeemStatus value) {
  switch (value) {
    case AchievementRedeemResponseProto_AchievementRedeemStatusSuccess:
    case AchievementRedeemResponseProto_AchievementRedeemStatusFailNotComplete:
    case AchievementRedeemResponseProto_AchievementRedeemStatusFailOther:
    case AchievementRedeemResponseProto_AchievementRedeemStatusFailAlreadyRedeemed:
      return YES;
    default:
      return NO;
  }
}
@interface AchievementRedeemResponseProto_Builder()
@property (strong) AchievementRedeemResponseProto* result;
@end

@implementation AchievementRedeemResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[AchievementRedeemResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AchievementRedeemResponseProto_Builder*) clear {
  self.result = [[AchievementRedeemResponseProto alloc] init];
  return self;
}
- (AchievementRedeemResponseProto_Builder*) clone {
  return [AchievementRedeemResponseProto builderWithPrototype:result];
}
- (AchievementRedeemResponseProto*) defaultInstance {
  return [AchievementRedeemResponseProto defaultInstance];
}
- (AchievementRedeemResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AchievementRedeemResponseProto*) buildPartial {
  AchievementRedeemResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (AchievementRedeemResponseProto_Builder*) mergeFrom:(AchievementRedeemResponseProto*) other {
  if (other == [AchievementRedeemResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AchievementRedeemResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AchievementRedeemResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        AchievementRedeemResponseProto_AchievementRedeemStatus value = (AchievementRedeemResponseProto_AchievementRedeemStatus)[input readEnum];
        if (AchievementRedeemResponseProto_AchievementRedeemStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (AchievementRedeemResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (AchievementRedeemResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (AchievementRedeemResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (AchievementRedeemResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (AchievementRedeemResponseProto_AchievementRedeemStatus) status {
  return result.status;
}
- (AchievementRedeemResponseProto_Builder*) setStatus:(AchievementRedeemResponseProto_AchievementRedeemStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (AchievementRedeemResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = AchievementRedeemResponseProto_AchievementRedeemStatusSuccess;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
