// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventQuest.pb.h"

@implementation EventQuestRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventQuestRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [CityRoot registerAllExtensions:registry];
    [QuestRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface QuestAcceptRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t questId;
@end

@implementation QuestAcceptRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasQuestId {
  return !!hasQuestId_;
}
- (void) setHasQuestId:(BOOL) value {
  hasQuestId_ = !!value;
}
@synthesize questId;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.questId = 0;
  }
  return self;
}
static QuestAcceptRequestProto* defaultQuestAcceptRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [QuestAcceptRequestProto class]) {
    defaultQuestAcceptRequestProtoInstance = [[QuestAcceptRequestProto alloc] init];
  }
}
+ (QuestAcceptRequestProto*) defaultInstance {
  return defaultQuestAcceptRequestProtoInstance;
}
- (QuestAcceptRequestProto*) defaultInstance {
  return defaultQuestAcceptRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasQuestId) {
    [output writeInt32:2 value:self.questId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasQuestId) {
    size += computeInt32Size(2, self.questId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (QuestAcceptRequestProto*) parseFromData:(NSData*) data {
  return (QuestAcceptRequestProto*)[[[QuestAcceptRequestProto builder] mergeFromData:data] build];
}
+ (QuestAcceptRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestAcceptRequestProto*)[[[QuestAcceptRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QuestAcceptRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (QuestAcceptRequestProto*)[[[QuestAcceptRequestProto builder] mergeFromInputStream:input] build];
}
+ (QuestAcceptRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestAcceptRequestProto*)[[[QuestAcceptRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestAcceptRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QuestAcceptRequestProto*)[[[QuestAcceptRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (QuestAcceptRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestAcceptRequestProto*)[[[QuestAcceptRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestAcceptRequestProto_Builder*) builder {
  return [[[QuestAcceptRequestProto_Builder alloc] init] autorelease];
}
+ (QuestAcceptRequestProto_Builder*) builderWithPrototype:(QuestAcceptRequestProto*) prototype {
  return [[QuestAcceptRequestProto builder] mergeFrom:prototype];
}
- (QuestAcceptRequestProto_Builder*) builder {
  return [QuestAcceptRequestProto builder];
}
@end

@interface QuestAcceptRequestProto_Builder()
@property (retain) QuestAcceptRequestProto* result;
@end

@implementation QuestAcceptRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QuestAcceptRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QuestAcceptRequestProto_Builder*) clear {
  self.result = [[[QuestAcceptRequestProto alloc] init] autorelease];
  return self;
}
- (QuestAcceptRequestProto_Builder*) clone {
  return [QuestAcceptRequestProto builderWithPrototype:result];
}
- (QuestAcceptRequestProto*) defaultInstance {
  return [QuestAcceptRequestProto defaultInstance];
}
- (QuestAcceptRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QuestAcceptRequestProto*) buildPartial {
  QuestAcceptRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QuestAcceptRequestProto_Builder*) mergeFrom:(QuestAcceptRequestProto*) other {
  if (other == [QuestAcceptRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasQuestId) {
    [self setQuestId:other.questId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QuestAcceptRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QuestAcceptRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setQuestId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (QuestAcceptRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (QuestAcceptRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (QuestAcceptRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (QuestAcceptRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasQuestId {
  return result.hasQuestId;
}
- (int32_t) questId {
  return result.questId;
}
- (QuestAcceptRequestProto_Builder*) setQuestId:(int32_t) value {
  result.hasQuestId = YES;
  result.questId = value;
  return self;
}
- (QuestAcceptRequestProto_Builder*) clearQuestId {
  result.hasQuestId = NO;
  result.questId = 0;
  return self;
}
@end

@interface QuestAcceptResponseProto ()
@property (retain) MinimumUserProto* sender;
@property QuestAcceptResponseProto_QuestAcceptStatus status;
@property int32_t cityIdOfAcceptedQuest;
@end

@implementation QuestAcceptResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasCityIdOfAcceptedQuest {
  return !!hasCityIdOfAcceptedQuest_;
}
- (void) setHasCityIdOfAcceptedQuest:(BOOL) value {
  hasCityIdOfAcceptedQuest_ = !!value;
}
@synthesize cityIdOfAcceptedQuest;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = QuestAcceptResponseProto_QuestAcceptStatusSuccess;
    self.cityIdOfAcceptedQuest = 0;
  }
  return self;
}
static QuestAcceptResponseProto* defaultQuestAcceptResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [QuestAcceptResponseProto class]) {
    defaultQuestAcceptResponseProtoInstance = [[QuestAcceptResponseProto alloc] init];
  }
}
+ (QuestAcceptResponseProto*) defaultInstance {
  return defaultQuestAcceptResponseProtoInstance;
}
- (QuestAcceptResponseProto*) defaultInstance {
  return defaultQuestAcceptResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasCityIdOfAcceptedQuest) {
    [output writeInt32:3 value:self.cityIdOfAcceptedQuest];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  if (self.hasCityIdOfAcceptedQuest) {
    size += computeInt32Size(3, self.cityIdOfAcceptedQuest);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (QuestAcceptResponseProto*) parseFromData:(NSData*) data {
  return (QuestAcceptResponseProto*)[[[QuestAcceptResponseProto builder] mergeFromData:data] build];
}
+ (QuestAcceptResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestAcceptResponseProto*)[[[QuestAcceptResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QuestAcceptResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (QuestAcceptResponseProto*)[[[QuestAcceptResponseProto builder] mergeFromInputStream:input] build];
}
+ (QuestAcceptResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestAcceptResponseProto*)[[[QuestAcceptResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestAcceptResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QuestAcceptResponseProto*)[[[QuestAcceptResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (QuestAcceptResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestAcceptResponseProto*)[[[QuestAcceptResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestAcceptResponseProto_Builder*) builder {
  return [[[QuestAcceptResponseProto_Builder alloc] init] autorelease];
}
+ (QuestAcceptResponseProto_Builder*) builderWithPrototype:(QuestAcceptResponseProto*) prototype {
  return [[QuestAcceptResponseProto builder] mergeFrom:prototype];
}
- (QuestAcceptResponseProto_Builder*) builder {
  return [QuestAcceptResponseProto builder];
}
@end

BOOL QuestAcceptResponseProto_QuestAcceptStatusIsValidValue(QuestAcceptResponseProto_QuestAcceptStatus value) {
  switch (value) {
    case QuestAcceptResponseProto_QuestAcceptStatusSuccess:
    case QuestAcceptResponseProto_QuestAcceptStatusNotAvailToUser:
    case QuestAcceptResponseProto_QuestAcceptStatusOtherFail:
      return YES;
    default:
      return NO;
  }
}
@interface QuestAcceptResponseProto_Builder()
@property (retain) QuestAcceptResponseProto* result;
@end

@implementation QuestAcceptResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QuestAcceptResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QuestAcceptResponseProto_Builder*) clear {
  self.result = [[[QuestAcceptResponseProto alloc] init] autorelease];
  return self;
}
- (QuestAcceptResponseProto_Builder*) clone {
  return [QuestAcceptResponseProto builderWithPrototype:result];
}
- (QuestAcceptResponseProto*) defaultInstance {
  return [QuestAcceptResponseProto defaultInstance];
}
- (QuestAcceptResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QuestAcceptResponseProto*) buildPartial {
  QuestAcceptResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QuestAcceptResponseProto_Builder*) mergeFrom:(QuestAcceptResponseProto*) other {
  if (other == [QuestAcceptResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasCityIdOfAcceptedQuest) {
    [self setCityIdOfAcceptedQuest:other.cityIdOfAcceptedQuest];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QuestAcceptResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QuestAcceptResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (QuestAcceptResponseProto_QuestAcceptStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setCityIdOfAcceptedQuest:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (QuestAcceptResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (QuestAcceptResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (QuestAcceptResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (QuestAcceptResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (QuestAcceptResponseProto_QuestAcceptStatus) status {
  return result.status;
}
- (QuestAcceptResponseProto_Builder*) setStatus:(QuestAcceptResponseProto_QuestAcceptStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (QuestAcceptResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = QuestAcceptResponseProto_QuestAcceptStatusSuccess;
  return self;
}
- (BOOL) hasCityIdOfAcceptedQuest {
  return result.hasCityIdOfAcceptedQuest;
}
- (int32_t) cityIdOfAcceptedQuest {
  return result.cityIdOfAcceptedQuest;
}
- (QuestAcceptResponseProto_Builder*) setCityIdOfAcceptedQuest:(int32_t) value {
  result.hasCityIdOfAcceptedQuest = YES;
  result.cityIdOfAcceptedQuest = value;
  return self;
}
- (QuestAcceptResponseProto_Builder*) clearCityIdOfAcceptedQuest {
  result.hasCityIdOfAcceptedQuest = NO;
  result.cityIdOfAcceptedQuest = 0;
  return self;
}
@end

@interface QuestCompleteResponseProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t questId;
@property (retain) CityElementProto* cityElement;
@end

@implementation QuestCompleteResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasQuestId {
  return !!hasQuestId_;
}
- (void) setHasQuestId:(BOOL) value {
  hasQuestId_ = !!value;
}
@synthesize questId;
- (BOOL) hasCityElement {
  return !!hasCityElement_;
}
- (void) setHasCityElement:(BOOL) value {
  hasCityElement_ = !!value;
}
@synthesize cityElement;
- (void) dealloc {
  self.sender = nil;
  self.cityElement = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.questId = 0;
    self.cityElement = [CityElementProto defaultInstance];
  }
  return self;
}
static QuestCompleteResponseProto* defaultQuestCompleteResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [QuestCompleteResponseProto class]) {
    defaultQuestCompleteResponseProtoInstance = [[QuestCompleteResponseProto alloc] init];
  }
}
+ (QuestCompleteResponseProto*) defaultInstance {
  return defaultQuestCompleteResponseProtoInstance;
}
- (QuestCompleteResponseProto*) defaultInstance {
  return defaultQuestCompleteResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasQuestId) {
    [output writeInt32:2 value:self.questId];
  }
  if (self.hasCityElement) {
    [output writeMessage:3 value:self.cityElement];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasQuestId) {
    size += computeInt32Size(2, self.questId);
  }
  if (self.hasCityElement) {
    size += computeMessageSize(3, self.cityElement);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (QuestCompleteResponseProto*) parseFromData:(NSData*) data {
  return (QuestCompleteResponseProto*)[[[QuestCompleteResponseProto builder] mergeFromData:data] build];
}
+ (QuestCompleteResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestCompleteResponseProto*)[[[QuestCompleteResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QuestCompleteResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (QuestCompleteResponseProto*)[[[QuestCompleteResponseProto builder] mergeFromInputStream:input] build];
}
+ (QuestCompleteResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestCompleteResponseProto*)[[[QuestCompleteResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestCompleteResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QuestCompleteResponseProto*)[[[QuestCompleteResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (QuestCompleteResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestCompleteResponseProto*)[[[QuestCompleteResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestCompleteResponseProto_Builder*) builder {
  return [[[QuestCompleteResponseProto_Builder alloc] init] autorelease];
}
+ (QuestCompleteResponseProto_Builder*) builderWithPrototype:(QuestCompleteResponseProto*) prototype {
  return [[QuestCompleteResponseProto builder] mergeFrom:prototype];
}
- (QuestCompleteResponseProto_Builder*) builder {
  return [QuestCompleteResponseProto builder];
}
@end

@interface QuestCompleteResponseProto_Builder()
@property (retain) QuestCompleteResponseProto* result;
@end

@implementation QuestCompleteResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QuestCompleteResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QuestCompleteResponseProto_Builder*) clear {
  self.result = [[[QuestCompleteResponseProto alloc] init] autorelease];
  return self;
}
- (QuestCompleteResponseProto_Builder*) clone {
  return [QuestCompleteResponseProto builderWithPrototype:result];
}
- (QuestCompleteResponseProto*) defaultInstance {
  return [QuestCompleteResponseProto defaultInstance];
}
- (QuestCompleteResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QuestCompleteResponseProto*) buildPartial {
  QuestCompleteResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QuestCompleteResponseProto_Builder*) mergeFrom:(QuestCompleteResponseProto*) other {
  if (other == [QuestCompleteResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasQuestId) {
    [self setQuestId:other.questId];
  }
  if (other.hasCityElement) {
    [self mergeCityElement:other.cityElement];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QuestCompleteResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QuestCompleteResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setQuestId:[input readInt32]];
        break;
      }
      case 26: {
        CityElementProto_Builder* subBuilder = [CityElementProto builder];
        if (self.hasCityElement) {
          [subBuilder mergeFrom:self.cityElement];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCityElement:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (QuestCompleteResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (QuestCompleteResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (QuestCompleteResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (QuestCompleteResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasQuestId {
  return result.hasQuestId;
}
- (int32_t) questId {
  return result.questId;
}
- (QuestCompleteResponseProto_Builder*) setQuestId:(int32_t) value {
  result.hasQuestId = YES;
  result.questId = value;
  return self;
}
- (QuestCompleteResponseProto_Builder*) clearQuestId {
  result.hasQuestId = NO;
  result.questId = 0;
  return self;
}
- (BOOL) hasCityElement {
  return result.hasCityElement;
}
- (CityElementProto*) cityElement {
  return result.cityElement;
}
- (QuestCompleteResponseProto_Builder*) setCityElement:(CityElementProto*) value {
  result.hasCityElement = YES;
  result.cityElement = value;
  return self;
}
- (QuestCompleteResponseProto_Builder*) setCityElementBuilder:(CityElementProto_Builder*) builderForValue {
  return [self setCityElement:[builderForValue build]];
}
- (QuestCompleteResponseProto_Builder*) mergeCityElement:(CityElementProto*) value {
  if (result.hasCityElement &&
      result.cityElement != [CityElementProto defaultInstance]) {
    result.cityElement =
      [[[CityElementProto builderWithPrototype:result.cityElement] mergeFrom:value] buildPartial];
  } else {
    result.cityElement = value;
  }
  result.hasCityElement = YES;
  return self;
}
- (QuestCompleteResponseProto_Builder*) clearCityElement {
  result.hasCityElement = NO;
  result.cityElement = [CityElementProto defaultInstance];
  return self;
}
@end

@interface QuestRedeemRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t questId;
@end

@implementation QuestRedeemRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasQuestId {
  return !!hasQuestId_;
}
- (void) setHasQuestId:(BOOL) value {
  hasQuestId_ = !!value;
}
@synthesize questId;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.questId = 0;
  }
  return self;
}
static QuestRedeemRequestProto* defaultQuestRedeemRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [QuestRedeemRequestProto class]) {
    defaultQuestRedeemRequestProtoInstance = [[QuestRedeemRequestProto alloc] init];
  }
}
+ (QuestRedeemRequestProto*) defaultInstance {
  return defaultQuestRedeemRequestProtoInstance;
}
- (QuestRedeemRequestProto*) defaultInstance {
  return defaultQuestRedeemRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasQuestId) {
    [output writeInt32:2 value:self.questId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasQuestId) {
    size += computeInt32Size(2, self.questId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (QuestRedeemRequestProto*) parseFromData:(NSData*) data {
  return (QuestRedeemRequestProto*)[[[QuestRedeemRequestProto builder] mergeFromData:data] build];
}
+ (QuestRedeemRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestRedeemRequestProto*)[[[QuestRedeemRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QuestRedeemRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (QuestRedeemRequestProto*)[[[QuestRedeemRequestProto builder] mergeFromInputStream:input] build];
}
+ (QuestRedeemRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestRedeemRequestProto*)[[[QuestRedeemRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestRedeemRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QuestRedeemRequestProto*)[[[QuestRedeemRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (QuestRedeemRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestRedeemRequestProto*)[[[QuestRedeemRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestRedeemRequestProto_Builder*) builder {
  return [[[QuestRedeemRequestProto_Builder alloc] init] autorelease];
}
+ (QuestRedeemRequestProto_Builder*) builderWithPrototype:(QuestRedeemRequestProto*) prototype {
  return [[QuestRedeemRequestProto builder] mergeFrom:prototype];
}
- (QuestRedeemRequestProto_Builder*) builder {
  return [QuestRedeemRequestProto builder];
}
@end

@interface QuestRedeemRequestProto_Builder()
@property (retain) QuestRedeemRequestProto* result;
@end

@implementation QuestRedeemRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QuestRedeemRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QuestRedeemRequestProto_Builder*) clear {
  self.result = [[[QuestRedeemRequestProto alloc] init] autorelease];
  return self;
}
- (QuestRedeemRequestProto_Builder*) clone {
  return [QuestRedeemRequestProto builderWithPrototype:result];
}
- (QuestRedeemRequestProto*) defaultInstance {
  return [QuestRedeemRequestProto defaultInstance];
}
- (QuestRedeemRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QuestRedeemRequestProto*) buildPartial {
  QuestRedeemRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QuestRedeemRequestProto_Builder*) mergeFrom:(QuestRedeemRequestProto*) other {
  if (other == [QuestRedeemRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasQuestId) {
    [self setQuestId:other.questId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QuestRedeemRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QuestRedeemRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setQuestId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (QuestRedeemRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (QuestRedeemRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (QuestRedeemRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (QuestRedeemRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasQuestId {
  return result.hasQuestId;
}
- (int32_t) questId {
  return result.questId;
}
- (QuestRedeemRequestProto_Builder*) setQuestId:(int32_t) value {
  result.hasQuestId = YES;
  result.questId = value;
  return self;
}
- (QuestRedeemRequestProto_Builder*) clearQuestId {
  result.hasQuestId = NO;
  result.questId = 0;
  return self;
}
@end

@interface QuestRedeemResponseProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) NSMutableArray* mutableNewlyAvailableQuestsList;
@property QuestRedeemResponseProto_QuestRedeemStatus status;
@property int32_t monsterId;
@end

@implementation QuestRedeemResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableNewlyAvailableQuestsList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasMonsterId {
  return !!hasMonsterId_;
}
- (void) setHasMonsterId:(BOOL) value {
  hasMonsterId_ = !!value;
}
@synthesize monsterId;
- (void) dealloc {
  self.sender = nil;
  self.mutableNewlyAvailableQuestsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = QuestRedeemResponseProto_QuestRedeemStatusSuccess;
    self.monsterId = 0;
  }
  return self;
}
static QuestRedeemResponseProto* defaultQuestRedeemResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [QuestRedeemResponseProto class]) {
    defaultQuestRedeemResponseProtoInstance = [[QuestRedeemResponseProto alloc] init];
  }
}
+ (QuestRedeemResponseProto*) defaultInstance {
  return defaultQuestRedeemResponseProtoInstance;
}
- (QuestRedeemResponseProto*) defaultInstance {
  return defaultQuestRedeemResponseProtoInstance;
}
- (NSArray*) newlyAvailableQuestsList {
  return mutableNewlyAvailableQuestsList;
}
- (FullQuestProto*) newlyAvailableQuestsAtIndex:(int32_t) index {
  id value = [mutableNewlyAvailableQuestsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (FullQuestProto* element in self.newlyAvailableQuestsList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  if (self.hasMonsterId) {
    [output writeInt32:4 value:self.monsterId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (FullQuestProto* element in self.newlyAvailableQuestsList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasStatus) {
    size += computeEnumSize(3, self.status);
  }
  if (self.hasMonsterId) {
    size += computeInt32Size(4, self.monsterId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (QuestRedeemResponseProto*) parseFromData:(NSData*) data {
  return (QuestRedeemResponseProto*)[[[QuestRedeemResponseProto builder] mergeFromData:data] build];
}
+ (QuestRedeemResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestRedeemResponseProto*)[[[QuestRedeemResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QuestRedeemResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (QuestRedeemResponseProto*)[[[QuestRedeemResponseProto builder] mergeFromInputStream:input] build];
}
+ (QuestRedeemResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestRedeemResponseProto*)[[[QuestRedeemResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestRedeemResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QuestRedeemResponseProto*)[[[QuestRedeemResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (QuestRedeemResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestRedeemResponseProto*)[[[QuestRedeemResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestRedeemResponseProto_Builder*) builder {
  return [[[QuestRedeemResponseProto_Builder alloc] init] autorelease];
}
+ (QuestRedeemResponseProto_Builder*) builderWithPrototype:(QuestRedeemResponseProto*) prototype {
  return [[QuestRedeemResponseProto builder] mergeFrom:prototype];
}
- (QuestRedeemResponseProto_Builder*) builder {
  return [QuestRedeemResponseProto builder];
}
@end

BOOL QuestRedeemResponseProto_QuestRedeemStatusIsValidValue(QuestRedeemResponseProto_QuestRedeemStatus value) {
  switch (value) {
    case QuestRedeemResponseProto_QuestRedeemStatusSuccess:
    case QuestRedeemResponseProto_QuestRedeemStatusNotComplete:
    case QuestRedeemResponseProto_QuestRedeemStatusOtherFail:
      return YES;
    default:
      return NO;
  }
}
@interface QuestRedeemResponseProto_Builder()
@property (retain) QuestRedeemResponseProto* result;
@end

@implementation QuestRedeemResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QuestRedeemResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QuestRedeemResponseProto_Builder*) clear {
  self.result = [[[QuestRedeemResponseProto alloc] init] autorelease];
  return self;
}
- (QuestRedeemResponseProto_Builder*) clone {
  return [QuestRedeemResponseProto builderWithPrototype:result];
}
- (QuestRedeemResponseProto*) defaultInstance {
  return [QuestRedeemResponseProto defaultInstance];
}
- (QuestRedeemResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QuestRedeemResponseProto*) buildPartial {
  QuestRedeemResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QuestRedeemResponseProto_Builder*) mergeFrom:(QuestRedeemResponseProto*) other {
  if (other == [QuestRedeemResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableNewlyAvailableQuestsList.count > 0) {
    if (result.mutableNewlyAvailableQuestsList == nil) {
      result.mutableNewlyAvailableQuestsList = [NSMutableArray array];
    }
    [result.mutableNewlyAvailableQuestsList addObjectsFromArray:other.mutableNewlyAvailableQuestsList];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasMonsterId) {
    [self setMonsterId:other.monsterId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QuestRedeemResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QuestRedeemResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        FullQuestProto_Builder* subBuilder = [FullQuestProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNewlyAvailableQuests:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (QuestRedeemResponseProto_QuestRedeemStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        [self setMonsterId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (QuestRedeemResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (QuestRedeemResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (QuestRedeemResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (QuestRedeemResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSArray*) newlyAvailableQuestsList {
  if (result.mutableNewlyAvailableQuestsList == nil) { return [NSArray array]; }
  return result.mutableNewlyAvailableQuestsList;
}
- (FullQuestProto*) newlyAvailableQuestsAtIndex:(int32_t) index {
  return [result newlyAvailableQuestsAtIndex:index];
}
- (QuestRedeemResponseProto_Builder*) replaceNewlyAvailableQuestsAtIndex:(int32_t) index with:(FullQuestProto*) value {
  [result.mutableNewlyAvailableQuestsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (QuestRedeemResponseProto_Builder*) addAllNewlyAvailableQuests:(NSArray*) values {
  if (result.mutableNewlyAvailableQuestsList == nil) {
    result.mutableNewlyAvailableQuestsList = [NSMutableArray array];
  }
  [result.mutableNewlyAvailableQuestsList addObjectsFromArray:values];
  return self;
}
- (QuestRedeemResponseProto_Builder*) clearNewlyAvailableQuestsList {
  result.mutableNewlyAvailableQuestsList = nil;
  return self;
}
- (QuestRedeemResponseProto_Builder*) addNewlyAvailableQuests:(FullQuestProto*) value {
  if (result.mutableNewlyAvailableQuestsList == nil) {
    result.mutableNewlyAvailableQuestsList = [NSMutableArray array];
  }
  [result.mutableNewlyAvailableQuestsList addObject:value];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (QuestRedeemResponseProto_QuestRedeemStatus) status {
  return result.status;
}
- (QuestRedeemResponseProto_Builder*) setStatus:(QuestRedeemResponseProto_QuestRedeemStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (QuestRedeemResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = QuestRedeemResponseProto_QuestRedeemStatusSuccess;
  return self;
}
- (BOOL) hasMonsterId {
  return result.hasMonsterId;
}
- (int32_t) monsterId {
  return result.monsterId;
}
- (QuestRedeemResponseProto_Builder*) setMonsterId:(int32_t) value {
  result.hasMonsterId = YES;
  result.monsterId = value;
  return self;
}
- (QuestRedeemResponseProto_Builder*) clearMonsterId {
  result.hasMonsterId = NO;
  result.monsterId = 0;
  return self;
}
@end

@interface UserQuestDetailsRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t questId;
@end

@implementation UserQuestDetailsRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasQuestId {
  return !!hasQuestId_;
}
- (void) setHasQuestId:(BOOL) value {
  hasQuestId_ = !!value;
}
@synthesize questId;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.questId = 0;
  }
  return self;
}
static UserQuestDetailsRequestProto* defaultUserQuestDetailsRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [UserQuestDetailsRequestProto class]) {
    defaultUserQuestDetailsRequestProtoInstance = [[UserQuestDetailsRequestProto alloc] init];
  }
}
+ (UserQuestDetailsRequestProto*) defaultInstance {
  return defaultUserQuestDetailsRequestProtoInstance;
}
- (UserQuestDetailsRequestProto*) defaultInstance {
  return defaultUserQuestDetailsRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasQuestId) {
    [output writeInt32:2 value:self.questId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasQuestId) {
    size += computeInt32Size(2, self.questId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserQuestDetailsRequestProto*) parseFromData:(NSData*) data {
  return (UserQuestDetailsRequestProto*)[[[UserQuestDetailsRequestProto builder] mergeFromData:data] build];
}
+ (UserQuestDetailsRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserQuestDetailsRequestProto*)[[[UserQuestDetailsRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserQuestDetailsRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (UserQuestDetailsRequestProto*)[[[UserQuestDetailsRequestProto builder] mergeFromInputStream:input] build];
}
+ (UserQuestDetailsRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserQuestDetailsRequestProto*)[[[UserQuestDetailsRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserQuestDetailsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserQuestDetailsRequestProto*)[[[UserQuestDetailsRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (UserQuestDetailsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserQuestDetailsRequestProto*)[[[UserQuestDetailsRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserQuestDetailsRequestProto_Builder*) builder {
  return [[[UserQuestDetailsRequestProto_Builder alloc] init] autorelease];
}
+ (UserQuestDetailsRequestProto_Builder*) builderWithPrototype:(UserQuestDetailsRequestProto*) prototype {
  return [[UserQuestDetailsRequestProto builder] mergeFrom:prototype];
}
- (UserQuestDetailsRequestProto_Builder*) builder {
  return [UserQuestDetailsRequestProto builder];
}
@end

@interface UserQuestDetailsRequestProto_Builder()
@property (retain) UserQuestDetailsRequestProto* result;
@end

@implementation UserQuestDetailsRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserQuestDetailsRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserQuestDetailsRequestProto_Builder*) clear {
  self.result = [[[UserQuestDetailsRequestProto alloc] init] autorelease];
  return self;
}
- (UserQuestDetailsRequestProto_Builder*) clone {
  return [UserQuestDetailsRequestProto builderWithPrototype:result];
}
- (UserQuestDetailsRequestProto*) defaultInstance {
  return [UserQuestDetailsRequestProto defaultInstance];
}
- (UserQuestDetailsRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserQuestDetailsRequestProto*) buildPartial {
  UserQuestDetailsRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserQuestDetailsRequestProto_Builder*) mergeFrom:(UserQuestDetailsRequestProto*) other {
  if (other == [UserQuestDetailsRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasQuestId) {
    [self setQuestId:other.questId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserQuestDetailsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserQuestDetailsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setQuestId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (UserQuestDetailsRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (UserQuestDetailsRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (UserQuestDetailsRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (UserQuestDetailsRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasQuestId {
  return result.hasQuestId;
}
- (int32_t) questId {
  return result.questId;
}
- (UserQuestDetailsRequestProto_Builder*) setQuestId:(int32_t) value {
  result.hasQuestId = YES;
  result.questId = value;
  return self;
}
- (UserQuestDetailsRequestProto_Builder*) clearQuestId {
  result.hasQuestId = NO;
  result.questId = 0;
  return self;
}
@end

@interface UserQuestDetailsResponseProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) NSMutableArray* mutableInProgressUserQuestDataList;
@property UserQuestDetailsResponseProto_UserQuestDetailsStatus status;
@end

@implementation UserQuestDetailsResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableInProgressUserQuestDataList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  self.mutableInProgressUserQuestDataList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = UserQuestDetailsResponseProto_UserQuestDetailsStatusSuccess;
  }
  return self;
}
static UserQuestDetailsResponseProto* defaultUserQuestDetailsResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [UserQuestDetailsResponseProto class]) {
    defaultUserQuestDetailsResponseProtoInstance = [[UserQuestDetailsResponseProto alloc] init];
  }
}
+ (UserQuestDetailsResponseProto*) defaultInstance {
  return defaultUserQuestDetailsResponseProtoInstance;
}
- (UserQuestDetailsResponseProto*) defaultInstance {
  return defaultUserQuestDetailsResponseProtoInstance;
}
- (NSArray*) inProgressUserQuestDataList {
  return mutableInProgressUserQuestDataList;
}
- (FullUserQuestDataLargeProto*) inProgressUserQuestDataAtIndex:(int32_t) index {
  id value = [mutableInProgressUserQuestDataList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (FullUserQuestDataLargeProto* element in self.inProgressUserQuestDataList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (FullUserQuestDataLargeProto* element in self.inProgressUserQuestDataList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasStatus) {
    size += computeEnumSize(3, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserQuestDetailsResponseProto*) parseFromData:(NSData*) data {
  return (UserQuestDetailsResponseProto*)[[[UserQuestDetailsResponseProto builder] mergeFromData:data] build];
}
+ (UserQuestDetailsResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserQuestDetailsResponseProto*)[[[UserQuestDetailsResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserQuestDetailsResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (UserQuestDetailsResponseProto*)[[[UserQuestDetailsResponseProto builder] mergeFromInputStream:input] build];
}
+ (UserQuestDetailsResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserQuestDetailsResponseProto*)[[[UserQuestDetailsResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserQuestDetailsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserQuestDetailsResponseProto*)[[[UserQuestDetailsResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (UserQuestDetailsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserQuestDetailsResponseProto*)[[[UserQuestDetailsResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserQuestDetailsResponseProto_Builder*) builder {
  return [[[UserQuestDetailsResponseProto_Builder alloc] init] autorelease];
}
+ (UserQuestDetailsResponseProto_Builder*) builderWithPrototype:(UserQuestDetailsResponseProto*) prototype {
  return [[UserQuestDetailsResponseProto builder] mergeFrom:prototype];
}
- (UserQuestDetailsResponseProto_Builder*) builder {
  return [UserQuestDetailsResponseProto builder];
}
@end

BOOL UserQuestDetailsResponseProto_UserQuestDetailsStatusIsValidValue(UserQuestDetailsResponseProto_UserQuestDetailsStatus value) {
  switch (value) {
    case UserQuestDetailsResponseProto_UserQuestDetailsStatusSuccess:
    case UserQuestDetailsResponseProto_UserQuestDetailsStatusSuppliedQuestidCurrentlyNotInProgress:
    case UserQuestDetailsResponseProto_UserQuestDetailsStatusSomeFail:
      return YES;
    default:
      return NO;
  }
}
@interface UserQuestDetailsResponseProto_Builder()
@property (retain) UserQuestDetailsResponseProto* result;
@end

@implementation UserQuestDetailsResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserQuestDetailsResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserQuestDetailsResponseProto_Builder*) clear {
  self.result = [[[UserQuestDetailsResponseProto alloc] init] autorelease];
  return self;
}
- (UserQuestDetailsResponseProto_Builder*) clone {
  return [UserQuestDetailsResponseProto builderWithPrototype:result];
}
- (UserQuestDetailsResponseProto*) defaultInstance {
  return [UserQuestDetailsResponseProto defaultInstance];
}
- (UserQuestDetailsResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserQuestDetailsResponseProto*) buildPartial {
  UserQuestDetailsResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserQuestDetailsResponseProto_Builder*) mergeFrom:(UserQuestDetailsResponseProto*) other {
  if (other == [UserQuestDetailsResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableInProgressUserQuestDataList.count > 0) {
    if (result.mutableInProgressUserQuestDataList == nil) {
      result.mutableInProgressUserQuestDataList = [NSMutableArray array];
    }
    [result.mutableInProgressUserQuestDataList addObjectsFromArray:other.mutableInProgressUserQuestDataList];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserQuestDetailsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserQuestDetailsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        FullUserQuestDataLargeProto_Builder* subBuilder = [FullUserQuestDataLargeProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addInProgressUserQuestData:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (UserQuestDetailsResponseProto_UserQuestDetailsStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (UserQuestDetailsResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (UserQuestDetailsResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (UserQuestDetailsResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (UserQuestDetailsResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSArray*) inProgressUserQuestDataList {
  if (result.mutableInProgressUserQuestDataList == nil) { return [NSArray array]; }
  return result.mutableInProgressUserQuestDataList;
}
- (FullUserQuestDataLargeProto*) inProgressUserQuestDataAtIndex:(int32_t) index {
  return [result inProgressUserQuestDataAtIndex:index];
}
- (UserQuestDetailsResponseProto_Builder*) replaceInProgressUserQuestDataAtIndex:(int32_t) index with:(FullUserQuestDataLargeProto*) value {
  [result.mutableInProgressUserQuestDataList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (UserQuestDetailsResponseProto_Builder*) addAllInProgressUserQuestData:(NSArray*) values {
  if (result.mutableInProgressUserQuestDataList == nil) {
    result.mutableInProgressUserQuestDataList = [NSMutableArray array];
  }
  [result.mutableInProgressUserQuestDataList addObjectsFromArray:values];
  return self;
}
- (UserQuestDetailsResponseProto_Builder*) clearInProgressUserQuestDataList {
  result.mutableInProgressUserQuestDataList = nil;
  return self;
}
- (UserQuestDetailsResponseProto_Builder*) addInProgressUserQuestData:(FullUserQuestDataLargeProto*) value {
  if (result.mutableInProgressUserQuestDataList == nil) {
    result.mutableInProgressUserQuestDataList = [NSMutableArray array];
  }
  [result.mutableInProgressUserQuestDataList addObject:value];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (UserQuestDetailsResponseProto_UserQuestDetailsStatus) status {
  return result.status;
}
- (UserQuestDetailsResponseProto_Builder*) setStatus:(UserQuestDetailsResponseProto_UserQuestDetailsStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (UserQuestDetailsResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = UserQuestDetailsResponseProto_UserQuestDetailsStatusSuccess;
  return self;
}
@end

