// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventMiniJob.pb.h"
// @@protoc_insertion_point(imports)

@implementation EventMiniJobRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventMiniJobRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [MiniJobConfigRoot registerAllExtensions:registry];
    [MonsterStuffRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface SpawnMiniJobRequestProto ()
@property (strong) MinimumUserProto* sender;
@property int64_t clientTime;
@property int32_t numToSpawn;
@property int32_t structId;
@end

@implementation SpawnMiniJobRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (BOOL) hasNumToSpawn {
  return !!hasNumToSpawn_;
}
- (void) setHasNumToSpawn:(BOOL) value_ {
  hasNumToSpawn_ = !!value_;
}
@synthesize numToSpawn;
- (BOOL) hasStructId {
  return !!hasStructId_;
}
- (void) setHasStructId:(BOOL) value_ {
  hasStructId_ = !!value_;
}
@synthesize structId;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clientTime = 0L;
    self.numToSpawn = 0;
    self.structId = 0;
  }
  return self;
}
static SpawnMiniJobRequestProto* defaultSpawnMiniJobRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [SpawnMiniJobRequestProto class]) {
    defaultSpawnMiniJobRequestProtoInstance = [[SpawnMiniJobRequestProto alloc] init];
  }
}
+ (SpawnMiniJobRequestProto*) defaultInstance {
  return defaultSpawnMiniJobRequestProtoInstance;
}
- (SpawnMiniJobRequestProto*) defaultInstance {
  return defaultSpawnMiniJobRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClientTime) {
    [output writeInt64:2 value:self.clientTime];
  }
  if (self.hasNumToSpawn) {
    [output writeInt32:3 value:self.numToSpawn];
  }
  if (self.hasStructId) {
    [output writeInt32:4 value:self.structId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(2, self.clientTime);
  }
  if (self.hasNumToSpawn) {
    size_ += computeInt32Size(3, self.numToSpawn);
  }
  if (self.hasStructId) {
    size_ += computeInt32Size(4, self.structId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SpawnMiniJobRequestProto*) parseFromData:(NSData*) data {
  return (SpawnMiniJobRequestProto*)[[[SpawnMiniJobRequestProto builder] mergeFromData:data] build];
}
+ (SpawnMiniJobRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SpawnMiniJobRequestProto*)[[[SpawnMiniJobRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SpawnMiniJobRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (SpawnMiniJobRequestProto*)[[[SpawnMiniJobRequestProto builder] mergeFromInputStream:input] build];
}
+ (SpawnMiniJobRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SpawnMiniJobRequestProto*)[[[SpawnMiniJobRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SpawnMiniJobRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SpawnMiniJobRequestProto*)[[[SpawnMiniJobRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (SpawnMiniJobRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SpawnMiniJobRequestProto*)[[[SpawnMiniJobRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SpawnMiniJobRequestProto_Builder*) builder {
  return [[SpawnMiniJobRequestProto_Builder alloc] init];
}
+ (SpawnMiniJobRequestProto_Builder*) builderWithPrototype:(SpawnMiniJobRequestProto*) prototype {
  return [[SpawnMiniJobRequestProto builder] mergeFrom:prototype];
}
- (SpawnMiniJobRequestProto_Builder*) builder {
  return [SpawnMiniJobRequestProto builder];
}
- (SpawnMiniJobRequestProto_Builder*) toBuilder {
  return [SpawnMiniJobRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  if (self.hasNumToSpawn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numToSpawn", [NSNumber numberWithInteger:self.numToSpawn]];
  }
  if (self.hasStructId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"structId", [NSNumber numberWithInteger:self.structId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SpawnMiniJobRequestProto class]]) {
    return NO;
  }
  SpawnMiniJobRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      self.hasNumToSpawn == otherMessage.hasNumToSpawn &&
      (!self.hasNumToSpawn || self.numToSpawn == otherMessage.numToSpawn) &&
      self.hasStructId == otherMessage.hasStructId &&
      (!self.hasStructId || self.structId == otherMessage.structId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  if (self.hasNumToSpawn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numToSpawn] hash];
  }
  if (self.hasStructId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.structId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SpawnMiniJobRequestProto_Builder()
@property (strong) SpawnMiniJobRequestProto* result;
@end

@implementation SpawnMiniJobRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[SpawnMiniJobRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SpawnMiniJobRequestProto_Builder*) clear {
  self.result = [[SpawnMiniJobRequestProto alloc] init];
  return self;
}
- (SpawnMiniJobRequestProto_Builder*) clone {
  return [SpawnMiniJobRequestProto builderWithPrototype:result];
}
- (SpawnMiniJobRequestProto*) defaultInstance {
  return [SpawnMiniJobRequestProto defaultInstance];
}
- (SpawnMiniJobRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SpawnMiniJobRequestProto*) buildPartial {
  SpawnMiniJobRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (SpawnMiniJobRequestProto_Builder*) mergeFrom:(SpawnMiniJobRequestProto*) other {
  if (other == [SpawnMiniJobRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.hasNumToSpawn) {
    [self setNumToSpawn:other.numToSpawn];
  }
  if (other.hasStructId) {
    [self setStructId:other.structId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SpawnMiniJobRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SpawnMiniJobRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 24: {
        [self setNumToSpawn:[input readInt32]];
        break;
      }
      case 32: {
        [self setStructId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (SpawnMiniJobRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SpawnMiniJobRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SpawnMiniJobRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SpawnMiniJobRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (SpawnMiniJobRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (SpawnMiniJobRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (BOOL) hasNumToSpawn {
  return result.hasNumToSpawn;
}
- (int32_t) numToSpawn {
  return result.numToSpawn;
}
- (SpawnMiniJobRequestProto_Builder*) setNumToSpawn:(int32_t) value {
  result.hasNumToSpawn = YES;
  result.numToSpawn = value;
  return self;
}
- (SpawnMiniJobRequestProto_Builder*) clearNumToSpawn {
  result.hasNumToSpawn = NO;
  result.numToSpawn = 0;
  return self;
}
- (BOOL) hasStructId {
  return result.hasStructId;
}
- (int32_t) structId {
  return result.structId;
}
- (SpawnMiniJobRequestProto_Builder*) setStructId:(int32_t) value {
  result.hasStructId = YES;
  result.structId = value;
  return self;
}
- (SpawnMiniJobRequestProto_Builder*) clearStructId {
  result.hasStructId = NO;
  result.structId = 0;
  return self;
}
@end

@interface SpawnMiniJobResponseProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutableMiniJobsList;
@property SpawnMiniJobResponseProto_SpawnMiniJobStatus status;
@end

@implementation SpawnMiniJobResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutableMiniJobsList;
@dynamic miniJobsList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = SpawnMiniJobResponseProto_SpawnMiniJobStatusSuccess;
  }
  return self;
}
static SpawnMiniJobResponseProto* defaultSpawnMiniJobResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [SpawnMiniJobResponseProto class]) {
    defaultSpawnMiniJobResponseProtoInstance = [[SpawnMiniJobResponseProto alloc] init];
  }
}
+ (SpawnMiniJobResponseProto*) defaultInstance {
  return defaultSpawnMiniJobResponseProtoInstance;
}
- (SpawnMiniJobResponseProto*) defaultInstance {
  return defaultSpawnMiniJobResponseProtoInstance;
}
- (NSArray *)miniJobsList {
  return mutableMiniJobsList;
}
- (UserMiniJobProto*)miniJobsAtIndex:(NSUInteger)index {
  return [mutableMiniJobsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.miniJobsList enumerateObjectsUsingBlock:^(UserMiniJobProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  [self.miniJobsList enumerateObjectsUsingBlock:^(UserMiniJobProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasStatus) {
    size_ += computeEnumSize(3, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SpawnMiniJobResponseProto*) parseFromData:(NSData*) data {
  return (SpawnMiniJobResponseProto*)[[[SpawnMiniJobResponseProto builder] mergeFromData:data] build];
}
+ (SpawnMiniJobResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SpawnMiniJobResponseProto*)[[[SpawnMiniJobResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SpawnMiniJobResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (SpawnMiniJobResponseProto*)[[[SpawnMiniJobResponseProto builder] mergeFromInputStream:input] build];
}
+ (SpawnMiniJobResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SpawnMiniJobResponseProto*)[[[SpawnMiniJobResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SpawnMiniJobResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SpawnMiniJobResponseProto*)[[[SpawnMiniJobResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (SpawnMiniJobResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SpawnMiniJobResponseProto*)[[[SpawnMiniJobResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SpawnMiniJobResponseProto_Builder*) builder {
  return [[SpawnMiniJobResponseProto_Builder alloc] init];
}
+ (SpawnMiniJobResponseProto_Builder*) builderWithPrototype:(SpawnMiniJobResponseProto*) prototype {
  return [[SpawnMiniJobResponseProto builder] mergeFrom:prototype];
}
- (SpawnMiniJobResponseProto_Builder*) builder {
  return [SpawnMiniJobResponseProto builder];
}
- (SpawnMiniJobResponseProto_Builder*) toBuilder {
  return [SpawnMiniJobResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.miniJobsList enumerateObjectsUsingBlock:^(UserMiniJobProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"miniJobs"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %d\n", indent, @"status", self.status];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SpawnMiniJobResponseProto class]]) {
    return NO;
  }
  SpawnMiniJobResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.miniJobsList isEqualToArray:otherMessage.miniJobsList] &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.miniJobsList enumerateObjectsUsingBlock:^(UserMiniJobProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL SpawnMiniJobResponseProto_SpawnMiniJobStatusIsValidValue(SpawnMiniJobResponseProto_SpawnMiniJobStatus value) {
  switch (value) {
    case SpawnMiniJobResponseProto_SpawnMiniJobStatusSuccess:
    case SpawnMiniJobResponseProto_SpawnMiniJobStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface SpawnMiniJobResponseProto_Builder()
@property (strong) SpawnMiniJobResponseProto* result;
@end

@implementation SpawnMiniJobResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[SpawnMiniJobResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SpawnMiniJobResponseProto_Builder*) clear {
  self.result = [[SpawnMiniJobResponseProto alloc] init];
  return self;
}
- (SpawnMiniJobResponseProto_Builder*) clone {
  return [SpawnMiniJobResponseProto builderWithPrototype:result];
}
- (SpawnMiniJobResponseProto*) defaultInstance {
  return [SpawnMiniJobResponseProto defaultInstance];
}
- (SpawnMiniJobResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SpawnMiniJobResponseProto*) buildPartial {
  SpawnMiniJobResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (SpawnMiniJobResponseProto_Builder*) mergeFrom:(SpawnMiniJobResponseProto*) other {
  if (other == [SpawnMiniJobResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableMiniJobsList.count > 0) {
    if (result.mutableMiniJobsList == nil) {
      result.mutableMiniJobsList = [[NSMutableArray alloc] initWithArray:other.mutableMiniJobsList];
    } else {
      [result.mutableMiniJobsList addObjectsFromArray:other.mutableMiniJobsList];
    }
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SpawnMiniJobResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SpawnMiniJobResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        UserMiniJobProto_Builder* subBuilder = [UserMiniJobProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMiniJobs:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        SpawnMiniJobResponseProto_SpawnMiniJobStatus value = (SpawnMiniJobResponseProto_SpawnMiniJobStatus)[input readEnum];
        if (SpawnMiniJobResponseProto_SpawnMiniJobStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (SpawnMiniJobResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SpawnMiniJobResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SpawnMiniJobResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SpawnMiniJobResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)miniJobsList {
  return result.mutableMiniJobsList;
}
- (UserMiniJobProto*)miniJobsAtIndex:(NSUInteger)index {
  return [result miniJobsAtIndex:index];
}
- (SpawnMiniJobResponseProto_Builder *)addMiniJobs:(UserMiniJobProto*)value {
  if (result.mutableMiniJobsList == nil) {
    result.mutableMiniJobsList = [[NSMutableArray alloc]init];
  }
  [result.mutableMiniJobsList addObject:value];
  return self;
}
- (SpawnMiniJobResponseProto_Builder *)addAllMiniJobs:(NSArray *)array {
  if (result.mutableMiniJobsList == nil) {
    result.mutableMiniJobsList = [NSMutableArray array];
  }
  [result.mutableMiniJobsList addObjectsFromArray:array];
  return self;
}
- (SpawnMiniJobResponseProto_Builder *)clearMiniJobs {
  result.mutableMiniJobsList = nil;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (SpawnMiniJobResponseProto_SpawnMiniJobStatus) status {
  return result.status;
}
- (SpawnMiniJobResponseProto_Builder*) setStatus:(SpawnMiniJobResponseProto_SpawnMiniJobStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (SpawnMiniJobResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = SpawnMiniJobResponseProto_SpawnMiniJobStatusSuccess;
  return self;
}
@end

@interface BeginMiniJobRequestProto ()
@property (strong) MinimumUserProto* sender;
@property int64_t clientTime;
@property (strong) NSMutableArray * mutableUserMonsterUuidsList;
@property (strong) NSString* userMiniJobUuid;
@end

@implementation BeginMiniJobRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
@synthesize mutableUserMonsterUuidsList;
@dynamic userMonsterUuidsList;
- (BOOL) hasUserMiniJobUuid {
  return !!hasUserMiniJobUuid_;
}
- (void) setHasUserMiniJobUuid:(BOOL) value_ {
  hasUserMiniJobUuid_ = !!value_;
}
@synthesize userMiniJobUuid;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clientTime = 0L;
    self.userMiniJobUuid = @"";
  }
  return self;
}
static BeginMiniJobRequestProto* defaultBeginMiniJobRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [BeginMiniJobRequestProto class]) {
    defaultBeginMiniJobRequestProtoInstance = [[BeginMiniJobRequestProto alloc] init];
  }
}
+ (BeginMiniJobRequestProto*) defaultInstance {
  return defaultBeginMiniJobRequestProtoInstance;
}
- (BeginMiniJobRequestProto*) defaultInstance {
  return defaultBeginMiniJobRequestProtoInstance;
}
- (NSArray *)userMonsterUuidsList {
  return mutableUserMonsterUuidsList;
}
- (NSString*)userMonsterUuidsAtIndex:(NSUInteger)index {
  return [mutableUserMonsterUuidsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClientTime) {
    [output writeInt64:2 value:self.clientTime];
  }
  [self.userMonsterUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:3 value:element];
  }];
  if (self.hasUserMiniJobUuid) {
    [output writeString:4 value:self.userMiniJobUuid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(2, self.clientTime);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.userMonsterUuidsList.count;
    [self.userMonsterUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasUserMiniJobUuid) {
    size_ += computeStringSize(4, self.userMiniJobUuid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BeginMiniJobRequestProto*) parseFromData:(NSData*) data {
  return (BeginMiniJobRequestProto*)[[[BeginMiniJobRequestProto builder] mergeFromData:data] build];
}
+ (BeginMiniJobRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginMiniJobRequestProto*)[[[BeginMiniJobRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BeginMiniJobRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (BeginMiniJobRequestProto*)[[[BeginMiniJobRequestProto builder] mergeFromInputStream:input] build];
}
+ (BeginMiniJobRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginMiniJobRequestProto*)[[[BeginMiniJobRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginMiniJobRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BeginMiniJobRequestProto*)[[[BeginMiniJobRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (BeginMiniJobRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginMiniJobRequestProto*)[[[BeginMiniJobRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginMiniJobRequestProto_Builder*) builder {
  return [[BeginMiniJobRequestProto_Builder alloc] init];
}
+ (BeginMiniJobRequestProto_Builder*) builderWithPrototype:(BeginMiniJobRequestProto*) prototype {
  return [[BeginMiniJobRequestProto builder] mergeFrom:prototype];
}
- (BeginMiniJobRequestProto_Builder*) builder {
  return [BeginMiniJobRequestProto builder];
}
- (BeginMiniJobRequestProto_Builder*) toBuilder {
  return [BeginMiniJobRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  [self.userMonsterUuidsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userMonsterUuids", obj];
  }];
  if (self.hasUserMiniJobUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userMiniJobUuid", self.userMiniJobUuid];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BeginMiniJobRequestProto class]]) {
    return NO;
  }
  BeginMiniJobRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      [self.userMonsterUuidsList isEqualToArray:otherMessage.userMonsterUuidsList] &&
      self.hasUserMiniJobUuid == otherMessage.hasUserMiniJobUuid &&
      (!self.hasUserMiniJobUuid || [self.userMiniJobUuid isEqual:otherMessage.userMiniJobUuid]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  [self.userMonsterUuidsList enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasUserMiniJobUuid) {
    hashCode = hashCode * 31 + [self.userMiniJobUuid hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BeginMiniJobRequestProto_Builder()
@property (strong) BeginMiniJobRequestProto* result;
@end

@implementation BeginMiniJobRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BeginMiniJobRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BeginMiniJobRequestProto_Builder*) clear {
  self.result = [[BeginMiniJobRequestProto alloc] init];
  return self;
}
- (BeginMiniJobRequestProto_Builder*) clone {
  return [BeginMiniJobRequestProto builderWithPrototype:result];
}
- (BeginMiniJobRequestProto*) defaultInstance {
  return [BeginMiniJobRequestProto defaultInstance];
}
- (BeginMiniJobRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BeginMiniJobRequestProto*) buildPartial {
  BeginMiniJobRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BeginMiniJobRequestProto_Builder*) mergeFrom:(BeginMiniJobRequestProto*) other {
  if (other == [BeginMiniJobRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.mutableUserMonsterUuidsList.count > 0) {
    if (result.mutableUserMonsterUuidsList == nil) {
      result.mutableUserMonsterUuidsList = [[NSMutableArray alloc] initWithArray:other.mutableUserMonsterUuidsList];
    } else {
      [result.mutableUserMonsterUuidsList addObjectsFromArray:other.mutableUserMonsterUuidsList];
    }
  }
  if (other.hasUserMiniJobUuid) {
    [self setUserMiniJobUuid:other.userMiniJobUuid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BeginMiniJobRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BeginMiniJobRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 26: {
        [self addUserMonsterUuids:[input readString]];
        break;
      }
      case 34: {
        [self setUserMiniJobUuid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BeginMiniJobRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BeginMiniJobRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BeginMiniJobRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BeginMiniJobRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (BeginMiniJobRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (BeginMiniJobRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (NSMutableArray *)userMonsterUuidsList {
  return result.mutableUserMonsterUuidsList;
}
- (NSString*)userMonsterUuidsAtIndex:(NSUInteger)index {
  return [result userMonsterUuidsAtIndex:index];
}
- (BeginMiniJobRequestProto_Builder *)addUserMonsterUuids:(NSString*)value {
  if (result.mutableUserMonsterUuidsList == nil) {
    result.mutableUserMonsterUuidsList = [[NSMutableArray alloc]init];
  }
  [result.mutableUserMonsterUuidsList addObject:value];
  return self;
}
- (BeginMiniJobRequestProto_Builder *)addAllUserMonsterUuids:(NSArray *)array {
  if (result.mutableUserMonsterUuidsList == nil) {
    result.mutableUserMonsterUuidsList = [NSMutableArray array];
  }
  [result.mutableUserMonsterUuidsList addObjectsFromArray:array];
  return self;
}
- (BeginMiniJobRequestProto_Builder *)clearUserMonsterUuids {
  result.mutableUserMonsterUuidsList = nil;
  return self;
}
- (BOOL) hasUserMiniJobUuid {
  return result.hasUserMiniJobUuid;
}
- (NSString*) userMiniJobUuid {
  return result.userMiniJobUuid;
}
- (BeginMiniJobRequestProto_Builder*) setUserMiniJobUuid:(NSString*) value {
  result.hasUserMiniJobUuid = YES;
  result.userMiniJobUuid = value;
  return self;
}
- (BeginMiniJobRequestProto_Builder*) clearUserMiniJobUuid {
  result.hasUserMiniJobUuid = NO;
  result.userMiniJobUuid = @"";
  return self;
}
@end

@interface BeginMiniJobResponseProto ()
@property (strong) MinimumUserProto* sender;
@property BeginMiniJobResponseProto_BeginMiniJobStatus status;
@end

@implementation BeginMiniJobResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = BeginMiniJobResponseProto_BeginMiniJobStatusSuccess;
  }
  return self;
}
static BeginMiniJobResponseProto* defaultBeginMiniJobResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [BeginMiniJobResponseProto class]) {
    defaultBeginMiniJobResponseProtoInstance = [[BeginMiniJobResponseProto alloc] init];
  }
}
+ (BeginMiniJobResponseProto*) defaultInstance {
  return defaultBeginMiniJobResponseProtoInstance;
}
- (BeginMiniJobResponseProto*) defaultInstance {
  return defaultBeginMiniJobResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BeginMiniJobResponseProto*) parseFromData:(NSData*) data {
  return (BeginMiniJobResponseProto*)[[[BeginMiniJobResponseProto builder] mergeFromData:data] build];
}
+ (BeginMiniJobResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginMiniJobResponseProto*)[[[BeginMiniJobResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BeginMiniJobResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (BeginMiniJobResponseProto*)[[[BeginMiniJobResponseProto builder] mergeFromInputStream:input] build];
}
+ (BeginMiniJobResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginMiniJobResponseProto*)[[[BeginMiniJobResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginMiniJobResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BeginMiniJobResponseProto*)[[[BeginMiniJobResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (BeginMiniJobResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginMiniJobResponseProto*)[[[BeginMiniJobResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginMiniJobResponseProto_Builder*) builder {
  return [[BeginMiniJobResponseProto_Builder alloc] init];
}
+ (BeginMiniJobResponseProto_Builder*) builderWithPrototype:(BeginMiniJobResponseProto*) prototype {
  return [[BeginMiniJobResponseProto builder] mergeFrom:prototype];
}
- (BeginMiniJobResponseProto_Builder*) builder {
  return [BeginMiniJobResponseProto builder];
}
- (BeginMiniJobResponseProto_Builder*) toBuilder {
  return [BeginMiniJobResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %d\n", indent, @"status", self.status];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BeginMiniJobResponseProto class]]) {
    return NO;
  }
  BeginMiniJobResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL BeginMiniJobResponseProto_BeginMiniJobStatusIsValidValue(BeginMiniJobResponseProto_BeginMiniJobStatus value) {
  switch (value) {
    case BeginMiniJobResponseProto_BeginMiniJobStatusSuccess:
    case BeginMiniJobResponseProto_BeginMiniJobStatusFailOther:
    case BeginMiniJobResponseProto_BeginMiniJobStatusFailNoMiniJobExists:
      return YES;
    default:
      return NO;
  }
}
@interface BeginMiniJobResponseProto_Builder()
@property (strong) BeginMiniJobResponseProto* result;
@end

@implementation BeginMiniJobResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BeginMiniJobResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BeginMiniJobResponseProto_Builder*) clear {
  self.result = [[BeginMiniJobResponseProto alloc] init];
  return self;
}
- (BeginMiniJobResponseProto_Builder*) clone {
  return [BeginMiniJobResponseProto builderWithPrototype:result];
}
- (BeginMiniJobResponseProto*) defaultInstance {
  return [BeginMiniJobResponseProto defaultInstance];
}
- (BeginMiniJobResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BeginMiniJobResponseProto*) buildPartial {
  BeginMiniJobResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BeginMiniJobResponseProto_Builder*) mergeFrom:(BeginMiniJobResponseProto*) other {
  if (other == [BeginMiniJobResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BeginMiniJobResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BeginMiniJobResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        BeginMiniJobResponseProto_BeginMiniJobStatus value = (BeginMiniJobResponseProto_BeginMiniJobStatus)[input readEnum];
        if (BeginMiniJobResponseProto_BeginMiniJobStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BeginMiniJobResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BeginMiniJobResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BeginMiniJobResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BeginMiniJobResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (BeginMiniJobResponseProto_BeginMiniJobStatus) status {
  return result.status;
}
- (BeginMiniJobResponseProto_Builder*) setStatus:(BeginMiniJobResponseProto_BeginMiniJobStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (BeginMiniJobResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = BeginMiniJobResponseProto_BeginMiniJobStatusSuccess;
  return self;
}
@end

@interface CompleteMiniJobRequestProto ()
@property (strong) MinimumUserProto* sender;
@property int64_t clientTime;
@property (strong) NSString* userMiniJobUuid;
@property BOOL isSpeedUp;
@property int32_t gemCost;
@end

@implementation CompleteMiniJobRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (BOOL) hasUserMiniJobUuid {
  return !!hasUserMiniJobUuid_;
}
- (void) setHasUserMiniJobUuid:(BOOL) value_ {
  hasUserMiniJobUuid_ = !!value_;
}
@synthesize userMiniJobUuid;
- (BOOL) hasIsSpeedUp {
  return !!hasIsSpeedUp_;
}
- (void) setHasIsSpeedUp:(BOOL) value_ {
  hasIsSpeedUp_ = !!value_;
}
- (BOOL) isSpeedUp {
  return !!isSpeedUp_;
}
- (void) setIsSpeedUp:(BOOL) value_ {
  isSpeedUp_ = !!value_;
}
- (BOOL) hasGemCost {
  return !!hasGemCost_;
}
- (void) setHasGemCost:(BOOL) value_ {
  hasGemCost_ = !!value_;
}
@synthesize gemCost;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clientTime = 0L;
    self.userMiniJobUuid = @"";
    self.isSpeedUp = NO;
    self.gemCost = 0;
  }
  return self;
}
static CompleteMiniJobRequestProto* defaultCompleteMiniJobRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [CompleteMiniJobRequestProto class]) {
    defaultCompleteMiniJobRequestProtoInstance = [[CompleteMiniJobRequestProto alloc] init];
  }
}
+ (CompleteMiniJobRequestProto*) defaultInstance {
  return defaultCompleteMiniJobRequestProtoInstance;
}
- (CompleteMiniJobRequestProto*) defaultInstance {
  return defaultCompleteMiniJobRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClientTime) {
    [output writeInt64:2 value:self.clientTime];
  }
  if (self.hasUserMiniJobUuid) {
    [output writeString:3 value:self.userMiniJobUuid];
  }
  if (self.hasIsSpeedUp) {
    [output writeBool:4 value:self.isSpeedUp];
  }
  if (self.hasGemCost) {
    [output writeInt32:5 value:self.gemCost];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(2, self.clientTime);
  }
  if (self.hasUserMiniJobUuid) {
    size_ += computeStringSize(3, self.userMiniJobUuid);
  }
  if (self.hasIsSpeedUp) {
    size_ += computeBoolSize(4, self.isSpeedUp);
  }
  if (self.hasGemCost) {
    size_ += computeInt32Size(5, self.gemCost);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CompleteMiniJobRequestProto*) parseFromData:(NSData*) data {
  return (CompleteMiniJobRequestProto*)[[[CompleteMiniJobRequestProto builder] mergeFromData:data] build];
}
+ (CompleteMiniJobRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompleteMiniJobRequestProto*)[[[CompleteMiniJobRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CompleteMiniJobRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (CompleteMiniJobRequestProto*)[[[CompleteMiniJobRequestProto builder] mergeFromInputStream:input] build];
}
+ (CompleteMiniJobRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompleteMiniJobRequestProto*)[[[CompleteMiniJobRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompleteMiniJobRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CompleteMiniJobRequestProto*)[[[CompleteMiniJobRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (CompleteMiniJobRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompleteMiniJobRequestProto*)[[[CompleteMiniJobRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompleteMiniJobRequestProto_Builder*) builder {
  return [[CompleteMiniJobRequestProto_Builder alloc] init];
}
+ (CompleteMiniJobRequestProto_Builder*) builderWithPrototype:(CompleteMiniJobRequestProto*) prototype {
  return [[CompleteMiniJobRequestProto builder] mergeFrom:prototype];
}
- (CompleteMiniJobRequestProto_Builder*) builder {
  return [CompleteMiniJobRequestProto builder];
}
- (CompleteMiniJobRequestProto_Builder*) toBuilder {
  return [CompleteMiniJobRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  if (self.hasUserMiniJobUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userMiniJobUuid", self.userMiniJobUuid];
  }
  if (self.hasIsSpeedUp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isSpeedUp", [NSNumber numberWithBool:self.isSpeedUp]];
  }
  if (self.hasGemCost) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gemCost", [NSNumber numberWithInteger:self.gemCost]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CompleteMiniJobRequestProto class]]) {
    return NO;
  }
  CompleteMiniJobRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      self.hasUserMiniJobUuid == otherMessage.hasUserMiniJobUuid &&
      (!self.hasUserMiniJobUuid || [self.userMiniJobUuid isEqual:otherMessage.userMiniJobUuid]) &&
      self.hasIsSpeedUp == otherMessage.hasIsSpeedUp &&
      (!self.hasIsSpeedUp || self.isSpeedUp == otherMessage.isSpeedUp) &&
      self.hasGemCost == otherMessage.hasGemCost &&
      (!self.hasGemCost || self.gemCost == otherMessage.gemCost) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  if (self.hasUserMiniJobUuid) {
    hashCode = hashCode * 31 + [self.userMiniJobUuid hash];
  }
  if (self.hasIsSpeedUp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isSpeedUp] hash];
  }
  if (self.hasGemCost) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.gemCost] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CompleteMiniJobRequestProto_Builder()
@property (strong) CompleteMiniJobRequestProto* result;
@end

@implementation CompleteMiniJobRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[CompleteMiniJobRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CompleteMiniJobRequestProto_Builder*) clear {
  self.result = [[CompleteMiniJobRequestProto alloc] init];
  return self;
}
- (CompleteMiniJobRequestProto_Builder*) clone {
  return [CompleteMiniJobRequestProto builderWithPrototype:result];
}
- (CompleteMiniJobRequestProto*) defaultInstance {
  return [CompleteMiniJobRequestProto defaultInstance];
}
- (CompleteMiniJobRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CompleteMiniJobRequestProto*) buildPartial {
  CompleteMiniJobRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (CompleteMiniJobRequestProto_Builder*) mergeFrom:(CompleteMiniJobRequestProto*) other {
  if (other == [CompleteMiniJobRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.hasUserMiniJobUuid) {
    [self setUserMiniJobUuid:other.userMiniJobUuid];
  }
  if (other.hasIsSpeedUp) {
    [self setIsSpeedUp:other.isSpeedUp];
  }
  if (other.hasGemCost) {
    [self setGemCost:other.gemCost];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CompleteMiniJobRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CompleteMiniJobRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 26: {
        [self setUserMiniJobUuid:[input readString]];
        break;
      }
      case 32: {
        [self setIsSpeedUp:[input readBool]];
        break;
      }
      case 40: {
        [self setGemCost:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (CompleteMiniJobRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (CompleteMiniJobRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (CompleteMiniJobRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (CompleteMiniJobRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (CompleteMiniJobRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (CompleteMiniJobRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (BOOL) hasUserMiniJobUuid {
  return result.hasUserMiniJobUuid;
}
- (NSString*) userMiniJobUuid {
  return result.userMiniJobUuid;
}
- (CompleteMiniJobRequestProto_Builder*) setUserMiniJobUuid:(NSString*) value {
  result.hasUserMiniJobUuid = YES;
  result.userMiniJobUuid = value;
  return self;
}
- (CompleteMiniJobRequestProto_Builder*) clearUserMiniJobUuid {
  result.hasUserMiniJobUuid = NO;
  result.userMiniJobUuid = @"";
  return self;
}
- (BOOL) hasIsSpeedUp {
  return result.hasIsSpeedUp;
}
- (BOOL) isSpeedUp {
  return result.isSpeedUp;
}
- (CompleteMiniJobRequestProto_Builder*) setIsSpeedUp:(BOOL) value {
  result.hasIsSpeedUp = YES;
  result.isSpeedUp = value;
  return self;
}
- (CompleteMiniJobRequestProto_Builder*) clearIsSpeedUp {
  result.hasIsSpeedUp = NO;
  result.isSpeedUp = NO;
  return self;
}
- (BOOL) hasGemCost {
  return result.hasGemCost;
}
- (int32_t) gemCost {
  return result.gemCost;
}
- (CompleteMiniJobRequestProto_Builder*) setGemCost:(int32_t) value {
  result.hasGemCost = YES;
  result.gemCost = value;
  return self;
}
- (CompleteMiniJobRequestProto_Builder*) clearGemCost {
  result.hasGemCost = NO;
  result.gemCost = 0;
  return self;
}
@end

@interface CompleteMiniJobResponseProto ()
@property (strong) MinimumUserProto* sender;
@property CompleteMiniJobResponseProto_CompleteMiniJobStatus status;
@end

@implementation CompleteMiniJobResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = CompleteMiniJobResponseProto_CompleteMiniJobStatusSuccess;
  }
  return self;
}
static CompleteMiniJobResponseProto* defaultCompleteMiniJobResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [CompleteMiniJobResponseProto class]) {
    defaultCompleteMiniJobResponseProtoInstance = [[CompleteMiniJobResponseProto alloc] init];
  }
}
+ (CompleteMiniJobResponseProto*) defaultInstance {
  return defaultCompleteMiniJobResponseProtoInstance;
}
- (CompleteMiniJobResponseProto*) defaultInstance {
  return defaultCompleteMiniJobResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CompleteMiniJobResponseProto*) parseFromData:(NSData*) data {
  return (CompleteMiniJobResponseProto*)[[[CompleteMiniJobResponseProto builder] mergeFromData:data] build];
}
+ (CompleteMiniJobResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompleteMiniJobResponseProto*)[[[CompleteMiniJobResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CompleteMiniJobResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (CompleteMiniJobResponseProto*)[[[CompleteMiniJobResponseProto builder] mergeFromInputStream:input] build];
}
+ (CompleteMiniJobResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompleteMiniJobResponseProto*)[[[CompleteMiniJobResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompleteMiniJobResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CompleteMiniJobResponseProto*)[[[CompleteMiniJobResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (CompleteMiniJobResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompleteMiniJobResponseProto*)[[[CompleteMiniJobResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompleteMiniJobResponseProto_Builder*) builder {
  return [[CompleteMiniJobResponseProto_Builder alloc] init];
}
+ (CompleteMiniJobResponseProto_Builder*) builderWithPrototype:(CompleteMiniJobResponseProto*) prototype {
  return [[CompleteMiniJobResponseProto builder] mergeFrom:prototype];
}
- (CompleteMiniJobResponseProto_Builder*) builder {
  return [CompleteMiniJobResponseProto builder];
}
- (CompleteMiniJobResponseProto_Builder*) toBuilder {
  return [CompleteMiniJobResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %d\n", indent, @"status", self.status];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CompleteMiniJobResponseProto class]]) {
    return NO;
  }
  CompleteMiniJobResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL CompleteMiniJobResponseProto_CompleteMiniJobStatusIsValidValue(CompleteMiniJobResponseProto_CompleteMiniJobStatus value) {
  switch (value) {
    case CompleteMiniJobResponseProto_CompleteMiniJobStatusSuccess:
    case CompleteMiniJobResponseProto_CompleteMiniJobStatusFailOther:
    case CompleteMiniJobResponseProto_CompleteMiniJobStatusFailInsufficientGems:
    case CompleteMiniJobResponseProto_CompleteMiniJobStatusFailNoMiniJobExists:
      return YES;
    default:
      return NO;
  }
}
@interface CompleteMiniJobResponseProto_Builder()
@property (strong) CompleteMiniJobResponseProto* result;
@end

@implementation CompleteMiniJobResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[CompleteMiniJobResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CompleteMiniJobResponseProto_Builder*) clear {
  self.result = [[CompleteMiniJobResponseProto alloc] init];
  return self;
}
- (CompleteMiniJobResponseProto_Builder*) clone {
  return [CompleteMiniJobResponseProto builderWithPrototype:result];
}
- (CompleteMiniJobResponseProto*) defaultInstance {
  return [CompleteMiniJobResponseProto defaultInstance];
}
- (CompleteMiniJobResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CompleteMiniJobResponseProto*) buildPartial {
  CompleteMiniJobResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (CompleteMiniJobResponseProto_Builder*) mergeFrom:(CompleteMiniJobResponseProto*) other {
  if (other == [CompleteMiniJobResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CompleteMiniJobResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CompleteMiniJobResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        CompleteMiniJobResponseProto_CompleteMiniJobStatus value = (CompleteMiniJobResponseProto_CompleteMiniJobStatus)[input readEnum];
        if (CompleteMiniJobResponseProto_CompleteMiniJobStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (CompleteMiniJobResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (CompleteMiniJobResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (CompleteMiniJobResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (CompleteMiniJobResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (CompleteMiniJobResponseProto_CompleteMiniJobStatus) status {
  return result.status;
}
- (CompleteMiniJobResponseProto_Builder*) setStatus:(CompleteMiniJobResponseProto_CompleteMiniJobStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (CompleteMiniJobResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = CompleteMiniJobResponseProto_CompleteMiniJobStatusSuccess;
  return self;
}
@end

@interface RedeemMiniJobRequestProto ()
@property (strong) MinimumUserProtoWithMaxResources* sender;
@property int64_t clientTime;
@property (strong) NSString* userMiniJobUuid;
@property (strong) NSMutableArray * mutableUmchpList;
@end

@implementation RedeemMiniJobRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (BOOL) hasUserMiniJobUuid {
  return !!hasUserMiniJobUuid_;
}
- (void) setHasUserMiniJobUuid:(BOOL) value_ {
  hasUserMiniJobUuid_ = !!value_;
}
@synthesize userMiniJobUuid;
@synthesize mutableUmchpList;
@dynamic umchpList;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.clientTime = 0L;
    self.userMiniJobUuid = @"";
  }
  return self;
}
static RedeemMiniJobRequestProto* defaultRedeemMiniJobRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RedeemMiniJobRequestProto class]) {
    defaultRedeemMiniJobRequestProtoInstance = [[RedeemMiniJobRequestProto alloc] init];
  }
}
+ (RedeemMiniJobRequestProto*) defaultInstance {
  return defaultRedeemMiniJobRequestProtoInstance;
}
- (RedeemMiniJobRequestProto*) defaultInstance {
  return defaultRedeemMiniJobRequestProtoInstance;
}
- (NSArray *)umchpList {
  return mutableUmchpList;
}
- (UserMonsterCurrentHealthProto*)umchpAtIndex:(NSUInteger)index {
  return [mutableUmchpList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClientTime) {
    [output writeInt64:2 value:self.clientTime];
  }
  if (self.hasUserMiniJobUuid) {
    [output writeString:3 value:self.userMiniJobUuid];
  }
  [self.umchpList enumerateObjectsUsingBlock:^(UserMonsterCurrentHealthProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:6 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(2, self.clientTime);
  }
  if (self.hasUserMiniJobUuid) {
    size_ += computeStringSize(3, self.userMiniJobUuid);
  }
  [self.umchpList enumerateObjectsUsingBlock:^(UserMonsterCurrentHealthProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(6, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RedeemMiniJobRequestProto*) parseFromData:(NSData*) data {
  return (RedeemMiniJobRequestProto*)[[[RedeemMiniJobRequestProto builder] mergeFromData:data] build];
}
+ (RedeemMiniJobRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RedeemMiniJobRequestProto*)[[[RedeemMiniJobRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RedeemMiniJobRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RedeemMiniJobRequestProto*)[[[RedeemMiniJobRequestProto builder] mergeFromInputStream:input] build];
}
+ (RedeemMiniJobRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RedeemMiniJobRequestProto*)[[[RedeemMiniJobRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RedeemMiniJobRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RedeemMiniJobRequestProto*)[[[RedeemMiniJobRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RedeemMiniJobRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RedeemMiniJobRequestProto*)[[[RedeemMiniJobRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RedeemMiniJobRequestProto_Builder*) builder {
  return [[RedeemMiniJobRequestProto_Builder alloc] init];
}
+ (RedeemMiniJobRequestProto_Builder*) builderWithPrototype:(RedeemMiniJobRequestProto*) prototype {
  return [[RedeemMiniJobRequestProto builder] mergeFrom:prototype];
}
- (RedeemMiniJobRequestProto_Builder*) builder {
  return [RedeemMiniJobRequestProto builder];
}
- (RedeemMiniJobRequestProto_Builder*) toBuilder {
  return [RedeemMiniJobRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  if (self.hasUserMiniJobUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userMiniJobUuid", self.userMiniJobUuid];
  }
  [self.umchpList enumerateObjectsUsingBlock:^(UserMonsterCurrentHealthProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"umchp"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RedeemMiniJobRequestProto class]]) {
    return NO;
  }
  RedeemMiniJobRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      self.hasUserMiniJobUuid == otherMessage.hasUserMiniJobUuid &&
      (!self.hasUserMiniJobUuid || [self.userMiniJobUuid isEqual:otherMessage.userMiniJobUuid]) &&
      [self.umchpList isEqualToArray:otherMessage.umchpList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  if (self.hasUserMiniJobUuid) {
    hashCode = hashCode * 31 + [self.userMiniJobUuid hash];
  }
  [self.umchpList enumerateObjectsUsingBlock:^(UserMonsterCurrentHealthProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RedeemMiniJobRequestProto_Builder()
@property (strong) RedeemMiniJobRequestProto* result;
@end

@implementation RedeemMiniJobRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RedeemMiniJobRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RedeemMiniJobRequestProto_Builder*) clear {
  self.result = [[RedeemMiniJobRequestProto alloc] init];
  return self;
}
- (RedeemMiniJobRequestProto_Builder*) clone {
  return [RedeemMiniJobRequestProto builderWithPrototype:result];
}
- (RedeemMiniJobRequestProto*) defaultInstance {
  return [RedeemMiniJobRequestProto defaultInstance];
}
- (RedeemMiniJobRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RedeemMiniJobRequestProto*) buildPartial {
  RedeemMiniJobRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RedeemMiniJobRequestProto_Builder*) mergeFrom:(RedeemMiniJobRequestProto*) other {
  if (other == [RedeemMiniJobRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.hasUserMiniJobUuid) {
    [self setUserMiniJobUuid:other.userMiniJobUuid];
  }
  if (other.mutableUmchpList.count > 0) {
    if (result.mutableUmchpList == nil) {
      result.mutableUmchpList = [[NSMutableArray alloc] initWithArray:other.mutableUmchpList];
    } else {
      [result.mutableUmchpList addObjectsFromArray:other.mutableUmchpList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RedeemMiniJobRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RedeemMiniJobRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 26: {
        [self setUserMiniJobUuid:[input readString]];
        break;
      }
      case 50: {
        UserMonsterCurrentHealthProto_Builder* subBuilder = [UserMonsterCurrentHealthProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUmchp:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (RedeemMiniJobRequestProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RedeemMiniJobRequestProto_Builder*) setSender_Builder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RedeemMiniJobRequestProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RedeemMiniJobRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (RedeemMiniJobRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (RedeemMiniJobRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (BOOL) hasUserMiniJobUuid {
  return result.hasUserMiniJobUuid;
}
- (NSString*) userMiniJobUuid {
  return result.userMiniJobUuid;
}
- (RedeemMiniJobRequestProto_Builder*) setUserMiniJobUuid:(NSString*) value {
  result.hasUserMiniJobUuid = YES;
  result.userMiniJobUuid = value;
  return self;
}
- (RedeemMiniJobRequestProto_Builder*) clearUserMiniJobUuid {
  result.hasUserMiniJobUuid = NO;
  result.userMiniJobUuid = @"";
  return self;
}
- (NSMutableArray *)umchpList {
  return result.mutableUmchpList;
}
- (UserMonsterCurrentHealthProto*)umchpAtIndex:(NSUInteger)index {
  return [result umchpAtIndex:index];
}
- (RedeemMiniJobRequestProto_Builder *)addUmchp:(UserMonsterCurrentHealthProto*)value {
  if (result.mutableUmchpList == nil) {
    result.mutableUmchpList = [[NSMutableArray alloc]init];
  }
  [result.mutableUmchpList addObject:value];
  return self;
}
- (RedeemMiniJobRequestProto_Builder *)addAllUmchp:(NSArray *)array {
  if (result.mutableUmchpList == nil) {
    result.mutableUmchpList = [NSMutableArray array];
  }
  [result.mutableUmchpList addObjectsFromArray:array];
  return self;
}
- (RedeemMiniJobRequestProto_Builder *)clearUmchp {
  result.mutableUmchpList = nil;
  return self;
}
@end

@interface RedeemMiniJobResponseProto ()
@property (strong) MinimumUserProtoWithMaxResources* sender;
@property (strong) FullUserMonsterProto* fump;
@property RedeemMiniJobResponseProto_RedeemMiniJobStatus status;
@end

@implementation RedeemMiniJobResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasFump {
  return !!hasFump_;
}
- (void) setHasFump:(BOOL) value_ {
  hasFump_ = !!value_;
}
@synthesize fump;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.fump = [FullUserMonsterProto defaultInstance];
    self.status = RedeemMiniJobResponseProto_RedeemMiniJobStatusSuccess;
  }
  return self;
}
static RedeemMiniJobResponseProto* defaultRedeemMiniJobResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RedeemMiniJobResponseProto class]) {
    defaultRedeemMiniJobResponseProtoInstance = [[RedeemMiniJobResponseProto alloc] init];
  }
}
+ (RedeemMiniJobResponseProto*) defaultInstance {
  return defaultRedeemMiniJobResponseProtoInstance;
}
- (RedeemMiniJobResponseProto*) defaultInstance {
  return defaultRedeemMiniJobResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasFump) {
    [output writeMessage:2 value:self.fump];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasFump) {
    size_ += computeMessageSize(2, self.fump);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(3, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RedeemMiniJobResponseProto*) parseFromData:(NSData*) data {
  return (RedeemMiniJobResponseProto*)[[[RedeemMiniJobResponseProto builder] mergeFromData:data] build];
}
+ (RedeemMiniJobResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RedeemMiniJobResponseProto*)[[[RedeemMiniJobResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RedeemMiniJobResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RedeemMiniJobResponseProto*)[[[RedeemMiniJobResponseProto builder] mergeFromInputStream:input] build];
}
+ (RedeemMiniJobResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RedeemMiniJobResponseProto*)[[[RedeemMiniJobResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RedeemMiniJobResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RedeemMiniJobResponseProto*)[[[RedeemMiniJobResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RedeemMiniJobResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RedeemMiniJobResponseProto*)[[[RedeemMiniJobResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RedeemMiniJobResponseProto_Builder*) builder {
  return [[RedeemMiniJobResponseProto_Builder alloc] init];
}
+ (RedeemMiniJobResponseProto_Builder*) builderWithPrototype:(RedeemMiniJobResponseProto*) prototype {
  return [[RedeemMiniJobResponseProto builder] mergeFrom:prototype];
}
- (RedeemMiniJobResponseProto_Builder*) builder {
  return [RedeemMiniJobResponseProto builder];
}
- (RedeemMiniJobResponseProto_Builder*) toBuilder {
  return [RedeemMiniJobResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasFump) {
    [output appendFormat:@"%@%@ {\n", indent, @"fump"];
    [self.fump writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %d\n", indent, @"status", self.status];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RedeemMiniJobResponseProto class]]) {
    return NO;
  }
  RedeemMiniJobResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasFump == otherMessage.hasFump &&
      (!self.hasFump || [self.fump isEqual:otherMessage.fump]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasFump) {
    hashCode = hashCode * 31 + [self.fump hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL RedeemMiniJobResponseProto_RedeemMiniJobStatusIsValidValue(RedeemMiniJobResponseProto_RedeemMiniJobStatus value) {
  switch (value) {
    case RedeemMiniJobResponseProto_RedeemMiniJobStatusSuccess:
    case RedeemMiniJobResponseProto_RedeemMiniJobStatusFailOther:
    case RedeemMiniJobResponseProto_RedeemMiniJobStatusFailNoMiniJobExists:
    case RedeemMiniJobResponseProto_RedeemMiniJobStatusFailMiniJobIncomplete:
      return YES;
    default:
      return NO;
  }
}
@interface RedeemMiniJobResponseProto_Builder()
@property (strong) RedeemMiniJobResponseProto* result;
@end

@implementation RedeemMiniJobResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RedeemMiniJobResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RedeemMiniJobResponseProto_Builder*) clear {
  self.result = [[RedeemMiniJobResponseProto alloc] init];
  return self;
}
- (RedeemMiniJobResponseProto_Builder*) clone {
  return [RedeemMiniJobResponseProto builderWithPrototype:result];
}
- (RedeemMiniJobResponseProto*) defaultInstance {
  return [RedeemMiniJobResponseProto defaultInstance];
}
- (RedeemMiniJobResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RedeemMiniJobResponseProto*) buildPartial {
  RedeemMiniJobResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RedeemMiniJobResponseProto_Builder*) mergeFrom:(RedeemMiniJobResponseProto*) other {
  if (other == [RedeemMiniJobResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasFump) {
    [self mergeFump:other.fump];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RedeemMiniJobResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RedeemMiniJobResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        if (self.hasFump) {
          [subBuilder mergeFrom:self.fump];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFump:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        RedeemMiniJobResponseProto_RedeemMiniJobStatus value = (RedeemMiniJobResponseProto_RedeemMiniJobStatus)[input readEnum];
        if (RedeemMiniJobResponseProto_RedeemMiniJobStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (RedeemMiniJobResponseProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RedeemMiniJobResponseProto_Builder*) setSender_Builder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RedeemMiniJobResponseProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RedeemMiniJobResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (BOOL) hasFump {
  return result.hasFump;
}
- (FullUserMonsterProto*) fump {
  return result.fump;
}
- (RedeemMiniJobResponseProto_Builder*) setFump:(FullUserMonsterProto*) value {
  result.hasFump = YES;
  result.fump = value;
  return self;
}
- (RedeemMiniJobResponseProto_Builder*) setFump_Builder:(FullUserMonsterProto_Builder*) builderForValue {
  return [self setFump:[builderForValue build]];
}
- (RedeemMiniJobResponseProto_Builder*) mergeFump:(FullUserMonsterProto*) value {
  if (result.hasFump &&
      result.fump != [FullUserMonsterProto defaultInstance]) {
    result.fump =
      [[[FullUserMonsterProto builderWithPrototype:result.fump] mergeFrom:value] buildPartial];
  } else {
    result.fump = value;
  }
  result.hasFump = YES;
  return self;
}
- (RedeemMiniJobResponseProto_Builder*) clearFump {
  result.hasFump = NO;
  result.fump = [FullUserMonsterProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RedeemMiniJobResponseProto_RedeemMiniJobStatus) status {
  return result.status;
}
- (RedeemMiniJobResponseProto_Builder*) setStatus:(RedeemMiniJobResponseProto_RedeemMiniJobStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RedeemMiniJobResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = RedeemMiniJobResponseProto_RedeemMiniJobStatusSuccess;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
