// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventCity.pb.h"
// @@protoc_insertion_point(imports)

@implementation EventCityRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventCityRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [CityRoot registerAllExtensions:registry];
    [QuestRoot registerAllExtensions:registry];
    [StructureRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface LoadPlayerCityRequestProto ()
@property (strong) MinimumUserProto* sender;
@property int32_t cityOwnerId;
@end

@implementation LoadPlayerCityRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasCityOwnerId {
  return !!hasCityOwnerId_;
}
- (void) setHasCityOwnerId:(BOOL) value_ {
  hasCityOwnerId_ = !!value_;
}
@synthesize cityOwnerId;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.cityOwnerId = 0;
  }
  return self;
}
static LoadPlayerCityRequestProto* defaultLoadPlayerCityRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [LoadPlayerCityRequestProto class]) {
    defaultLoadPlayerCityRequestProtoInstance = [[LoadPlayerCityRequestProto alloc] init];
  }
}
+ (LoadPlayerCityRequestProto*) defaultInstance {
  return defaultLoadPlayerCityRequestProtoInstance;
}
- (LoadPlayerCityRequestProto*) defaultInstance {
  return defaultLoadPlayerCityRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasCityOwnerId) {
    [output writeInt32:2 value:self.cityOwnerId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasCityOwnerId) {
    size_ += computeInt32Size(2, self.cityOwnerId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LoadPlayerCityRequestProto*) parseFromData:(NSData*) data {
  return (LoadPlayerCityRequestProto*)[[[LoadPlayerCityRequestProto builder] mergeFromData:data] build];
}
+ (LoadPlayerCityRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoadPlayerCityRequestProto*)[[[LoadPlayerCityRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoadPlayerCityRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (LoadPlayerCityRequestProto*)[[[LoadPlayerCityRequestProto builder] mergeFromInputStream:input] build];
}
+ (LoadPlayerCityRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoadPlayerCityRequestProto*)[[[LoadPlayerCityRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoadPlayerCityRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoadPlayerCityRequestProto*)[[[LoadPlayerCityRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (LoadPlayerCityRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoadPlayerCityRequestProto*)[[[LoadPlayerCityRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoadPlayerCityRequestProto_Builder*) builder {
  return [[LoadPlayerCityRequestProto_Builder alloc] init];
}
+ (LoadPlayerCityRequestProto_Builder*) builderWithPrototype:(LoadPlayerCityRequestProto*) prototype {
  return [[LoadPlayerCityRequestProto builder] mergeFrom:prototype];
}
- (LoadPlayerCityRequestProto_Builder*) builder {
  return [LoadPlayerCityRequestProto builder];
}
- (LoadPlayerCityRequestProto_Builder*) toBuilder {
  return [LoadPlayerCityRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCityOwnerId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cityOwnerId", [NSNumber numberWithInteger:self.cityOwnerId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LoadPlayerCityRequestProto class]]) {
    return NO;
  }
  LoadPlayerCityRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasCityOwnerId == otherMessage.hasCityOwnerId &&
      (!self.hasCityOwnerId || self.cityOwnerId == otherMessage.cityOwnerId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasCityOwnerId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cityOwnerId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface LoadPlayerCityRequestProto_Builder()
@property (strong) LoadPlayerCityRequestProto* result;
@end

@implementation LoadPlayerCityRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[LoadPlayerCityRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LoadPlayerCityRequestProto_Builder*) clear {
  self.result = [[LoadPlayerCityRequestProto alloc] init];
  return self;
}
- (LoadPlayerCityRequestProto_Builder*) clone {
  return [LoadPlayerCityRequestProto builderWithPrototype:result];
}
- (LoadPlayerCityRequestProto*) defaultInstance {
  return [LoadPlayerCityRequestProto defaultInstance];
}
- (LoadPlayerCityRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoadPlayerCityRequestProto*) buildPartial {
  LoadPlayerCityRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (LoadPlayerCityRequestProto_Builder*) mergeFrom:(LoadPlayerCityRequestProto*) other {
  if (other == [LoadPlayerCityRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasCityOwnerId) {
    [self setCityOwnerId:other.cityOwnerId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoadPlayerCityRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoadPlayerCityRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setCityOwnerId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (LoadPlayerCityRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (LoadPlayerCityRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (LoadPlayerCityRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (LoadPlayerCityRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasCityOwnerId {
  return result.hasCityOwnerId;
}
- (int32_t) cityOwnerId {
  return result.cityOwnerId;
}
- (LoadPlayerCityRequestProto_Builder*) setCityOwnerId:(int32_t) value {
  result.hasCityOwnerId = YES;
  result.cityOwnerId = value;
  return self;
}
- (LoadPlayerCityRequestProto_Builder*) clearCityOwnerId {
  result.hasCityOwnerId = NO;
  result.cityOwnerId = 0;
  return self;
}
@end

@interface LoadPlayerCityResponseProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) MinimumUserProto* cityOwner;
@property LoadPlayerCityResponseProto_LoadPlayerCityStatus status;
@property (strong) NSMutableArray * mutableOwnerNormStructsList;
@property (strong) NSMutableArray * mutableUserCityExpansionDataProtoListList;
@property (strong) NSMutableArray * mutableObstaclesList;
@end

@implementation LoadPlayerCityResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasCityOwner {
  return !!hasCityOwner_;
}
- (void) setHasCityOwner:(BOOL) value_ {
  hasCityOwner_ = !!value_;
}
@synthesize cityOwner;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
@synthesize mutableOwnerNormStructsList;
@dynamic ownerNormStructsList;
@synthesize mutableUserCityExpansionDataProtoListList;
@dynamic userCityExpansionDataProtoListList;
@synthesize mutableObstaclesList;
@dynamic obstaclesList;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.cityOwner = [MinimumUserProto defaultInstance];
    self.status = LoadPlayerCityResponseProto_LoadPlayerCityStatusSuccess;
  }
  return self;
}
static LoadPlayerCityResponseProto* defaultLoadPlayerCityResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [LoadPlayerCityResponseProto class]) {
    defaultLoadPlayerCityResponseProtoInstance = [[LoadPlayerCityResponseProto alloc] init];
  }
}
+ (LoadPlayerCityResponseProto*) defaultInstance {
  return defaultLoadPlayerCityResponseProtoInstance;
}
- (LoadPlayerCityResponseProto*) defaultInstance {
  return defaultLoadPlayerCityResponseProtoInstance;
}
- (NSArray *)ownerNormStructsList {
  return mutableOwnerNormStructsList;
}
- (FullUserStructureProto*)ownerNormStructsAtIndex:(NSUInteger)index {
  return [mutableOwnerNormStructsList objectAtIndex:index];
}
- (NSArray *)userCityExpansionDataProtoListList {
  return mutableUserCityExpansionDataProtoListList;
}
- (UserCityExpansionDataProto*)userCityExpansionDataProtoListAtIndex:(NSUInteger)index {
  return [mutableUserCityExpansionDataProtoListList objectAtIndex:index];
}
- (NSArray *)obstaclesList {
  return mutableObstaclesList;
}
- (UserObstacleProto*)obstaclesAtIndex:(NSUInteger)index {
  return [mutableObstaclesList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasCityOwner) {
    [output writeMessage:2 value:self.cityOwner];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.ownerNormStructsList enumerateObjectsUsingBlock:^(FullUserStructureProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  [self.userCityExpansionDataProtoListList enumerateObjectsUsingBlock:^(UserCityExpansionDataProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:5 value:element];
  }];
  [self.obstaclesList enumerateObjectsUsingBlock:^(UserObstacleProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:6 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasCityOwner) {
    size_ += computeMessageSize(2, self.cityOwner);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(3, self.status);
  }
  [self.ownerNormStructsList enumerateObjectsUsingBlock:^(FullUserStructureProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  [self.userCityExpansionDataProtoListList enumerateObjectsUsingBlock:^(UserCityExpansionDataProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(5, element);
  }];
  [self.obstaclesList enumerateObjectsUsingBlock:^(UserObstacleProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(6, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LoadPlayerCityResponseProto*) parseFromData:(NSData*) data {
  return (LoadPlayerCityResponseProto*)[[[LoadPlayerCityResponseProto builder] mergeFromData:data] build];
}
+ (LoadPlayerCityResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoadPlayerCityResponseProto*)[[[LoadPlayerCityResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoadPlayerCityResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (LoadPlayerCityResponseProto*)[[[LoadPlayerCityResponseProto builder] mergeFromInputStream:input] build];
}
+ (LoadPlayerCityResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoadPlayerCityResponseProto*)[[[LoadPlayerCityResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoadPlayerCityResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoadPlayerCityResponseProto*)[[[LoadPlayerCityResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (LoadPlayerCityResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoadPlayerCityResponseProto*)[[[LoadPlayerCityResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoadPlayerCityResponseProto_Builder*) builder {
  return [[LoadPlayerCityResponseProto_Builder alloc] init];
}
+ (LoadPlayerCityResponseProto_Builder*) builderWithPrototype:(LoadPlayerCityResponseProto*) prototype {
  return [[LoadPlayerCityResponseProto builder] mergeFrom:prototype];
}
- (LoadPlayerCityResponseProto_Builder*) builder {
  return [LoadPlayerCityResponseProto builder];
}
- (LoadPlayerCityResponseProto_Builder*) toBuilder {
  return [LoadPlayerCityResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCityOwner) {
    [output appendFormat:@"%@%@ {\n", indent, @"cityOwner"];
    [self.cityOwner writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %d\n", indent, @"status", self.status];
  }
  [self.ownerNormStructsList enumerateObjectsUsingBlock:^(FullUserStructureProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"ownerNormStructs"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.userCityExpansionDataProtoListList enumerateObjectsUsingBlock:^(UserCityExpansionDataProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userCityExpansionDataProtoList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.obstaclesList enumerateObjectsUsingBlock:^(UserObstacleProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"obstacles"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LoadPlayerCityResponseProto class]]) {
    return NO;
  }
  LoadPlayerCityResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasCityOwner == otherMessage.hasCityOwner &&
      (!self.hasCityOwner || [self.cityOwner isEqual:otherMessage.cityOwner]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      [self.ownerNormStructsList isEqualToArray:otherMessage.ownerNormStructsList] &&
      [self.userCityExpansionDataProtoListList isEqualToArray:otherMessage.userCityExpansionDataProtoListList] &&
      [self.obstaclesList isEqualToArray:otherMessage.obstaclesList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasCityOwner) {
    hashCode = hashCode * 31 + [self.cityOwner hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  [self.ownerNormStructsList enumerateObjectsUsingBlock:^(FullUserStructureProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.userCityExpansionDataProtoListList enumerateObjectsUsingBlock:^(UserCityExpansionDataProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.obstaclesList enumerateObjectsUsingBlock:^(UserObstacleProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL LoadPlayerCityResponseProto_LoadPlayerCityStatusIsValidValue(LoadPlayerCityResponseProto_LoadPlayerCityStatus value) {
  switch (value) {
    case LoadPlayerCityResponseProto_LoadPlayerCityStatusSuccess:
    case LoadPlayerCityResponseProto_LoadPlayerCityStatusFailNoSuchPlayer:
    case LoadPlayerCityResponseProto_LoadPlayerCityStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface LoadPlayerCityResponseProto_Builder()
@property (strong) LoadPlayerCityResponseProto* result;
@end

@implementation LoadPlayerCityResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[LoadPlayerCityResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LoadPlayerCityResponseProto_Builder*) clear {
  self.result = [[LoadPlayerCityResponseProto alloc] init];
  return self;
}
- (LoadPlayerCityResponseProto_Builder*) clone {
  return [LoadPlayerCityResponseProto builderWithPrototype:result];
}
- (LoadPlayerCityResponseProto*) defaultInstance {
  return [LoadPlayerCityResponseProto defaultInstance];
}
- (LoadPlayerCityResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoadPlayerCityResponseProto*) buildPartial {
  LoadPlayerCityResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (LoadPlayerCityResponseProto_Builder*) mergeFrom:(LoadPlayerCityResponseProto*) other {
  if (other == [LoadPlayerCityResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasCityOwner) {
    [self mergeCityOwner:other.cityOwner];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.mutableOwnerNormStructsList.count > 0) {
    if (result.mutableOwnerNormStructsList == nil) {
      result.mutableOwnerNormStructsList = [[NSMutableArray alloc] initWithArray:other.mutableOwnerNormStructsList];
    } else {
      [result.mutableOwnerNormStructsList addObjectsFromArray:other.mutableOwnerNormStructsList];
    }
  }
  if (other.mutableUserCityExpansionDataProtoListList.count > 0) {
    if (result.mutableUserCityExpansionDataProtoListList == nil) {
      result.mutableUserCityExpansionDataProtoListList = [[NSMutableArray alloc] initWithArray:other.mutableUserCityExpansionDataProtoListList];
    } else {
      [result.mutableUserCityExpansionDataProtoListList addObjectsFromArray:other.mutableUserCityExpansionDataProtoListList];
    }
  }
  if (other.mutableObstaclesList.count > 0) {
    if (result.mutableObstaclesList == nil) {
      result.mutableObstaclesList = [[NSMutableArray alloc] initWithArray:other.mutableObstaclesList];
    } else {
      [result.mutableObstaclesList addObjectsFromArray:other.mutableObstaclesList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoadPlayerCityResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoadPlayerCityResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasCityOwner) {
          [subBuilder mergeFrom:self.cityOwner];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCityOwner:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        LoadPlayerCityResponseProto_LoadPlayerCityStatus value = (LoadPlayerCityResponseProto_LoadPlayerCityStatus)[input readEnum];
        if (LoadPlayerCityResponseProto_LoadPlayerCityStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 34: {
        FullUserStructureProto_Builder* subBuilder = [FullUserStructureProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addOwnerNormStructs:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        UserCityExpansionDataProto_Builder* subBuilder = [UserCityExpansionDataProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserCityExpansionDataProtoList:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        UserObstacleProto_Builder* subBuilder = [UserObstacleProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addObstacles:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (LoadPlayerCityResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (LoadPlayerCityResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (LoadPlayerCityResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (LoadPlayerCityResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasCityOwner {
  return result.hasCityOwner;
}
- (MinimumUserProto*) cityOwner {
  return result.cityOwner;
}
- (LoadPlayerCityResponseProto_Builder*) setCityOwner:(MinimumUserProto*) value {
  result.hasCityOwner = YES;
  result.cityOwner = value;
  return self;
}
- (LoadPlayerCityResponseProto_Builder*) setCityOwner_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setCityOwner:[builderForValue build]];
}
- (LoadPlayerCityResponseProto_Builder*) mergeCityOwner:(MinimumUserProto*) value {
  if (result.hasCityOwner &&
      result.cityOwner != [MinimumUserProto defaultInstance]) {
    result.cityOwner =
      [[[MinimumUserProto builderWithPrototype:result.cityOwner] mergeFrom:value] buildPartial];
  } else {
    result.cityOwner = value;
  }
  result.hasCityOwner = YES;
  return self;
}
- (LoadPlayerCityResponseProto_Builder*) clearCityOwner {
  result.hasCityOwner = NO;
  result.cityOwner = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (LoadPlayerCityResponseProto_LoadPlayerCityStatus) status {
  return result.status;
}
- (LoadPlayerCityResponseProto_Builder*) setStatus:(LoadPlayerCityResponseProto_LoadPlayerCityStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (LoadPlayerCityResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = LoadPlayerCityResponseProto_LoadPlayerCityStatusSuccess;
  return self;
}
- (NSMutableArray *)ownerNormStructsList {
  return result.mutableOwnerNormStructsList;
}
- (FullUserStructureProto*)ownerNormStructsAtIndex:(NSUInteger)index {
  return [result ownerNormStructsAtIndex:index];
}
- (LoadPlayerCityResponseProto_Builder *)addOwnerNormStructs:(FullUserStructureProto*)value {
  if (result.mutableOwnerNormStructsList == nil) {
    result.mutableOwnerNormStructsList = [[NSMutableArray alloc]init];
  }
  [result.mutableOwnerNormStructsList addObject:value];
  return self;
}
- (LoadPlayerCityResponseProto_Builder *)addAllOwnerNormStructs:(NSArray *)array {
  if (result.mutableOwnerNormStructsList == nil) {
    result.mutableOwnerNormStructsList = [NSMutableArray array];
  }
  [result.mutableOwnerNormStructsList addObjectsFromArray:array];
  return self;
}
- (LoadPlayerCityResponseProto_Builder *)clearOwnerNormStructs {
  result.mutableOwnerNormStructsList = nil;
  return self;
}
- (NSMutableArray *)userCityExpansionDataProtoListList {
  return result.mutableUserCityExpansionDataProtoListList;
}
- (UserCityExpansionDataProto*)userCityExpansionDataProtoListAtIndex:(NSUInteger)index {
  return [result userCityExpansionDataProtoListAtIndex:index];
}
- (LoadPlayerCityResponseProto_Builder *)addUserCityExpansionDataProtoList:(UserCityExpansionDataProto*)value {
  if (result.mutableUserCityExpansionDataProtoListList == nil) {
    result.mutableUserCityExpansionDataProtoListList = [[NSMutableArray alloc]init];
  }
  [result.mutableUserCityExpansionDataProtoListList addObject:value];
  return self;
}
- (LoadPlayerCityResponseProto_Builder *)addAllUserCityExpansionDataProtoList:(NSArray *)array {
  if (result.mutableUserCityExpansionDataProtoListList == nil) {
    result.mutableUserCityExpansionDataProtoListList = [NSMutableArray array];
  }
  [result.mutableUserCityExpansionDataProtoListList addObjectsFromArray:array];
  return self;
}
- (LoadPlayerCityResponseProto_Builder *)clearUserCityExpansionDataProtoList {
  result.mutableUserCityExpansionDataProtoListList = nil;
  return self;
}
- (NSMutableArray *)obstaclesList {
  return result.mutableObstaclesList;
}
- (UserObstacleProto*)obstaclesAtIndex:(NSUInteger)index {
  return [result obstaclesAtIndex:index];
}
- (LoadPlayerCityResponseProto_Builder *)addObstacles:(UserObstacleProto*)value {
  if (result.mutableObstaclesList == nil) {
    result.mutableObstaclesList = [[NSMutableArray alloc]init];
  }
  [result.mutableObstaclesList addObject:value];
  return self;
}
- (LoadPlayerCityResponseProto_Builder *)addAllObstacles:(NSArray *)array {
  if (result.mutableObstaclesList == nil) {
    result.mutableObstaclesList = [NSMutableArray array];
  }
  [result.mutableObstaclesList addObjectsFromArray:array];
  return self;
}
- (LoadPlayerCityResponseProto_Builder *)clearObstacles {
  result.mutableObstaclesList = nil;
  return self;
}
@end

@interface PurchaseCityExpansionRequestProto ()
@property (strong) MinimumUserProto* sender;
@property int32_t xPosition;
@property int32_t yPosition;
@property int64_t timeOfPurchase;
@end

@implementation PurchaseCityExpansionRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasXPosition {
  return !!hasXPosition_;
}
- (void) setHasXPosition:(BOOL) value_ {
  hasXPosition_ = !!value_;
}
@synthesize xPosition;
- (BOOL) hasYPosition {
  return !!hasYPosition_;
}
- (void) setHasYPosition:(BOOL) value_ {
  hasYPosition_ = !!value_;
}
@synthesize yPosition;
- (BOOL) hasTimeOfPurchase {
  return !!hasTimeOfPurchase_;
}
- (void) setHasTimeOfPurchase:(BOOL) value_ {
  hasTimeOfPurchase_ = !!value_;
}
@synthesize timeOfPurchase;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.xPosition = 0;
    self.yPosition = 0;
    self.timeOfPurchase = 0L;
  }
  return self;
}
static PurchaseCityExpansionRequestProto* defaultPurchaseCityExpansionRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [PurchaseCityExpansionRequestProto class]) {
    defaultPurchaseCityExpansionRequestProtoInstance = [[PurchaseCityExpansionRequestProto alloc] init];
  }
}
+ (PurchaseCityExpansionRequestProto*) defaultInstance {
  return defaultPurchaseCityExpansionRequestProtoInstance;
}
- (PurchaseCityExpansionRequestProto*) defaultInstance {
  return defaultPurchaseCityExpansionRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasXPosition) {
    [output writeSInt32:2 value:self.xPosition];
  }
  if (self.hasYPosition) {
    [output writeSInt32:3 value:self.yPosition];
  }
  if (self.hasTimeOfPurchase) {
    [output writeInt64:4 value:self.timeOfPurchase];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasXPosition) {
    size_ += computeSInt32Size(2, self.xPosition);
  }
  if (self.hasYPosition) {
    size_ += computeSInt32Size(3, self.yPosition);
  }
  if (self.hasTimeOfPurchase) {
    size_ += computeInt64Size(4, self.timeOfPurchase);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PurchaseCityExpansionRequestProto*) parseFromData:(NSData*) data {
  return (PurchaseCityExpansionRequestProto*)[[[PurchaseCityExpansionRequestProto builder] mergeFromData:data] build];
}
+ (PurchaseCityExpansionRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PurchaseCityExpansionRequestProto*)[[[PurchaseCityExpansionRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PurchaseCityExpansionRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (PurchaseCityExpansionRequestProto*)[[[PurchaseCityExpansionRequestProto builder] mergeFromInputStream:input] build];
}
+ (PurchaseCityExpansionRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PurchaseCityExpansionRequestProto*)[[[PurchaseCityExpansionRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PurchaseCityExpansionRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PurchaseCityExpansionRequestProto*)[[[PurchaseCityExpansionRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (PurchaseCityExpansionRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PurchaseCityExpansionRequestProto*)[[[PurchaseCityExpansionRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PurchaseCityExpansionRequestProto_Builder*) builder {
  return [[PurchaseCityExpansionRequestProto_Builder alloc] init];
}
+ (PurchaseCityExpansionRequestProto_Builder*) builderWithPrototype:(PurchaseCityExpansionRequestProto*) prototype {
  return [[PurchaseCityExpansionRequestProto builder] mergeFrom:prototype];
}
- (PurchaseCityExpansionRequestProto_Builder*) builder {
  return [PurchaseCityExpansionRequestProto builder];
}
- (PurchaseCityExpansionRequestProto_Builder*) toBuilder {
  return [PurchaseCityExpansionRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasXPosition) {
    [output appendFormat:@"%@%@: %@\n", indent, @"xPosition", [NSNumber numberWithInteger:self.xPosition]];
  }
  if (self.hasYPosition) {
    [output appendFormat:@"%@%@: %@\n", indent, @"yPosition", [NSNumber numberWithInteger:self.yPosition]];
  }
  if (self.hasTimeOfPurchase) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timeOfPurchase", [NSNumber numberWithLongLong:self.timeOfPurchase]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PurchaseCityExpansionRequestProto class]]) {
    return NO;
  }
  PurchaseCityExpansionRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasXPosition == otherMessage.hasXPosition &&
      (!self.hasXPosition || self.xPosition == otherMessage.xPosition) &&
      self.hasYPosition == otherMessage.hasYPosition &&
      (!self.hasYPosition || self.yPosition == otherMessage.yPosition) &&
      self.hasTimeOfPurchase == otherMessage.hasTimeOfPurchase &&
      (!self.hasTimeOfPurchase || self.timeOfPurchase == otherMessage.timeOfPurchase) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasXPosition) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.xPosition] hash];
  }
  if (self.hasYPosition) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.yPosition] hash];
  }
  if (self.hasTimeOfPurchase) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.timeOfPurchase] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PurchaseCityExpansionRequestProto_Builder()
@property (strong) PurchaseCityExpansionRequestProto* result;
@end

@implementation PurchaseCityExpansionRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PurchaseCityExpansionRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PurchaseCityExpansionRequestProto_Builder*) clear {
  self.result = [[PurchaseCityExpansionRequestProto alloc] init];
  return self;
}
- (PurchaseCityExpansionRequestProto_Builder*) clone {
  return [PurchaseCityExpansionRequestProto builderWithPrototype:result];
}
- (PurchaseCityExpansionRequestProto*) defaultInstance {
  return [PurchaseCityExpansionRequestProto defaultInstance];
}
- (PurchaseCityExpansionRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PurchaseCityExpansionRequestProto*) buildPartial {
  PurchaseCityExpansionRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PurchaseCityExpansionRequestProto_Builder*) mergeFrom:(PurchaseCityExpansionRequestProto*) other {
  if (other == [PurchaseCityExpansionRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasXPosition) {
    [self setXPosition:other.xPosition];
  }
  if (other.hasYPosition) {
    [self setYPosition:other.yPosition];
  }
  if (other.hasTimeOfPurchase) {
    [self setTimeOfPurchase:other.timeOfPurchase];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PurchaseCityExpansionRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PurchaseCityExpansionRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setXPosition:[input readSInt32]];
        break;
      }
      case 24: {
        [self setYPosition:[input readSInt32]];
        break;
      }
      case 32: {
        [self setTimeOfPurchase:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (PurchaseCityExpansionRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (PurchaseCityExpansionRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (PurchaseCityExpansionRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (PurchaseCityExpansionRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasXPosition {
  return result.hasXPosition;
}
- (int32_t) xPosition {
  return result.xPosition;
}
- (PurchaseCityExpansionRequestProto_Builder*) setXPosition:(int32_t) value {
  result.hasXPosition = YES;
  result.xPosition = value;
  return self;
}
- (PurchaseCityExpansionRequestProto_Builder*) clearXPosition {
  result.hasXPosition = NO;
  result.xPosition = 0;
  return self;
}
- (BOOL) hasYPosition {
  return result.hasYPosition;
}
- (int32_t) yPosition {
  return result.yPosition;
}
- (PurchaseCityExpansionRequestProto_Builder*) setYPosition:(int32_t) value {
  result.hasYPosition = YES;
  result.yPosition = value;
  return self;
}
- (PurchaseCityExpansionRequestProto_Builder*) clearYPosition {
  result.hasYPosition = NO;
  result.yPosition = 0;
  return self;
}
- (BOOL) hasTimeOfPurchase {
  return result.hasTimeOfPurchase;
}
- (int64_t) timeOfPurchase {
  return result.timeOfPurchase;
}
- (PurchaseCityExpansionRequestProto_Builder*) setTimeOfPurchase:(int64_t) value {
  result.hasTimeOfPurchase = YES;
  result.timeOfPurchase = value;
  return self;
}
- (PurchaseCityExpansionRequestProto_Builder*) clearTimeOfPurchase {
  result.hasTimeOfPurchase = NO;
  result.timeOfPurchase = 0L;
  return self;
}
@end

@interface PurchaseCityExpansionResponseProto ()
@property (strong) MinimumUserProto* sender;
@property PurchaseCityExpansionResponseProto_PurchaseCityExpansionStatus status;
@property (strong) UserCityExpansionDataProto* ucedp;
@end

@implementation PurchaseCityExpansionResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasUcedp {
  return !!hasUcedp_;
}
- (void) setHasUcedp:(BOOL) value_ {
  hasUcedp_ = !!value_;
}
@synthesize ucedp;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = PurchaseCityExpansionResponseProto_PurchaseCityExpansionStatusSuccess;
    self.ucedp = [UserCityExpansionDataProto defaultInstance];
  }
  return self;
}
static PurchaseCityExpansionResponseProto* defaultPurchaseCityExpansionResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [PurchaseCityExpansionResponseProto class]) {
    defaultPurchaseCityExpansionResponseProtoInstance = [[PurchaseCityExpansionResponseProto alloc] init];
  }
}
+ (PurchaseCityExpansionResponseProto*) defaultInstance {
  return defaultPurchaseCityExpansionResponseProtoInstance;
}
- (PurchaseCityExpansionResponseProto*) defaultInstance {
  return defaultPurchaseCityExpansionResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasUcedp) {
    [output writeMessage:3 value:self.ucedp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  if (self.hasUcedp) {
    size_ += computeMessageSize(3, self.ucedp);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PurchaseCityExpansionResponseProto*) parseFromData:(NSData*) data {
  return (PurchaseCityExpansionResponseProto*)[[[PurchaseCityExpansionResponseProto builder] mergeFromData:data] build];
}
+ (PurchaseCityExpansionResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PurchaseCityExpansionResponseProto*)[[[PurchaseCityExpansionResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PurchaseCityExpansionResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (PurchaseCityExpansionResponseProto*)[[[PurchaseCityExpansionResponseProto builder] mergeFromInputStream:input] build];
}
+ (PurchaseCityExpansionResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PurchaseCityExpansionResponseProto*)[[[PurchaseCityExpansionResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PurchaseCityExpansionResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PurchaseCityExpansionResponseProto*)[[[PurchaseCityExpansionResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (PurchaseCityExpansionResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PurchaseCityExpansionResponseProto*)[[[PurchaseCityExpansionResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PurchaseCityExpansionResponseProto_Builder*) builder {
  return [[PurchaseCityExpansionResponseProto_Builder alloc] init];
}
+ (PurchaseCityExpansionResponseProto_Builder*) builderWithPrototype:(PurchaseCityExpansionResponseProto*) prototype {
  return [[PurchaseCityExpansionResponseProto builder] mergeFrom:prototype];
}
- (PurchaseCityExpansionResponseProto_Builder*) builder {
  return [PurchaseCityExpansionResponseProto builder];
}
- (PurchaseCityExpansionResponseProto_Builder*) toBuilder {
  return [PurchaseCityExpansionResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %d\n", indent, @"status", self.status];
  }
  if (self.hasUcedp) {
    [output appendFormat:@"%@%@ {\n", indent, @"ucedp"];
    [self.ucedp writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PurchaseCityExpansionResponseProto class]]) {
    return NO;
  }
  PurchaseCityExpansionResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasUcedp == otherMessage.hasUcedp &&
      (!self.hasUcedp || [self.ucedp isEqual:otherMessage.ucedp]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasUcedp) {
    hashCode = hashCode * 31 + [self.ucedp hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL PurchaseCityExpansionResponseProto_PurchaseCityExpansionStatusIsValidValue(PurchaseCityExpansionResponseProto_PurchaseCityExpansionStatus value) {
  switch (value) {
    case PurchaseCityExpansionResponseProto_PurchaseCityExpansionStatusSuccess:
    case PurchaseCityExpansionResponseProto_PurchaseCityExpansionStatusNotEnoughCoins:
    case PurchaseCityExpansionResponseProto_PurchaseCityExpansionStatusAlreadyExpanding:
    case PurchaseCityExpansionResponseProto_PurchaseCityExpansionStatusOtherFail:
    case PurchaseCityExpansionResponseProto_PurchaseCityExpansionStatusClientTooApartFromServerTime:
      return YES;
    default:
      return NO;
  }
}
@interface PurchaseCityExpansionResponseProto_Builder()
@property (strong) PurchaseCityExpansionResponseProto* result;
@end

@implementation PurchaseCityExpansionResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PurchaseCityExpansionResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PurchaseCityExpansionResponseProto_Builder*) clear {
  self.result = [[PurchaseCityExpansionResponseProto alloc] init];
  return self;
}
- (PurchaseCityExpansionResponseProto_Builder*) clone {
  return [PurchaseCityExpansionResponseProto builderWithPrototype:result];
}
- (PurchaseCityExpansionResponseProto*) defaultInstance {
  return [PurchaseCityExpansionResponseProto defaultInstance];
}
- (PurchaseCityExpansionResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PurchaseCityExpansionResponseProto*) buildPartial {
  PurchaseCityExpansionResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PurchaseCityExpansionResponseProto_Builder*) mergeFrom:(PurchaseCityExpansionResponseProto*) other {
  if (other == [PurchaseCityExpansionResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasUcedp) {
    [self mergeUcedp:other.ucedp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PurchaseCityExpansionResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PurchaseCityExpansionResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        PurchaseCityExpansionResponseProto_PurchaseCityExpansionStatus value = (PurchaseCityExpansionResponseProto_PurchaseCityExpansionStatus)[input readEnum];
        if (PurchaseCityExpansionResponseProto_PurchaseCityExpansionStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        UserCityExpansionDataProto_Builder* subBuilder = [UserCityExpansionDataProto builder];
        if (self.hasUcedp) {
          [subBuilder mergeFrom:self.ucedp];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUcedp:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (PurchaseCityExpansionResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (PurchaseCityExpansionResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (PurchaseCityExpansionResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (PurchaseCityExpansionResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (PurchaseCityExpansionResponseProto_PurchaseCityExpansionStatus) status {
  return result.status;
}
- (PurchaseCityExpansionResponseProto_Builder*) setStatus:(PurchaseCityExpansionResponseProto_PurchaseCityExpansionStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PurchaseCityExpansionResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = PurchaseCityExpansionResponseProto_PurchaseCityExpansionStatusSuccess;
  return self;
}
- (BOOL) hasUcedp {
  return result.hasUcedp;
}
- (UserCityExpansionDataProto*) ucedp {
  return result.ucedp;
}
- (PurchaseCityExpansionResponseProto_Builder*) setUcedp:(UserCityExpansionDataProto*) value {
  result.hasUcedp = YES;
  result.ucedp = value;
  return self;
}
- (PurchaseCityExpansionResponseProto_Builder*) setUcedp_Builder:(UserCityExpansionDataProto_Builder*) builderForValue {
  return [self setUcedp:[builderForValue build]];
}
- (PurchaseCityExpansionResponseProto_Builder*) mergeUcedp:(UserCityExpansionDataProto*) value {
  if (result.hasUcedp &&
      result.ucedp != [UserCityExpansionDataProto defaultInstance]) {
    result.ucedp =
      [[[UserCityExpansionDataProto builderWithPrototype:result.ucedp] mergeFrom:value] buildPartial];
  } else {
    result.ucedp = value;
  }
  result.hasUcedp = YES;
  return self;
}
- (PurchaseCityExpansionResponseProto_Builder*) clearUcedp {
  result.hasUcedp = NO;
  result.ucedp = [UserCityExpansionDataProto defaultInstance];
  return self;
}
@end

@interface LoadCityRequestProto ()
@property (strong) MinimumUserProto* sender;
@property int32_t cityId;
@end

@implementation LoadCityRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value_ {
  hasCityId_ = !!value_;
}
@synthesize cityId;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.cityId = 0;
  }
  return self;
}
static LoadCityRequestProto* defaultLoadCityRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [LoadCityRequestProto class]) {
    defaultLoadCityRequestProtoInstance = [[LoadCityRequestProto alloc] init];
  }
}
+ (LoadCityRequestProto*) defaultInstance {
  return defaultLoadCityRequestProtoInstance;
}
- (LoadCityRequestProto*) defaultInstance {
  return defaultLoadCityRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasCityId) {
    [output writeInt32:2 value:self.cityId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasCityId) {
    size_ += computeInt32Size(2, self.cityId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LoadCityRequestProto*) parseFromData:(NSData*) data {
  return (LoadCityRequestProto*)[[[LoadCityRequestProto builder] mergeFromData:data] build];
}
+ (LoadCityRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoadCityRequestProto*)[[[LoadCityRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoadCityRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (LoadCityRequestProto*)[[[LoadCityRequestProto builder] mergeFromInputStream:input] build];
}
+ (LoadCityRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoadCityRequestProto*)[[[LoadCityRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoadCityRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoadCityRequestProto*)[[[LoadCityRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (LoadCityRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoadCityRequestProto*)[[[LoadCityRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoadCityRequestProto_Builder*) builder {
  return [[LoadCityRequestProto_Builder alloc] init];
}
+ (LoadCityRequestProto_Builder*) builderWithPrototype:(LoadCityRequestProto*) prototype {
  return [[LoadCityRequestProto builder] mergeFrom:prototype];
}
- (LoadCityRequestProto_Builder*) builder {
  return [LoadCityRequestProto builder];
}
- (LoadCityRequestProto_Builder*) toBuilder {
  return [LoadCityRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasCityId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cityId", [NSNumber numberWithInteger:self.cityId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LoadCityRequestProto class]]) {
    return NO;
  }
  LoadCityRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasCityId == otherMessage.hasCityId &&
      (!self.hasCityId || self.cityId == otherMessage.cityId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasCityId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cityId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface LoadCityRequestProto_Builder()
@property (strong) LoadCityRequestProto* result;
@end

@implementation LoadCityRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[LoadCityRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LoadCityRequestProto_Builder*) clear {
  self.result = [[LoadCityRequestProto alloc] init];
  return self;
}
- (LoadCityRequestProto_Builder*) clone {
  return [LoadCityRequestProto builderWithPrototype:result];
}
- (LoadCityRequestProto*) defaultInstance {
  return [LoadCityRequestProto defaultInstance];
}
- (LoadCityRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoadCityRequestProto*) buildPartial {
  LoadCityRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (LoadCityRequestProto_Builder*) mergeFrom:(LoadCityRequestProto*) other {
  if (other == [LoadCityRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoadCityRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoadCityRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setCityId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (LoadCityRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (LoadCityRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (LoadCityRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (LoadCityRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (LoadCityRequestProto_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (LoadCityRequestProto_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
@end

@interface LoadCityResponseProto ()
@property (strong) MinimumUserProto* sender;
@property LoadCityResponseProto_LoadCityStatus status;
@property (strong) NSMutableArray * mutableCityElementsList;
@property int32_t cityId;
@end

@implementation LoadCityResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
@synthesize mutableCityElementsList;
@dynamic cityElementsList;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value_ {
  hasCityId_ = !!value_;
}
@synthesize cityId;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = LoadCityResponseProto_LoadCityStatusSuccess;
    self.cityId = 0;
  }
  return self;
}
static LoadCityResponseProto* defaultLoadCityResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [LoadCityResponseProto class]) {
    defaultLoadCityResponseProtoInstance = [[LoadCityResponseProto alloc] init];
  }
}
+ (LoadCityResponseProto*) defaultInstance {
  return defaultLoadCityResponseProtoInstance;
}
- (LoadCityResponseProto*) defaultInstance {
  return defaultLoadCityResponseProtoInstance;
}
- (NSArray *)cityElementsList {
  return mutableCityElementsList;
}
- (CityElementProto*)cityElementsAtIndex:(NSUInteger)index {
  return [mutableCityElementsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.cityElementsList enumerateObjectsUsingBlock:^(CityElementProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  if (self.hasCityId) {
    [output writeInt32:4 value:self.cityId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  [self.cityElementsList enumerateObjectsUsingBlock:^(CityElementProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  if (self.hasCityId) {
    size_ += computeInt32Size(4, self.cityId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LoadCityResponseProto*) parseFromData:(NSData*) data {
  return (LoadCityResponseProto*)[[[LoadCityResponseProto builder] mergeFromData:data] build];
}
+ (LoadCityResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoadCityResponseProto*)[[[LoadCityResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoadCityResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (LoadCityResponseProto*)[[[LoadCityResponseProto builder] mergeFromInputStream:input] build];
}
+ (LoadCityResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoadCityResponseProto*)[[[LoadCityResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoadCityResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoadCityResponseProto*)[[[LoadCityResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (LoadCityResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoadCityResponseProto*)[[[LoadCityResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoadCityResponseProto_Builder*) builder {
  return [[LoadCityResponseProto_Builder alloc] init];
}
+ (LoadCityResponseProto_Builder*) builderWithPrototype:(LoadCityResponseProto*) prototype {
  return [[LoadCityResponseProto builder] mergeFrom:prototype];
}
- (LoadCityResponseProto_Builder*) builder {
  return [LoadCityResponseProto builder];
}
- (LoadCityResponseProto_Builder*) toBuilder {
  return [LoadCityResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %d\n", indent, @"status", self.status];
  }
  [self.cityElementsList enumerateObjectsUsingBlock:^(CityElementProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"cityElements"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasCityId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cityId", [NSNumber numberWithInteger:self.cityId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LoadCityResponseProto class]]) {
    return NO;
  }
  LoadCityResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      [self.cityElementsList isEqualToArray:otherMessage.cityElementsList] &&
      self.hasCityId == otherMessage.hasCityId &&
      (!self.hasCityId || self.cityId == otherMessage.cityId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  [self.cityElementsList enumerateObjectsUsingBlock:^(CityElementProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasCityId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cityId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL LoadCityResponseProto_LoadCityStatusIsValidValue(LoadCityResponseProto_LoadCityStatus value) {
  switch (value) {
    case LoadCityResponseProto_LoadCityStatusSuccess:
    case LoadCityResponseProto_LoadCityStatusNotAccessibleToUser:
    case LoadCityResponseProto_LoadCityStatusOtherFail:
      return YES;
    default:
      return NO;
  }
}
@interface LoadCityResponseProto_Builder()
@property (strong) LoadCityResponseProto* result;
@end

@implementation LoadCityResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[LoadCityResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LoadCityResponseProto_Builder*) clear {
  self.result = [[LoadCityResponseProto alloc] init];
  return self;
}
- (LoadCityResponseProto_Builder*) clone {
  return [LoadCityResponseProto builderWithPrototype:result];
}
- (LoadCityResponseProto*) defaultInstance {
  return [LoadCityResponseProto defaultInstance];
}
- (LoadCityResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoadCityResponseProto*) buildPartial {
  LoadCityResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (LoadCityResponseProto_Builder*) mergeFrom:(LoadCityResponseProto*) other {
  if (other == [LoadCityResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.mutableCityElementsList.count > 0) {
    if (result.mutableCityElementsList == nil) {
      result.mutableCityElementsList = [[NSMutableArray alloc] initWithArray:other.mutableCityElementsList];
    } else {
      [result.mutableCityElementsList addObjectsFromArray:other.mutableCityElementsList];
    }
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoadCityResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoadCityResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        LoadCityResponseProto_LoadCityStatus value = (LoadCityResponseProto_LoadCityStatus)[input readEnum];
        if (LoadCityResponseProto_LoadCityStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        CityElementProto_Builder* subBuilder = [CityElementProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCityElements:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setCityId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (LoadCityResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (LoadCityResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (LoadCityResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (LoadCityResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (LoadCityResponseProto_LoadCityStatus) status {
  return result.status;
}
- (LoadCityResponseProto_Builder*) setStatus:(LoadCityResponseProto_LoadCityStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (LoadCityResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = LoadCityResponseProto_LoadCityStatusSuccess;
  return self;
}
- (NSMutableArray *)cityElementsList {
  return result.mutableCityElementsList;
}
- (CityElementProto*)cityElementsAtIndex:(NSUInteger)index {
  return [result cityElementsAtIndex:index];
}
- (LoadCityResponseProto_Builder *)addCityElements:(CityElementProto*)value {
  if (result.mutableCityElementsList == nil) {
    result.mutableCityElementsList = [[NSMutableArray alloc]init];
  }
  [result.mutableCityElementsList addObject:value];
  return self;
}
- (LoadCityResponseProto_Builder *)addAllCityElements:(NSArray *)array {
  if (result.mutableCityElementsList == nil) {
    result.mutableCityElementsList = [NSMutableArray array];
  }
  [result.mutableCityElementsList addObjectsFromArray:array];
  return self;
}
- (LoadCityResponseProto_Builder *)clearCityElements {
  result.mutableCityElementsList = nil;
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (LoadCityResponseProto_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (LoadCityResponseProto_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
