// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventMonster.pb.h"

@implementation EventMonsterRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventMonsterRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [MonsterStuffRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface SubmitMonsterEnhancementRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int64_t enhancingUserMonsterId;
@property (retain) NSMutableArray* mutableFeederUserMonsterIdsList;
@property int64_t clientTime;
@end

@implementation SubmitMonsterEnhancementRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasEnhancingUserMonsterId {
  return !!hasEnhancingUserMonsterId_;
}
- (void) setHasEnhancingUserMonsterId:(BOOL) value {
  hasEnhancingUserMonsterId_ = !!value;
}
@synthesize enhancingUserMonsterId;
@synthesize mutableFeederUserMonsterIdsList;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value {
  hasClientTime_ = !!value;
}
@synthesize clientTime;
- (void) dealloc {
  self.sender = nil;
  self.mutableFeederUserMonsterIdsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.enhancingUserMonsterId = 0L;
    self.clientTime = 0L;
  }
  return self;
}
static SubmitMonsterEnhancementRequestProto* defaultSubmitMonsterEnhancementRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [SubmitMonsterEnhancementRequestProto class]) {
    defaultSubmitMonsterEnhancementRequestProtoInstance = [[SubmitMonsterEnhancementRequestProto alloc] init];
  }
}
+ (SubmitMonsterEnhancementRequestProto*) defaultInstance {
  return defaultSubmitMonsterEnhancementRequestProtoInstance;
}
- (SubmitMonsterEnhancementRequestProto*) defaultInstance {
  return defaultSubmitMonsterEnhancementRequestProtoInstance;
}
- (NSArray*) feederUserMonsterIdsList {
  return mutableFeederUserMonsterIdsList;
}
- (int64_t) feederUserMonsterIdsAtIndex:(int32_t) index {
  id value = [mutableFeederUserMonsterIdsList objectAtIndex:index];
  return [value longLongValue];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasEnhancingUserMonsterId) {
    [output writeInt64:2 value:self.enhancingUserMonsterId];
  }
  for (NSNumber* value in self.mutableFeederUserMonsterIdsList) {
    [output writeInt64:3 value:[value longLongValue]];
  }
  if (self.hasClientTime) {
    [output writeInt64:4 value:self.clientTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasEnhancingUserMonsterId) {
    size += computeInt64Size(2, self.enhancingUserMonsterId);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableFeederUserMonsterIdsList) {
      dataSize += computeInt64SizeNoTag([value longLongValue]);
    }
    size += dataSize;
    size += 1 * self.mutableFeederUserMonsterIdsList.count;
  }
  if (self.hasClientTime) {
    size += computeInt64Size(4, self.clientTime);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SubmitMonsterEnhancementRequestProto*) parseFromData:(NSData*) data {
  return (SubmitMonsterEnhancementRequestProto*)[[[SubmitMonsterEnhancementRequestProto builder] mergeFromData:data] build];
}
+ (SubmitMonsterEnhancementRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SubmitMonsterEnhancementRequestProto*)[[[SubmitMonsterEnhancementRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SubmitMonsterEnhancementRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (SubmitMonsterEnhancementRequestProto*)[[[SubmitMonsterEnhancementRequestProto builder] mergeFromInputStream:input] build];
}
+ (SubmitMonsterEnhancementRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SubmitMonsterEnhancementRequestProto*)[[[SubmitMonsterEnhancementRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SubmitMonsterEnhancementRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SubmitMonsterEnhancementRequestProto*)[[[SubmitMonsterEnhancementRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (SubmitMonsterEnhancementRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SubmitMonsterEnhancementRequestProto*)[[[SubmitMonsterEnhancementRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SubmitMonsterEnhancementRequestProto_Builder*) builder {
  return [[[SubmitMonsterEnhancementRequestProto_Builder alloc] init] autorelease];
}
+ (SubmitMonsterEnhancementRequestProto_Builder*) builderWithPrototype:(SubmitMonsterEnhancementRequestProto*) prototype {
  return [[SubmitMonsterEnhancementRequestProto builder] mergeFrom:prototype];
}
- (SubmitMonsterEnhancementRequestProto_Builder*) builder {
  return [SubmitMonsterEnhancementRequestProto builder];
}
@end

@interface SubmitMonsterEnhancementRequestProto_Builder()
@property (retain) SubmitMonsterEnhancementRequestProto* result;
@end

@implementation SubmitMonsterEnhancementRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SubmitMonsterEnhancementRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) clear {
  self.result = [[[SubmitMonsterEnhancementRequestProto alloc] init] autorelease];
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) clone {
  return [SubmitMonsterEnhancementRequestProto builderWithPrototype:result];
}
- (SubmitMonsterEnhancementRequestProto*) defaultInstance {
  return [SubmitMonsterEnhancementRequestProto defaultInstance];
}
- (SubmitMonsterEnhancementRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SubmitMonsterEnhancementRequestProto*) buildPartial {
  SubmitMonsterEnhancementRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) mergeFrom:(SubmitMonsterEnhancementRequestProto*) other {
  if (other == [SubmitMonsterEnhancementRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasEnhancingUserMonsterId) {
    [self setEnhancingUserMonsterId:other.enhancingUserMonsterId];
  }
  if (other.mutableFeederUserMonsterIdsList.count > 0) {
    if (result.mutableFeederUserMonsterIdsList == nil) {
      result.mutableFeederUserMonsterIdsList = [NSMutableArray array];
    }
    [result.mutableFeederUserMonsterIdsList addObjectsFromArray:other.mutableFeederUserMonsterIdsList];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SubmitMonsterEnhancementRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setEnhancingUserMonsterId:[input readInt64]];
        break;
      }
      case 24: {
        [self addFeederUserMonsterIds:[input readInt64]];
        break;
      }
      case 32: {
        [self setClientTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SubmitMonsterEnhancementRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasEnhancingUserMonsterId {
  return result.hasEnhancingUserMonsterId;
}
- (int64_t) enhancingUserMonsterId {
  return result.enhancingUserMonsterId;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) setEnhancingUserMonsterId:(int64_t) value {
  result.hasEnhancingUserMonsterId = YES;
  result.enhancingUserMonsterId = value;
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) clearEnhancingUserMonsterId {
  result.hasEnhancingUserMonsterId = NO;
  result.enhancingUserMonsterId = 0L;
  return self;
}
- (NSArray*) feederUserMonsterIdsList {
  if (result.mutableFeederUserMonsterIdsList == nil) {
    return [NSArray array];
  }
  return result.mutableFeederUserMonsterIdsList;
}
- (int64_t) feederUserMonsterIdsAtIndex:(int32_t) index {
  return [result feederUserMonsterIdsAtIndex:index];
}
- (SubmitMonsterEnhancementRequestProto_Builder*) replaceFeederUserMonsterIdsAtIndex:(int32_t) index with:(int64_t) value {
  [result.mutableFeederUserMonsterIdsList replaceObjectAtIndex:index withObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) addFeederUserMonsterIds:(int64_t) value {
  if (result.mutableFeederUserMonsterIdsList == nil) {
    result.mutableFeederUserMonsterIdsList = [NSMutableArray array];
  }
  [result.mutableFeederUserMonsterIdsList addObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) addAllFeederUserMonsterIds:(NSArray*) values {
  if (result.mutableFeederUserMonsterIdsList == nil) {
    result.mutableFeederUserMonsterIdsList = [NSMutableArray array];
  }
  [result.mutableFeederUserMonsterIdsList addObjectsFromArray:values];
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) clearFeederUserMonsterIdsList {
  result.mutableFeederUserMonsterIdsList = nil;
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
@end

@interface SubmitMonsterEnhancementResponseProto ()
@property (retain) MinimumUserProto* sender;
@property SubmitMonsterEnhancementResponseProto_EnhanceMonsterStatus status;
@end

@implementation SubmitMonsterEnhancementResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = SubmitMonsterEnhancementResponseProto_EnhanceMonsterStatusSuccess;
  }
  return self;
}
static SubmitMonsterEnhancementResponseProto* defaultSubmitMonsterEnhancementResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [SubmitMonsterEnhancementResponseProto class]) {
    defaultSubmitMonsterEnhancementResponseProtoInstance = [[SubmitMonsterEnhancementResponseProto alloc] init];
  }
}
+ (SubmitMonsterEnhancementResponseProto*) defaultInstance {
  return defaultSubmitMonsterEnhancementResponseProtoInstance;
}
- (SubmitMonsterEnhancementResponseProto*) defaultInstance {
  return defaultSubmitMonsterEnhancementResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SubmitMonsterEnhancementResponseProto*) parseFromData:(NSData*) data {
  return (SubmitMonsterEnhancementResponseProto*)[[[SubmitMonsterEnhancementResponseProto builder] mergeFromData:data] build];
}
+ (SubmitMonsterEnhancementResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SubmitMonsterEnhancementResponseProto*)[[[SubmitMonsterEnhancementResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SubmitMonsterEnhancementResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (SubmitMonsterEnhancementResponseProto*)[[[SubmitMonsterEnhancementResponseProto builder] mergeFromInputStream:input] build];
}
+ (SubmitMonsterEnhancementResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SubmitMonsterEnhancementResponseProto*)[[[SubmitMonsterEnhancementResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SubmitMonsterEnhancementResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SubmitMonsterEnhancementResponseProto*)[[[SubmitMonsterEnhancementResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (SubmitMonsterEnhancementResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SubmitMonsterEnhancementResponseProto*)[[[SubmitMonsterEnhancementResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SubmitMonsterEnhancementResponseProto_Builder*) builder {
  return [[[SubmitMonsterEnhancementResponseProto_Builder alloc] init] autorelease];
}
+ (SubmitMonsterEnhancementResponseProto_Builder*) builderWithPrototype:(SubmitMonsterEnhancementResponseProto*) prototype {
  return [[SubmitMonsterEnhancementResponseProto builder] mergeFrom:prototype];
}
- (SubmitMonsterEnhancementResponseProto_Builder*) builder {
  return [SubmitMonsterEnhancementResponseProto builder];
}
@end

BOOL SubmitMonsterEnhancementResponseProto_EnhanceMonsterStatusIsValidValue(SubmitMonsterEnhancementResponseProto_EnhanceMonsterStatus value) {
  switch (value) {
    case SubmitMonsterEnhancementResponseProto_EnhanceMonsterStatusSuccess:
    case SubmitMonsterEnhancementResponseProto_EnhanceMonsterStatusOtherFail:
    case SubmitMonsterEnhancementResponseProto_EnhanceMonsterStatusClientTooApartFromServerTime:
    case SubmitMonsterEnhancementResponseProto_EnhanceMonsterStatusMainOrFeederOrEquipsNonexistent:
    case SubmitMonsterEnhancementResponseProto_EnhanceMonsterStatusTryingToSurpassMaxLevel:
    case SubmitMonsterEnhancementResponseProto_EnhanceMonsterStatusNotEnoughSilver:
      return YES;
    default:
      return NO;
  }
}
@interface SubmitMonsterEnhancementResponseProto_Builder()
@property (retain) SubmitMonsterEnhancementResponseProto* result;
@end

@implementation SubmitMonsterEnhancementResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SubmitMonsterEnhancementResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) clear {
  self.result = [[[SubmitMonsterEnhancementResponseProto alloc] init] autorelease];
  return self;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) clone {
  return [SubmitMonsterEnhancementResponseProto builderWithPrototype:result];
}
- (SubmitMonsterEnhancementResponseProto*) defaultInstance {
  return [SubmitMonsterEnhancementResponseProto defaultInstance];
}
- (SubmitMonsterEnhancementResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SubmitMonsterEnhancementResponseProto*) buildPartial {
  SubmitMonsterEnhancementResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) mergeFrom:(SubmitMonsterEnhancementResponseProto*) other {
  if (other == [SubmitMonsterEnhancementResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SubmitMonsterEnhancementResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (SubmitMonsterEnhancementResponseProto_EnhanceMonsterStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SubmitMonsterEnhancementResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (SubmitMonsterEnhancementResponseProto_EnhanceMonsterStatus) status {
  return result.status;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) setStatus:(SubmitMonsterEnhancementResponseProto_EnhanceMonsterStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = SubmitMonsterEnhancementResponseProto_EnhanceMonsterStatusSuccess;
  return self;
}
@end

@interface UpdateMonsterHealthRequestProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) NSMutableArray* mutableFumpsList;
@property int64_t clientTime;
@end

@implementation UpdateMonsterHealthRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableFumpsList;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value {
  hasClientTime_ = !!value;
}
@synthesize clientTime;
- (void) dealloc {
  self.sender = nil;
  self.mutableFumpsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clientTime = 0L;
  }
  return self;
}
static UpdateMonsterHealthRequestProto* defaultUpdateMonsterHealthRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [UpdateMonsterHealthRequestProto class]) {
    defaultUpdateMonsterHealthRequestProtoInstance = [[UpdateMonsterHealthRequestProto alloc] init];
  }
}
+ (UpdateMonsterHealthRequestProto*) defaultInstance {
  return defaultUpdateMonsterHealthRequestProtoInstance;
}
- (UpdateMonsterHealthRequestProto*) defaultInstance {
  return defaultUpdateMonsterHealthRequestProtoInstance;
}
- (NSArray*) fumpsList {
  return mutableFumpsList;
}
- (FullUserMonsterProto*) fumpsAtIndex:(int32_t) index {
  id value = [mutableFumpsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (FullUserMonsterProto* element in self.fumpsList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasClientTime) {
    [output writeInt64:3 value:self.clientTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (FullUserMonsterProto* element in self.fumpsList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasClientTime) {
    size += computeInt64Size(3, self.clientTime);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UpdateMonsterHealthRequestProto*) parseFromData:(NSData*) data {
  return (UpdateMonsterHealthRequestProto*)[[[UpdateMonsterHealthRequestProto builder] mergeFromData:data] build];
}
+ (UpdateMonsterHealthRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMonsterHealthRequestProto*)[[[UpdateMonsterHealthRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UpdateMonsterHealthRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (UpdateMonsterHealthRequestProto*)[[[UpdateMonsterHealthRequestProto builder] mergeFromInputStream:input] build];
}
+ (UpdateMonsterHealthRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMonsterHealthRequestProto*)[[[UpdateMonsterHealthRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpdateMonsterHealthRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UpdateMonsterHealthRequestProto*)[[[UpdateMonsterHealthRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (UpdateMonsterHealthRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMonsterHealthRequestProto*)[[[UpdateMonsterHealthRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpdateMonsterHealthRequestProto_Builder*) builder {
  return [[[UpdateMonsterHealthRequestProto_Builder alloc] init] autorelease];
}
+ (UpdateMonsterHealthRequestProto_Builder*) builderWithPrototype:(UpdateMonsterHealthRequestProto*) prototype {
  return [[UpdateMonsterHealthRequestProto builder] mergeFrom:prototype];
}
- (UpdateMonsterHealthRequestProto_Builder*) builder {
  return [UpdateMonsterHealthRequestProto builder];
}
@end

@interface UpdateMonsterHealthRequestProto_Builder()
@property (retain) UpdateMonsterHealthRequestProto* result;
@end

@implementation UpdateMonsterHealthRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UpdateMonsterHealthRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UpdateMonsterHealthRequestProto_Builder*) clear {
  self.result = [[[UpdateMonsterHealthRequestProto alloc] init] autorelease];
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) clone {
  return [UpdateMonsterHealthRequestProto builderWithPrototype:result];
}
- (UpdateMonsterHealthRequestProto*) defaultInstance {
  return [UpdateMonsterHealthRequestProto defaultInstance];
}
- (UpdateMonsterHealthRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UpdateMonsterHealthRequestProto*) buildPartial {
  UpdateMonsterHealthRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UpdateMonsterHealthRequestProto_Builder*) mergeFrom:(UpdateMonsterHealthRequestProto*) other {
  if (other == [UpdateMonsterHealthRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableFumpsList.count > 0) {
    if (result.mutableFumpsList == nil) {
      result.mutableFumpsList = [NSMutableArray array];
    }
    [result.mutableFumpsList addObjectsFromArray:other.mutableFumpsList];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UpdateMonsterHealthRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFumps:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setClientTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (UpdateMonsterHealthRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (UpdateMonsterHealthRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSArray*) fumpsList {
  if (result.mutableFumpsList == nil) { return [NSArray array]; }
  return result.mutableFumpsList;
}
- (FullUserMonsterProto*) fumpsAtIndex:(int32_t) index {
  return [result fumpsAtIndex:index];
}
- (UpdateMonsterHealthRequestProto_Builder*) replaceFumpsAtIndex:(int32_t) index with:(FullUserMonsterProto*) value {
  [result.mutableFumpsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) addAllFumps:(NSArray*) values {
  if (result.mutableFumpsList == nil) {
    result.mutableFumpsList = [NSMutableArray array];
  }
  [result.mutableFumpsList addObjectsFromArray:values];
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) clearFumpsList {
  result.mutableFumpsList = nil;
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) addFumps:(FullUserMonsterProto*) value {
  if (result.mutableFumpsList == nil) {
    result.mutableFumpsList = [NSMutableArray array];
  }
  [result.mutableFumpsList addObject:value];
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (UpdateMonsterHealthRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
@end

@interface UpdateMonsterHealthResponseProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) NSMutableArray* mutableFumpsList;
@property UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatus status;
@end

@implementation UpdateMonsterHealthResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableFumpsList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  self.mutableFumpsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatusSuccess;
  }
  return self;
}
static UpdateMonsterHealthResponseProto* defaultUpdateMonsterHealthResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [UpdateMonsterHealthResponseProto class]) {
    defaultUpdateMonsterHealthResponseProtoInstance = [[UpdateMonsterHealthResponseProto alloc] init];
  }
}
+ (UpdateMonsterHealthResponseProto*) defaultInstance {
  return defaultUpdateMonsterHealthResponseProtoInstance;
}
- (UpdateMonsterHealthResponseProto*) defaultInstance {
  return defaultUpdateMonsterHealthResponseProtoInstance;
}
- (NSArray*) fumpsList {
  return mutableFumpsList;
}
- (FullUserMonsterProto*) fumpsAtIndex:(int32_t) index {
  id value = [mutableFumpsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (FullUserMonsterProto* element in self.fumpsList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (FullUserMonsterProto* element in self.fumpsList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasStatus) {
    size += computeEnumSize(3, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UpdateMonsterHealthResponseProto*) parseFromData:(NSData*) data {
  return (UpdateMonsterHealthResponseProto*)[[[UpdateMonsterHealthResponseProto builder] mergeFromData:data] build];
}
+ (UpdateMonsterHealthResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMonsterHealthResponseProto*)[[[UpdateMonsterHealthResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UpdateMonsterHealthResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (UpdateMonsterHealthResponseProto*)[[[UpdateMonsterHealthResponseProto builder] mergeFromInputStream:input] build];
}
+ (UpdateMonsterHealthResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMonsterHealthResponseProto*)[[[UpdateMonsterHealthResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpdateMonsterHealthResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UpdateMonsterHealthResponseProto*)[[[UpdateMonsterHealthResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (UpdateMonsterHealthResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMonsterHealthResponseProto*)[[[UpdateMonsterHealthResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpdateMonsterHealthResponseProto_Builder*) builder {
  return [[[UpdateMonsterHealthResponseProto_Builder alloc] init] autorelease];
}
+ (UpdateMonsterHealthResponseProto_Builder*) builderWithPrototype:(UpdateMonsterHealthResponseProto*) prototype {
  return [[UpdateMonsterHealthResponseProto builder] mergeFrom:prototype];
}
- (UpdateMonsterHealthResponseProto_Builder*) builder {
  return [UpdateMonsterHealthResponseProto builder];
}
@end

BOOL UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatusIsValidValue(UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatus value) {
  switch (value) {
    case UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatusSuccess:
    case UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatusFailInsufficientFunds:
    case UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface UpdateMonsterHealthResponseProto_Builder()
@property (retain) UpdateMonsterHealthResponseProto* result;
@end

@implementation UpdateMonsterHealthResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UpdateMonsterHealthResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UpdateMonsterHealthResponseProto_Builder*) clear {
  self.result = [[[UpdateMonsterHealthResponseProto alloc] init] autorelease];
  return self;
}
- (UpdateMonsterHealthResponseProto_Builder*) clone {
  return [UpdateMonsterHealthResponseProto builderWithPrototype:result];
}
- (UpdateMonsterHealthResponseProto*) defaultInstance {
  return [UpdateMonsterHealthResponseProto defaultInstance];
}
- (UpdateMonsterHealthResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UpdateMonsterHealthResponseProto*) buildPartial {
  UpdateMonsterHealthResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UpdateMonsterHealthResponseProto_Builder*) mergeFrom:(UpdateMonsterHealthResponseProto*) other {
  if (other == [UpdateMonsterHealthResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableFumpsList.count > 0) {
    if (result.mutableFumpsList == nil) {
      result.mutableFumpsList = [NSMutableArray array];
    }
    [result.mutableFumpsList addObjectsFromArray:other.mutableFumpsList];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UpdateMonsterHealthResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UpdateMonsterHealthResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFumps:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (UpdateMonsterHealthResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (UpdateMonsterHealthResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (UpdateMonsterHealthResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (UpdateMonsterHealthResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSArray*) fumpsList {
  if (result.mutableFumpsList == nil) { return [NSArray array]; }
  return result.mutableFumpsList;
}
- (FullUserMonsterProto*) fumpsAtIndex:(int32_t) index {
  return [result fumpsAtIndex:index];
}
- (UpdateMonsterHealthResponseProto_Builder*) replaceFumpsAtIndex:(int32_t) index with:(FullUserMonsterProto*) value {
  [result.mutableFumpsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (UpdateMonsterHealthResponseProto_Builder*) addAllFumps:(NSArray*) values {
  if (result.mutableFumpsList == nil) {
    result.mutableFumpsList = [NSMutableArray array];
  }
  [result.mutableFumpsList addObjectsFromArray:values];
  return self;
}
- (UpdateMonsterHealthResponseProto_Builder*) clearFumpsList {
  result.mutableFumpsList = nil;
  return self;
}
- (UpdateMonsterHealthResponseProto_Builder*) addFumps:(FullUserMonsterProto*) value {
  if (result.mutableFumpsList == nil) {
    result.mutableFumpsList = [NSMutableArray array];
  }
  [result.mutableFumpsList addObject:value];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatus) status {
  return result.status;
}
- (UpdateMonsterHealthResponseProto_Builder*) setStatus:(UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (UpdateMonsterHealthResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatusSuccess;
  return self;
}
@end

