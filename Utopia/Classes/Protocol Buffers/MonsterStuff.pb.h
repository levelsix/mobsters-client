// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

@class FullUserMonsterProto;
@class FullUserMonsterProto_Builder;
@class MinimumUserMonsterSellProto;
@class MinimumUserMonsterSellProto_Builder;
@class MonsterProto;
@class MonsterProto_Builder;
@class UserCurrentMonsterTeamProto;
@class UserCurrentMonsterTeamProto_Builder;
@class UserEnhancementItemProto;
@class UserEnhancementItemProto_Builder;
@class UserEnhancementProto;
@class UserEnhancementProto_Builder;
@class UserMonsterCurrentExpProto;
@class UserMonsterCurrentExpProto_Builder;
@class UserMonsterCurrentHealthProto;
@class UserMonsterCurrentHealthProto_Builder;
@class UserMonsterHealingProto;
@class UserMonsterHealingProto_Builder;
typedef enum {
  MonsterProto_MonsterQualityCommon = 1,
  MonsterProto_MonsterQualityRare = 2,
  MonsterProto_MonsterQualityUltra = 3,
  MonsterProto_MonsterQualityEpic = 4,
  MonsterProto_MonsterQualityLegendary = 5,
} MonsterProto_MonsterQuality;

BOOL MonsterProto_MonsterQualityIsValidValue(MonsterProto_MonsterQuality value);

typedef enum {
  MonsterProto_MonsterElementFire = 1,
  MonsterProto_MonsterElementGrass = 2,
  MonsterProto_MonsterElementWater = 3,
  MonsterProto_MonsterElementLightning = 4,
  MonsterProto_MonsterElementDarkness = 5,
} MonsterProto_MonsterElement;

BOOL MonsterProto_MonsterElementIsValidValue(MonsterProto_MonsterElement value);


@interface MonsterStuffRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface MonsterProto : PBGeneratedMessage {
@private
  BOOL hasAttackLevelMultiplier_:1;
  BOOL hasHpLevelMultiplier_:1;
  BOOL hasEvolutionMonsterId_:1;
  BOOL hasMaxLevel_:1;
  BOOL hasElementFiveDmg_:1;
  BOOL hasElementFourDmg_:1;
  BOOL hasElementThreeDmg_:1;
  BOOL hasElementTwoDmg_:1;
  BOOL hasElementOneDmg_:1;
  BOOL hasMinutesToCombinePieces_:1;
  BOOL hasNumPuzzlePieces_:1;
  BOOL hasBaseHp_:1;
  BOOL hasEvolutionLevel_:1;
  BOOL hasMonsterId_:1;
  BOOL hasImagePrefix_:1;
  BOOL hasDisplayName_:1;
  BOOL hasMonsterGroup_:1;
  BOOL hasName_:1;
  BOOL hasCarrotRecruited_:1;
  BOOL hasCarrotDefeated_:1;
  BOOL hasCarrotEvolved_:1;
  BOOL hasDescription_:1;
  BOOL hasElement_:1;
  BOOL hasQuality_:1;
  Float32 attackLevelMultiplier;
  Float32 hpLevelMultiplier;
  int32_t evolutionMonsterId;
  int32_t maxLevel;
  int32_t elementFiveDmg;
  int32_t elementFourDmg;
  int32_t elementThreeDmg;
  int32_t elementTwoDmg;
  int32_t elementOneDmg;
  int32_t minutesToCombinePieces;
  int32_t numPuzzlePieces;
  int32_t baseHp;
  int32_t evolutionLevel;
  int32_t monsterId;
  NSString* imagePrefix;
  NSString* displayName;
  NSString* monsterGroup;
  NSString* name;
  NSString* carrotRecruited;
  NSString* carrotDefeated;
  NSString* carrotEvolved;
  NSString* description;
  MonsterProto_MonsterElement element;
  MonsterProto_MonsterQuality quality;
}
- (BOOL) hasMonsterId;
- (BOOL) hasName;
- (BOOL) hasMonsterGroup;
- (BOOL) hasQuality;
- (BOOL) hasEvolutionLevel;
- (BOOL) hasDisplayName;
- (BOOL) hasElement;
- (BOOL) hasBaseHp;
- (BOOL) hasImagePrefix;
- (BOOL) hasNumPuzzlePieces;
- (BOOL) hasMinutesToCombinePieces;
- (BOOL) hasElementOneDmg;
- (BOOL) hasElementTwoDmg;
- (BOOL) hasElementThreeDmg;
- (BOOL) hasElementFourDmg;
- (BOOL) hasElementFiveDmg;
- (BOOL) hasHpLevelMultiplier;
- (BOOL) hasAttackLevelMultiplier;
- (BOOL) hasMaxLevel;
- (BOOL) hasEvolutionMonsterId;
- (BOOL) hasCarrotRecruited;
- (BOOL) hasCarrotDefeated;
- (BOOL) hasCarrotEvolved;
- (BOOL) hasDescription;
@property (readonly) int32_t monsterId;
@property (readonly, retain) NSString* name;
@property (readonly, retain) NSString* monsterGroup;
@property (readonly) MonsterProto_MonsterQuality quality;
@property (readonly) int32_t evolutionLevel;
@property (readonly, retain) NSString* displayName;
@property (readonly) MonsterProto_MonsterElement element;
@property (readonly) int32_t baseHp;
@property (readonly, retain) NSString* imagePrefix;
@property (readonly) int32_t numPuzzlePieces;
@property (readonly) int32_t minutesToCombinePieces;
@property (readonly) int32_t elementOneDmg;
@property (readonly) int32_t elementTwoDmg;
@property (readonly) int32_t elementThreeDmg;
@property (readonly) int32_t elementFourDmg;
@property (readonly) int32_t elementFiveDmg;
@property (readonly) Float32 hpLevelMultiplier;
@property (readonly) Float32 attackLevelMultiplier;
@property (readonly) int32_t maxLevel;
@property (readonly) int32_t evolutionMonsterId;
@property (readonly, retain) NSString* carrotRecruited;
@property (readonly, retain) NSString* carrotDefeated;
@property (readonly, retain) NSString* carrotEvolved;
@property (readonly, retain) NSString* description;

+ (MonsterProto*) defaultInstance;
- (MonsterProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MonsterProto_Builder*) builder;
+ (MonsterProto_Builder*) builder;
+ (MonsterProto_Builder*) builderWithPrototype:(MonsterProto*) prototype;

+ (MonsterProto*) parseFromData:(NSData*) data;
+ (MonsterProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MonsterProto*) parseFromInputStream:(NSInputStream*) input;
+ (MonsterProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MonsterProto_Builder : PBGeneratedMessage_Builder {
@private
  MonsterProto* result;
}

- (MonsterProto*) defaultInstance;

- (MonsterProto_Builder*) clear;
- (MonsterProto_Builder*) clone;

- (MonsterProto*) build;
- (MonsterProto*) buildPartial;

- (MonsterProto_Builder*) mergeFrom:(MonsterProto*) other;
- (MonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMonsterId;
- (int32_t) monsterId;
- (MonsterProto_Builder*) setMonsterId:(int32_t) value;
- (MonsterProto_Builder*) clearMonsterId;

- (BOOL) hasName;
- (NSString*) name;
- (MonsterProto_Builder*) setName:(NSString*) value;
- (MonsterProto_Builder*) clearName;

- (BOOL) hasMonsterGroup;
- (NSString*) monsterGroup;
- (MonsterProto_Builder*) setMonsterGroup:(NSString*) value;
- (MonsterProto_Builder*) clearMonsterGroup;

- (BOOL) hasQuality;
- (MonsterProto_MonsterQuality) quality;
- (MonsterProto_Builder*) setQuality:(MonsterProto_MonsterQuality) value;
- (MonsterProto_Builder*) clearQuality;

- (BOOL) hasEvolutionLevel;
- (int32_t) evolutionLevel;
- (MonsterProto_Builder*) setEvolutionLevel:(int32_t) value;
- (MonsterProto_Builder*) clearEvolutionLevel;

- (BOOL) hasDisplayName;
- (NSString*) displayName;
- (MonsterProto_Builder*) setDisplayName:(NSString*) value;
- (MonsterProto_Builder*) clearDisplayName;

- (BOOL) hasElement;
- (MonsterProto_MonsterElement) element;
- (MonsterProto_Builder*) setElement:(MonsterProto_MonsterElement) value;
- (MonsterProto_Builder*) clearElement;

- (BOOL) hasBaseHp;
- (int32_t) baseHp;
- (MonsterProto_Builder*) setBaseHp:(int32_t) value;
- (MonsterProto_Builder*) clearBaseHp;

- (BOOL) hasImagePrefix;
- (NSString*) imagePrefix;
- (MonsterProto_Builder*) setImagePrefix:(NSString*) value;
- (MonsterProto_Builder*) clearImagePrefix;

- (BOOL) hasNumPuzzlePieces;
- (int32_t) numPuzzlePieces;
- (MonsterProto_Builder*) setNumPuzzlePieces:(int32_t) value;
- (MonsterProto_Builder*) clearNumPuzzlePieces;

- (BOOL) hasMinutesToCombinePieces;
- (int32_t) minutesToCombinePieces;
- (MonsterProto_Builder*) setMinutesToCombinePieces:(int32_t) value;
- (MonsterProto_Builder*) clearMinutesToCombinePieces;

- (BOOL) hasElementOneDmg;
- (int32_t) elementOneDmg;
- (MonsterProto_Builder*) setElementOneDmg:(int32_t) value;
- (MonsterProto_Builder*) clearElementOneDmg;

- (BOOL) hasElementTwoDmg;
- (int32_t) elementTwoDmg;
- (MonsterProto_Builder*) setElementTwoDmg:(int32_t) value;
- (MonsterProto_Builder*) clearElementTwoDmg;

- (BOOL) hasElementThreeDmg;
- (int32_t) elementThreeDmg;
- (MonsterProto_Builder*) setElementThreeDmg:(int32_t) value;
- (MonsterProto_Builder*) clearElementThreeDmg;

- (BOOL) hasElementFourDmg;
- (int32_t) elementFourDmg;
- (MonsterProto_Builder*) setElementFourDmg:(int32_t) value;
- (MonsterProto_Builder*) clearElementFourDmg;

- (BOOL) hasElementFiveDmg;
- (int32_t) elementFiveDmg;
- (MonsterProto_Builder*) setElementFiveDmg:(int32_t) value;
- (MonsterProto_Builder*) clearElementFiveDmg;

- (BOOL) hasHpLevelMultiplier;
- (Float32) hpLevelMultiplier;
- (MonsterProto_Builder*) setHpLevelMultiplier:(Float32) value;
- (MonsterProto_Builder*) clearHpLevelMultiplier;

- (BOOL) hasAttackLevelMultiplier;
- (Float32) attackLevelMultiplier;
- (MonsterProto_Builder*) setAttackLevelMultiplier:(Float32) value;
- (MonsterProto_Builder*) clearAttackLevelMultiplier;

- (BOOL) hasMaxLevel;
- (int32_t) maxLevel;
- (MonsterProto_Builder*) setMaxLevel:(int32_t) value;
- (MonsterProto_Builder*) clearMaxLevel;

- (BOOL) hasEvolutionMonsterId;
- (int32_t) evolutionMonsterId;
- (MonsterProto_Builder*) setEvolutionMonsterId:(int32_t) value;
- (MonsterProto_Builder*) clearEvolutionMonsterId;

- (BOOL) hasCarrotRecruited;
- (NSString*) carrotRecruited;
- (MonsterProto_Builder*) setCarrotRecruited:(NSString*) value;
- (MonsterProto_Builder*) clearCarrotRecruited;

- (BOOL) hasCarrotDefeated;
- (NSString*) carrotDefeated;
- (MonsterProto_Builder*) setCarrotDefeated:(NSString*) value;
- (MonsterProto_Builder*) clearCarrotDefeated;

- (BOOL) hasCarrotEvolved;
- (NSString*) carrotEvolved;
- (MonsterProto_Builder*) setCarrotEvolved:(NSString*) value;
- (MonsterProto_Builder*) clearCarrotEvolved;

- (BOOL) hasDescription;
- (NSString*) description;
- (MonsterProto_Builder*) setDescription:(NSString*) value;
- (MonsterProto_Builder*) clearDescription;
@end

@interface FullUserMonsterProto : PBGeneratedMessage {
@private
  BOOL hasIsComplete_:1;
  BOOL hasUserMonsterId_:1;
  BOOL hasCombineStartTime_:1;
  BOOL hasUserId_:1;
  BOOL hasMonsterId_:1;
  BOOL hasCurrentExp_:1;
  BOOL hasCurrentLvl_:1;
  BOOL hasCurrentHealth_:1;
  BOOL hasNumPieces_:1;
  BOOL hasTeamSlotNum_:1;
  BOOL isComplete_:1;
  int64_t userMonsterId;
  int64_t combineStartTime;
  int32_t userId;
  int32_t monsterId;
  int32_t currentExp;
  int32_t currentLvl;
  int32_t currentHealth;
  int32_t numPieces;
  int32_t teamSlotNum;
}
- (BOOL) hasUserMonsterId;
- (BOOL) hasUserId;
- (BOOL) hasMonsterId;
- (BOOL) hasCurrentExp;
- (BOOL) hasCurrentLvl;
- (BOOL) hasCurrentHealth;
- (BOOL) hasNumPieces;
- (BOOL) hasIsComplete;
- (BOOL) hasCombineStartTime;
- (BOOL) hasTeamSlotNum;
@property (readonly) int64_t userMonsterId;
@property (readonly) int32_t userId;
@property (readonly) int32_t monsterId;
@property (readonly) int32_t currentExp;
@property (readonly) int32_t currentLvl;
@property (readonly) int32_t currentHealth;
@property (readonly) int32_t numPieces;
- (BOOL) isComplete;
@property (readonly) int64_t combineStartTime;
@property (readonly) int32_t teamSlotNum;

+ (FullUserMonsterProto*) defaultInstance;
- (FullUserMonsterProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FullUserMonsterProto_Builder*) builder;
+ (FullUserMonsterProto_Builder*) builder;
+ (FullUserMonsterProto_Builder*) builderWithPrototype:(FullUserMonsterProto*) prototype;

+ (FullUserMonsterProto*) parseFromData:(NSData*) data;
+ (FullUserMonsterProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FullUserMonsterProto*) parseFromInputStream:(NSInputStream*) input;
+ (FullUserMonsterProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FullUserMonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FullUserMonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FullUserMonsterProto_Builder : PBGeneratedMessage_Builder {
@private
  FullUserMonsterProto* result;
}

- (FullUserMonsterProto*) defaultInstance;

- (FullUserMonsterProto_Builder*) clear;
- (FullUserMonsterProto_Builder*) clone;

- (FullUserMonsterProto*) build;
- (FullUserMonsterProto*) buildPartial;

- (FullUserMonsterProto_Builder*) mergeFrom:(FullUserMonsterProto*) other;
- (FullUserMonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FullUserMonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserMonsterId;
- (int64_t) userMonsterId;
- (FullUserMonsterProto_Builder*) setUserMonsterId:(int64_t) value;
- (FullUserMonsterProto_Builder*) clearUserMonsterId;

- (BOOL) hasUserId;
- (int32_t) userId;
- (FullUserMonsterProto_Builder*) setUserId:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearUserId;

- (BOOL) hasMonsterId;
- (int32_t) monsterId;
- (FullUserMonsterProto_Builder*) setMonsterId:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearMonsterId;

- (BOOL) hasCurrentExp;
- (int32_t) currentExp;
- (FullUserMonsterProto_Builder*) setCurrentExp:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearCurrentExp;

- (BOOL) hasCurrentLvl;
- (int32_t) currentLvl;
- (FullUserMonsterProto_Builder*) setCurrentLvl:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearCurrentLvl;

- (BOOL) hasCurrentHealth;
- (int32_t) currentHealth;
- (FullUserMonsterProto_Builder*) setCurrentHealth:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearCurrentHealth;

- (BOOL) hasNumPieces;
- (int32_t) numPieces;
- (FullUserMonsterProto_Builder*) setNumPieces:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearNumPieces;

- (BOOL) hasIsComplete;
- (BOOL) isComplete;
- (FullUserMonsterProto_Builder*) setIsComplete:(BOOL) value;
- (FullUserMonsterProto_Builder*) clearIsComplete;

- (BOOL) hasCombineStartTime;
- (int64_t) combineStartTime;
- (FullUserMonsterProto_Builder*) setCombineStartTime:(int64_t) value;
- (FullUserMonsterProto_Builder*) clearCombineStartTime;

- (BOOL) hasTeamSlotNum;
- (int32_t) teamSlotNum;
- (FullUserMonsterProto_Builder*) setTeamSlotNum:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearTeamSlotNum;
@end

@interface UserMonsterHealingProto : PBGeneratedMessage {
@private
  BOOL hasUserMonsterId_:1;
  BOOL hasExpectedStartTimeMillis_:1;
  BOOL hasUserId_:1;
  int64_t userMonsterId;
  int64_t expectedStartTimeMillis;
  int32_t userId;
}
- (BOOL) hasUserId;
- (BOOL) hasUserMonsterId;
- (BOOL) hasExpectedStartTimeMillis;
@property (readonly) int32_t userId;
@property (readonly) int64_t userMonsterId;
@property (readonly) int64_t expectedStartTimeMillis;

+ (UserMonsterHealingProto*) defaultInstance;
- (UserMonsterHealingProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserMonsterHealingProto_Builder*) builder;
+ (UserMonsterHealingProto_Builder*) builder;
+ (UserMonsterHealingProto_Builder*) builderWithPrototype:(UserMonsterHealingProto*) prototype;

+ (UserMonsterHealingProto*) parseFromData:(NSData*) data;
+ (UserMonsterHealingProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserMonsterHealingProto*) parseFromInputStream:(NSInputStream*) input;
+ (UserMonsterHealingProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserMonsterHealingProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserMonsterHealingProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserMonsterHealingProto_Builder : PBGeneratedMessage_Builder {
@private
  UserMonsterHealingProto* result;
}

- (UserMonsterHealingProto*) defaultInstance;

- (UserMonsterHealingProto_Builder*) clear;
- (UserMonsterHealingProto_Builder*) clone;

- (UserMonsterHealingProto*) build;
- (UserMonsterHealingProto*) buildPartial;

- (UserMonsterHealingProto_Builder*) mergeFrom:(UserMonsterHealingProto*) other;
- (UserMonsterHealingProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserMonsterHealingProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (int32_t) userId;
- (UserMonsterHealingProto_Builder*) setUserId:(int32_t) value;
- (UserMonsterHealingProto_Builder*) clearUserId;

- (BOOL) hasUserMonsterId;
- (int64_t) userMonsterId;
- (UserMonsterHealingProto_Builder*) setUserMonsterId:(int64_t) value;
- (UserMonsterHealingProto_Builder*) clearUserMonsterId;

- (BOOL) hasExpectedStartTimeMillis;
- (int64_t) expectedStartTimeMillis;
- (UserMonsterHealingProto_Builder*) setExpectedStartTimeMillis:(int64_t) value;
- (UserMonsterHealingProto_Builder*) clearExpectedStartTimeMillis;
@end

@interface UserMonsterCurrentHealthProto : PBGeneratedMessage {
@private
  BOOL hasUserMonsterId_:1;
  BOOL hasCurrentHealth_:1;
  int64_t userMonsterId;
  int32_t currentHealth;
}
- (BOOL) hasUserMonsterId;
- (BOOL) hasCurrentHealth;
@property (readonly) int64_t userMonsterId;
@property (readonly) int32_t currentHealth;

+ (UserMonsterCurrentHealthProto*) defaultInstance;
- (UserMonsterCurrentHealthProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserMonsterCurrentHealthProto_Builder*) builder;
+ (UserMonsterCurrentHealthProto_Builder*) builder;
+ (UserMonsterCurrentHealthProto_Builder*) builderWithPrototype:(UserMonsterCurrentHealthProto*) prototype;

+ (UserMonsterCurrentHealthProto*) parseFromData:(NSData*) data;
+ (UserMonsterCurrentHealthProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserMonsterCurrentHealthProto*) parseFromInputStream:(NSInputStream*) input;
+ (UserMonsterCurrentHealthProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserMonsterCurrentHealthProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserMonsterCurrentHealthProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserMonsterCurrentHealthProto_Builder : PBGeneratedMessage_Builder {
@private
  UserMonsterCurrentHealthProto* result;
}

- (UserMonsterCurrentHealthProto*) defaultInstance;

- (UserMonsterCurrentHealthProto_Builder*) clear;
- (UserMonsterCurrentHealthProto_Builder*) clone;

- (UserMonsterCurrentHealthProto*) build;
- (UserMonsterCurrentHealthProto*) buildPartial;

- (UserMonsterCurrentHealthProto_Builder*) mergeFrom:(UserMonsterCurrentHealthProto*) other;
- (UserMonsterCurrentHealthProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserMonsterCurrentHealthProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserMonsterId;
- (int64_t) userMonsterId;
- (UserMonsterCurrentHealthProto_Builder*) setUserMonsterId:(int64_t) value;
- (UserMonsterCurrentHealthProto_Builder*) clearUserMonsterId;

- (BOOL) hasCurrentHealth;
- (int32_t) currentHealth;
- (UserMonsterCurrentHealthProto_Builder*) setCurrentHealth:(int32_t) value;
- (UserMonsterCurrentHealthProto_Builder*) clearCurrentHealth;
@end

@interface UserEnhancementProto : PBGeneratedMessage {
@private
  BOOL hasUserId_:1;
  BOOL hasBaseMonster_:1;
  int32_t userId;
  UserEnhancementItemProto* baseMonster;
  NSMutableArray* mutableFeedersList;
}
- (BOOL) hasUserId;
- (BOOL) hasBaseMonster;
@property (readonly) int32_t userId;
@property (readonly, retain) UserEnhancementItemProto* baseMonster;
- (NSArray*) feedersList;
- (UserEnhancementItemProto*) feedersAtIndex:(int32_t) index;

+ (UserEnhancementProto*) defaultInstance;
- (UserEnhancementProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserEnhancementProto_Builder*) builder;
+ (UserEnhancementProto_Builder*) builder;
+ (UserEnhancementProto_Builder*) builderWithPrototype:(UserEnhancementProto*) prototype;

+ (UserEnhancementProto*) parseFromData:(NSData*) data;
+ (UserEnhancementProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserEnhancementProto*) parseFromInputStream:(NSInputStream*) input;
+ (UserEnhancementProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserEnhancementProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserEnhancementProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserEnhancementProto_Builder : PBGeneratedMessage_Builder {
@private
  UserEnhancementProto* result;
}

- (UserEnhancementProto*) defaultInstance;

- (UserEnhancementProto_Builder*) clear;
- (UserEnhancementProto_Builder*) clone;

- (UserEnhancementProto*) build;
- (UserEnhancementProto*) buildPartial;

- (UserEnhancementProto_Builder*) mergeFrom:(UserEnhancementProto*) other;
- (UserEnhancementProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserEnhancementProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (int32_t) userId;
- (UserEnhancementProto_Builder*) setUserId:(int32_t) value;
- (UserEnhancementProto_Builder*) clearUserId;

- (BOOL) hasBaseMonster;
- (UserEnhancementItemProto*) baseMonster;
- (UserEnhancementProto_Builder*) setBaseMonster:(UserEnhancementItemProto*) value;
- (UserEnhancementProto_Builder*) setBaseMonsterBuilder:(UserEnhancementItemProto_Builder*) builderForValue;
- (UserEnhancementProto_Builder*) mergeBaseMonster:(UserEnhancementItemProto*) value;
- (UserEnhancementProto_Builder*) clearBaseMonster;

- (NSArray*) feedersList;
- (UserEnhancementItemProto*) feedersAtIndex:(int32_t) index;
- (UserEnhancementProto_Builder*) replaceFeedersAtIndex:(int32_t) index with:(UserEnhancementItemProto*) value;
- (UserEnhancementProto_Builder*) addFeeders:(UserEnhancementItemProto*) value;
- (UserEnhancementProto_Builder*) addAllFeeders:(NSArray*) values;
- (UserEnhancementProto_Builder*) clearFeedersList;
@end

@interface UserEnhancementItemProto : PBGeneratedMessage {
@private
  BOOL hasUserMonsterId_:1;
  BOOL hasExpectedStartTimeMillis_:1;
  int64_t userMonsterId;
  int64_t expectedStartTimeMillis;
}
- (BOOL) hasUserMonsterId;
- (BOOL) hasExpectedStartTimeMillis;
@property (readonly) int64_t userMonsterId;
@property (readonly) int64_t expectedStartTimeMillis;

+ (UserEnhancementItemProto*) defaultInstance;
- (UserEnhancementItemProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserEnhancementItemProto_Builder*) builder;
+ (UserEnhancementItemProto_Builder*) builder;
+ (UserEnhancementItemProto_Builder*) builderWithPrototype:(UserEnhancementItemProto*) prototype;

+ (UserEnhancementItemProto*) parseFromData:(NSData*) data;
+ (UserEnhancementItemProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserEnhancementItemProto*) parseFromInputStream:(NSInputStream*) input;
+ (UserEnhancementItemProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserEnhancementItemProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserEnhancementItemProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserEnhancementItemProto_Builder : PBGeneratedMessage_Builder {
@private
  UserEnhancementItemProto* result;
}

- (UserEnhancementItemProto*) defaultInstance;

- (UserEnhancementItemProto_Builder*) clear;
- (UserEnhancementItemProto_Builder*) clone;

- (UserEnhancementItemProto*) build;
- (UserEnhancementItemProto*) buildPartial;

- (UserEnhancementItemProto_Builder*) mergeFrom:(UserEnhancementItemProto*) other;
- (UserEnhancementItemProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserEnhancementItemProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserMonsterId;
- (int64_t) userMonsterId;
- (UserEnhancementItemProto_Builder*) setUserMonsterId:(int64_t) value;
- (UserEnhancementItemProto_Builder*) clearUserMonsterId;

- (BOOL) hasExpectedStartTimeMillis;
- (int64_t) expectedStartTimeMillis;
- (UserEnhancementItemProto_Builder*) setExpectedStartTimeMillis:(int64_t) value;
- (UserEnhancementItemProto_Builder*) clearExpectedStartTimeMillis;
@end

@interface UserMonsterCurrentExpProto : PBGeneratedMessage {
@private
  BOOL hasUserMonsterId_:1;
  BOOL hasExpectedExperience_:1;
  BOOL hasExpectedLevel_:1;
  int64_t userMonsterId;
  int32_t expectedExperience;
  int32_t expectedLevel;
}
- (BOOL) hasUserMonsterId;
- (BOOL) hasExpectedExperience;
- (BOOL) hasExpectedLevel;
@property (readonly) int64_t userMonsterId;
@property (readonly) int32_t expectedExperience;
@property (readonly) int32_t expectedLevel;

+ (UserMonsterCurrentExpProto*) defaultInstance;
- (UserMonsterCurrentExpProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserMonsterCurrentExpProto_Builder*) builder;
+ (UserMonsterCurrentExpProto_Builder*) builder;
+ (UserMonsterCurrentExpProto_Builder*) builderWithPrototype:(UserMonsterCurrentExpProto*) prototype;

+ (UserMonsterCurrentExpProto*) parseFromData:(NSData*) data;
+ (UserMonsterCurrentExpProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserMonsterCurrentExpProto*) parseFromInputStream:(NSInputStream*) input;
+ (UserMonsterCurrentExpProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserMonsterCurrentExpProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserMonsterCurrentExpProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserMonsterCurrentExpProto_Builder : PBGeneratedMessage_Builder {
@private
  UserMonsterCurrentExpProto* result;
}

- (UserMonsterCurrentExpProto*) defaultInstance;

- (UserMonsterCurrentExpProto_Builder*) clear;
- (UserMonsterCurrentExpProto_Builder*) clone;

- (UserMonsterCurrentExpProto*) build;
- (UserMonsterCurrentExpProto*) buildPartial;

- (UserMonsterCurrentExpProto_Builder*) mergeFrom:(UserMonsterCurrentExpProto*) other;
- (UserMonsterCurrentExpProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserMonsterCurrentExpProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserMonsterId;
- (int64_t) userMonsterId;
- (UserMonsterCurrentExpProto_Builder*) setUserMonsterId:(int64_t) value;
- (UserMonsterCurrentExpProto_Builder*) clearUserMonsterId;

- (BOOL) hasExpectedExperience;
- (int32_t) expectedExperience;
- (UserMonsterCurrentExpProto_Builder*) setExpectedExperience:(int32_t) value;
- (UserMonsterCurrentExpProto_Builder*) clearExpectedExperience;

- (BOOL) hasExpectedLevel;
- (int32_t) expectedLevel;
- (UserMonsterCurrentExpProto_Builder*) setExpectedLevel:(int32_t) value;
- (UserMonsterCurrentExpProto_Builder*) clearExpectedLevel;
@end

@interface MinimumUserMonsterSellProto : PBGeneratedMessage {
@private
  BOOL hasUserMonsterId_:1;
  BOOL hasCashAmount_:1;
  int64_t userMonsterId;
  int32_t cashAmount;
}
- (BOOL) hasUserMonsterId;
- (BOOL) hasCashAmount;
@property (readonly) int64_t userMonsterId;
@property (readonly) int32_t cashAmount;

+ (MinimumUserMonsterSellProto*) defaultInstance;
- (MinimumUserMonsterSellProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MinimumUserMonsterSellProto_Builder*) builder;
+ (MinimumUserMonsterSellProto_Builder*) builder;
+ (MinimumUserMonsterSellProto_Builder*) builderWithPrototype:(MinimumUserMonsterSellProto*) prototype;

+ (MinimumUserMonsterSellProto*) parseFromData:(NSData*) data;
+ (MinimumUserMonsterSellProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MinimumUserMonsterSellProto*) parseFromInputStream:(NSInputStream*) input;
+ (MinimumUserMonsterSellProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MinimumUserMonsterSellProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MinimumUserMonsterSellProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MinimumUserMonsterSellProto_Builder : PBGeneratedMessage_Builder {
@private
  MinimumUserMonsterSellProto* result;
}

- (MinimumUserMonsterSellProto*) defaultInstance;

- (MinimumUserMonsterSellProto_Builder*) clear;
- (MinimumUserMonsterSellProto_Builder*) clone;

- (MinimumUserMonsterSellProto*) build;
- (MinimumUserMonsterSellProto*) buildPartial;

- (MinimumUserMonsterSellProto_Builder*) mergeFrom:(MinimumUserMonsterSellProto*) other;
- (MinimumUserMonsterSellProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MinimumUserMonsterSellProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserMonsterId;
- (int64_t) userMonsterId;
- (MinimumUserMonsterSellProto_Builder*) setUserMonsterId:(int64_t) value;
- (MinimumUserMonsterSellProto_Builder*) clearUserMonsterId;

- (BOOL) hasCashAmount;
- (int32_t) cashAmount;
- (MinimumUserMonsterSellProto_Builder*) setCashAmount:(int32_t) value;
- (MinimumUserMonsterSellProto_Builder*) clearCashAmount;
@end

@interface UserCurrentMonsterTeamProto : PBGeneratedMessage {
@private
  BOOL hasUserId_:1;
  int32_t userId;
  NSMutableArray* mutableCurrentTeamList;
}
- (BOOL) hasUserId;
@property (readonly) int32_t userId;
- (NSArray*) currentTeamList;
- (FullUserMonsterProto*) currentTeamAtIndex:(int32_t) index;

+ (UserCurrentMonsterTeamProto*) defaultInstance;
- (UserCurrentMonsterTeamProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserCurrentMonsterTeamProto_Builder*) builder;
+ (UserCurrentMonsterTeamProto_Builder*) builder;
+ (UserCurrentMonsterTeamProto_Builder*) builderWithPrototype:(UserCurrentMonsterTeamProto*) prototype;

+ (UserCurrentMonsterTeamProto*) parseFromData:(NSData*) data;
+ (UserCurrentMonsterTeamProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserCurrentMonsterTeamProto*) parseFromInputStream:(NSInputStream*) input;
+ (UserCurrentMonsterTeamProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserCurrentMonsterTeamProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserCurrentMonsterTeamProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserCurrentMonsterTeamProto_Builder : PBGeneratedMessage_Builder {
@private
  UserCurrentMonsterTeamProto* result;
}

- (UserCurrentMonsterTeamProto*) defaultInstance;

- (UserCurrentMonsterTeamProto_Builder*) clear;
- (UserCurrentMonsterTeamProto_Builder*) clone;

- (UserCurrentMonsterTeamProto*) build;
- (UserCurrentMonsterTeamProto*) buildPartial;

- (UserCurrentMonsterTeamProto_Builder*) mergeFrom:(UserCurrentMonsterTeamProto*) other;
- (UserCurrentMonsterTeamProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserCurrentMonsterTeamProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (int32_t) userId;
- (UserCurrentMonsterTeamProto_Builder*) setUserId:(int32_t) value;
- (UserCurrentMonsterTeamProto_Builder*) clearUserId;

- (NSArray*) currentTeamList;
- (FullUserMonsterProto*) currentTeamAtIndex:(int32_t) index;
- (UserCurrentMonsterTeamProto_Builder*) replaceCurrentTeamAtIndex:(int32_t) index with:(FullUserMonsterProto*) value;
- (UserCurrentMonsterTeamProto_Builder*) addCurrentTeam:(FullUserMonsterProto*) value;
- (UserCurrentMonsterTeamProto_Builder*) addAllCurrentTeam:(NSArray*) values;
- (UserCurrentMonsterTeamProto_Builder*) clearCurrentTeamList;
@end

