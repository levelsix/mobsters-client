// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

@class FullUserMonsterProto;
@class FullUserMonsterProto_Builder;
@class MonsterProto;
@class MonsterProto_Builder;
@class UserMonsterHealingProto;
@class UserMonsterHealingProto_Builder;
typedef enum {
  MonsterProto_MonsterTypeRegular = 1,
  MonsterProto_MonsterTypeMiniBoss = 2,
  MonsterProto_MonsterTypeBoss = 3,
} MonsterProto_MonsterType;

BOOL MonsterProto_MonsterTypeIsValidValue(MonsterProto_MonsterType value);

typedef enum {
  MonsterProto_MonsterQualityCommon = 1,
  MonsterProto_MonsterQualityRare = 2,
  MonsterProto_MonsterQualityUltra = 3,
  MonsterProto_MonsterQualityEpic = 4,
  MonsterProto_MonsterQualityLegendary = 5,
} MonsterProto_MonsterQuality;

BOOL MonsterProto_MonsterQualityIsValidValue(MonsterProto_MonsterQuality value);

typedef enum {
  MonsterProto_MonsterElementFire = 1,
  MonsterProto_MonsterElementGrass = 2,
  MonsterProto_MonsterElementWater = 3,
  MonsterProto_MonsterElementLightning = 4,
  MonsterProto_MonsterElementDarkness = 5,
} MonsterProto_MonsterElement;

BOOL MonsterProto_MonsterElementIsValidValue(MonsterProto_MonsterElement value);


@interface MonsterStuffRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface MonsterProto : PBGeneratedMessage {
@private
  BOOL hasPuzzlePieceDropped_:1;
  BOOL hasElementFiveDmg_:1;
  BOOL hasElementFourDmg_:1;
  BOOL hasElementThreeDmg_:1;
  BOOL hasElementTwoDmg_:1;
  BOOL hasElementOneDmg_:1;
  BOOL hasMonsterIdSuccessor_:1;
  BOOL hasSilverReward_:1;
  BOOL hasExpReward_:1;
  BOOL hasMaxHp_:1;
  BOOL hasEvolutionLevel_:1;
  BOOL hasMonsterId_:1;
  BOOL hasImageName_:1;
  BOOL hasCarrotDefeated_:1;
  BOOL hasCarrotRecruited_:1;
  BOOL hasCarrotEvolved_:1;
  BOOL hasDisplayName_:1;
  BOOL hasName_:1;
  BOOL hasMonsterType_:1;
  BOOL hasElement_:1;
  BOOL hasQuality_:1;
  BOOL puzzlePieceDropped_:1;
  int32_t elementFiveDmg;
  int32_t elementFourDmg;
  int32_t elementThreeDmg;
  int32_t elementTwoDmg;
  int32_t elementOneDmg;
  int32_t monsterIdSuccessor;
  int32_t silverReward;
  int32_t expReward;
  int32_t maxHp;
  int32_t evolutionLevel;
  int32_t monsterId;
  NSString* imageName;
  NSString* carrotDefeated;
  NSString* carrotRecruited;
  NSString* carrotEvolved;
  NSString* displayName;
  NSString* name;
  MonsterProto_MonsterType monsterType;
  MonsterProto_MonsterElement element;
  MonsterProto_MonsterQuality quality;
}
- (BOOL) hasMonsterId;
- (BOOL) hasName;
- (BOOL) hasQuality;
- (BOOL) hasEvolutionLevel;
- (BOOL) hasDisplayName;
- (BOOL) hasElement;
- (BOOL) hasMaxHp;
- (BOOL) hasImageName;
- (BOOL) hasMonsterType;
- (BOOL) hasExpReward;
- (BOOL) hasSilverReward;
- (BOOL) hasMonsterIdSuccessor;
- (BOOL) hasPuzzlePieceDropped;
- (BOOL) hasCarrotDefeated;
- (BOOL) hasCarrotRecruited;
- (BOOL) hasCarrotEvolved;
- (BOOL) hasElementOneDmg;
- (BOOL) hasElementTwoDmg;
- (BOOL) hasElementThreeDmg;
- (BOOL) hasElementFourDmg;
- (BOOL) hasElementFiveDmg;
@property (readonly) int32_t monsterId;
@property (readonly, retain) NSString* name;
@property (readonly) MonsterProto_MonsterQuality quality;
@property (readonly) int32_t evolutionLevel;
@property (readonly, retain) NSString* displayName;
@property (readonly) MonsterProto_MonsterElement element;
@property (readonly) int32_t maxHp;
@property (readonly, retain) NSString* imageName;
@property (readonly) MonsterProto_MonsterType monsterType;
@property (readonly) int32_t expReward;
@property (readonly) int32_t silverReward;
@property (readonly) int32_t monsterIdSuccessor;
- (BOOL) puzzlePieceDropped;
@property (readonly, retain) NSString* carrotDefeated;
@property (readonly, retain) NSString* carrotRecruited;
@property (readonly, retain) NSString* carrotEvolved;
@property (readonly) int32_t elementOneDmg;
@property (readonly) int32_t elementTwoDmg;
@property (readonly) int32_t elementThreeDmg;
@property (readonly) int32_t elementFourDmg;
@property (readonly) int32_t elementFiveDmg;

+ (MonsterProto*) defaultInstance;
- (MonsterProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MonsterProto_Builder*) builder;
+ (MonsterProto_Builder*) builder;
+ (MonsterProto_Builder*) builderWithPrototype:(MonsterProto*) prototype;

+ (MonsterProto*) parseFromData:(NSData*) data;
+ (MonsterProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MonsterProto*) parseFromInputStream:(NSInputStream*) input;
+ (MonsterProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MonsterProto_Builder : PBGeneratedMessage_Builder {
@private
  MonsterProto* result;
}

- (MonsterProto*) defaultInstance;

- (MonsterProto_Builder*) clear;
- (MonsterProto_Builder*) clone;

- (MonsterProto*) build;
- (MonsterProto*) buildPartial;

- (MonsterProto_Builder*) mergeFrom:(MonsterProto*) other;
- (MonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMonsterId;
- (int32_t) monsterId;
- (MonsterProto_Builder*) setMonsterId:(int32_t) value;
- (MonsterProto_Builder*) clearMonsterId;

- (BOOL) hasName;
- (NSString*) name;
- (MonsterProto_Builder*) setName:(NSString*) value;
- (MonsterProto_Builder*) clearName;

- (BOOL) hasQuality;
- (MonsterProto_MonsterQuality) quality;
- (MonsterProto_Builder*) setQuality:(MonsterProto_MonsterQuality) value;
- (MonsterProto_Builder*) clearQuality;

- (BOOL) hasEvolutionLevel;
- (int32_t) evolutionLevel;
- (MonsterProto_Builder*) setEvolutionLevel:(int32_t) value;
- (MonsterProto_Builder*) clearEvolutionLevel;

- (BOOL) hasDisplayName;
- (NSString*) displayName;
- (MonsterProto_Builder*) setDisplayName:(NSString*) value;
- (MonsterProto_Builder*) clearDisplayName;

- (BOOL) hasElement;
- (MonsterProto_MonsterElement) element;
- (MonsterProto_Builder*) setElement:(MonsterProto_MonsterElement) value;
- (MonsterProto_Builder*) clearElement;

- (BOOL) hasMaxHp;
- (int32_t) maxHp;
- (MonsterProto_Builder*) setMaxHp:(int32_t) value;
- (MonsterProto_Builder*) clearMaxHp;

- (BOOL) hasImageName;
- (NSString*) imageName;
- (MonsterProto_Builder*) setImageName:(NSString*) value;
- (MonsterProto_Builder*) clearImageName;

- (BOOL) hasMonsterType;
- (MonsterProto_MonsterType) monsterType;
- (MonsterProto_Builder*) setMonsterType:(MonsterProto_MonsterType) value;
- (MonsterProto_Builder*) clearMonsterType;

- (BOOL) hasExpReward;
- (int32_t) expReward;
- (MonsterProto_Builder*) setExpReward:(int32_t) value;
- (MonsterProto_Builder*) clearExpReward;

- (BOOL) hasSilverReward;
- (int32_t) silverReward;
- (MonsterProto_Builder*) setSilverReward:(int32_t) value;
- (MonsterProto_Builder*) clearSilverReward;

- (BOOL) hasMonsterIdSuccessor;
- (int32_t) monsterIdSuccessor;
- (MonsterProto_Builder*) setMonsterIdSuccessor:(int32_t) value;
- (MonsterProto_Builder*) clearMonsterIdSuccessor;

- (BOOL) hasPuzzlePieceDropped;
- (BOOL) puzzlePieceDropped;
- (MonsterProto_Builder*) setPuzzlePieceDropped:(BOOL) value;
- (MonsterProto_Builder*) clearPuzzlePieceDropped;

- (BOOL) hasCarrotDefeated;
- (NSString*) carrotDefeated;
- (MonsterProto_Builder*) setCarrotDefeated:(NSString*) value;
- (MonsterProto_Builder*) clearCarrotDefeated;

- (BOOL) hasCarrotRecruited;
- (NSString*) carrotRecruited;
- (MonsterProto_Builder*) setCarrotRecruited:(NSString*) value;
- (MonsterProto_Builder*) clearCarrotRecruited;

- (BOOL) hasCarrotEvolved;
- (NSString*) carrotEvolved;
- (MonsterProto_Builder*) setCarrotEvolved:(NSString*) value;
- (MonsterProto_Builder*) clearCarrotEvolved;

- (BOOL) hasElementOneDmg;
- (int32_t) elementOneDmg;
- (MonsterProto_Builder*) setElementOneDmg:(int32_t) value;
- (MonsterProto_Builder*) clearElementOneDmg;

- (BOOL) hasElementTwoDmg;
- (int32_t) elementTwoDmg;
- (MonsterProto_Builder*) setElementTwoDmg:(int32_t) value;
- (MonsterProto_Builder*) clearElementTwoDmg;

- (BOOL) hasElementThreeDmg;
- (int32_t) elementThreeDmg;
- (MonsterProto_Builder*) setElementThreeDmg:(int32_t) value;
- (MonsterProto_Builder*) clearElementThreeDmg;

- (BOOL) hasElementFourDmg;
- (int32_t) elementFourDmg;
- (MonsterProto_Builder*) setElementFourDmg:(int32_t) value;
- (MonsterProto_Builder*) clearElementFourDmg;

- (BOOL) hasElementFiveDmg;
- (int32_t) elementFiveDmg;
- (MonsterProto_Builder*) setElementFiveDmg:(int32_t) value;
- (MonsterProto_Builder*) clearElementFiveDmg;
@end

@interface FullUserMonsterProto : PBGeneratedMessage {
@private
  BOOL hasIsComplete_:1;
  BOOL hasUserMonsterId_:1;
  BOOL hasUserId_:1;
  BOOL hasMonsterId_:1;
  BOOL hasEnhancementPercentage_:1;
  BOOL hasCurrentHealth_:1;
  BOOL hasNumPieces_:1;
  BOOL hasTeamSlotNum_:1;
  BOOL isComplete_:1;
  int64_t userMonsterId;
  int32_t userId;
  int32_t monsterId;
  int32_t enhancementPercentage;
  int32_t currentHealth;
  int32_t numPieces;
  int32_t teamSlotNum;
}
- (BOOL) hasUserMonsterId;
- (BOOL) hasUserId;
- (BOOL) hasMonsterId;
- (BOOL) hasEnhancementPercentage;
- (BOOL) hasCurrentHealth;
- (BOOL) hasNumPieces;
- (BOOL) hasIsComplete;
- (BOOL) hasTeamSlotNum;
@property (readonly) int64_t userMonsterId;
@property (readonly) int32_t userId;
@property (readonly) int32_t monsterId;
@property (readonly) int32_t enhancementPercentage;
@property (readonly) int32_t currentHealth;
@property (readonly) int32_t numPieces;
- (BOOL) isComplete;
@property (readonly) int32_t teamSlotNum;

+ (FullUserMonsterProto*) defaultInstance;
- (FullUserMonsterProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FullUserMonsterProto_Builder*) builder;
+ (FullUserMonsterProto_Builder*) builder;
+ (FullUserMonsterProto_Builder*) builderWithPrototype:(FullUserMonsterProto*) prototype;

+ (FullUserMonsterProto*) parseFromData:(NSData*) data;
+ (FullUserMonsterProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FullUserMonsterProto*) parseFromInputStream:(NSInputStream*) input;
+ (FullUserMonsterProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FullUserMonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FullUserMonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FullUserMonsterProto_Builder : PBGeneratedMessage_Builder {
@private
  FullUserMonsterProto* result;
}

- (FullUserMonsterProto*) defaultInstance;

- (FullUserMonsterProto_Builder*) clear;
- (FullUserMonsterProto_Builder*) clone;

- (FullUserMonsterProto*) build;
- (FullUserMonsterProto*) buildPartial;

- (FullUserMonsterProto_Builder*) mergeFrom:(FullUserMonsterProto*) other;
- (FullUserMonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FullUserMonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserMonsterId;
- (int64_t) userMonsterId;
- (FullUserMonsterProto_Builder*) setUserMonsterId:(int64_t) value;
- (FullUserMonsterProto_Builder*) clearUserMonsterId;

- (BOOL) hasUserId;
- (int32_t) userId;
- (FullUserMonsterProto_Builder*) setUserId:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearUserId;

- (BOOL) hasMonsterId;
- (int32_t) monsterId;
- (FullUserMonsterProto_Builder*) setMonsterId:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearMonsterId;

- (BOOL) hasEnhancementPercentage;
- (int32_t) enhancementPercentage;
- (FullUserMonsterProto_Builder*) setEnhancementPercentage:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearEnhancementPercentage;

- (BOOL) hasCurrentHealth;
- (int32_t) currentHealth;
- (FullUserMonsterProto_Builder*) setCurrentHealth:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearCurrentHealth;

- (BOOL) hasNumPieces;
- (int32_t) numPieces;
- (FullUserMonsterProto_Builder*) setNumPieces:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearNumPieces;

- (BOOL) hasIsComplete;
- (BOOL) isComplete;
- (FullUserMonsterProto_Builder*) setIsComplete:(BOOL) value;
- (FullUserMonsterProto_Builder*) clearIsComplete;

- (BOOL) hasTeamSlotNum;
- (int32_t) teamSlotNum;
- (FullUserMonsterProto_Builder*) setTeamSlotNum:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearTeamSlotNum;
@end

@interface UserMonsterHealingProto : PBGeneratedMessage {
@private
  BOOL hasUserMonsterId_:1;
  BOOL hasExpectedStartTimeMillis_:1;
  BOOL hasUserId_:1;
  int64_t userMonsterId;
  int64_t expectedStartTimeMillis;
  int32_t userId;
}
- (BOOL) hasUserId;
- (BOOL) hasUserMonsterId;
- (BOOL) hasExpectedStartTimeMillis;
@property (readonly) int32_t userId;
@property (readonly) int64_t userMonsterId;
@property (readonly) int64_t expectedStartTimeMillis;

+ (UserMonsterHealingProto*) defaultInstance;
- (UserMonsterHealingProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserMonsterHealingProto_Builder*) builder;
+ (UserMonsterHealingProto_Builder*) builder;
+ (UserMonsterHealingProto_Builder*) builderWithPrototype:(UserMonsterHealingProto*) prototype;

+ (UserMonsterHealingProto*) parseFromData:(NSData*) data;
+ (UserMonsterHealingProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserMonsterHealingProto*) parseFromInputStream:(NSInputStream*) input;
+ (UserMonsterHealingProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserMonsterHealingProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserMonsterHealingProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserMonsterHealingProto_Builder : PBGeneratedMessage_Builder {
@private
  UserMonsterHealingProto* result;
}

- (UserMonsterHealingProto*) defaultInstance;

- (UserMonsterHealingProto_Builder*) clear;
- (UserMonsterHealingProto_Builder*) clone;

- (UserMonsterHealingProto*) build;
- (UserMonsterHealingProto*) buildPartial;

- (UserMonsterHealingProto_Builder*) mergeFrom:(UserMonsterHealingProto*) other;
- (UserMonsterHealingProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserMonsterHealingProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (int32_t) userId;
- (UserMonsterHealingProto_Builder*) setUserId:(int32_t) value;
- (UserMonsterHealingProto_Builder*) clearUserId;

- (BOOL) hasUserMonsterId;
- (int64_t) userMonsterId;
- (UserMonsterHealingProto_Builder*) setUserMonsterId:(int64_t) value;
- (UserMonsterHealingProto_Builder*) clearUserMonsterId;

- (BOOL) hasExpectedStartTimeMillis;
- (int64_t) expectedStartTimeMillis;
- (UserMonsterHealingProto_Builder*) setExpectedStartTimeMillis:(int64_t) value;
- (UserMonsterHealingProto_Builder*) clearExpectedStartTimeMillis;
@end

