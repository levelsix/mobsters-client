// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Clan.pb.h"
// @@protoc_insertion_point(imports)

@implementation ClanRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ClanRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [BattleRoot registerAllExtensions:registry];
    [ChatRoot registerAllExtensions:registry];
    [MonsterStuffRoot registerAllExtensions:registry];
    [SharedEnumConfigRoot registerAllExtensions:registry];
    [StructureRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL UserClanStatusIsValidValue(UserClanStatus value) {
  switch (value) {
    case UserClanStatusLeader:
    case UserClanStatusJuniorLeader:
    case UserClanStatusCaptain:
    case UserClanStatusMember:
    case UserClanStatusRequesting:
      return YES;
    default:
      return NO;
  }
}
@interface FullClanProto ()
@property (strong) NSString* clanUuid;
@property (strong) NSString* name;
@property int64_t createTime;
@property (strong) NSString* description;
@property (strong) NSString* tag;
@property BOOL requestToJoinRequired;
@property int32_t clanIconId;
@end

@implementation FullClanProto

- (BOOL) hasClanUuid {
  return !!hasClanUuid_;
}
- (void) setHasClanUuid:(BOOL) value_ {
  hasClanUuid_ = !!value_;
}
@synthesize clanUuid;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) value_ {
  hasCreateTime_ = !!value_;
}
@synthesize createTime;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) value_ {
  hasDescription_ = !!value_;
}
@synthesize description;
- (BOOL) hasTag {
  return !!hasTag_;
}
- (void) setHasTag:(BOOL) value_ {
  hasTag_ = !!value_;
}
@synthesize tag;
- (BOOL) hasRequestToJoinRequired {
  return !!hasRequestToJoinRequired_;
}
- (void) setHasRequestToJoinRequired:(BOOL) value_ {
  hasRequestToJoinRequired_ = !!value_;
}
- (BOOL) requestToJoinRequired {
  return !!requestToJoinRequired_;
}
- (void) setRequestToJoinRequired:(BOOL) value_ {
  requestToJoinRequired_ = !!value_;
}
- (BOOL) hasClanIconId {
  return !!hasClanIconId_;
}
- (void) setHasClanIconId:(BOOL) value_ {
  hasClanIconId_ = !!value_;
}
@synthesize clanIconId;
- (id) init {
  if ((self = [super init])) {
    self.clanUuid = @"";
    self.name = @"";
    self.createTime = 0L;
    self.description = @"";
    self.tag = @"";
    self.requestToJoinRequired = NO;
    self.clanIconId = 0;
  }
  return self;
}
static FullClanProto* defaultFullClanProtoInstance = nil;
+ (void) initialize {
  if (self == [FullClanProto class]) {
    defaultFullClanProtoInstance = [[FullClanProto alloc] init];
  }
}
+ (FullClanProto*) defaultInstance {
  return defaultFullClanProtoInstance;
}
- (FullClanProto*) defaultInstance {
  return defaultFullClanProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasClanUuid) {
    [output writeString:1 value:self.clanUuid];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasCreateTime) {
    [output writeInt64:4 value:self.createTime];
  }
  if (self.hasDescription) {
    [output writeString:5 value:self.description];
  }
  if (self.hasTag) {
    [output writeString:6 value:self.tag];
  }
  if (self.hasRequestToJoinRequired) {
    [output writeBool:7 value:self.requestToJoinRequired];
  }
  if (self.hasClanIconId) {
    [output writeInt32:8 value:self.clanIconId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasClanUuid) {
    size_ += computeStringSize(1, self.clanUuid);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasCreateTime) {
    size_ += computeInt64Size(4, self.createTime);
  }
  if (self.hasDescription) {
    size_ += computeStringSize(5, self.description);
  }
  if (self.hasTag) {
    size_ += computeStringSize(6, self.tag);
  }
  if (self.hasRequestToJoinRequired) {
    size_ += computeBoolSize(7, self.requestToJoinRequired);
  }
  if (self.hasClanIconId) {
    size_ += computeInt32Size(8, self.clanIconId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FullClanProto*) parseFromData:(NSData*) data {
  return (FullClanProto*)[[[FullClanProto builder] mergeFromData:data] build];
}
+ (FullClanProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullClanProto*)[[[FullClanProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullClanProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullClanProto*)[[[FullClanProto builder] mergeFromInputStream:input] build];
}
+ (FullClanProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullClanProto*)[[[FullClanProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullClanProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullClanProto*)[[[FullClanProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullClanProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullClanProto*)[[[FullClanProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullClanProto_Builder*) builder {
  return [[FullClanProto_Builder alloc] init];
}
+ (FullClanProto_Builder*) builderWithPrototype:(FullClanProto*) prototype {
  return [[FullClanProto builder] mergeFrom:prototype];
}
- (FullClanProto_Builder*) builder {
  return [FullClanProto builder];
}
- (FullClanProto_Builder*) toBuilder {
  return [FullClanProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasClanUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanUuid", self.clanUuid];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasCreateTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createTime", [NSNumber numberWithLongLong:self.createTime]];
  }
  if (self.hasDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"description", self.description];
  }
  if (self.hasTag) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tag", self.tag];
  }
  if (self.hasRequestToJoinRequired) {
    [output appendFormat:@"%@%@: %@\n", indent, @"requestToJoinRequired", [NSNumber numberWithBool:self.requestToJoinRequired]];
  }
  if (self.hasClanIconId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanIconId", [NSNumber numberWithInteger:self.clanIconId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FullClanProto class]]) {
    return NO;
  }
  FullClanProto *otherMessage = other;
  return
      self.hasClanUuid == otherMessage.hasClanUuid &&
      (!self.hasClanUuid || [self.clanUuid isEqual:otherMessage.clanUuid]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasCreateTime == otherMessage.hasCreateTime &&
      (!self.hasCreateTime || self.createTime == otherMessage.createTime) &&
      self.hasDescription == otherMessage.hasDescription &&
      (!self.hasDescription || [self.description isEqual:otherMessage.description]) &&
      self.hasTag == otherMessage.hasTag &&
      (!self.hasTag || [self.tag isEqual:otherMessage.tag]) &&
      self.hasRequestToJoinRequired == otherMessage.hasRequestToJoinRequired &&
      (!self.hasRequestToJoinRequired || self.requestToJoinRequired == otherMessage.requestToJoinRequired) &&
      self.hasClanIconId == otherMessage.hasClanIconId &&
      (!self.hasClanIconId || self.clanIconId == otherMessage.clanIconId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasClanUuid) {
    hashCode = hashCode * 31 + [self.clanUuid hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasCreateTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createTime] hash];
  }
  if (self.hasDescription) {
    hashCode = hashCode * 31 + [self.description hash];
  }
  if (self.hasTag) {
    hashCode = hashCode * 31 + [self.tag hash];
  }
  if (self.hasRequestToJoinRequired) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.requestToJoinRequired] hash];
  }
  if (self.hasClanIconId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clanIconId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FullClanProto_Builder()
@property (strong) FullClanProto* result;
@end

@implementation FullClanProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[FullClanProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullClanProto_Builder*) clear {
  self.result = [[FullClanProto alloc] init];
  return self;
}
- (FullClanProto_Builder*) clone {
  return [FullClanProto builderWithPrototype:result];
}
- (FullClanProto*) defaultInstance {
  return [FullClanProto defaultInstance];
}
- (FullClanProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullClanProto*) buildPartial {
  FullClanProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (FullClanProto_Builder*) mergeFrom:(FullClanProto*) other {
  if (other == [FullClanProto defaultInstance]) {
    return self;
  }
  if (other.hasClanUuid) {
    [self setClanUuid:other.clanUuid];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  if (other.hasDescription) {
    [self setDescription:other.description];
  }
  if (other.hasTag) {
    [self setTag:other.tag];
  }
  if (other.hasRequestToJoinRequired) {
    [self setRequestToJoinRequired:other.requestToJoinRequired];
  }
  if (other.hasClanIconId) {
    [self setClanIconId:other.clanIconId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullClanProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullClanProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setClanUuid:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 32: {
        [self setCreateTime:[input readInt64]];
        break;
      }
      case 42: {
        [self setDescription:[input readString]];
        break;
      }
      case 50: {
        [self setTag:[input readString]];
        break;
      }
      case 56: {
        [self setRequestToJoinRequired:[input readBool]];
        break;
      }
      case 64: {
        [self setClanIconId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasClanUuid {
  return result.hasClanUuid;
}
- (NSString*) clanUuid {
  return result.clanUuid;
}
- (FullClanProto_Builder*) setClanUuid:(NSString*) value {
  result.hasClanUuid = YES;
  result.clanUuid = value;
  return self;
}
- (FullClanProto_Builder*) clearClanUuid {
  result.hasClanUuid = NO;
  result.clanUuid = @"";
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (FullClanProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (FullClanProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasCreateTime {
  return result.hasCreateTime;
}
- (int64_t) createTime {
  return result.createTime;
}
- (FullClanProto_Builder*) setCreateTime:(int64_t) value {
  result.hasCreateTime = YES;
  result.createTime = value;
  return self;
}
- (FullClanProto_Builder*) clearCreateTime {
  result.hasCreateTime = NO;
  result.createTime = 0L;
  return self;
}
- (BOOL) hasDescription {
  return result.hasDescription;
}
- (NSString*) description {
  return result.description;
}
- (FullClanProto_Builder*) setDescription:(NSString*) value {
  result.hasDescription = YES;
  result.description = value;
  return self;
}
- (FullClanProto_Builder*) clearDescription {
  result.hasDescription = NO;
  result.description = @"";
  return self;
}
- (BOOL) hasTag {
  return result.hasTag;
}
- (NSString*) tag {
  return result.tag;
}
- (FullClanProto_Builder*) setTag:(NSString*) value {
  result.hasTag = YES;
  result.tag = value;
  return self;
}
- (FullClanProto_Builder*) clearTag {
  result.hasTag = NO;
  result.tag = @"";
  return self;
}
- (BOOL) hasRequestToJoinRequired {
  return result.hasRequestToJoinRequired;
}
- (BOOL) requestToJoinRequired {
  return result.requestToJoinRequired;
}
- (FullClanProto_Builder*) setRequestToJoinRequired:(BOOL) value {
  result.hasRequestToJoinRequired = YES;
  result.requestToJoinRequired = value;
  return self;
}
- (FullClanProto_Builder*) clearRequestToJoinRequired {
  result.hasRequestToJoinRequired = NO;
  result.requestToJoinRequired = NO;
  return self;
}
- (BOOL) hasClanIconId {
  return result.hasClanIconId;
}
- (int32_t) clanIconId {
  return result.clanIconId;
}
- (FullClanProto_Builder*) setClanIconId:(int32_t) value {
  result.hasClanIconId = YES;
  result.clanIconId = value;
  return self;
}
- (FullClanProto_Builder*) clearClanIconId {
  result.hasClanIconId = NO;
  result.clanIconId = 0;
  return self;
}
@end

@interface FullUserClanProto ()
@property (strong) NSString* userUuid;
@property (strong) NSString* clanUuid;
@property UserClanStatus status;
@property int64_t requestTime;
@end

@implementation FullUserClanProto

- (BOOL) hasUserUuid {
  return !!hasUserUuid_;
}
- (void) setHasUserUuid:(BOOL) value_ {
  hasUserUuid_ = !!value_;
}
@synthesize userUuid;
- (BOOL) hasClanUuid {
  return !!hasClanUuid_;
}
- (void) setHasClanUuid:(BOOL) value_ {
  hasClanUuid_ = !!value_;
}
@synthesize clanUuid;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasRequestTime {
  return !!hasRequestTime_;
}
- (void) setHasRequestTime:(BOOL) value_ {
  hasRequestTime_ = !!value_;
}
@synthesize requestTime;
- (id) init {
  if ((self = [super init])) {
    self.userUuid = @"";
    self.clanUuid = @"";
    self.status = UserClanStatusLeader;
    self.requestTime = 0L;
  }
  return self;
}
static FullUserClanProto* defaultFullUserClanProtoInstance = nil;
+ (void) initialize {
  if (self == [FullUserClanProto class]) {
    defaultFullUserClanProtoInstance = [[FullUserClanProto alloc] init];
  }
}
+ (FullUserClanProto*) defaultInstance {
  return defaultFullUserClanProtoInstance;
}
- (FullUserClanProto*) defaultInstance {
  return defaultFullUserClanProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserUuid) {
    [output writeString:1 value:self.userUuid];
  }
  if (self.hasClanUuid) {
    [output writeString:2 value:self.clanUuid];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  if (self.hasRequestTime) {
    [output writeInt64:4 value:self.requestTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserUuid) {
    size_ += computeStringSize(1, self.userUuid);
  }
  if (self.hasClanUuid) {
    size_ += computeStringSize(2, self.clanUuid);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(3, self.status);
  }
  if (self.hasRequestTime) {
    size_ += computeInt64Size(4, self.requestTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FullUserClanProto*) parseFromData:(NSData*) data {
  return (FullUserClanProto*)[[[FullUserClanProto builder] mergeFromData:data] build];
}
+ (FullUserClanProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserClanProto*)[[[FullUserClanProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullUserClanProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullUserClanProto*)[[[FullUserClanProto builder] mergeFromInputStream:input] build];
}
+ (FullUserClanProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserClanProto*)[[[FullUserClanProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserClanProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullUserClanProto*)[[[FullUserClanProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullUserClanProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserClanProto*)[[[FullUserClanProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserClanProto_Builder*) builder {
  return [[FullUserClanProto_Builder alloc] init];
}
+ (FullUserClanProto_Builder*) builderWithPrototype:(FullUserClanProto*) prototype {
  return [[FullUserClanProto builder] mergeFrom:prototype];
}
- (FullUserClanProto_Builder*) builder {
  return [FullUserClanProto builder];
}
- (FullUserClanProto_Builder*) toBuilder {
  return [FullUserClanProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userUuid", self.userUuid];
  }
  if (self.hasClanUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanUuid", self.clanUuid];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasRequestTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"requestTime", [NSNumber numberWithLongLong:self.requestTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FullUserClanProto class]]) {
    return NO;
  }
  FullUserClanProto *otherMessage = other;
  return
      self.hasUserUuid == otherMessage.hasUserUuid &&
      (!self.hasUserUuid || [self.userUuid isEqual:otherMessage.userUuid]) &&
      self.hasClanUuid == otherMessage.hasClanUuid &&
      (!self.hasClanUuid || [self.clanUuid isEqual:otherMessage.clanUuid]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasRequestTime == otherMessage.hasRequestTime &&
      (!self.hasRequestTime || self.requestTime == otherMessage.requestTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserUuid) {
    hashCode = hashCode * 31 + [self.userUuid hash];
  }
  if (self.hasClanUuid) {
    hashCode = hashCode * 31 + [self.clanUuid hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasRequestTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.requestTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FullUserClanProto_Builder()
@property (strong) FullUserClanProto* result;
@end

@implementation FullUserClanProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[FullUserClanProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullUserClanProto_Builder*) clear {
  self.result = [[FullUserClanProto alloc] init];
  return self;
}
- (FullUserClanProto_Builder*) clone {
  return [FullUserClanProto builderWithPrototype:result];
}
- (FullUserClanProto*) defaultInstance {
  return [FullUserClanProto defaultInstance];
}
- (FullUserClanProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullUserClanProto*) buildPartial {
  FullUserClanProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (FullUserClanProto_Builder*) mergeFrom:(FullUserClanProto*) other {
  if (other == [FullUserClanProto defaultInstance]) {
    return self;
  }
  if (other.hasUserUuid) {
    [self setUserUuid:other.userUuid];
  }
  if (other.hasClanUuid) {
    [self setClanUuid:other.clanUuid];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasRequestTime) {
    [self setRequestTime:other.requestTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullUserClanProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullUserClanProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserUuid:[input readString]];
        break;
      }
      case 18: {
        [self setClanUuid:[input readString]];
        break;
      }
      case 24: {
        UserClanStatus value = (UserClanStatus)[input readEnum];
        if (UserClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        [self setRequestTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUserUuid {
  return result.hasUserUuid;
}
- (NSString*) userUuid {
  return result.userUuid;
}
- (FullUserClanProto_Builder*) setUserUuid:(NSString*) value {
  result.hasUserUuid = YES;
  result.userUuid = value;
  return self;
}
- (FullUserClanProto_Builder*) clearUserUuid {
  result.hasUserUuid = NO;
  result.userUuid = @"";
  return self;
}
- (BOOL) hasClanUuid {
  return result.hasClanUuid;
}
- (NSString*) clanUuid {
  return result.clanUuid;
}
- (FullUserClanProto_Builder*) setClanUuid:(NSString*) value {
  result.hasClanUuid = YES;
  result.clanUuid = value;
  return self;
}
- (FullUserClanProto_Builder*) clearClanUuid {
  result.hasClanUuid = NO;
  result.clanUuid = @"";
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (UserClanStatus) status {
  return result.status;
}
- (FullUserClanProto_Builder*) setStatus:(UserClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (FullUserClanProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = UserClanStatusLeader;
  return self;
}
- (BOOL) hasRequestTime {
  return result.hasRequestTime;
}
- (int64_t) requestTime {
  return result.requestTime;
}
- (FullUserClanProto_Builder*) setRequestTime:(int64_t) value {
  result.hasRequestTime = YES;
  result.requestTime = value;
  return self;
}
- (FullUserClanProto_Builder*) clearRequestTime {
  result.hasRequestTime = NO;
  result.requestTime = 0L;
  return self;
}
@end

@interface FullClanProtoWithClanSize ()
@property (strong) FullClanProto* clan;
@property int32_t clanSize;
@end

@implementation FullClanProtoWithClanSize

- (BOOL) hasClan {
  return !!hasClan_;
}
- (void) setHasClan:(BOOL) value_ {
  hasClan_ = !!value_;
}
@synthesize clan;
- (BOOL) hasClanSize {
  return !!hasClanSize_;
}
- (void) setHasClanSize:(BOOL) value_ {
  hasClanSize_ = !!value_;
}
@synthesize clanSize;
- (id) init {
  if ((self = [super init])) {
    self.clan = [FullClanProto defaultInstance];
    self.clanSize = 0;
  }
  return self;
}
static FullClanProtoWithClanSize* defaultFullClanProtoWithClanSizeInstance = nil;
+ (void) initialize {
  if (self == [FullClanProtoWithClanSize class]) {
    defaultFullClanProtoWithClanSizeInstance = [[FullClanProtoWithClanSize alloc] init];
  }
}
+ (FullClanProtoWithClanSize*) defaultInstance {
  return defaultFullClanProtoWithClanSizeInstance;
}
- (FullClanProtoWithClanSize*) defaultInstance {
  return defaultFullClanProtoWithClanSizeInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasClan) {
    [output writeMessage:1 value:self.clan];
  }
  if (self.hasClanSize) {
    [output writeInt32:2 value:self.clanSize];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasClan) {
    size_ += computeMessageSize(1, self.clan);
  }
  if (self.hasClanSize) {
    size_ += computeInt32Size(2, self.clanSize);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FullClanProtoWithClanSize*) parseFromData:(NSData*) data {
  return (FullClanProtoWithClanSize*)[[[FullClanProtoWithClanSize builder] mergeFromData:data] build];
}
+ (FullClanProtoWithClanSize*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullClanProtoWithClanSize*)[[[FullClanProtoWithClanSize builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullClanProtoWithClanSize*) parseFromInputStream:(NSInputStream*) input {
  return (FullClanProtoWithClanSize*)[[[FullClanProtoWithClanSize builder] mergeFromInputStream:input] build];
}
+ (FullClanProtoWithClanSize*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullClanProtoWithClanSize*)[[[FullClanProtoWithClanSize builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullClanProtoWithClanSize*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullClanProtoWithClanSize*)[[[FullClanProtoWithClanSize builder] mergeFromCodedInputStream:input] build];
}
+ (FullClanProtoWithClanSize*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullClanProtoWithClanSize*)[[[FullClanProtoWithClanSize builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullClanProtoWithClanSize_Builder*) builder {
  return [[FullClanProtoWithClanSize_Builder alloc] init];
}
+ (FullClanProtoWithClanSize_Builder*) builderWithPrototype:(FullClanProtoWithClanSize*) prototype {
  return [[FullClanProtoWithClanSize builder] mergeFrom:prototype];
}
- (FullClanProtoWithClanSize_Builder*) builder {
  return [FullClanProtoWithClanSize builder];
}
- (FullClanProtoWithClanSize_Builder*) toBuilder {
  return [FullClanProtoWithClanSize builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasClan) {
    [output appendFormat:@"%@%@ {\n", indent, @"clan"];
    [self.clan writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClanSize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanSize", [NSNumber numberWithInteger:self.clanSize]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FullClanProtoWithClanSize class]]) {
    return NO;
  }
  FullClanProtoWithClanSize *otherMessage = other;
  return
      self.hasClan == otherMessage.hasClan &&
      (!self.hasClan || [self.clan isEqual:otherMessage.clan]) &&
      self.hasClanSize == otherMessage.hasClanSize &&
      (!self.hasClanSize || self.clanSize == otherMessage.clanSize) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasClan) {
    hashCode = hashCode * 31 + [self.clan hash];
  }
  if (self.hasClanSize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clanSize] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FullClanProtoWithClanSize_Builder()
@property (strong) FullClanProtoWithClanSize* result;
@end

@implementation FullClanProtoWithClanSize_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[FullClanProtoWithClanSize alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullClanProtoWithClanSize_Builder*) clear {
  self.result = [[FullClanProtoWithClanSize alloc] init];
  return self;
}
- (FullClanProtoWithClanSize_Builder*) clone {
  return [FullClanProtoWithClanSize builderWithPrototype:result];
}
- (FullClanProtoWithClanSize*) defaultInstance {
  return [FullClanProtoWithClanSize defaultInstance];
}
- (FullClanProtoWithClanSize*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullClanProtoWithClanSize*) buildPartial {
  FullClanProtoWithClanSize* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (FullClanProtoWithClanSize_Builder*) mergeFrom:(FullClanProtoWithClanSize*) other {
  if (other == [FullClanProtoWithClanSize defaultInstance]) {
    return self;
  }
  if (other.hasClan) {
    [self mergeClan:other.clan];
  }
  if (other.hasClanSize) {
    [self setClanSize:other.clanSize];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullClanProtoWithClanSize_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullClanProtoWithClanSize_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        FullClanProto_Builder* subBuilder = [FullClanProto builder];
        if (self.hasClan) {
          [subBuilder mergeFrom:self.clan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClan:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setClanSize:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasClan {
  return result.hasClan;
}
- (FullClanProto*) clan {
  return result.clan;
}
- (FullClanProtoWithClanSize_Builder*) setClan:(FullClanProto*) value {
  result.hasClan = YES;
  result.clan = value;
  return self;
}
- (FullClanProtoWithClanSize_Builder*) setClan_Builder:(FullClanProto_Builder*) builderForValue {
  return [self setClan:[builderForValue build]];
}
- (FullClanProtoWithClanSize_Builder*) mergeClan:(FullClanProto*) value {
  if (result.hasClan &&
      result.clan != [FullClanProto defaultInstance]) {
    result.clan =
      [[[FullClanProto builderWithPrototype:result.clan] mergeFrom:value] buildPartial];
  } else {
    result.clan = value;
  }
  result.hasClan = YES;
  return self;
}
- (FullClanProtoWithClanSize_Builder*) clearClan {
  result.hasClan = NO;
  result.clan = [FullClanProto defaultInstance];
  return self;
}
- (BOOL) hasClanSize {
  return result.hasClanSize;
}
- (int32_t) clanSize {
  return result.clanSize;
}
- (FullClanProtoWithClanSize_Builder*) setClanSize:(int32_t) value {
  result.hasClanSize = YES;
  result.clanSize = value;
  return self;
}
- (FullClanProtoWithClanSize_Builder*) clearClanSize {
  result.hasClanSize = NO;
  result.clanSize = 0;
  return self;
}
@end

@interface MinimumUserProtoForClans ()
@property (strong) MinimumUserProtoWithLevel* minUserProtoWithLevel;
@property UserClanStatus clanStatus;
@property Float32 raidContribution;
@property int32_t battlesWon;
@property int32_t numClanHelpsSolicited;
@property int32_t numClanHelpsGiven;
@end

@implementation MinimumUserProtoForClans

- (BOOL) hasMinUserProtoWithLevel {
  return !!hasMinUserProtoWithLevel_;
}
- (void) setHasMinUserProtoWithLevel:(BOOL) value_ {
  hasMinUserProtoWithLevel_ = !!value_;
}
@synthesize minUserProtoWithLevel;
- (BOOL) hasClanStatus {
  return !!hasClanStatus_;
}
- (void) setHasClanStatus:(BOOL) value_ {
  hasClanStatus_ = !!value_;
}
@synthesize clanStatus;
- (BOOL) hasRaidContribution {
  return !!hasRaidContribution_;
}
- (void) setHasRaidContribution:(BOOL) value_ {
  hasRaidContribution_ = !!value_;
}
@synthesize raidContribution;
- (BOOL) hasBattlesWon {
  return !!hasBattlesWon_;
}
- (void) setHasBattlesWon:(BOOL) value_ {
  hasBattlesWon_ = !!value_;
}
@synthesize battlesWon;
- (BOOL) hasNumClanHelpsSolicited {
  return !!hasNumClanHelpsSolicited_;
}
- (void) setHasNumClanHelpsSolicited:(BOOL) value_ {
  hasNumClanHelpsSolicited_ = !!value_;
}
@synthesize numClanHelpsSolicited;
- (BOOL) hasNumClanHelpsGiven {
  return !!hasNumClanHelpsGiven_;
}
- (void) setHasNumClanHelpsGiven:(BOOL) value_ {
  hasNumClanHelpsGiven_ = !!value_;
}
@synthesize numClanHelpsGiven;
- (id) init {
  if ((self = [super init])) {
    self.minUserProtoWithLevel = [MinimumUserProtoWithLevel defaultInstance];
    self.clanStatus = UserClanStatusLeader;
    self.raidContribution = 0;
    self.battlesWon = 0;
    self.numClanHelpsSolicited = 0;
    self.numClanHelpsGiven = 0;
  }
  return self;
}
static MinimumUserProtoForClans* defaultMinimumUserProtoForClansInstance = nil;
+ (void) initialize {
  if (self == [MinimumUserProtoForClans class]) {
    defaultMinimumUserProtoForClansInstance = [[MinimumUserProtoForClans alloc] init];
  }
}
+ (MinimumUserProtoForClans*) defaultInstance {
  return defaultMinimumUserProtoForClansInstance;
}
- (MinimumUserProtoForClans*) defaultInstance {
  return defaultMinimumUserProtoForClansInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMinUserProtoWithLevel) {
    [output writeMessage:1 value:self.minUserProtoWithLevel];
  }
  if (self.hasClanStatus) {
    [output writeEnum:2 value:self.clanStatus];
  }
  if (self.hasRaidContribution) {
    [output writeFloat:3 value:self.raidContribution];
  }
  if (self.hasBattlesWon) {
    [output writeInt32:4 value:self.battlesWon];
  }
  if (self.hasNumClanHelpsSolicited) {
    [output writeInt32:5 value:self.numClanHelpsSolicited];
  }
  if (self.hasNumClanHelpsGiven) {
    [output writeInt32:6 value:self.numClanHelpsGiven];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMinUserProtoWithLevel) {
    size_ += computeMessageSize(1, self.minUserProtoWithLevel);
  }
  if (self.hasClanStatus) {
    size_ += computeEnumSize(2, self.clanStatus);
  }
  if (self.hasRaidContribution) {
    size_ += computeFloatSize(3, self.raidContribution);
  }
  if (self.hasBattlesWon) {
    size_ += computeInt32Size(4, self.battlesWon);
  }
  if (self.hasNumClanHelpsSolicited) {
    size_ += computeInt32Size(5, self.numClanHelpsSolicited);
  }
  if (self.hasNumClanHelpsGiven) {
    size_ += computeInt32Size(6, self.numClanHelpsGiven);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MinimumUserProtoForClans*) parseFromData:(NSData*) data {
  return (MinimumUserProtoForClans*)[[[MinimumUserProtoForClans builder] mergeFromData:data] build];
}
+ (MinimumUserProtoForClans*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProtoForClans*)[[[MinimumUserProtoForClans builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProtoForClans*) parseFromInputStream:(NSInputStream*) input {
  return (MinimumUserProtoForClans*)[[[MinimumUserProtoForClans builder] mergeFromInputStream:input] build];
}
+ (MinimumUserProtoForClans*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProtoForClans*)[[[MinimumUserProtoForClans builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProtoForClans*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MinimumUserProtoForClans*)[[[MinimumUserProtoForClans builder] mergeFromCodedInputStream:input] build];
}
+ (MinimumUserProtoForClans*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProtoForClans*)[[[MinimumUserProtoForClans builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProtoForClans_Builder*) builder {
  return [[MinimumUserProtoForClans_Builder alloc] init];
}
+ (MinimumUserProtoForClans_Builder*) builderWithPrototype:(MinimumUserProtoForClans*) prototype {
  return [[MinimumUserProtoForClans builder] mergeFrom:prototype];
}
- (MinimumUserProtoForClans_Builder*) builder {
  return [MinimumUserProtoForClans builder];
}
- (MinimumUserProtoForClans_Builder*) toBuilder {
  return [MinimumUserProtoForClans builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMinUserProtoWithLevel) {
    [output appendFormat:@"%@%@ {\n", indent, @"minUserProtoWithLevel"];
    [self.minUserProtoWithLevel writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClanStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanStatus", [NSNumber numberWithInteger:self.clanStatus]];
  }
  if (self.hasRaidContribution) {
    [output appendFormat:@"%@%@: %@\n", indent, @"raidContribution", [NSNumber numberWithFloat:self.raidContribution]];
  }
  if (self.hasBattlesWon) {
    [output appendFormat:@"%@%@: %@\n", indent, @"battlesWon", [NSNumber numberWithInteger:self.battlesWon]];
  }
  if (self.hasNumClanHelpsSolicited) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numClanHelpsSolicited", [NSNumber numberWithInteger:self.numClanHelpsSolicited]];
  }
  if (self.hasNumClanHelpsGiven) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numClanHelpsGiven", [NSNumber numberWithInteger:self.numClanHelpsGiven]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MinimumUserProtoForClans class]]) {
    return NO;
  }
  MinimumUserProtoForClans *otherMessage = other;
  return
      self.hasMinUserProtoWithLevel == otherMessage.hasMinUserProtoWithLevel &&
      (!self.hasMinUserProtoWithLevel || [self.minUserProtoWithLevel isEqual:otherMessage.minUserProtoWithLevel]) &&
      self.hasClanStatus == otherMessage.hasClanStatus &&
      (!self.hasClanStatus || self.clanStatus == otherMessage.clanStatus) &&
      self.hasRaidContribution == otherMessage.hasRaidContribution &&
      (!self.hasRaidContribution || self.raidContribution == otherMessage.raidContribution) &&
      self.hasBattlesWon == otherMessage.hasBattlesWon &&
      (!self.hasBattlesWon || self.battlesWon == otherMessage.battlesWon) &&
      self.hasNumClanHelpsSolicited == otherMessage.hasNumClanHelpsSolicited &&
      (!self.hasNumClanHelpsSolicited || self.numClanHelpsSolicited == otherMessage.numClanHelpsSolicited) &&
      self.hasNumClanHelpsGiven == otherMessage.hasNumClanHelpsGiven &&
      (!self.hasNumClanHelpsGiven || self.numClanHelpsGiven == otherMessage.numClanHelpsGiven) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMinUserProtoWithLevel) {
    hashCode = hashCode * 31 + [self.minUserProtoWithLevel hash];
  }
  if (self.hasClanStatus) {
    hashCode = hashCode * 31 + self.clanStatus;
  }
  if (self.hasRaidContribution) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.raidContribution] hash];
  }
  if (self.hasBattlesWon) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.battlesWon] hash];
  }
  if (self.hasNumClanHelpsSolicited) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numClanHelpsSolicited] hash];
  }
  if (self.hasNumClanHelpsGiven) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numClanHelpsGiven] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MinimumUserProtoForClans_Builder()
@property (strong) MinimumUserProtoForClans* result;
@end

@implementation MinimumUserProtoForClans_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[MinimumUserProtoForClans alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MinimumUserProtoForClans_Builder*) clear {
  self.result = [[MinimumUserProtoForClans alloc] init];
  return self;
}
- (MinimumUserProtoForClans_Builder*) clone {
  return [MinimumUserProtoForClans builderWithPrototype:result];
}
- (MinimumUserProtoForClans*) defaultInstance {
  return [MinimumUserProtoForClans defaultInstance];
}
- (MinimumUserProtoForClans*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MinimumUserProtoForClans*) buildPartial {
  MinimumUserProtoForClans* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (MinimumUserProtoForClans_Builder*) mergeFrom:(MinimumUserProtoForClans*) other {
  if (other == [MinimumUserProtoForClans defaultInstance]) {
    return self;
  }
  if (other.hasMinUserProtoWithLevel) {
    [self mergeMinUserProtoWithLevel:other.minUserProtoWithLevel];
  }
  if (other.hasClanStatus) {
    [self setClanStatus:other.clanStatus];
  }
  if (other.hasRaidContribution) {
    [self setRaidContribution:other.raidContribution];
  }
  if (other.hasBattlesWon) {
    [self setBattlesWon:other.battlesWon];
  }
  if (other.hasNumClanHelpsSolicited) {
    [self setNumClanHelpsSolicited:other.numClanHelpsSolicited];
  }
  if (other.hasNumClanHelpsGiven) {
    [self setNumClanHelpsGiven:other.numClanHelpsGiven];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MinimumUserProtoForClans_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MinimumUserProtoForClans_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithLevel_Builder* subBuilder = [MinimumUserProtoWithLevel builder];
        if (self.hasMinUserProtoWithLevel) {
          [subBuilder mergeFrom:self.minUserProtoWithLevel];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinUserProtoWithLevel:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        UserClanStatus value = (UserClanStatus)[input readEnum];
        if (UserClanStatusIsValidValue(value)) {
          [self setClanStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 29: {
        [self setRaidContribution:[input readFloat]];
        break;
      }
      case 32: {
        [self setBattlesWon:[input readInt32]];
        break;
      }
      case 40: {
        [self setNumClanHelpsSolicited:[input readInt32]];
        break;
      }
      case 48: {
        [self setNumClanHelpsGiven:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasMinUserProtoWithLevel {
  return result.hasMinUserProtoWithLevel;
}
- (MinimumUserProtoWithLevel*) minUserProtoWithLevel {
  return result.minUserProtoWithLevel;
}
- (MinimumUserProtoForClans_Builder*) setMinUserProtoWithLevel:(MinimumUserProtoWithLevel*) value {
  result.hasMinUserProtoWithLevel = YES;
  result.minUserProtoWithLevel = value;
  return self;
}
- (MinimumUserProtoForClans_Builder*) setMinUserProtoWithLevel_Builder:(MinimumUserProtoWithLevel_Builder*) builderForValue {
  return [self setMinUserProtoWithLevel:[builderForValue build]];
}
- (MinimumUserProtoForClans_Builder*) mergeMinUserProtoWithLevel:(MinimumUserProtoWithLevel*) value {
  if (result.hasMinUserProtoWithLevel &&
      result.minUserProtoWithLevel != [MinimumUserProtoWithLevel defaultInstance]) {
    result.minUserProtoWithLevel =
      [[[MinimumUserProtoWithLevel builderWithPrototype:result.minUserProtoWithLevel] mergeFrom:value] buildPartial];
  } else {
    result.minUserProtoWithLevel = value;
  }
  result.hasMinUserProtoWithLevel = YES;
  return self;
}
- (MinimumUserProtoForClans_Builder*) clearMinUserProtoWithLevel {
  result.hasMinUserProtoWithLevel = NO;
  result.minUserProtoWithLevel = [MinimumUserProtoWithLevel defaultInstance];
  return self;
}
- (BOOL) hasClanStatus {
  return result.hasClanStatus;
}
- (UserClanStatus) clanStatus {
  return result.clanStatus;
}
- (MinimumUserProtoForClans_Builder*) setClanStatus:(UserClanStatus) value {
  result.hasClanStatus = YES;
  result.clanStatus = value;
  return self;
}
- (MinimumUserProtoForClans_Builder*) clearClanStatus {
  result.hasClanStatus = NO;
  result.clanStatus = UserClanStatusLeader;
  return self;
}
- (BOOL) hasRaidContribution {
  return result.hasRaidContribution;
}
- (Float32) raidContribution {
  return result.raidContribution;
}
- (MinimumUserProtoForClans_Builder*) setRaidContribution:(Float32) value {
  result.hasRaidContribution = YES;
  result.raidContribution = value;
  return self;
}
- (MinimumUserProtoForClans_Builder*) clearRaidContribution {
  result.hasRaidContribution = NO;
  result.raidContribution = 0;
  return self;
}
- (BOOL) hasBattlesWon {
  return result.hasBattlesWon;
}
- (int32_t) battlesWon {
  return result.battlesWon;
}
- (MinimumUserProtoForClans_Builder*) setBattlesWon:(int32_t) value {
  result.hasBattlesWon = YES;
  result.battlesWon = value;
  return self;
}
- (MinimumUserProtoForClans_Builder*) clearBattlesWon {
  result.hasBattlesWon = NO;
  result.battlesWon = 0;
  return self;
}
- (BOOL) hasNumClanHelpsSolicited {
  return result.hasNumClanHelpsSolicited;
}
- (int32_t) numClanHelpsSolicited {
  return result.numClanHelpsSolicited;
}
- (MinimumUserProtoForClans_Builder*) setNumClanHelpsSolicited:(int32_t) value {
  result.hasNumClanHelpsSolicited = YES;
  result.numClanHelpsSolicited = value;
  return self;
}
- (MinimumUserProtoForClans_Builder*) clearNumClanHelpsSolicited {
  result.hasNumClanHelpsSolicited = NO;
  result.numClanHelpsSolicited = 0;
  return self;
}
- (BOOL) hasNumClanHelpsGiven {
  return result.hasNumClanHelpsGiven;
}
- (int32_t) numClanHelpsGiven {
  return result.numClanHelpsGiven;
}
- (MinimumUserProtoForClans_Builder*) setNumClanHelpsGiven:(int32_t) value {
  result.hasNumClanHelpsGiven = YES;
  result.numClanHelpsGiven = value;
  return self;
}
- (MinimumUserProtoForClans_Builder*) clearNumClanHelpsGiven {
  result.hasNumClanHelpsGiven = NO;
  result.numClanHelpsGiven = 0;
  return self;
}
@end

@interface ClanRaidProto ()
@property int32_t clanRaidId;
@property (strong) NSString* clanRaidName;
@property (strong) NSString* activeTitleImgName;
@property (strong) NSString* activeBackgroundImgName;
@property (strong) NSString* activeDescription;
@property (strong) NSString* inactiveMonsterImgName;
@property (strong) NSString* inactiveDescription;
@property (strong) NSString* dialogueText;
@property (strong) NSString* spotlightMonsterImgName;
@property (strong) NSMutableArray * mutableRaidStagesList;
@end

@implementation ClanRaidProto

- (BOOL) hasClanRaidId {
  return !!hasClanRaidId_;
}
- (void) setHasClanRaidId:(BOOL) value_ {
  hasClanRaidId_ = !!value_;
}
@synthesize clanRaidId;
- (BOOL) hasClanRaidName {
  return !!hasClanRaidName_;
}
- (void) setHasClanRaidName:(BOOL) value_ {
  hasClanRaidName_ = !!value_;
}
@synthesize clanRaidName;
- (BOOL) hasActiveTitleImgName {
  return !!hasActiveTitleImgName_;
}
- (void) setHasActiveTitleImgName:(BOOL) value_ {
  hasActiveTitleImgName_ = !!value_;
}
@synthesize activeTitleImgName;
- (BOOL) hasActiveBackgroundImgName {
  return !!hasActiveBackgroundImgName_;
}
- (void) setHasActiveBackgroundImgName:(BOOL) value_ {
  hasActiveBackgroundImgName_ = !!value_;
}
@synthesize activeBackgroundImgName;
- (BOOL) hasActiveDescription {
  return !!hasActiveDescription_;
}
- (void) setHasActiveDescription:(BOOL) value_ {
  hasActiveDescription_ = !!value_;
}
@synthesize activeDescription;
- (BOOL) hasInactiveMonsterImgName {
  return !!hasInactiveMonsterImgName_;
}
- (void) setHasInactiveMonsterImgName:(BOOL) value_ {
  hasInactiveMonsterImgName_ = !!value_;
}
@synthesize inactiveMonsterImgName;
- (BOOL) hasInactiveDescription {
  return !!hasInactiveDescription_;
}
- (void) setHasInactiveDescription:(BOOL) value_ {
  hasInactiveDescription_ = !!value_;
}
@synthesize inactiveDescription;
- (BOOL) hasDialogueText {
  return !!hasDialogueText_;
}
- (void) setHasDialogueText:(BOOL) value_ {
  hasDialogueText_ = !!value_;
}
@synthesize dialogueText;
- (BOOL) hasSpotlightMonsterImgName {
  return !!hasSpotlightMonsterImgName_;
}
- (void) setHasSpotlightMonsterImgName:(BOOL) value_ {
  hasSpotlightMonsterImgName_ = !!value_;
}
@synthesize spotlightMonsterImgName;
@synthesize mutableRaidStagesList;
@dynamic raidStagesList;
- (id) init {
  if ((self = [super init])) {
    self.clanRaidId = 0;
    self.clanRaidName = @"";
    self.activeTitleImgName = @"";
    self.activeBackgroundImgName = @"";
    self.activeDescription = @"";
    self.inactiveMonsterImgName = @"";
    self.inactiveDescription = @"";
    self.dialogueText = @"";
    self.spotlightMonsterImgName = @"";
  }
  return self;
}
static ClanRaidProto* defaultClanRaidProtoInstance = nil;
+ (void) initialize {
  if (self == [ClanRaidProto class]) {
    defaultClanRaidProtoInstance = [[ClanRaidProto alloc] init];
  }
}
+ (ClanRaidProto*) defaultInstance {
  return defaultClanRaidProtoInstance;
}
- (ClanRaidProto*) defaultInstance {
  return defaultClanRaidProtoInstance;
}
- (NSArray *)raidStagesList {
  return mutableRaidStagesList;
}
- (ClanRaidStageProto*)raidStagesAtIndex:(NSUInteger)index {
  return [mutableRaidStagesList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasClanRaidId) {
    [output writeInt32:1 value:self.clanRaidId];
  }
  if (self.hasClanRaidName) {
    [output writeString:2 value:self.clanRaidName];
  }
  if (self.hasActiveTitleImgName) {
    [output writeString:3 value:self.activeTitleImgName];
  }
  if (self.hasActiveBackgroundImgName) {
    [output writeString:4 value:self.activeBackgroundImgName];
  }
  if (self.hasActiveDescription) {
    [output writeString:5 value:self.activeDescription];
  }
  if (self.hasInactiveMonsterImgName) {
    [output writeString:6 value:self.inactiveMonsterImgName];
  }
  if (self.hasInactiveDescription) {
    [output writeString:7 value:self.inactiveDescription];
  }
  if (self.hasDialogueText) {
    [output writeString:8 value:self.dialogueText];
  }
  if (self.hasSpotlightMonsterImgName) {
    [output writeString:9 value:self.spotlightMonsterImgName];
  }
  [self.raidStagesList enumerateObjectsUsingBlock:^(ClanRaidStageProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:10 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasClanRaidId) {
    size_ += computeInt32Size(1, self.clanRaidId);
  }
  if (self.hasClanRaidName) {
    size_ += computeStringSize(2, self.clanRaidName);
  }
  if (self.hasActiveTitleImgName) {
    size_ += computeStringSize(3, self.activeTitleImgName);
  }
  if (self.hasActiveBackgroundImgName) {
    size_ += computeStringSize(4, self.activeBackgroundImgName);
  }
  if (self.hasActiveDescription) {
    size_ += computeStringSize(5, self.activeDescription);
  }
  if (self.hasInactiveMonsterImgName) {
    size_ += computeStringSize(6, self.inactiveMonsterImgName);
  }
  if (self.hasInactiveDescription) {
    size_ += computeStringSize(7, self.inactiveDescription);
  }
  if (self.hasDialogueText) {
    size_ += computeStringSize(8, self.dialogueText);
  }
  if (self.hasSpotlightMonsterImgName) {
    size_ += computeStringSize(9, self.spotlightMonsterImgName);
  }
  [self.raidStagesList enumerateObjectsUsingBlock:^(ClanRaidStageProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(10, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ClanRaidProto*) parseFromData:(NSData*) data {
  return (ClanRaidProto*)[[[ClanRaidProto builder] mergeFromData:data] build];
}
+ (ClanRaidProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanRaidProto*)[[[ClanRaidProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClanRaidProto*) parseFromInputStream:(NSInputStream*) input {
  return (ClanRaidProto*)[[[ClanRaidProto builder] mergeFromInputStream:input] build];
}
+ (ClanRaidProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanRaidProto*)[[[ClanRaidProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanRaidProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClanRaidProto*)[[[ClanRaidProto builder] mergeFromCodedInputStream:input] build];
}
+ (ClanRaidProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanRaidProto*)[[[ClanRaidProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanRaidProto_Builder*) builder {
  return [[ClanRaidProto_Builder alloc] init];
}
+ (ClanRaidProto_Builder*) builderWithPrototype:(ClanRaidProto*) prototype {
  return [[ClanRaidProto builder] mergeFrom:prototype];
}
- (ClanRaidProto_Builder*) builder {
  return [ClanRaidProto builder];
}
- (ClanRaidProto_Builder*) toBuilder {
  return [ClanRaidProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasClanRaidId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanRaidId", [NSNumber numberWithInteger:self.clanRaidId]];
  }
  if (self.hasClanRaidName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanRaidName", self.clanRaidName];
  }
  if (self.hasActiveTitleImgName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"activeTitleImgName", self.activeTitleImgName];
  }
  if (self.hasActiveBackgroundImgName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"activeBackgroundImgName", self.activeBackgroundImgName];
  }
  if (self.hasActiveDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"activeDescription", self.activeDescription];
  }
  if (self.hasInactiveMonsterImgName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"inactiveMonsterImgName", self.inactiveMonsterImgName];
  }
  if (self.hasInactiveDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"inactiveDescription", self.inactiveDescription];
  }
  if (self.hasDialogueText) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dialogueText", self.dialogueText];
  }
  if (self.hasSpotlightMonsterImgName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"spotlightMonsterImgName", self.spotlightMonsterImgName];
  }
  [self.raidStagesList enumerateObjectsUsingBlock:^(ClanRaidStageProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"raidStages"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ClanRaidProto class]]) {
    return NO;
  }
  ClanRaidProto *otherMessage = other;
  return
      self.hasClanRaidId == otherMessage.hasClanRaidId &&
      (!self.hasClanRaidId || self.clanRaidId == otherMessage.clanRaidId) &&
      self.hasClanRaidName == otherMessage.hasClanRaidName &&
      (!self.hasClanRaidName || [self.clanRaidName isEqual:otherMessage.clanRaidName]) &&
      self.hasActiveTitleImgName == otherMessage.hasActiveTitleImgName &&
      (!self.hasActiveTitleImgName || [self.activeTitleImgName isEqual:otherMessage.activeTitleImgName]) &&
      self.hasActiveBackgroundImgName == otherMessage.hasActiveBackgroundImgName &&
      (!self.hasActiveBackgroundImgName || [self.activeBackgroundImgName isEqual:otherMessage.activeBackgroundImgName]) &&
      self.hasActiveDescription == otherMessage.hasActiveDescription &&
      (!self.hasActiveDescription || [self.activeDescription isEqual:otherMessage.activeDescription]) &&
      self.hasInactiveMonsterImgName == otherMessage.hasInactiveMonsterImgName &&
      (!self.hasInactiveMonsterImgName || [self.inactiveMonsterImgName isEqual:otherMessage.inactiveMonsterImgName]) &&
      self.hasInactiveDescription == otherMessage.hasInactiveDescription &&
      (!self.hasInactiveDescription || [self.inactiveDescription isEqual:otherMessage.inactiveDescription]) &&
      self.hasDialogueText == otherMessage.hasDialogueText &&
      (!self.hasDialogueText || [self.dialogueText isEqual:otherMessage.dialogueText]) &&
      self.hasSpotlightMonsterImgName == otherMessage.hasSpotlightMonsterImgName &&
      (!self.hasSpotlightMonsterImgName || [self.spotlightMonsterImgName isEqual:otherMessage.spotlightMonsterImgName]) &&
      [self.raidStagesList isEqualToArray:otherMessage.raidStagesList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasClanRaidId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clanRaidId] hash];
  }
  if (self.hasClanRaidName) {
    hashCode = hashCode * 31 + [self.clanRaidName hash];
  }
  if (self.hasActiveTitleImgName) {
    hashCode = hashCode * 31 + [self.activeTitleImgName hash];
  }
  if (self.hasActiveBackgroundImgName) {
    hashCode = hashCode * 31 + [self.activeBackgroundImgName hash];
  }
  if (self.hasActiveDescription) {
    hashCode = hashCode * 31 + [self.activeDescription hash];
  }
  if (self.hasInactiveMonsterImgName) {
    hashCode = hashCode * 31 + [self.inactiveMonsterImgName hash];
  }
  if (self.hasInactiveDescription) {
    hashCode = hashCode * 31 + [self.inactiveDescription hash];
  }
  if (self.hasDialogueText) {
    hashCode = hashCode * 31 + [self.dialogueText hash];
  }
  if (self.hasSpotlightMonsterImgName) {
    hashCode = hashCode * 31 + [self.spotlightMonsterImgName hash];
  }
  [self.raidStagesList enumerateObjectsUsingBlock:^(ClanRaidStageProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ClanRaidProto_Builder()
@property (strong) ClanRaidProto* result;
@end

@implementation ClanRaidProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ClanRaidProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClanRaidProto_Builder*) clear {
  self.result = [[ClanRaidProto alloc] init];
  return self;
}
- (ClanRaidProto_Builder*) clone {
  return [ClanRaidProto builderWithPrototype:result];
}
- (ClanRaidProto*) defaultInstance {
  return [ClanRaidProto defaultInstance];
}
- (ClanRaidProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClanRaidProto*) buildPartial {
  ClanRaidProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ClanRaidProto_Builder*) mergeFrom:(ClanRaidProto*) other {
  if (other == [ClanRaidProto defaultInstance]) {
    return self;
  }
  if (other.hasClanRaidId) {
    [self setClanRaidId:other.clanRaidId];
  }
  if (other.hasClanRaidName) {
    [self setClanRaidName:other.clanRaidName];
  }
  if (other.hasActiveTitleImgName) {
    [self setActiveTitleImgName:other.activeTitleImgName];
  }
  if (other.hasActiveBackgroundImgName) {
    [self setActiveBackgroundImgName:other.activeBackgroundImgName];
  }
  if (other.hasActiveDescription) {
    [self setActiveDescription:other.activeDescription];
  }
  if (other.hasInactiveMonsterImgName) {
    [self setInactiveMonsterImgName:other.inactiveMonsterImgName];
  }
  if (other.hasInactiveDescription) {
    [self setInactiveDescription:other.inactiveDescription];
  }
  if (other.hasDialogueText) {
    [self setDialogueText:other.dialogueText];
  }
  if (other.hasSpotlightMonsterImgName) {
    [self setSpotlightMonsterImgName:other.spotlightMonsterImgName];
  }
  if (other.mutableRaidStagesList.count > 0) {
    if (result.mutableRaidStagesList == nil) {
      result.mutableRaidStagesList = [[NSMutableArray alloc] initWithArray:other.mutableRaidStagesList];
    } else {
      [result.mutableRaidStagesList addObjectsFromArray:other.mutableRaidStagesList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClanRaidProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClanRaidProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setClanRaidId:[input readInt32]];
        break;
      }
      case 18: {
        [self setClanRaidName:[input readString]];
        break;
      }
      case 26: {
        [self setActiveTitleImgName:[input readString]];
        break;
      }
      case 34: {
        [self setActiveBackgroundImgName:[input readString]];
        break;
      }
      case 42: {
        [self setActiveDescription:[input readString]];
        break;
      }
      case 50: {
        [self setInactiveMonsterImgName:[input readString]];
        break;
      }
      case 58: {
        [self setInactiveDescription:[input readString]];
        break;
      }
      case 66: {
        [self setDialogueText:[input readString]];
        break;
      }
      case 74: {
        [self setSpotlightMonsterImgName:[input readString]];
        break;
      }
      case 82: {
        ClanRaidStageProto_Builder* subBuilder = [ClanRaidStageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRaidStages:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasClanRaidId {
  return result.hasClanRaidId;
}
- (int32_t) clanRaidId {
  return result.clanRaidId;
}
- (ClanRaidProto_Builder*) setClanRaidId:(int32_t) value {
  result.hasClanRaidId = YES;
  result.clanRaidId = value;
  return self;
}
- (ClanRaidProto_Builder*) clearClanRaidId {
  result.hasClanRaidId = NO;
  result.clanRaidId = 0;
  return self;
}
- (BOOL) hasClanRaidName {
  return result.hasClanRaidName;
}
- (NSString*) clanRaidName {
  return result.clanRaidName;
}
- (ClanRaidProto_Builder*) setClanRaidName:(NSString*) value {
  result.hasClanRaidName = YES;
  result.clanRaidName = value;
  return self;
}
- (ClanRaidProto_Builder*) clearClanRaidName {
  result.hasClanRaidName = NO;
  result.clanRaidName = @"";
  return self;
}
- (BOOL) hasActiveTitleImgName {
  return result.hasActiveTitleImgName;
}
- (NSString*) activeTitleImgName {
  return result.activeTitleImgName;
}
- (ClanRaidProto_Builder*) setActiveTitleImgName:(NSString*) value {
  result.hasActiveTitleImgName = YES;
  result.activeTitleImgName = value;
  return self;
}
- (ClanRaidProto_Builder*) clearActiveTitleImgName {
  result.hasActiveTitleImgName = NO;
  result.activeTitleImgName = @"";
  return self;
}
- (BOOL) hasActiveBackgroundImgName {
  return result.hasActiveBackgroundImgName;
}
- (NSString*) activeBackgroundImgName {
  return result.activeBackgroundImgName;
}
- (ClanRaidProto_Builder*) setActiveBackgroundImgName:(NSString*) value {
  result.hasActiveBackgroundImgName = YES;
  result.activeBackgroundImgName = value;
  return self;
}
- (ClanRaidProto_Builder*) clearActiveBackgroundImgName {
  result.hasActiveBackgroundImgName = NO;
  result.activeBackgroundImgName = @"";
  return self;
}
- (BOOL) hasActiveDescription {
  return result.hasActiveDescription;
}
- (NSString*) activeDescription {
  return result.activeDescription;
}
- (ClanRaidProto_Builder*) setActiveDescription:(NSString*) value {
  result.hasActiveDescription = YES;
  result.activeDescription = value;
  return self;
}
- (ClanRaidProto_Builder*) clearActiveDescription {
  result.hasActiveDescription = NO;
  result.activeDescription = @"";
  return self;
}
- (BOOL) hasInactiveMonsterImgName {
  return result.hasInactiveMonsterImgName;
}
- (NSString*) inactiveMonsterImgName {
  return result.inactiveMonsterImgName;
}
- (ClanRaidProto_Builder*) setInactiveMonsterImgName:(NSString*) value {
  result.hasInactiveMonsterImgName = YES;
  result.inactiveMonsterImgName = value;
  return self;
}
- (ClanRaidProto_Builder*) clearInactiveMonsterImgName {
  result.hasInactiveMonsterImgName = NO;
  result.inactiveMonsterImgName = @"";
  return self;
}
- (BOOL) hasInactiveDescription {
  return result.hasInactiveDescription;
}
- (NSString*) inactiveDescription {
  return result.inactiveDescription;
}
- (ClanRaidProto_Builder*) setInactiveDescription:(NSString*) value {
  result.hasInactiveDescription = YES;
  result.inactiveDescription = value;
  return self;
}
- (ClanRaidProto_Builder*) clearInactiveDescription {
  result.hasInactiveDescription = NO;
  result.inactiveDescription = @"";
  return self;
}
- (BOOL) hasDialogueText {
  return result.hasDialogueText;
}
- (NSString*) dialogueText {
  return result.dialogueText;
}
- (ClanRaidProto_Builder*) setDialogueText:(NSString*) value {
  result.hasDialogueText = YES;
  result.dialogueText = value;
  return self;
}
- (ClanRaidProto_Builder*) clearDialogueText {
  result.hasDialogueText = NO;
  result.dialogueText = @"";
  return self;
}
- (BOOL) hasSpotlightMonsterImgName {
  return result.hasSpotlightMonsterImgName;
}
- (NSString*) spotlightMonsterImgName {
  return result.spotlightMonsterImgName;
}
- (ClanRaidProto_Builder*) setSpotlightMonsterImgName:(NSString*) value {
  result.hasSpotlightMonsterImgName = YES;
  result.spotlightMonsterImgName = value;
  return self;
}
- (ClanRaidProto_Builder*) clearSpotlightMonsterImgName {
  result.hasSpotlightMonsterImgName = NO;
  result.spotlightMonsterImgName = @"";
  return self;
}
- (NSMutableArray *)raidStagesList {
  return result.mutableRaidStagesList;
}
- (ClanRaidStageProto*)raidStagesAtIndex:(NSUInteger)index {
  return [result raidStagesAtIndex:index];
}
- (ClanRaidProto_Builder *)addRaidStages:(ClanRaidStageProto*)value {
  if (result.mutableRaidStagesList == nil) {
    result.mutableRaidStagesList = [[NSMutableArray alloc]init];
  }
  [result.mutableRaidStagesList addObject:value];
  return self;
}
- (ClanRaidProto_Builder *)addAllRaidStages:(NSArray *)array {
  if (result.mutableRaidStagesList == nil) {
    result.mutableRaidStagesList = [NSMutableArray array];
  }
  [result.mutableRaidStagesList addObjectsFromArray:array];
  return self;
}
- (ClanRaidProto_Builder *)clearRaidStages {
  result.mutableRaidStagesList = nil;
  return self;
}
@end

@interface ClanRaidStageProto ()
@property int32_t clanRaidStageId;
@property int32_t clanRaidId;
@property int32_t durationMinutes;
@property int32_t stageNum;
@property (strong) NSString* name;
@property (strong) NSMutableArray * mutableMonstersList;
@property (strong) NSMutableArray * mutablePossibleRewardsList;
@end

@implementation ClanRaidStageProto

- (BOOL) hasClanRaidStageId {
  return !!hasClanRaidStageId_;
}
- (void) setHasClanRaidStageId:(BOOL) value_ {
  hasClanRaidStageId_ = !!value_;
}
@synthesize clanRaidStageId;
- (BOOL) hasClanRaidId {
  return !!hasClanRaidId_;
}
- (void) setHasClanRaidId:(BOOL) value_ {
  hasClanRaidId_ = !!value_;
}
@synthesize clanRaidId;
- (BOOL) hasDurationMinutes {
  return !!hasDurationMinutes_;
}
- (void) setHasDurationMinutes:(BOOL) value_ {
  hasDurationMinutes_ = !!value_;
}
@synthesize durationMinutes;
- (BOOL) hasStageNum {
  return !!hasStageNum_;
}
- (void) setHasStageNum:(BOOL) value_ {
  hasStageNum_ = !!value_;
}
@synthesize stageNum;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
@synthesize mutableMonstersList;
@dynamic monstersList;
@synthesize mutablePossibleRewardsList;
@dynamic possibleRewardsList;
- (id) init {
  if ((self = [super init])) {
    self.clanRaidStageId = 0;
    self.clanRaidId = 0;
    self.durationMinutes = 0;
    self.stageNum = 0;
    self.name = @"";
  }
  return self;
}
static ClanRaidStageProto* defaultClanRaidStageProtoInstance = nil;
+ (void) initialize {
  if (self == [ClanRaidStageProto class]) {
    defaultClanRaidStageProtoInstance = [[ClanRaidStageProto alloc] init];
  }
}
+ (ClanRaidStageProto*) defaultInstance {
  return defaultClanRaidStageProtoInstance;
}
- (ClanRaidStageProto*) defaultInstance {
  return defaultClanRaidStageProtoInstance;
}
- (NSArray *)monstersList {
  return mutableMonstersList;
}
- (ClanRaidStageMonsterProto*)monstersAtIndex:(NSUInteger)index {
  return [mutableMonstersList objectAtIndex:index];
}
- (NSArray *)possibleRewardsList {
  return mutablePossibleRewardsList;
}
- (ClanRaidStageRewardProto*)possibleRewardsAtIndex:(NSUInteger)index {
  return [mutablePossibleRewardsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasClanRaidStageId) {
    [output writeInt32:1 value:self.clanRaidStageId];
  }
  if (self.hasClanRaidId) {
    [output writeInt32:2 value:self.clanRaidId];
  }
  if (self.hasDurationMinutes) {
    [output writeInt32:3 value:self.durationMinutes];
  }
  if (self.hasStageNum) {
    [output writeInt32:4 value:self.stageNum];
  }
  if (self.hasName) {
    [output writeString:5 value:self.name];
  }
  [self.monstersList enumerateObjectsUsingBlock:^(ClanRaidStageMonsterProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:11 value:element];
  }];
  [self.possibleRewardsList enumerateObjectsUsingBlock:^(ClanRaidStageRewardProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:12 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasClanRaidStageId) {
    size_ += computeInt32Size(1, self.clanRaidStageId);
  }
  if (self.hasClanRaidId) {
    size_ += computeInt32Size(2, self.clanRaidId);
  }
  if (self.hasDurationMinutes) {
    size_ += computeInt32Size(3, self.durationMinutes);
  }
  if (self.hasStageNum) {
    size_ += computeInt32Size(4, self.stageNum);
  }
  if (self.hasName) {
    size_ += computeStringSize(5, self.name);
  }
  [self.monstersList enumerateObjectsUsingBlock:^(ClanRaidStageMonsterProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(11, element);
  }];
  [self.possibleRewardsList enumerateObjectsUsingBlock:^(ClanRaidStageRewardProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(12, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ClanRaidStageProto*) parseFromData:(NSData*) data {
  return (ClanRaidStageProto*)[[[ClanRaidStageProto builder] mergeFromData:data] build];
}
+ (ClanRaidStageProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanRaidStageProto*)[[[ClanRaidStageProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClanRaidStageProto*) parseFromInputStream:(NSInputStream*) input {
  return (ClanRaidStageProto*)[[[ClanRaidStageProto builder] mergeFromInputStream:input] build];
}
+ (ClanRaidStageProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanRaidStageProto*)[[[ClanRaidStageProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanRaidStageProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClanRaidStageProto*)[[[ClanRaidStageProto builder] mergeFromCodedInputStream:input] build];
}
+ (ClanRaidStageProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanRaidStageProto*)[[[ClanRaidStageProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanRaidStageProto_Builder*) builder {
  return [[ClanRaidStageProto_Builder alloc] init];
}
+ (ClanRaidStageProto_Builder*) builderWithPrototype:(ClanRaidStageProto*) prototype {
  return [[ClanRaidStageProto builder] mergeFrom:prototype];
}
- (ClanRaidStageProto_Builder*) builder {
  return [ClanRaidStageProto builder];
}
- (ClanRaidStageProto_Builder*) toBuilder {
  return [ClanRaidStageProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasClanRaidStageId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanRaidStageId", [NSNumber numberWithInteger:self.clanRaidStageId]];
  }
  if (self.hasClanRaidId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanRaidId", [NSNumber numberWithInteger:self.clanRaidId]];
  }
  if (self.hasDurationMinutes) {
    [output appendFormat:@"%@%@: %@\n", indent, @"durationMinutes", [NSNumber numberWithInteger:self.durationMinutes]];
  }
  if (self.hasStageNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"stageNum", [NSNumber numberWithInteger:self.stageNum]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.monstersList enumerateObjectsUsingBlock:^(ClanRaidStageMonsterProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"monsters"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.possibleRewardsList enumerateObjectsUsingBlock:^(ClanRaidStageRewardProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"possibleRewards"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ClanRaidStageProto class]]) {
    return NO;
  }
  ClanRaidStageProto *otherMessage = other;
  return
      self.hasClanRaidStageId == otherMessage.hasClanRaidStageId &&
      (!self.hasClanRaidStageId || self.clanRaidStageId == otherMessage.clanRaidStageId) &&
      self.hasClanRaidId == otherMessage.hasClanRaidId &&
      (!self.hasClanRaidId || self.clanRaidId == otherMessage.clanRaidId) &&
      self.hasDurationMinutes == otherMessage.hasDurationMinutes &&
      (!self.hasDurationMinutes || self.durationMinutes == otherMessage.durationMinutes) &&
      self.hasStageNum == otherMessage.hasStageNum &&
      (!self.hasStageNum || self.stageNum == otherMessage.stageNum) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      [self.monstersList isEqualToArray:otherMessage.monstersList] &&
      [self.possibleRewardsList isEqualToArray:otherMessage.possibleRewardsList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasClanRaidStageId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clanRaidStageId] hash];
  }
  if (self.hasClanRaidId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clanRaidId] hash];
  }
  if (self.hasDurationMinutes) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.durationMinutes] hash];
  }
  if (self.hasStageNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.stageNum] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  [self.monstersList enumerateObjectsUsingBlock:^(ClanRaidStageMonsterProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.possibleRewardsList enumerateObjectsUsingBlock:^(ClanRaidStageRewardProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ClanRaidStageProto_Builder()
@property (strong) ClanRaidStageProto* result;
@end

@implementation ClanRaidStageProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ClanRaidStageProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClanRaidStageProto_Builder*) clear {
  self.result = [[ClanRaidStageProto alloc] init];
  return self;
}
- (ClanRaidStageProto_Builder*) clone {
  return [ClanRaidStageProto builderWithPrototype:result];
}
- (ClanRaidStageProto*) defaultInstance {
  return [ClanRaidStageProto defaultInstance];
}
- (ClanRaidStageProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClanRaidStageProto*) buildPartial {
  ClanRaidStageProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ClanRaidStageProto_Builder*) mergeFrom:(ClanRaidStageProto*) other {
  if (other == [ClanRaidStageProto defaultInstance]) {
    return self;
  }
  if (other.hasClanRaidStageId) {
    [self setClanRaidStageId:other.clanRaidStageId];
  }
  if (other.hasClanRaidId) {
    [self setClanRaidId:other.clanRaidId];
  }
  if (other.hasDurationMinutes) {
    [self setDurationMinutes:other.durationMinutes];
  }
  if (other.hasStageNum) {
    [self setStageNum:other.stageNum];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.mutableMonstersList.count > 0) {
    if (result.mutableMonstersList == nil) {
      result.mutableMonstersList = [[NSMutableArray alloc] initWithArray:other.mutableMonstersList];
    } else {
      [result.mutableMonstersList addObjectsFromArray:other.mutableMonstersList];
    }
  }
  if (other.mutablePossibleRewardsList.count > 0) {
    if (result.mutablePossibleRewardsList == nil) {
      result.mutablePossibleRewardsList = [[NSMutableArray alloc] initWithArray:other.mutablePossibleRewardsList];
    } else {
      [result.mutablePossibleRewardsList addObjectsFromArray:other.mutablePossibleRewardsList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClanRaidStageProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClanRaidStageProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setClanRaidStageId:[input readInt32]];
        break;
      }
      case 16: {
        [self setClanRaidId:[input readInt32]];
        break;
      }
      case 24: {
        [self setDurationMinutes:[input readInt32]];
        break;
      }
      case 32: {
        [self setStageNum:[input readInt32]];
        break;
      }
      case 42: {
        [self setName:[input readString]];
        break;
      }
      case 90: {
        ClanRaidStageMonsterProto_Builder* subBuilder = [ClanRaidStageMonsterProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMonsters:[subBuilder buildPartial]];
        break;
      }
      case 98: {
        ClanRaidStageRewardProto_Builder* subBuilder = [ClanRaidStageRewardProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPossibleRewards:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasClanRaidStageId {
  return result.hasClanRaidStageId;
}
- (int32_t) clanRaidStageId {
  return result.clanRaidStageId;
}
- (ClanRaidStageProto_Builder*) setClanRaidStageId:(int32_t) value {
  result.hasClanRaidStageId = YES;
  result.clanRaidStageId = value;
  return self;
}
- (ClanRaidStageProto_Builder*) clearClanRaidStageId {
  result.hasClanRaidStageId = NO;
  result.clanRaidStageId = 0;
  return self;
}
- (BOOL) hasClanRaidId {
  return result.hasClanRaidId;
}
- (int32_t) clanRaidId {
  return result.clanRaidId;
}
- (ClanRaidStageProto_Builder*) setClanRaidId:(int32_t) value {
  result.hasClanRaidId = YES;
  result.clanRaidId = value;
  return self;
}
- (ClanRaidStageProto_Builder*) clearClanRaidId {
  result.hasClanRaidId = NO;
  result.clanRaidId = 0;
  return self;
}
- (BOOL) hasDurationMinutes {
  return result.hasDurationMinutes;
}
- (int32_t) durationMinutes {
  return result.durationMinutes;
}
- (ClanRaidStageProto_Builder*) setDurationMinutes:(int32_t) value {
  result.hasDurationMinutes = YES;
  result.durationMinutes = value;
  return self;
}
- (ClanRaidStageProto_Builder*) clearDurationMinutes {
  result.hasDurationMinutes = NO;
  result.durationMinutes = 0;
  return self;
}
- (BOOL) hasStageNum {
  return result.hasStageNum;
}
- (int32_t) stageNum {
  return result.stageNum;
}
- (ClanRaidStageProto_Builder*) setStageNum:(int32_t) value {
  result.hasStageNum = YES;
  result.stageNum = value;
  return self;
}
- (ClanRaidStageProto_Builder*) clearStageNum {
  result.hasStageNum = NO;
  result.stageNum = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (ClanRaidStageProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (ClanRaidStageProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (NSMutableArray *)monstersList {
  return result.mutableMonstersList;
}
- (ClanRaidStageMonsterProto*)monstersAtIndex:(NSUInteger)index {
  return [result monstersAtIndex:index];
}
- (ClanRaidStageProto_Builder *)addMonsters:(ClanRaidStageMonsterProto*)value {
  if (result.mutableMonstersList == nil) {
    result.mutableMonstersList = [[NSMutableArray alloc]init];
  }
  [result.mutableMonstersList addObject:value];
  return self;
}
- (ClanRaidStageProto_Builder *)addAllMonsters:(NSArray *)array {
  if (result.mutableMonstersList == nil) {
    result.mutableMonstersList = [NSMutableArray array];
  }
  [result.mutableMonstersList addObjectsFromArray:array];
  return self;
}
- (ClanRaidStageProto_Builder *)clearMonsters {
  result.mutableMonstersList = nil;
  return self;
}
- (NSMutableArray *)possibleRewardsList {
  return result.mutablePossibleRewardsList;
}
- (ClanRaidStageRewardProto*)possibleRewardsAtIndex:(NSUInteger)index {
  return [result possibleRewardsAtIndex:index];
}
- (ClanRaidStageProto_Builder *)addPossibleRewards:(ClanRaidStageRewardProto*)value {
  if (result.mutablePossibleRewardsList == nil) {
    result.mutablePossibleRewardsList = [[NSMutableArray alloc]init];
  }
  [result.mutablePossibleRewardsList addObject:value];
  return self;
}
- (ClanRaidStageProto_Builder *)addAllPossibleRewards:(NSArray *)array {
  if (result.mutablePossibleRewardsList == nil) {
    result.mutablePossibleRewardsList = [NSMutableArray array];
  }
  [result.mutablePossibleRewardsList addObjectsFromArray:array];
  return self;
}
- (ClanRaidStageProto_Builder *)clearPossibleRewards {
  result.mutablePossibleRewardsList = nil;
  return self;
}
@end

@interface ClanRaidStageMonsterProto ()
@property int32_t crsmId;
@property int32_t monsterId;
@property int32_t monsterHp;
@property int32_t minDmg;
@property int32_t maxDmg;
@end

@implementation ClanRaidStageMonsterProto

- (BOOL) hasCrsmId {
  return !!hasCrsmId_;
}
- (void) setHasCrsmId:(BOOL) value_ {
  hasCrsmId_ = !!value_;
}
@synthesize crsmId;
- (BOOL) hasMonsterId {
  return !!hasMonsterId_;
}
- (void) setHasMonsterId:(BOOL) value_ {
  hasMonsterId_ = !!value_;
}
@synthesize monsterId;
- (BOOL) hasMonsterHp {
  return !!hasMonsterHp_;
}
- (void) setHasMonsterHp:(BOOL) value_ {
  hasMonsterHp_ = !!value_;
}
@synthesize monsterHp;
- (BOOL) hasMinDmg {
  return !!hasMinDmg_;
}
- (void) setHasMinDmg:(BOOL) value_ {
  hasMinDmg_ = !!value_;
}
@synthesize minDmg;
- (BOOL) hasMaxDmg {
  return !!hasMaxDmg_;
}
- (void) setHasMaxDmg:(BOOL) value_ {
  hasMaxDmg_ = !!value_;
}
@synthesize maxDmg;
- (id) init {
  if ((self = [super init])) {
    self.crsmId = 0;
    self.monsterId = 0;
    self.monsterHp = 0;
    self.minDmg = 0;
    self.maxDmg = 0;
  }
  return self;
}
static ClanRaidStageMonsterProto* defaultClanRaidStageMonsterProtoInstance = nil;
+ (void) initialize {
  if (self == [ClanRaidStageMonsterProto class]) {
    defaultClanRaidStageMonsterProtoInstance = [[ClanRaidStageMonsterProto alloc] init];
  }
}
+ (ClanRaidStageMonsterProto*) defaultInstance {
  return defaultClanRaidStageMonsterProtoInstance;
}
- (ClanRaidStageMonsterProto*) defaultInstance {
  return defaultClanRaidStageMonsterProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCrsmId) {
    [output writeInt32:1 value:self.crsmId];
  }
  if (self.hasMonsterId) {
    [output writeInt32:3 value:self.monsterId];
  }
  if (self.hasMonsterHp) {
    [output writeInt32:4 value:self.monsterHp];
  }
  if (self.hasMinDmg) {
    [output writeInt32:5 value:self.minDmg];
  }
  if (self.hasMaxDmg) {
    [output writeInt32:6 value:self.maxDmg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCrsmId) {
    size_ += computeInt32Size(1, self.crsmId);
  }
  if (self.hasMonsterId) {
    size_ += computeInt32Size(3, self.monsterId);
  }
  if (self.hasMonsterHp) {
    size_ += computeInt32Size(4, self.monsterHp);
  }
  if (self.hasMinDmg) {
    size_ += computeInt32Size(5, self.minDmg);
  }
  if (self.hasMaxDmg) {
    size_ += computeInt32Size(6, self.maxDmg);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ClanRaidStageMonsterProto*) parseFromData:(NSData*) data {
  return (ClanRaidStageMonsterProto*)[[[ClanRaidStageMonsterProto builder] mergeFromData:data] build];
}
+ (ClanRaidStageMonsterProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanRaidStageMonsterProto*)[[[ClanRaidStageMonsterProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClanRaidStageMonsterProto*) parseFromInputStream:(NSInputStream*) input {
  return (ClanRaidStageMonsterProto*)[[[ClanRaidStageMonsterProto builder] mergeFromInputStream:input] build];
}
+ (ClanRaidStageMonsterProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanRaidStageMonsterProto*)[[[ClanRaidStageMonsterProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanRaidStageMonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClanRaidStageMonsterProto*)[[[ClanRaidStageMonsterProto builder] mergeFromCodedInputStream:input] build];
}
+ (ClanRaidStageMonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanRaidStageMonsterProto*)[[[ClanRaidStageMonsterProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanRaidStageMonsterProto_Builder*) builder {
  return [[ClanRaidStageMonsterProto_Builder alloc] init];
}
+ (ClanRaidStageMonsterProto_Builder*) builderWithPrototype:(ClanRaidStageMonsterProto*) prototype {
  return [[ClanRaidStageMonsterProto builder] mergeFrom:prototype];
}
- (ClanRaidStageMonsterProto_Builder*) builder {
  return [ClanRaidStageMonsterProto builder];
}
- (ClanRaidStageMonsterProto_Builder*) toBuilder {
  return [ClanRaidStageMonsterProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCrsmId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"crsmId", [NSNumber numberWithInteger:self.crsmId]];
  }
  if (self.hasMonsterId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"monsterId", [NSNumber numberWithInteger:self.monsterId]];
  }
  if (self.hasMonsterHp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"monsterHp", [NSNumber numberWithInteger:self.monsterHp]];
  }
  if (self.hasMinDmg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"minDmg", [NSNumber numberWithInteger:self.minDmg]];
  }
  if (self.hasMaxDmg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxDmg", [NSNumber numberWithInteger:self.maxDmg]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ClanRaidStageMonsterProto class]]) {
    return NO;
  }
  ClanRaidStageMonsterProto *otherMessage = other;
  return
      self.hasCrsmId == otherMessage.hasCrsmId &&
      (!self.hasCrsmId || self.crsmId == otherMessage.crsmId) &&
      self.hasMonsterId == otherMessage.hasMonsterId &&
      (!self.hasMonsterId || self.monsterId == otherMessage.monsterId) &&
      self.hasMonsterHp == otherMessage.hasMonsterHp &&
      (!self.hasMonsterHp || self.monsterHp == otherMessage.monsterHp) &&
      self.hasMinDmg == otherMessage.hasMinDmg &&
      (!self.hasMinDmg || self.minDmg == otherMessage.minDmg) &&
      self.hasMaxDmg == otherMessage.hasMaxDmg &&
      (!self.hasMaxDmg || self.maxDmg == otherMessage.maxDmg) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCrsmId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.crsmId] hash];
  }
  if (self.hasMonsterId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.monsterId] hash];
  }
  if (self.hasMonsterHp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.monsterHp] hash];
  }
  if (self.hasMinDmg) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.minDmg] hash];
  }
  if (self.hasMaxDmg) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxDmg] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ClanRaidStageMonsterProto_Builder()
@property (strong) ClanRaidStageMonsterProto* result;
@end

@implementation ClanRaidStageMonsterProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ClanRaidStageMonsterProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClanRaidStageMonsterProto_Builder*) clear {
  self.result = [[ClanRaidStageMonsterProto alloc] init];
  return self;
}
- (ClanRaidStageMonsterProto_Builder*) clone {
  return [ClanRaidStageMonsterProto builderWithPrototype:result];
}
- (ClanRaidStageMonsterProto*) defaultInstance {
  return [ClanRaidStageMonsterProto defaultInstance];
}
- (ClanRaidStageMonsterProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClanRaidStageMonsterProto*) buildPartial {
  ClanRaidStageMonsterProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ClanRaidStageMonsterProto_Builder*) mergeFrom:(ClanRaidStageMonsterProto*) other {
  if (other == [ClanRaidStageMonsterProto defaultInstance]) {
    return self;
  }
  if (other.hasCrsmId) {
    [self setCrsmId:other.crsmId];
  }
  if (other.hasMonsterId) {
    [self setMonsterId:other.monsterId];
  }
  if (other.hasMonsterHp) {
    [self setMonsterHp:other.monsterHp];
  }
  if (other.hasMinDmg) {
    [self setMinDmg:other.minDmg];
  }
  if (other.hasMaxDmg) {
    [self setMaxDmg:other.maxDmg];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClanRaidStageMonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClanRaidStageMonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCrsmId:[input readInt32]];
        break;
      }
      case 24: {
        [self setMonsterId:[input readInt32]];
        break;
      }
      case 32: {
        [self setMonsterHp:[input readInt32]];
        break;
      }
      case 40: {
        [self setMinDmg:[input readInt32]];
        break;
      }
      case 48: {
        [self setMaxDmg:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCrsmId {
  return result.hasCrsmId;
}
- (int32_t) crsmId {
  return result.crsmId;
}
- (ClanRaidStageMonsterProto_Builder*) setCrsmId:(int32_t) value {
  result.hasCrsmId = YES;
  result.crsmId = value;
  return self;
}
- (ClanRaidStageMonsterProto_Builder*) clearCrsmId {
  result.hasCrsmId = NO;
  result.crsmId = 0;
  return self;
}
- (BOOL) hasMonsterId {
  return result.hasMonsterId;
}
- (int32_t) monsterId {
  return result.monsterId;
}
- (ClanRaidStageMonsterProto_Builder*) setMonsterId:(int32_t) value {
  result.hasMonsterId = YES;
  result.monsterId = value;
  return self;
}
- (ClanRaidStageMonsterProto_Builder*) clearMonsterId {
  result.hasMonsterId = NO;
  result.monsterId = 0;
  return self;
}
- (BOOL) hasMonsterHp {
  return result.hasMonsterHp;
}
- (int32_t) monsterHp {
  return result.monsterHp;
}
- (ClanRaidStageMonsterProto_Builder*) setMonsterHp:(int32_t) value {
  result.hasMonsterHp = YES;
  result.monsterHp = value;
  return self;
}
- (ClanRaidStageMonsterProto_Builder*) clearMonsterHp {
  result.hasMonsterHp = NO;
  result.monsterHp = 0;
  return self;
}
- (BOOL) hasMinDmg {
  return result.hasMinDmg;
}
- (int32_t) minDmg {
  return result.minDmg;
}
- (ClanRaidStageMonsterProto_Builder*) setMinDmg:(int32_t) value {
  result.hasMinDmg = YES;
  result.minDmg = value;
  return self;
}
- (ClanRaidStageMonsterProto_Builder*) clearMinDmg {
  result.hasMinDmg = NO;
  result.minDmg = 0;
  return self;
}
- (BOOL) hasMaxDmg {
  return result.hasMaxDmg;
}
- (int32_t) maxDmg {
  return result.maxDmg;
}
- (ClanRaidStageMonsterProto_Builder*) setMaxDmg:(int32_t) value {
  result.hasMaxDmg = YES;
  result.maxDmg = value;
  return self;
}
- (ClanRaidStageMonsterProto_Builder*) clearMaxDmg {
  result.hasMaxDmg = NO;
  result.maxDmg = 0;
  return self;
}
@end

@interface ClanRaidStageRewardProto ()
@property int32_t crsrId;
@property int32_t minOilReward;
@property int32_t maxOilReward;
@property int32_t minCashReward;
@property int32_t maxCashReward;
@property int32_t monsterId;
@end

@implementation ClanRaidStageRewardProto

- (BOOL) hasCrsrId {
  return !!hasCrsrId_;
}
- (void) setHasCrsrId:(BOOL) value_ {
  hasCrsrId_ = !!value_;
}
@synthesize crsrId;
- (BOOL) hasMinOilReward {
  return !!hasMinOilReward_;
}
- (void) setHasMinOilReward:(BOOL) value_ {
  hasMinOilReward_ = !!value_;
}
@synthesize minOilReward;
- (BOOL) hasMaxOilReward {
  return !!hasMaxOilReward_;
}
- (void) setHasMaxOilReward:(BOOL) value_ {
  hasMaxOilReward_ = !!value_;
}
@synthesize maxOilReward;
- (BOOL) hasMinCashReward {
  return !!hasMinCashReward_;
}
- (void) setHasMinCashReward:(BOOL) value_ {
  hasMinCashReward_ = !!value_;
}
@synthesize minCashReward;
- (BOOL) hasMaxCashReward {
  return !!hasMaxCashReward_;
}
- (void) setHasMaxCashReward:(BOOL) value_ {
  hasMaxCashReward_ = !!value_;
}
@synthesize maxCashReward;
- (BOOL) hasMonsterId {
  return !!hasMonsterId_;
}
- (void) setHasMonsterId:(BOOL) value_ {
  hasMonsterId_ = !!value_;
}
@synthesize monsterId;
- (id) init {
  if ((self = [super init])) {
    self.crsrId = 0;
    self.minOilReward = 0;
    self.maxOilReward = 0;
    self.minCashReward = 0;
    self.maxCashReward = 0;
    self.monsterId = 0;
  }
  return self;
}
static ClanRaidStageRewardProto* defaultClanRaidStageRewardProtoInstance = nil;
+ (void) initialize {
  if (self == [ClanRaidStageRewardProto class]) {
    defaultClanRaidStageRewardProtoInstance = [[ClanRaidStageRewardProto alloc] init];
  }
}
+ (ClanRaidStageRewardProto*) defaultInstance {
  return defaultClanRaidStageRewardProtoInstance;
}
- (ClanRaidStageRewardProto*) defaultInstance {
  return defaultClanRaidStageRewardProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCrsrId) {
    [output writeInt32:1 value:self.crsrId];
  }
  if (self.hasMinOilReward) {
    [output writeInt32:3 value:self.minOilReward];
  }
  if (self.hasMaxOilReward) {
    [output writeInt32:4 value:self.maxOilReward];
  }
  if (self.hasMinCashReward) {
    [output writeInt32:5 value:self.minCashReward];
  }
  if (self.hasMaxCashReward) {
    [output writeInt32:6 value:self.maxCashReward];
  }
  if (self.hasMonsterId) {
    [output writeInt32:7 value:self.monsterId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCrsrId) {
    size_ += computeInt32Size(1, self.crsrId);
  }
  if (self.hasMinOilReward) {
    size_ += computeInt32Size(3, self.minOilReward);
  }
  if (self.hasMaxOilReward) {
    size_ += computeInt32Size(4, self.maxOilReward);
  }
  if (self.hasMinCashReward) {
    size_ += computeInt32Size(5, self.minCashReward);
  }
  if (self.hasMaxCashReward) {
    size_ += computeInt32Size(6, self.maxCashReward);
  }
  if (self.hasMonsterId) {
    size_ += computeInt32Size(7, self.monsterId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ClanRaidStageRewardProto*) parseFromData:(NSData*) data {
  return (ClanRaidStageRewardProto*)[[[ClanRaidStageRewardProto builder] mergeFromData:data] build];
}
+ (ClanRaidStageRewardProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanRaidStageRewardProto*)[[[ClanRaidStageRewardProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClanRaidStageRewardProto*) parseFromInputStream:(NSInputStream*) input {
  return (ClanRaidStageRewardProto*)[[[ClanRaidStageRewardProto builder] mergeFromInputStream:input] build];
}
+ (ClanRaidStageRewardProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanRaidStageRewardProto*)[[[ClanRaidStageRewardProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanRaidStageRewardProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClanRaidStageRewardProto*)[[[ClanRaidStageRewardProto builder] mergeFromCodedInputStream:input] build];
}
+ (ClanRaidStageRewardProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanRaidStageRewardProto*)[[[ClanRaidStageRewardProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanRaidStageRewardProto_Builder*) builder {
  return [[ClanRaidStageRewardProto_Builder alloc] init];
}
+ (ClanRaidStageRewardProto_Builder*) builderWithPrototype:(ClanRaidStageRewardProto*) prototype {
  return [[ClanRaidStageRewardProto builder] mergeFrom:prototype];
}
- (ClanRaidStageRewardProto_Builder*) builder {
  return [ClanRaidStageRewardProto builder];
}
- (ClanRaidStageRewardProto_Builder*) toBuilder {
  return [ClanRaidStageRewardProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCrsrId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"crsrId", [NSNumber numberWithInteger:self.crsrId]];
  }
  if (self.hasMinOilReward) {
    [output appendFormat:@"%@%@: %@\n", indent, @"minOilReward", [NSNumber numberWithInteger:self.minOilReward]];
  }
  if (self.hasMaxOilReward) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxOilReward", [NSNumber numberWithInteger:self.maxOilReward]];
  }
  if (self.hasMinCashReward) {
    [output appendFormat:@"%@%@: %@\n", indent, @"minCashReward", [NSNumber numberWithInteger:self.minCashReward]];
  }
  if (self.hasMaxCashReward) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxCashReward", [NSNumber numberWithInteger:self.maxCashReward]];
  }
  if (self.hasMonsterId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"monsterId", [NSNumber numberWithInteger:self.monsterId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ClanRaidStageRewardProto class]]) {
    return NO;
  }
  ClanRaidStageRewardProto *otherMessage = other;
  return
      self.hasCrsrId == otherMessage.hasCrsrId &&
      (!self.hasCrsrId || self.crsrId == otherMessage.crsrId) &&
      self.hasMinOilReward == otherMessage.hasMinOilReward &&
      (!self.hasMinOilReward || self.minOilReward == otherMessage.minOilReward) &&
      self.hasMaxOilReward == otherMessage.hasMaxOilReward &&
      (!self.hasMaxOilReward || self.maxOilReward == otherMessage.maxOilReward) &&
      self.hasMinCashReward == otherMessage.hasMinCashReward &&
      (!self.hasMinCashReward || self.minCashReward == otherMessage.minCashReward) &&
      self.hasMaxCashReward == otherMessage.hasMaxCashReward &&
      (!self.hasMaxCashReward || self.maxCashReward == otherMessage.maxCashReward) &&
      self.hasMonsterId == otherMessage.hasMonsterId &&
      (!self.hasMonsterId || self.monsterId == otherMessage.monsterId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCrsrId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.crsrId] hash];
  }
  if (self.hasMinOilReward) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.minOilReward] hash];
  }
  if (self.hasMaxOilReward) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxOilReward] hash];
  }
  if (self.hasMinCashReward) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.minCashReward] hash];
  }
  if (self.hasMaxCashReward) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxCashReward] hash];
  }
  if (self.hasMonsterId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.monsterId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ClanRaidStageRewardProto_Builder()
@property (strong) ClanRaidStageRewardProto* result;
@end

@implementation ClanRaidStageRewardProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ClanRaidStageRewardProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClanRaidStageRewardProto_Builder*) clear {
  self.result = [[ClanRaidStageRewardProto alloc] init];
  return self;
}
- (ClanRaidStageRewardProto_Builder*) clone {
  return [ClanRaidStageRewardProto builderWithPrototype:result];
}
- (ClanRaidStageRewardProto*) defaultInstance {
  return [ClanRaidStageRewardProto defaultInstance];
}
- (ClanRaidStageRewardProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClanRaidStageRewardProto*) buildPartial {
  ClanRaidStageRewardProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ClanRaidStageRewardProto_Builder*) mergeFrom:(ClanRaidStageRewardProto*) other {
  if (other == [ClanRaidStageRewardProto defaultInstance]) {
    return self;
  }
  if (other.hasCrsrId) {
    [self setCrsrId:other.crsrId];
  }
  if (other.hasMinOilReward) {
    [self setMinOilReward:other.minOilReward];
  }
  if (other.hasMaxOilReward) {
    [self setMaxOilReward:other.maxOilReward];
  }
  if (other.hasMinCashReward) {
    [self setMinCashReward:other.minCashReward];
  }
  if (other.hasMaxCashReward) {
    [self setMaxCashReward:other.maxCashReward];
  }
  if (other.hasMonsterId) {
    [self setMonsterId:other.monsterId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClanRaidStageRewardProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClanRaidStageRewardProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCrsrId:[input readInt32]];
        break;
      }
      case 24: {
        [self setMinOilReward:[input readInt32]];
        break;
      }
      case 32: {
        [self setMaxOilReward:[input readInt32]];
        break;
      }
      case 40: {
        [self setMinCashReward:[input readInt32]];
        break;
      }
      case 48: {
        [self setMaxCashReward:[input readInt32]];
        break;
      }
      case 56: {
        [self setMonsterId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCrsrId {
  return result.hasCrsrId;
}
- (int32_t) crsrId {
  return result.crsrId;
}
- (ClanRaidStageRewardProto_Builder*) setCrsrId:(int32_t) value {
  result.hasCrsrId = YES;
  result.crsrId = value;
  return self;
}
- (ClanRaidStageRewardProto_Builder*) clearCrsrId {
  result.hasCrsrId = NO;
  result.crsrId = 0;
  return self;
}
- (BOOL) hasMinOilReward {
  return result.hasMinOilReward;
}
- (int32_t) minOilReward {
  return result.minOilReward;
}
- (ClanRaidStageRewardProto_Builder*) setMinOilReward:(int32_t) value {
  result.hasMinOilReward = YES;
  result.minOilReward = value;
  return self;
}
- (ClanRaidStageRewardProto_Builder*) clearMinOilReward {
  result.hasMinOilReward = NO;
  result.minOilReward = 0;
  return self;
}
- (BOOL) hasMaxOilReward {
  return result.hasMaxOilReward;
}
- (int32_t) maxOilReward {
  return result.maxOilReward;
}
- (ClanRaidStageRewardProto_Builder*) setMaxOilReward:(int32_t) value {
  result.hasMaxOilReward = YES;
  result.maxOilReward = value;
  return self;
}
- (ClanRaidStageRewardProto_Builder*) clearMaxOilReward {
  result.hasMaxOilReward = NO;
  result.maxOilReward = 0;
  return self;
}
- (BOOL) hasMinCashReward {
  return result.hasMinCashReward;
}
- (int32_t) minCashReward {
  return result.minCashReward;
}
- (ClanRaidStageRewardProto_Builder*) setMinCashReward:(int32_t) value {
  result.hasMinCashReward = YES;
  result.minCashReward = value;
  return self;
}
- (ClanRaidStageRewardProto_Builder*) clearMinCashReward {
  result.hasMinCashReward = NO;
  result.minCashReward = 0;
  return self;
}
- (BOOL) hasMaxCashReward {
  return result.hasMaxCashReward;
}
- (int32_t) maxCashReward {
  return result.maxCashReward;
}
- (ClanRaidStageRewardProto_Builder*) setMaxCashReward:(int32_t) value {
  result.hasMaxCashReward = YES;
  result.maxCashReward = value;
  return self;
}
- (ClanRaidStageRewardProto_Builder*) clearMaxCashReward {
  result.hasMaxCashReward = NO;
  result.maxCashReward = 0;
  return self;
}
- (BOOL) hasMonsterId {
  return result.hasMonsterId;
}
- (int32_t) monsterId {
  return result.monsterId;
}
- (ClanRaidStageRewardProto_Builder*) setMonsterId:(int32_t) value {
  result.hasMonsterId = YES;
  result.monsterId = value;
  return self;
}
- (ClanRaidStageRewardProto_Builder*) clearMonsterId {
  result.hasMonsterId = NO;
  result.monsterId = 0;
  return self;
}
@end

@interface PersistentClanEventProto ()
@property int32_t clanEventId;
@property DayOfWeek dayOfWeek;
@property int32_t startHour;
@property int32_t eventDurationMinutes;
@property int32_t clanRaidId;
@end

@implementation PersistentClanEventProto

- (BOOL) hasClanEventId {
  return !!hasClanEventId_;
}
- (void) setHasClanEventId:(BOOL) value_ {
  hasClanEventId_ = !!value_;
}
@synthesize clanEventId;
- (BOOL) hasDayOfWeek {
  return !!hasDayOfWeek_;
}
- (void) setHasDayOfWeek:(BOOL) value_ {
  hasDayOfWeek_ = !!value_;
}
@synthesize dayOfWeek;
- (BOOL) hasStartHour {
  return !!hasStartHour_;
}
- (void) setHasStartHour:(BOOL) value_ {
  hasStartHour_ = !!value_;
}
@synthesize startHour;
- (BOOL) hasEventDurationMinutes {
  return !!hasEventDurationMinutes_;
}
- (void) setHasEventDurationMinutes:(BOOL) value_ {
  hasEventDurationMinutes_ = !!value_;
}
@synthesize eventDurationMinutes;
- (BOOL) hasClanRaidId {
  return !!hasClanRaidId_;
}
- (void) setHasClanRaidId:(BOOL) value_ {
  hasClanRaidId_ = !!value_;
}
@synthesize clanRaidId;
- (id) init {
  if ((self = [super init])) {
    self.clanEventId = 0;
    self.dayOfWeek = DayOfWeekMonday;
    self.startHour = 0;
    self.eventDurationMinutes = 0;
    self.clanRaidId = 0;
  }
  return self;
}
static PersistentClanEventProto* defaultPersistentClanEventProtoInstance = nil;
+ (void) initialize {
  if (self == [PersistentClanEventProto class]) {
    defaultPersistentClanEventProtoInstance = [[PersistentClanEventProto alloc] init];
  }
}
+ (PersistentClanEventProto*) defaultInstance {
  return defaultPersistentClanEventProtoInstance;
}
- (PersistentClanEventProto*) defaultInstance {
  return defaultPersistentClanEventProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasClanEventId) {
    [output writeInt32:1 value:self.clanEventId];
  }
  if (self.hasDayOfWeek) {
    [output writeEnum:2 value:self.dayOfWeek];
  }
  if (self.hasStartHour) {
    [output writeInt32:3 value:self.startHour];
  }
  if (self.hasEventDurationMinutes) {
    [output writeInt32:4 value:self.eventDurationMinutes];
  }
  if (self.hasClanRaidId) {
    [output writeInt32:5 value:self.clanRaidId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasClanEventId) {
    size_ += computeInt32Size(1, self.clanEventId);
  }
  if (self.hasDayOfWeek) {
    size_ += computeEnumSize(2, self.dayOfWeek);
  }
  if (self.hasStartHour) {
    size_ += computeInt32Size(3, self.startHour);
  }
  if (self.hasEventDurationMinutes) {
    size_ += computeInt32Size(4, self.eventDurationMinutes);
  }
  if (self.hasClanRaidId) {
    size_ += computeInt32Size(5, self.clanRaidId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PersistentClanEventProto*) parseFromData:(NSData*) data {
  return (PersistentClanEventProto*)[[[PersistentClanEventProto builder] mergeFromData:data] build];
}
+ (PersistentClanEventProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventProto*)[[[PersistentClanEventProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventProto*) parseFromInputStream:(NSInputStream*) input {
  return (PersistentClanEventProto*)[[[PersistentClanEventProto builder] mergeFromInputStream:input] build];
}
+ (PersistentClanEventProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventProto*)[[[PersistentClanEventProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PersistentClanEventProto*)[[[PersistentClanEventProto builder] mergeFromCodedInputStream:input] build];
}
+ (PersistentClanEventProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventProto*)[[[PersistentClanEventProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventProto_Builder*) builder {
  return [[PersistentClanEventProto_Builder alloc] init];
}
+ (PersistentClanEventProto_Builder*) builderWithPrototype:(PersistentClanEventProto*) prototype {
  return [[PersistentClanEventProto builder] mergeFrom:prototype];
}
- (PersistentClanEventProto_Builder*) builder {
  return [PersistentClanEventProto builder];
}
- (PersistentClanEventProto_Builder*) toBuilder {
  return [PersistentClanEventProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasClanEventId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanEventId", [NSNumber numberWithInteger:self.clanEventId]];
  }
  if (self.hasDayOfWeek) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dayOfWeek", [NSNumber numberWithInteger:self.dayOfWeek]];
  }
  if (self.hasStartHour) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startHour", [NSNumber numberWithInteger:self.startHour]];
  }
  if (self.hasEventDurationMinutes) {
    [output appendFormat:@"%@%@: %@\n", indent, @"eventDurationMinutes", [NSNumber numberWithInteger:self.eventDurationMinutes]];
  }
  if (self.hasClanRaidId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanRaidId", [NSNumber numberWithInteger:self.clanRaidId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PersistentClanEventProto class]]) {
    return NO;
  }
  PersistentClanEventProto *otherMessage = other;
  return
      self.hasClanEventId == otherMessage.hasClanEventId &&
      (!self.hasClanEventId || self.clanEventId == otherMessage.clanEventId) &&
      self.hasDayOfWeek == otherMessage.hasDayOfWeek &&
      (!self.hasDayOfWeek || self.dayOfWeek == otherMessage.dayOfWeek) &&
      self.hasStartHour == otherMessage.hasStartHour &&
      (!self.hasStartHour || self.startHour == otherMessage.startHour) &&
      self.hasEventDurationMinutes == otherMessage.hasEventDurationMinutes &&
      (!self.hasEventDurationMinutes || self.eventDurationMinutes == otherMessage.eventDurationMinutes) &&
      self.hasClanRaidId == otherMessage.hasClanRaidId &&
      (!self.hasClanRaidId || self.clanRaidId == otherMessage.clanRaidId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasClanEventId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clanEventId] hash];
  }
  if (self.hasDayOfWeek) {
    hashCode = hashCode * 31 + self.dayOfWeek;
  }
  if (self.hasStartHour) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.startHour] hash];
  }
  if (self.hasEventDurationMinutes) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.eventDurationMinutes] hash];
  }
  if (self.hasClanRaidId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clanRaidId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PersistentClanEventProto_Builder()
@property (strong) PersistentClanEventProto* result;
@end

@implementation PersistentClanEventProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PersistentClanEventProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PersistentClanEventProto_Builder*) clear {
  self.result = [[PersistentClanEventProto alloc] init];
  return self;
}
- (PersistentClanEventProto_Builder*) clone {
  return [PersistentClanEventProto builderWithPrototype:result];
}
- (PersistentClanEventProto*) defaultInstance {
  return [PersistentClanEventProto defaultInstance];
}
- (PersistentClanEventProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PersistentClanEventProto*) buildPartial {
  PersistentClanEventProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PersistentClanEventProto_Builder*) mergeFrom:(PersistentClanEventProto*) other {
  if (other == [PersistentClanEventProto defaultInstance]) {
    return self;
  }
  if (other.hasClanEventId) {
    [self setClanEventId:other.clanEventId];
  }
  if (other.hasDayOfWeek) {
    [self setDayOfWeek:other.dayOfWeek];
  }
  if (other.hasStartHour) {
    [self setStartHour:other.startHour];
  }
  if (other.hasEventDurationMinutes) {
    [self setEventDurationMinutes:other.eventDurationMinutes];
  }
  if (other.hasClanRaidId) {
    [self setClanRaidId:other.clanRaidId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PersistentClanEventProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PersistentClanEventProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setClanEventId:[input readInt32]];
        break;
      }
      case 16: {
        DayOfWeek value = (DayOfWeek)[input readEnum];
        if (DayOfWeekIsValidValue(value)) {
          [self setDayOfWeek:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setStartHour:[input readInt32]];
        break;
      }
      case 32: {
        [self setEventDurationMinutes:[input readInt32]];
        break;
      }
      case 40: {
        [self setClanRaidId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasClanEventId {
  return result.hasClanEventId;
}
- (int32_t) clanEventId {
  return result.clanEventId;
}
- (PersistentClanEventProto_Builder*) setClanEventId:(int32_t) value {
  result.hasClanEventId = YES;
  result.clanEventId = value;
  return self;
}
- (PersistentClanEventProto_Builder*) clearClanEventId {
  result.hasClanEventId = NO;
  result.clanEventId = 0;
  return self;
}
- (BOOL) hasDayOfWeek {
  return result.hasDayOfWeek;
}
- (DayOfWeek) dayOfWeek {
  return result.dayOfWeek;
}
- (PersistentClanEventProto_Builder*) setDayOfWeek:(DayOfWeek) value {
  result.hasDayOfWeek = YES;
  result.dayOfWeek = value;
  return self;
}
- (PersistentClanEventProto_Builder*) clearDayOfWeek {
  result.hasDayOfWeek = NO;
  result.dayOfWeek = DayOfWeekMonday;
  return self;
}
- (BOOL) hasStartHour {
  return result.hasStartHour;
}
- (int32_t) startHour {
  return result.startHour;
}
- (PersistentClanEventProto_Builder*) setStartHour:(int32_t) value {
  result.hasStartHour = YES;
  result.startHour = value;
  return self;
}
- (PersistentClanEventProto_Builder*) clearStartHour {
  result.hasStartHour = NO;
  result.startHour = 0;
  return self;
}
- (BOOL) hasEventDurationMinutes {
  return result.hasEventDurationMinutes;
}
- (int32_t) eventDurationMinutes {
  return result.eventDurationMinutes;
}
- (PersistentClanEventProto_Builder*) setEventDurationMinutes:(int32_t) value {
  result.hasEventDurationMinutes = YES;
  result.eventDurationMinutes = value;
  return self;
}
- (PersistentClanEventProto_Builder*) clearEventDurationMinutes {
  result.hasEventDurationMinutes = NO;
  result.eventDurationMinutes = 0;
  return self;
}
- (BOOL) hasClanRaidId {
  return result.hasClanRaidId;
}
- (int32_t) clanRaidId {
  return result.clanRaidId;
}
- (PersistentClanEventProto_Builder*) setClanRaidId:(int32_t) value {
  result.hasClanRaidId = YES;
  result.clanRaidId = value;
  return self;
}
- (PersistentClanEventProto_Builder*) clearClanRaidId {
  result.hasClanRaidId = NO;
  result.clanRaidId = 0;
  return self;
}
@end

@interface PersistentClanEventClanInfoProto ()
@property (strong) NSString* clanUuid;
@property int32_t clanEventId;
@property int32_t clanRaidId;
@property int32_t clanRaidStageId;
@property int64_t stageStartTime;
@property int32_t crsmId;
@property int64_t stageMonsterStartTime;
@end

@implementation PersistentClanEventClanInfoProto

- (BOOL) hasClanUuid {
  return !!hasClanUuid_;
}
- (void) setHasClanUuid:(BOOL) value_ {
  hasClanUuid_ = !!value_;
}
@synthesize clanUuid;
- (BOOL) hasClanEventId {
  return !!hasClanEventId_;
}
- (void) setHasClanEventId:(BOOL) value_ {
  hasClanEventId_ = !!value_;
}
@synthesize clanEventId;
- (BOOL) hasClanRaidId {
  return !!hasClanRaidId_;
}
- (void) setHasClanRaidId:(BOOL) value_ {
  hasClanRaidId_ = !!value_;
}
@synthesize clanRaidId;
- (BOOL) hasClanRaidStageId {
  return !!hasClanRaidStageId_;
}
- (void) setHasClanRaidStageId:(BOOL) value_ {
  hasClanRaidStageId_ = !!value_;
}
@synthesize clanRaidStageId;
- (BOOL) hasStageStartTime {
  return !!hasStageStartTime_;
}
- (void) setHasStageStartTime:(BOOL) value_ {
  hasStageStartTime_ = !!value_;
}
@synthesize stageStartTime;
- (BOOL) hasCrsmId {
  return !!hasCrsmId_;
}
- (void) setHasCrsmId:(BOOL) value_ {
  hasCrsmId_ = !!value_;
}
@synthesize crsmId;
- (BOOL) hasStageMonsterStartTime {
  return !!hasStageMonsterStartTime_;
}
- (void) setHasStageMonsterStartTime:(BOOL) value_ {
  hasStageMonsterStartTime_ = !!value_;
}
@synthesize stageMonsterStartTime;
- (id) init {
  if ((self = [super init])) {
    self.clanUuid = @"";
    self.clanEventId = 0;
    self.clanRaidId = 0;
    self.clanRaidStageId = 0;
    self.stageStartTime = 0L;
    self.crsmId = 0;
    self.stageMonsterStartTime = 0L;
  }
  return self;
}
static PersistentClanEventClanInfoProto* defaultPersistentClanEventClanInfoProtoInstance = nil;
+ (void) initialize {
  if (self == [PersistentClanEventClanInfoProto class]) {
    defaultPersistentClanEventClanInfoProtoInstance = [[PersistentClanEventClanInfoProto alloc] init];
  }
}
+ (PersistentClanEventClanInfoProto*) defaultInstance {
  return defaultPersistentClanEventClanInfoProtoInstance;
}
- (PersistentClanEventClanInfoProto*) defaultInstance {
  return defaultPersistentClanEventClanInfoProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasClanUuid) {
    [output writeString:1 value:self.clanUuid];
  }
  if (self.hasClanEventId) {
    [output writeInt32:2 value:self.clanEventId];
  }
  if (self.hasClanRaidId) {
    [output writeInt32:3 value:self.clanRaidId];
  }
  if (self.hasClanRaidStageId) {
    [output writeInt32:4 value:self.clanRaidStageId];
  }
  if (self.hasStageStartTime) {
    [output writeInt64:5 value:self.stageStartTime];
  }
  if (self.hasCrsmId) {
    [output writeInt32:6 value:self.crsmId];
  }
  if (self.hasStageMonsterStartTime) {
    [output writeInt64:7 value:self.stageMonsterStartTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasClanUuid) {
    size_ += computeStringSize(1, self.clanUuid);
  }
  if (self.hasClanEventId) {
    size_ += computeInt32Size(2, self.clanEventId);
  }
  if (self.hasClanRaidId) {
    size_ += computeInt32Size(3, self.clanRaidId);
  }
  if (self.hasClanRaidStageId) {
    size_ += computeInt32Size(4, self.clanRaidStageId);
  }
  if (self.hasStageStartTime) {
    size_ += computeInt64Size(5, self.stageStartTime);
  }
  if (self.hasCrsmId) {
    size_ += computeInt32Size(6, self.crsmId);
  }
  if (self.hasStageMonsterStartTime) {
    size_ += computeInt64Size(7, self.stageMonsterStartTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PersistentClanEventClanInfoProto*) parseFromData:(NSData*) data {
  return (PersistentClanEventClanInfoProto*)[[[PersistentClanEventClanInfoProto builder] mergeFromData:data] build];
}
+ (PersistentClanEventClanInfoProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventClanInfoProto*)[[[PersistentClanEventClanInfoProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventClanInfoProto*) parseFromInputStream:(NSInputStream*) input {
  return (PersistentClanEventClanInfoProto*)[[[PersistentClanEventClanInfoProto builder] mergeFromInputStream:input] build];
}
+ (PersistentClanEventClanInfoProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventClanInfoProto*)[[[PersistentClanEventClanInfoProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventClanInfoProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PersistentClanEventClanInfoProto*)[[[PersistentClanEventClanInfoProto builder] mergeFromCodedInputStream:input] build];
}
+ (PersistentClanEventClanInfoProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventClanInfoProto*)[[[PersistentClanEventClanInfoProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventClanInfoProto_Builder*) builder {
  return [[PersistentClanEventClanInfoProto_Builder alloc] init];
}
+ (PersistentClanEventClanInfoProto_Builder*) builderWithPrototype:(PersistentClanEventClanInfoProto*) prototype {
  return [[PersistentClanEventClanInfoProto builder] mergeFrom:prototype];
}
- (PersistentClanEventClanInfoProto_Builder*) builder {
  return [PersistentClanEventClanInfoProto builder];
}
- (PersistentClanEventClanInfoProto_Builder*) toBuilder {
  return [PersistentClanEventClanInfoProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasClanUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanUuid", self.clanUuid];
  }
  if (self.hasClanEventId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanEventId", [NSNumber numberWithInteger:self.clanEventId]];
  }
  if (self.hasClanRaidId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanRaidId", [NSNumber numberWithInteger:self.clanRaidId]];
  }
  if (self.hasClanRaidStageId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanRaidStageId", [NSNumber numberWithInteger:self.clanRaidStageId]];
  }
  if (self.hasStageStartTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"stageStartTime", [NSNumber numberWithLongLong:self.stageStartTime]];
  }
  if (self.hasCrsmId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"crsmId", [NSNumber numberWithInteger:self.crsmId]];
  }
  if (self.hasStageMonsterStartTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"stageMonsterStartTime", [NSNumber numberWithLongLong:self.stageMonsterStartTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PersistentClanEventClanInfoProto class]]) {
    return NO;
  }
  PersistentClanEventClanInfoProto *otherMessage = other;
  return
      self.hasClanUuid == otherMessage.hasClanUuid &&
      (!self.hasClanUuid || [self.clanUuid isEqual:otherMessage.clanUuid]) &&
      self.hasClanEventId == otherMessage.hasClanEventId &&
      (!self.hasClanEventId || self.clanEventId == otherMessage.clanEventId) &&
      self.hasClanRaidId == otherMessage.hasClanRaidId &&
      (!self.hasClanRaidId || self.clanRaidId == otherMessage.clanRaidId) &&
      self.hasClanRaidStageId == otherMessage.hasClanRaidStageId &&
      (!self.hasClanRaidStageId || self.clanRaidStageId == otherMessage.clanRaidStageId) &&
      self.hasStageStartTime == otherMessage.hasStageStartTime &&
      (!self.hasStageStartTime || self.stageStartTime == otherMessage.stageStartTime) &&
      self.hasCrsmId == otherMessage.hasCrsmId &&
      (!self.hasCrsmId || self.crsmId == otherMessage.crsmId) &&
      self.hasStageMonsterStartTime == otherMessage.hasStageMonsterStartTime &&
      (!self.hasStageMonsterStartTime || self.stageMonsterStartTime == otherMessage.stageMonsterStartTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasClanUuid) {
    hashCode = hashCode * 31 + [self.clanUuid hash];
  }
  if (self.hasClanEventId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clanEventId] hash];
  }
  if (self.hasClanRaidId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clanRaidId] hash];
  }
  if (self.hasClanRaidStageId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clanRaidStageId] hash];
  }
  if (self.hasStageStartTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.stageStartTime] hash];
  }
  if (self.hasCrsmId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.crsmId] hash];
  }
  if (self.hasStageMonsterStartTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.stageMonsterStartTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PersistentClanEventClanInfoProto_Builder()
@property (strong) PersistentClanEventClanInfoProto* result;
@end

@implementation PersistentClanEventClanInfoProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PersistentClanEventClanInfoProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PersistentClanEventClanInfoProto_Builder*) clear {
  self.result = [[PersistentClanEventClanInfoProto alloc] init];
  return self;
}
- (PersistentClanEventClanInfoProto_Builder*) clone {
  return [PersistentClanEventClanInfoProto builderWithPrototype:result];
}
- (PersistentClanEventClanInfoProto*) defaultInstance {
  return [PersistentClanEventClanInfoProto defaultInstance];
}
- (PersistentClanEventClanInfoProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PersistentClanEventClanInfoProto*) buildPartial {
  PersistentClanEventClanInfoProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PersistentClanEventClanInfoProto_Builder*) mergeFrom:(PersistentClanEventClanInfoProto*) other {
  if (other == [PersistentClanEventClanInfoProto defaultInstance]) {
    return self;
  }
  if (other.hasClanUuid) {
    [self setClanUuid:other.clanUuid];
  }
  if (other.hasClanEventId) {
    [self setClanEventId:other.clanEventId];
  }
  if (other.hasClanRaidId) {
    [self setClanRaidId:other.clanRaidId];
  }
  if (other.hasClanRaidStageId) {
    [self setClanRaidStageId:other.clanRaidStageId];
  }
  if (other.hasStageStartTime) {
    [self setStageStartTime:other.stageStartTime];
  }
  if (other.hasCrsmId) {
    [self setCrsmId:other.crsmId];
  }
  if (other.hasStageMonsterStartTime) {
    [self setStageMonsterStartTime:other.stageMonsterStartTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PersistentClanEventClanInfoProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PersistentClanEventClanInfoProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setClanUuid:[input readString]];
        break;
      }
      case 16: {
        [self setClanEventId:[input readInt32]];
        break;
      }
      case 24: {
        [self setClanRaidId:[input readInt32]];
        break;
      }
      case 32: {
        [self setClanRaidStageId:[input readInt32]];
        break;
      }
      case 40: {
        [self setStageStartTime:[input readInt64]];
        break;
      }
      case 48: {
        [self setCrsmId:[input readInt32]];
        break;
      }
      case 56: {
        [self setStageMonsterStartTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasClanUuid {
  return result.hasClanUuid;
}
- (NSString*) clanUuid {
  return result.clanUuid;
}
- (PersistentClanEventClanInfoProto_Builder*) setClanUuid:(NSString*) value {
  result.hasClanUuid = YES;
  result.clanUuid = value;
  return self;
}
- (PersistentClanEventClanInfoProto_Builder*) clearClanUuid {
  result.hasClanUuid = NO;
  result.clanUuid = @"";
  return self;
}
- (BOOL) hasClanEventId {
  return result.hasClanEventId;
}
- (int32_t) clanEventId {
  return result.clanEventId;
}
- (PersistentClanEventClanInfoProto_Builder*) setClanEventId:(int32_t) value {
  result.hasClanEventId = YES;
  result.clanEventId = value;
  return self;
}
- (PersistentClanEventClanInfoProto_Builder*) clearClanEventId {
  result.hasClanEventId = NO;
  result.clanEventId = 0;
  return self;
}
- (BOOL) hasClanRaidId {
  return result.hasClanRaidId;
}
- (int32_t) clanRaidId {
  return result.clanRaidId;
}
- (PersistentClanEventClanInfoProto_Builder*) setClanRaidId:(int32_t) value {
  result.hasClanRaidId = YES;
  result.clanRaidId = value;
  return self;
}
- (PersistentClanEventClanInfoProto_Builder*) clearClanRaidId {
  result.hasClanRaidId = NO;
  result.clanRaidId = 0;
  return self;
}
- (BOOL) hasClanRaidStageId {
  return result.hasClanRaidStageId;
}
- (int32_t) clanRaidStageId {
  return result.clanRaidStageId;
}
- (PersistentClanEventClanInfoProto_Builder*) setClanRaidStageId:(int32_t) value {
  result.hasClanRaidStageId = YES;
  result.clanRaidStageId = value;
  return self;
}
- (PersistentClanEventClanInfoProto_Builder*) clearClanRaidStageId {
  result.hasClanRaidStageId = NO;
  result.clanRaidStageId = 0;
  return self;
}
- (BOOL) hasStageStartTime {
  return result.hasStageStartTime;
}
- (int64_t) stageStartTime {
  return result.stageStartTime;
}
- (PersistentClanEventClanInfoProto_Builder*) setStageStartTime:(int64_t) value {
  result.hasStageStartTime = YES;
  result.stageStartTime = value;
  return self;
}
- (PersistentClanEventClanInfoProto_Builder*) clearStageStartTime {
  result.hasStageStartTime = NO;
  result.stageStartTime = 0L;
  return self;
}
- (BOOL) hasCrsmId {
  return result.hasCrsmId;
}
- (int32_t) crsmId {
  return result.crsmId;
}
- (PersistentClanEventClanInfoProto_Builder*) setCrsmId:(int32_t) value {
  result.hasCrsmId = YES;
  result.crsmId = value;
  return self;
}
- (PersistentClanEventClanInfoProto_Builder*) clearCrsmId {
  result.hasCrsmId = NO;
  result.crsmId = 0;
  return self;
}
- (BOOL) hasStageMonsterStartTime {
  return result.hasStageMonsterStartTime;
}
- (int64_t) stageMonsterStartTime {
  return result.stageMonsterStartTime;
}
- (PersistentClanEventClanInfoProto_Builder*) setStageMonsterStartTime:(int64_t) value {
  result.hasStageMonsterStartTime = YES;
  result.stageMonsterStartTime = value;
  return self;
}
- (PersistentClanEventClanInfoProto_Builder*) clearStageMonsterStartTime {
  result.hasStageMonsterStartTime = NO;
  result.stageMonsterStartTime = 0L;
  return self;
}
@end

@interface PersistentClanEventUserInfoProto ()
@property (strong) NSString* userUuid;
@property (strong) NSString* clanUuid;
@property int32_t crId;
@property int32_t crDmgDone;
@property int32_t crsDmgDone;
@property int32_t crsmDmgDone;
@property (strong) UserCurrentMonsterTeamProto* userMonsters;
@end

@implementation PersistentClanEventUserInfoProto

- (BOOL) hasUserUuid {
  return !!hasUserUuid_;
}
- (void) setHasUserUuid:(BOOL) value_ {
  hasUserUuid_ = !!value_;
}
@synthesize userUuid;
- (BOOL) hasClanUuid {
  return !!hasClanUuid_;
}
- (void) setHasClanUuid:(BOOL) value_ {
  hasClanUuid_ = !!value_;
}
@synthesize clanUuid;
- (BOOL) hasCrId {
  return !!hasCrId_;
}
- (void) setHasCrId:(BOOL) value_ {
  hasCrId_ = !!value_;
}
@synthesize crId;
- (BOOL) hasCrDmgDone {
  return !!hasCrDmgDone_;
}
- (void) setHasCrDmgDone:(BOOL) value_ {
  hasCrDmgDone_ = !!value_;
}
@synthesize crDmgDone;
- (BOOL) hasCrsDmgDone {
  return !!hasCrsDmgDone_;
}
- (void) setHasCrsDmgDone:(BOOL) value_ {
  hasCrsDmgDone_ = !!value_;
}
@synthesize crsDmgDone;
- (BOOL) hasCrsmDmgDone {
  return !!hasCrsmDmgDone_;
}
- (void) setHasCrsmDmgDone:(BOOL) value_ {
  hasCrsmDmgDone_ = !!value_;
}
@synthesize crsmDmgDone;
- (BOOL) hasUserMonsters {
  return !!hasUserMonsters_;
}
- (void) setHasUserMonsters:(BOOL) value_ {
  hasUserMonsters_ = !!value_;
}
@synthesize userMonsters;
- (id) init {
  if ((self = [super init])) {
    self.userUuid = @"";
    self.clanUuid = @"";
    self.crId = 0;
    self.crDmgDone = 0;
    self.crsDmgDone = 0;
    self.crsmDmgDone = 0;
    self.userMonsters = [UserCurrentMonsterTeamProto defaultInstance];
  }
  return self;
}
static PersistentClanEventUserInfoProto* defaultPersistentClanEventUserInfoProtoInstance = nil;
+ (void) initialize {
  if (self == [PersistentClanEventUserInfoProto class]) {
    defaultPersistentClanEventUserInfoProtoInstance = [[PersistentClanEventUserInfoProto alloc] init];
  }
}
+ (PersistentClanEventUserInfoProto*) defaultInstance {
  return defaultPersistentClanEventUserInfoProtoInstance;
}
- (PersistentClanEventUserInfoProto*) defaultInstance {
  return defaultPersistentClanEventUserInfoProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserUuid) {
    [output writeString:1 value:self.userUuid];
  }
  if (self.hasClanUuid) {
    [output writeString:2 value:self.clanUuid];
  }
  if (self.hasCrId) {
    [output writeInt32:3 value:self.crId];
  }
  if (self.hasCrDmgDone) {
    [output writeInt32:4 value:self.crDmgDone];
  }
  if (self.hasCrsDmgDone) {
    [output writeInt32:6 value:self.crsDmgDone];
  }
  if (self.hasCrsmDmgDone) {
    [output writeInt32:8 value:self.crsmDmgDone];
  }
  if (self.hasUserMonsters) {
    [output writeMessage:9 value:self.userMonsters];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserUuid) {
    size_ += computeStringSize(1, self.userUuid);
  }
  if (self.hasClanUuid) {
    size_ += computeStringSize(2, self.clanUuid);
  }
  if (self.hasCrId) {
    size_ += computeInt32Size(3, self.crId);
  }
  if (self.hasCrDmgDone) {
    size_ += computeInt32Size(4, self.crDmgDone);
  }
  if (self.hasCrsDmgDone) {
    size_ += computeInt32Size(6, self.crsDmgDone);
  }
  if (self.hasCrsmDmgDone) {
    size_ += computeInt32Size(8, self.crsmDmgDone);
  }
  if (self.hasUserMonsters) {
    size_ += computeMessageSize(9, self.userMonsters);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PersistentClanEventUserInfoProto*) parseFromData:(NSData*) data {
  return (PersistentClanEventUserInfoProto*)[[[PersistentClanEventUserInfoProto builder] mergeFromData:data] build];
}
+ (PersistentClanEventUserInfoProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventUserInfoProto*)[[[PersistentClanEventUserInfoProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventUserInfoProto*) parseFromInputStream:(NSInputStream*) input {
  return (PersistentClanEventUserInfoProto*)[[[PersistentClanEventUserInfoProto builder] mergeFromInputStream:input] build];
}
+ (PersistentClanEventUserInfoProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventUserInfoProto*)[[[PersistentClanEventUserInfoProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventUserInfoProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PersistentClanEventUserInfoProto*)[[[PersistentClanEventUserInfoProto builder] mergeFromCodedInputStream:input] build];
}
+ (PersistentClanEventUserInfoProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventUserInfoProto*)[[[PersistentClanEventUserInfoProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventUserInfoProto_Builder*) builder {
  return [[PersistentClanEventUserInfoProto_Builder alloc] init];
}
+ (PersistentClanEventUserInfoProto_Builder*) builderWithPrototype:(PersistentClanEventUserInfoProto*) prototype {
  return [[PersistentClanEventUserInfoProto builder] mergeFrom:prototype];
}
- (PersistentClanEventUserInfoProto_Builder*) builder {
  return [PersistentClanEventUserInfoProto builder];
}
- (PersistentClanEventUserInfoProto_Builder*) toBuilder {
  return [PersistentClanEventUserInfoProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userUuid", self.userUuid];
  }
  if (self.hasClanUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanUuid", self.clanUuid];
  }
  if (self.hasCrId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"crId", [NSNumber numberWithInteger:self.crId]];
  }
  if (self.hasCrDmgDone) {
    [output appendFormat:@"%@%@: %@\n", indent, @"crDmgDone", [NSNumber numberWithInteger:self.crDmgDone]];
  }
  if (self.hasCrsDmgDone) {
    [output appendFormat:@"%@%@: %@\n", indent, @"crsDmgDone", [NSNumber numberWithInteger:self.crsDmgDone]];
  }
  if (self.hasCrsmDmgDone) {
    [output appendFormat:@"%@%@: %@\n", indent, @"crsmDmgDone", [NSNumber numberWithInteger:self.crsmDmgDone]];
  }
  if (self.hasUserMonsters) {
    [output appendFormat:@"%@%@ {\n", indent, @"userMonsters"];
    [self.userMonsters writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PersistentClanEventUserInfoProto class]]) {
    return NO;
  }
  PersistentClanEventUserInfoProto *otherMessage = other;
  return
      self.hasUserUuid == otherMessage.hasUserUuid &&
      (!self.hasUserUuid || [self.userUuid isEqual:otherMessage.userUuid]) &&
      self.hasClanUuid == otherMessage.hasClanUuid &&
      (!self.hasClanUuid || [self.clanUuid isEqual:otherMessage.clanUuid]) &&
      self.hasCrId == otherMessage.hasCrId &&
      (!self.hasCrId || self.crId == otherMessage.crId) &&
      self.hasCrDmgDone == otherMessage.hasCrDmgDone &&
      (!self.hasCrDmgDone || self.crDmgDone == otherMessage.crDmgDone) &&
      self.hasCrsDmgDone == otherMessage.hasCrsDmgDone &&
      (!self.hasCrsDmgDone || self.crsDmgDone == otherMessage.crsDmgDone) &&
      self.hasCrsmDmgDone == otherMessage.hasCrsmDmgDone &&
      (!self.hasCrsmDmgDone || self.crsmDmgDone == otherMessage.crsmDmgDone) &&
      self.hasUserMonsters == otherMessage.hasUserMonsters &&
      (!self.hasUserMonsters || [self.userMonsters isEqual:otherMessage.userMonsters]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserUuid) {
    hashCode = hashCode * 31 + [self.userUuid hash];
  }
  if (self.hasClanUuid) {
    hashCode = hashCode * 31 + [self.clanUuid hash];
  }
  if (self.hasCrId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.crId] hash];
  }
  if (self.hasCrDmgDone) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.crDmgDone] hash];
  }
  if (self.hasCrsDmgDone) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.crsDmgDone] hash];
  }
  if (self.hasCrsmDmgDone) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.crsmDmgDone] hash];
  }
  if (self.hasUserMonsters) {
    hashCode = hashCode * 31 + [self.userMonsters hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PersistentClanEventUserInfoProto_Builder()
@property (strong) PersistentClanEventUserInfoProto* result;
@end

@implementation PersistentClanEventUserInfoProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PersistentClanEventUserInfoProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PersistentClanEventUserInfoProto_Builder*) clear {
  self.result = [[PersistentClanEventUserInfoProto alloc] init];
  return self;
}
- (PersistentClanEventUserInfoProto_Builder*) clone {
  return [PersistentClanEventUserInfoProto builderWithPrototype:result];
}
- (PersistentClanEventUserInfoProto*) defaultInstance {
  return [PersistentClanEventUserInfoProto defaultInstance];
}
- (PersistentClanEventUserInfoProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PersistentClanEventUserInfoProto*) buildPartial {
  PersistentClanEventUserInfoProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PersistentClanEventUserInfoProto_Builder*) mergeFrom:(PersistentClanEventUserInfoProto*) other {
  if (other == [PersistentClanEventUserInfoProto defaultInstance]) {
    return self;
  }
  if (other.hasUserUuid) {
    [self setUserUuid:other.userUuid];
  }
  if (other.hasClanUuid) {
    [self setClanUuid:other.clanUuid];
  }
  if (other.hasCrId) {
    [self setCrId:other.crId];
  }
  if (other.hasCrDmgDone) {
    [self setCrDmgDone:other.crDmgDone];
  }
  if (other.hasCrsDmgDone) {
    [self setCrsDmgDone:other.crsDmgDone];
  }
  if (other.hasCrsmDmgDone) {
    [self setCrsmDmgDone:other.crsmDmgDone];
  }
  if (other.hasUserMonsters) {
    [self mergeUserMonsters:other.userMonsters];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PersistentClanEventUserInfoProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PersistentClanEventUserInfoProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserUuid:[input readString]];
        break;
      }
      case 18: {
        [self setClanUuid:[input readString]];
        break;
      }
      case 24: {
        [self setCrId:[input readInt32]];
        break;
      }
      case 32: {
        [self setCrDmgDone:[input readInt32]];
        break;
      }
      case 48: {
        [self setCrsDmgDone:[input readInt32]];
        break;
      }
      case 64: {
        [self setCrsmDmgDone:[input readInt32]];
        break;
      }
      case 74: {
        UserCurrentMonsterTeamProto_Builder* subBuilder = [UserCurrentMonsterTeamProto builder];
        if (self.hasUserMonsters) {
          [subBuilder mergeFrom:self.userMonsters];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserMonsters:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUserUuid {
  return result.hasUserUuid;
}
- (NSString*) userUuid {
  return result.userUuid;
}
- (PersistentClanEventUserInfoProto_Builder*) setUserUuid:(NSString*) value {
  result.hasUserUuid = YES;
  result.userUuid = value;
  return self;
}
- (PersistentClanEventUserInfoProto_Builder*) clearUserUuid {
  result.hasUserUuid = NO;
  result.userUuid = @"";
  return self;
}
- (BOOL) hasClanUuid {
  return result.hasClanUuid;
}
- (NSString*) clanUuid {
  return result.clanUuid;
}
- (PersistentClanEventUserInfoProto_Builder*) setClanUuid:(NSString*) value {
  result.hasClanUuid = YES;
  result.clanUuid = value;
  return self;
}
- (PersistentClanEventUserInfoProto_Builder*) clearClanUuid {
  result.hasClanUuid = NO;
  result.clanUuid = @"";
  return self;
}
- (BOOL) hasCrId {
  return result.hasCrId;
}
- (int32_t) crId {
  return result.crId;
}
- (PersistentClanEventUserInfoProto_Builder*) setCrId:(int32_t) value {
  result.hasCrId = YES;
  result.crId = value;
  return self;
}
- (PersistentClanEventUserInfoProto_Builder*) clearCrId {
  result.hasCrId = NO;
  result.crId = 0;
  return self;
}
- (BOOL) hasCrDmgDone {
  return result.hasCrDmgDone;
}
- (int32_t) crDmgDone {
  return result.crDmgDone;
}
- (PersistentClanEventUserInfoProto_Builder*) setCrDmgDone:(int32_t) value {
  result.hasCrDmgDone = YES;
  result.crDmgDone = value;
  return self;
}
- (PersistentClanEventUserInfoProto_Builder*) clearCrDmgDone {
  result.hasCrDmgDone = NO;
  result.crDmgDone = 0;
  return self;
}
- (BOOL) hasCrsDmgDone {
  return result.hasCrsDmgDone;
}
- (int32_t) crsDmgDone {
  return result.crsDmgDone;
}
- (PersistentClanEventUserInfoProto_Builder*) setCrsDmgDone:(int32_t) value {
  result.hasCrsDmgDone = YES;
  result.crsDmgDone = value;
  return self;
}
- (PersistentClanEventUserInfoProto_Builder*) clearCrsDmgDone {
  result.hasCrsDmgDone = NO;
  result.crsDmgDone = 0;
  return self;
}
- (BOOL) hasCrsmDmgDone {
  return result.hasCrsmDmgDone;
}
- (int32_t) crsmDmgDone {
  return result.crsmDmgDone;
}
- (PersistentClanEventUserInfoProto_Builder*) setCrsmDmgDone:(int32_t) value {
  result.hasCrsmDmgDone = YES;
  result.crsmDmgDone = value;
  return self;
}
- (PersistentClanEventUserInfoProto_Builder*) clearCrsmDmgDone {
  result.hasCrsmDmgDone = NO;
  result.crsmDmgDone = 0;
  return self;
}
- (BOOL) hasUserMonsters {
  return result.hasUserMonsters;
}
- (UserCurrentMonsterTeamProto*) userMonsters {
  return result.userMonsters;
}
- (PersistentClanEventUserInfoProto_Builder*) setUserMonsters:(UserCurrentMonsterTeamProto*) value {
  result.hasUserMonsters = YES;
  result.userMonsters = value;
  return self;
}
- (PersistentClanEventUserInfoProto_Builder*) setUserMonsters_Builder:(UserCurrentMonsterTeamProto_Builder*) builderForValue {
  return [self setUserMonsters:[builderForValue build]];
}
- (PersistentClanEventUserInfoProto_Builder*) mergeUserMonsters:(UserCurrentMonsterTeamProto*) value {
  if (result.hasUserMonsters &&
      result.userMonsters != [UserCurrentMonsterTeamProto defaultInstance]) {
    result.userMonsters =
      [[[UserCurrentMonsterTeamProto builderWithPrototype:result.userMonsters] mergeFrom:value] buildPartial];
  } else {
    result.userMonsters = value;
  }
  result.hasUserMonsters = YES;
  return self;
}
- (PersistentClanEventUserInfoProto_Builder*) clearUserMonsters {
  result.hasUserMonsters = NO;
  result.userMonsters = [UserCurrentMonsterTeamProto defaultInstance];
  return self;
}
@end

@interface PersistentClanEventUserRewardProto ()
@property (strong) NSString* rewardUuid;
@property (strong) NSString* userUuid;
@property int64_t crsEndTime;
@property ResourceType resourceType;
@property int32_t staticDataId;
@property int32_t quantity;
@property int64_t timeRedeemed;
@end

@implementation PersistentClanEventUserRewardProto

- (BOOL) hasRewardUuid {
  return !!hasRewardUuid_;
}
- (void) setHasRewardUuid:(BOOL) value_ {
  hasRewardUuid_ = !!value_;
}
@synthesize rewardUuid;
- (BOOL) hasUserUuid {
  return !!hasUserUuid_;
}
- (void) setHasUserUuid:(BOOL) value_ {
  hasUserUuid_ = !!value_;
}
@synthesize userUuid;
- (BOOL) hasCrsEndTime {
  return !!hasCrsEndTime_;
}
- (void) setHasCrsEndTime:(BOOL) value_ {
  hasCrsEndTime_ = !!value_;
}
@synthesize crsEndTime;
- (BOOL) hasResourceType {
  return !!hasResourceType_;
}
- (void) setHasResourceType:(BOOL) value_ {
  hasResourceType_ = !!value_;
}
@synthesize resourceType;
- (BOOL) hasStaticDataId {
  return !!hasStaticDataId_;
}
- (void) setHasStaticDataId:(BOOL) value_ {
  hasStaticDataId_ = !!value_;
}
@synthesize staticDataId;
- (BOOL) hasQuantity {
  return !!hasQuantity_;
}
- (void) setHasQuantity:(BOOL) value_ {
  hasQuantity_ = !!value_;
}
@synthesize quantity;
- (BOOL) hasTimeRedeemed {
  return !!hasTimeRedeemed_;
}
- (void) setHasTimeRedeemed:(BOOL) value_ {
  hasTimeRedeemed_ = !!value_;
}
@synthesize timeRedeemed;
- (id) init {
  if ((self = [super init])) {
    self.rewardUuid = @"";
    self.userUuid = @"";
    self.crsEndTime = 0L;
    self.resourceType = ResourceTypeCash;
    self.staticDataId = 0;
    self.quantity = 0;
    self.timeRedeemed = 0L;
  }
  return self;
}
static PersistentClanEventUserRewardProto* defaultPersistentClanEventUserRewardProtoInstance = nil;
+ (void) initialize {
  if (self == [PersistentClanEventUserRewardProto class]) {
    defaultPersistentClanEventUserRewardProtoInstance = [[PersistentClanEventUserRewardProto alloc] init];
  }
}
+ (PersistentClanEventUserRewardProto*) defaultInstance {
  return defaultPersistentClanEventUserRewardProtoInstance;
}
- (PersistentClanEventUserRewardProto*) defaultInstance {
  return defaultPersistentClanEventUserRewardProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRewardUuid) {
    [output writeString:1 value:self.rewardUuid];
  }
  if (self.hasUserUuid) {
    [output writeString:2 value:self.userUuid];
  }
  if (self.hasCrsEndTime) {
    [output writeInt64:4 value:self.crsEndTime];
  }
  if (self.hasResourceType) {
    [output writeEnum:5 value:self.resourceType];
  }
  if (self.hasStaticDataId) {
    [output writeInt32:6 value:self.staticDataId];
  }
  if (self.hasQuantity) {
    [output writeInt32:7 value:self.quantity];
  }
  if (self.hasTimeRedeemed) {
    [output writeInt64:9 value:self.timeRedeemed];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRewardUuid) {
    size_ += computeStringSize(1, self.rewardUuid);
  }
  if (self.hasUserUuid) {
    size_ += computeStringSize(2, self.userUuid);
  }
  if (self.hasCrsEndTime) {
    size_ += computeInt64Size(4, self.crsEndTime);
  }
  if (self.hasResourceType) {
    size_ += computeEnumSize(5, self.resourceType);
  }
  if (self.hasStaticDataId) {
    size_ += computeInt32Size(6, self.staticDataId);
  }
  if (self.hasQuantity) {
    size_ += computeInt32Size(7, self.quantity);
  }
  if (self.hasTimeRedeemed) {
    size_ += computeInt64Size(9, self.timeRedeemed);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PersistentClanEventUserRewardProto*) parseFromData:(NSData*) data {
  return (PersistentClanEventUserRewardProto*)[[[PersistentClanEventUserRewardProto builder] mergeFromData:data] build];
}
+ (PersistentClanEventUserRewardProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventUserRewardProto*)[[[PersistentClanEventUserRewardProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventUserRewardProto*) parseFromInputStream:(NSInputStream*) input {
  return (PersistentClanEventUserRewardProto*)[[[PersistentClanEventUserRewardProto builder] mergeFromInputStream:input] build];
}
+ (PersistentClanEventUserRewardProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventUserRewardProto*)[[[PersistentClanEventUserRewardProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventUserRewardProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PersistentClanEventUserRewardProto*)[[[PersistentClanEventUserRewardProto builder] mergeFromCodedInputStream:input] build];
}
+ (PersistentClanEventUserRewardProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventUserRewardProto*)[[[PersistentClanEventUserRewardProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventUserRewardProto_Builder*) builder {
  return [[PersistentClanEventUserRewardProto_Builder alloc] init];
}
+ (PersistentClanEventUserRewardProto_Builder*) builderWithPrototype:(PersistentClanEventUserRewardProto*) prototype {
  return [[PersistentClanEventUserRewardProto builder] mergeFrom:prototype];
}
- (PersistentClanEventUserRewardProto_Builder*) builder {
  return [PersistentClanEventUserRewardProto builder];
}
- (PersistentClanEventUserRewardProto_Builder*) toBuilder {
  return [PersistentClanEventUserRewardProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRewardUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"rewardUuid", self.rewardUuid];
  }
  if (self.hasUserUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userUuid", self.userUuid];
  }
  if (self.hasCrsEndTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"crsEndTime", [NSNumber numberWithLongLong:self.crsEndTime]];
  }
  if (self.hasResourceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resourceType", [NSNumber numberWithInteger:self.resourceType]];
  }
  if (self.hasStaticDataId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"staticDataId", [NSNumber numberWithInteger:self.staticDataId]];
  }
  if (self.hasQuantity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"quantity", [NSNumber numberWithInteger:self.quantity]];
  }
  if (self.hasTimeRedeemed) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timeRedeemed", [NSNumber numberWithLongLong:self.timeRedeemed]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PersistentClanEventUserRewardProto class]]) {
    return NO;
  }
  PersistentClanEventUserRewardProto *otherMessage = other;
  return
      self.hasRewardUuid == otherMessage.hasRewardUuid &&
      (!self.hasRewardUuid || [self.rewardUuid isEqual:otherMessage.rewardUuid]) &&
      self.hasUserUuid == otherMessage.hasUserUuid &&
      (!self.hasUserUuid || [self.userUuid isEqual:otherMessage.userUuid]) &&
      self.hasCrsEndTime == otherMessage.hasCrsEndTime &&
      (!self.hasCrsEndTime || self.crsEndTime == otherMessage.crsEndTime) &&
      self.hasResourceType == otherMessage.hasResourceType &&
      (!self.hasResourceType || self.resourceType == otherMessage.resourceType) &&
      self.hasStaticDataId == otherMessage.hasStaticDataId &&
      (!self.hasStaticDataId || self.staticDataId == otherMessage.staticDataId) &&
      self.hasQuantity == otherMessage.hasQuantity &&
      (!self.hasQuantity || self.quantity == otherMessage.quantity) &&
      self.hasTimeRedeemed == otherMessage.hasTimeRedeemed &&
      (!self.hasTimeRedeemed || self.timeRedeemed == otherMessage.timeRedeemed) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasRewardUuid) {
    hashCode = hashCode * 31 + [self.rewardUuid hash];
  }
  if (self.hasUserUuid) {
    hashCode = hashCode * 31 + [self.userUuid hash];
  }
  if (self.hasCrsEndTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.crsEndTime] hash];
  }
  if (self.hasResourceType) {
    hashCode = hashCode * 31 + self.resourceType;
  }
  if (self.hasStaticDataId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.staticDataId] hash];
  }
  if (self.hasQuantity) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.quantity] hash];
  }
  if (self.hasTimeRedeemed) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.timeRedeemed] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PersistentClanEventUserRewardProto_Builder()
@property (strong) PersistentClanEventUserRewardProto* result;
@end

@implementation PersistentClanEventUserRewardProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PersistentClanEventUserRewardProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PersistentClanEventUserRewardProto_Builder*) clear {
  self.result = [[PersistentClanEventUserRewardProto alloc] init];
  return self;
}
- (PersistentClanEventUserRewardProto_Builder*) clone {
  return [PersistentClanEventUserRewardProto builderWithPrototype:result];
}
- (PersistentClanEventUserRewardProto*) defaultInstance {
  return [PersistentClanEventUserRewardProto defaultInstance];
}
- (PersistentClanEventUserRewardProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PersistentClanEventUserRewardProto*) buildPartial {
  PersistentClanEventUserRewardProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PersistentClanEventUserRewardProto_Builder*) mergeFrom:(PersistentClanEventUserRewardProto*) other {
  if (other == [PersistentClanEventUserRewardProto defaultInstance]) {
    return self;
  }
  if (other.hasRewardUuid) {
    [self setRewardUuid:other.rewardUuid];
  }
  if (other.hasUserUuid) {
    [self setUserUuid:other.userUuid];
  }
  if (other.hasCrsEndTime) {
    [self setCrsEndTime:other.crsEndTime];
  }
  if (other.hasResourceType) {
    [self setResourceType:other.resourceType];
  }
  if (other.hasStaticDataId) {
    [self setStaticDataId:other.staticDataId];
  }
  if (other.hasQuantity) {
    [self setQuantity:other.quantity];
  }
  if (other.hasTimeRedeemed) {
    [self setTimeRedeemed:other.timeRedeemed];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PersistentClanEventUserRewardProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PersistentClanEventUserRewardProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setRewardUuid:[input readString]];
        break;
      }
      case 18: {
        [self setUserUuid:[input readString]];
        break;
      }
      case 32: {
        [self setCrsEndTime:[input readInt64]];
        break;
      }
      case 40: {
        ResourceType value = (ResourceType)[input readEnum];
        if (ResourceTypeIsValidValue(value)) {
          [self setResourceType:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 48: {
        [self setStaticDataId:[input readInt32]];
        break;
      }
      case 56: {
        [self setQuantity:[input readInt32]];
        break;
      }
      case 72: {
        [self setTimeRedeemed:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasRewardUuid {
  return result.hasRewardUuid;
}
- (NSString*) rewardUuid {
  return result.rewardUuid;
}
- (PersistentClanEventUserRewardProto_Builder*) setRewardUuid:(NSString*) value {
  result.hasRewardUuid = YES;
  result.rewardUuid = value;
  return self;
}
- (PersistentClanEventUserRewardProto_Builder*) clearRewardUuid {
  result.hasRewardUuid = NO;
  result.rewardUuid = @"";
  return self;
}
- (BOOL) hasUserUuid {
  return result.hasUserUuid;
}
- (NSString*) userUuid {
  return result.userUuid;
}
- (PersistentClanEventUserRewardProto_Builder*) setUserUuid:(NSString*) value {
  result.hasUserUuid = YES;
  result.userUuid = value;
  return self;
}
- (PersistentClanEventUserRewardProto_Builder*) clearUserUuid {
  result.hasUserUuid = NO;
  result.userUuid = @"";
  return self;
}
- (BOOL) hasCrsEndTime {
  return result.hasCrsEndTime;
}
- (int64_t) crsEndTime {
  return result.crsEndTime;
}
- (PersistentClanEventUserRewardProto_Builder*) setCrsEndTime:(int64_t) value {
  result.hasCrsEndTime = YES;
  result.crsEndTime = value;
  return self;
}
- (PersistentClanEventUserRewardProto_Builder*) clearCrsEndTime {
  result.hasCrsEndTime = NO;
  result.crsEndTime = 0L;
  return self;
}
- (BOOL) hasResourceType {
  return result.hasResourceType;
}
- (ResourceType) resourceType {
  return result.resourceType;
}
- (PersistentClanEventUserRewardProto_Builder*) setResourceType:(ResourceType) value {
  result.hasResourceType = YES;
  result.resourceType = value;
  return self;
}
- (PersistentClanEventUserRewardProto_Builder*) clearResourceType {
  result.hasResourceType = NO;
  result.resourceType = ResourceTypeCash;
  return self;
}
- (BOOL) hasStaticDataId {
  return result.hasStaticDataId;
}
- (int32_t) staticDataId {
  return result.staticDataId;
}
- (PersistentClanEventUserRewardProto_Builder*) setStaticDataId:(int32_t) value {
  result.hasStaticDataId = YES;
  result.staticDataId = value;
  return self;
}
- (PersistentClanEventUserRewardProto_Builder*) clearStaticDataId {
  result.hasStaticDataId = NO;
  result.staticDataId = 0;
  return self;
}
- (BOOL) hasQuantity {
  return result.hasQuantity;
}
- (int32_t) quantity {
  return result.quantity;
}
- (PersistentClanEventUserRewardProto_Builder*) setQuantity:(int32_t) value {
  result.hasQuantity = YES;
  result.quantity = value;
  return self;
}
- (PersistentClanEventUserRewardProto_Builder*) clearQuantity {
  result.hasQuantity = NO;
  result.quantity = 0;
  return self;
}
- (BOOL) hasTimeRedeemed {
  return result.hasTimeRedeemed;
}
- (int64_t) timeRedeemed {
  return result.timeRedeemed;
}
- (PersistentClanEventUserRewardProto_Builder*) setTimeRedeemed:(int64_t) value {
  result.hasTimeRedeemed = YES;
  result.timeRedeemed = value;
  return self;
}
- (PersistentClanEventUserRewardProto_Builder*) clearTimeRedeemed {
  result.hasTimeRedeemed = NO;
  result.timeRedeemed = 0L;
  return self;
}
@end

@interface PersistentClanEventRaidStageHistoryProto ()
@property (strong) NSMutableArray * mutableRewardsList;
@property int32_t eventId;
@property int32_t clanRaidId;
@property int32_t clanRaidStageId;
@property int64_t crsEndTime;
@property int32_t crsDmgDone;
@property int32_t stageHp;
@end

@implementation PersistentClanEventRaidStageHistoryProto

@synthesize mutableRewardsList;
@dynamic rewardsList;
- (BOOL) hasEventId {
  return !!hasEventId_;
}
- (void) setHasEventId:(BOOL) value_ {
  hasEventId_ = !!value_;
}
@synthesize eventId;
- (BOOL) hasClanRaidId {
  return !!hasClanRaidId_;
}
- (void) setHasClanRaidId:(BOOL) value_ {
  hasClanRaidId_ = !!value_;
}
@synthesize clanRaidId;
- (BOOL) hasClanRaidStageId {
  return !!hasClanRaidStageId_;
}
- (void) setHasClanRaidStageId:(BOOL) value_ {
  hasClanRaidStageId_ = !!value_;
}
@synthesize clanRaidStageId;
- (BOOL) hasCrsEndTime {
  return !!hasCrsEndTime_;
}
- (void) setHasCrsEndTime:(BOOL) value_ {
  hasCrsEndTime_ = !!value_;
}
@synthesize crsEndTime;
- (BOOL) hasCrsDmgDone {
  return !!hasCrsDmgDone_;
}
- (void) setHasCrsDmgDone:(BOOL) value_ {
  hasCrsDmgDone_ = !!value_;
}
@synthesize crsDmgDone;
- (BOOL) hasStageHp {
  return !!hasStageHp_;
}
- (void) setHasStageHp:(BOOL) value_ {
  hasStageHp_ = !!value_;
}
@synthesize stageHp;
- (id) init {
  if ((self = [super init])) {
    self.eventId = 0;
    self.clanRaidId = 0;
    self.clanRaidStageId = 0;
    self.crsEndTime = 0L;
    self.crsDmgDone = 0;
    self.stageHp = 0;
  }
  return self;
}
static PersistentClanEventRaidStageHistoryProto* defaultPersistentClanEventRaidStageHistoryProtoInstance = nil;
+ (void) initialize {
  if (self == [PersistentClanEventRaidStageHistoryProto class]) {
    defaultPersistentClanEventRaidStageHistoryProtoInstance = [[PersistentClanEventRaidStageHistoryProto alloc] init];
  }
}
+ (PersistentClanEventRaidStageHistoryProto*) defaultInstance {
  return defaultPersistentClanEventRaidStageHistoryProtoInstance;
}
- (PersistentClanEventRaidStageHistoryProto*) defaultInstance {
  return defaultPersistentClanEventRaidStageHistoryProtoInstance;
}
- (NSArray *)rewardsList {
  return mutableRewardsList;
}
- (PersistentClanEventUserRewardProto*)rewardsAtIndex:(NSUInteger)index {
  return [mutableRewardsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.rewardsList enumerateObjectsUsingBlock:^(PersistentClanEventUserRewardProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasEventId) {
    [output writeInt32:2 value:self.eventId];
  }
  if (self.hasClanRaidId) {
    [output writeInt32:3 value:self.clanRaidId];
  }
  if (self.hasClanRaidStageId) {
    [output writeInt32:4 value:self.clanRaidStageId];
  }
  if (self.hasCrsEndTime) {
    [output writeInt64:5 value:self.crsEndTime];
  }
  if (self.hasCrsDmgDone) {
    [output writeInt32:6 value:self.crsDmgDone];
  }
  if (self.hasStageHp) {
    [output writeInt32:7 value:self.stageHp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.rewardsList enumerateObjectsUsingBlock:^(PersistentClanEventUserRewardProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasEventId) {
    size_ += computeInt32Size(2, self.eventId);
  }
  if (self.hasClanRaidId) {
    size_ += computeInt32Size(3, self.clanRaidId);
  }
  if (self.hasClanRaidStageId) {
    size_ += computeInt32Size(4, self.clanRaidStageId);
  }
  if (self.hasCrsEndTime) {
    size_ += computeInt64Size(5, self.crsEndTime);
  }
  if (self.hasCrsDmgDone) {
    size_ += computeInt32Size(6, self.crsDmgDone);
  }
  if (self.hasStageHp) {
    size_ += computeInt32Size(7, self.stageHp);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PersistentClanEventRaidStageHistoryProto*) parseFromData:(NSData*) data {
  return (PersistentClanEventRaidStageHistoryProto*)[[[PersistentClanEventRaidStageHistoryProto builder] mergeFromData:data] build];
}
+ (PersistentClanEventRaidStageHistoryProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventRaidStageHistoryProto*)[[[PersistentClanEventRaidStageHistoryProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventRaidStageHistoryProto*) parseFromInputStream:(NSInputStream*) input {
  return (PersistentClanEventRaidStageHistoryProto*)[[[PersistentClanEventRaidStageHistoryProto builder] mergeFromInputStream:input] build];
}
+ (PersistentClanEventRaidStageHistoryProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventRaidStageHistoryProto*)[[[PersistentClanEventRaidStageHistoryProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventRaidStageHistoryProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PersistentClanEventRaidStageHistoryProto*)[[[PersistentClanEventRaidStageHistoryProto builder] mergeFromCodedInputStream:input] build];
}
+ (PersistentClanEventRaidStageHistoryProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventRaidStageHistoryProto*)[[[PersistentClanEventRaidStageHistoryProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventRaidStageHistoryProto_Builder*) builder {
  return [[PersistentClanEventRaidStageHistoryProto_Builder alloc] init];
}
+ (PersistentClanEventRaidStageHistoryProto_Builder*) builderWithPrototype:(PersistentClanEventRaidStageHistoryProto*) prototype {
  return [[PersistentClanEventRaidStageHistoryProto builder] mergeFrom:prototype];
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) builder {
  return [PersistentClanEventRaidStageHistoryProto builder];
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) toBuilder {
  return [PersistentClanEventRaidStageHistoryProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.rewardsList enumerateObjectsUsingBlock:^(PersistentClanEventUserRewardProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"rewards"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasEventId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"eventId", [NSNumber numberWithInteger:self.eventId]];
  }
  if (self.hasClanRaidId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanRaidId", [NSNumber numberWithInteger:self.clanRaidId]];
  }
  if (self.hasClanRaidStageId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanRaidStageId", [NSNumber numberWithInteger:self.clanRaidStageId]];
  }
  if (self.hasCrsEndTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"crsEndTime", [NSNumber numberWithLongLong:self.crsEndTime]];
  }
  if (self.hasCrsDmgDone) {
    [output appendFormat:@"%@%@: %@\n", indent, @"crsDmgDone", [NSNumber numberWithInteger:self.crsDmgDone]];
  }
  if (self.hasStageHp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"stageHp", [NSNumber numberWithInteger:self.stageHp]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PersistentClanEventRaidStageHistoryProto class]]) {
    return NO;
  }
  PersistentClanEventRaidStageHistoryProto *otherMessage = other;
  return
      [self.rewardsList isEqualToArray:otherMessage.rewardsList] &&
      self.hasEventId == otherMessage.hasEventId &&
      (!self.hasEventId || self.eventId == otherMessage.eventId) &&
      self.hasClanRaidId == otherMessage.hasClanRaidId &&
      (!self.hasClanRaidId || self.clanRaidId == otherMessage.clanRaidId) &&
      self.hasClanRaidStageId == otherMessage.hasClanRaidStageId &&
      (!self.hasClanRaidStageId || self.clanRaidStageId == otherMessage.clanRaidStageId) &&
      self.hasCrsEndTime == otherMessage.hasCrsEndTime &&
      (!self.hasCrsEndTime || self.crsEndTime == otherMessage.crsEndTime) &&
      self.hasCrsDmgDone == otherMessage.hasCrsDmgDone &&
      (!self.hasCrsDmgDone || self.crsDmgDone == otherMessage.crsDmgDone) &&
      self.hasStageHp == otherMessage.hasStageHp &&
      (!self.hasStageHp || self.stageHp == otherMessage.stageHp) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.rewardsList enumerateObjectsUsingBlock:^(PersistentClanEventUserRewardProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasEventId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.eventId] hash];
  }
  if (self.hasClanRaidId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clanRaidId] hash];
  }
  if (self.hasClanRaidStageId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clanRaidStageId] hash];
  }
  if (self.hasCrsEndTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.crsEndTime] hash];
  }
  if (self.hasCrsDmgDone) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.crsDmgDone] hash];
  }
  if (self.hasStageHp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.stageHp] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PersistentClanEventRaidStageHistoryProto_Builder()
@property (strong) PersistentClanEventRaidStageHistoryProto* result;
@end

@implementation PersistentClanEventRaidStageHistoryProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PersistentClanEventRaidStageHistoryProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) clear {
  self.result = [[PersistentClanEventRaidStageHistoryProto alloc] init];
  return self;
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) clone {
  return [PersistentClanEventRaidStageHistoryProto builderWithPrototype:result];
}
- (PersistentClanEventRaidStageHistoryProto*) defaultInstance {
  return [PersistentClanEventRaidStageHistoryProto defaultInstance];
}
- (PersistentClanEventRaidStageHistoryProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PersistentClanEventRaidStageHistoryProto*) buildPartial {
  PersistentClanEventRaidStageHistoryProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) mergeFrom:(PersistentClanEventRaidStageHistoryProto*) other {
  if (other == [PersistentClanEventRaidStageHistoryProto defaultInstance]) {
    return self;
  }
  if (other.mutableRewardsList.count > 0) {
    if (result.mutableRewardsList == nil) {
      result.mutableRewardsList = [[NSMutableArray alloc] initWithArray:other.mutableRewardsList];
    } else {
      [result.mutableRewardsList addObjectsFromArray:other.mutableRewardsList];
    }
  }
  if (other.hasEventId) {
    [self setEventId:other.eventId];
  }
  if (other.hasClanRaidId) {
    [self setClanRaidId:other.clanRaidId];
  }
  if (other.hasClanRaidStageId) {
    [self setClanRaidStageId:other.clanRaidStageId];
  }
  if (other.hasCrsEndTime) {
    [self setCrsEndTime:other.crsEndTime];
  }
  if (other.hasCrsDmgDone) {
    [self setCrsDmgDone:other.crsDmgDone];
  }
  if (other.hasStageHp) {
    [self setStageHp:other.stageHp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PersistentClanEventUserRewardProto_Builder* subBuilder = [PersistentClanEventUserRewardProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRewards:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setEventId:[input readInt32]];
        break;
      }
      case 24: {
        [self setClanRaidId:[input readInt32]];
        break;
      }
      case 32: {
        [self setClanRaidStageId:[input readInt32]];
        break;
      }
      case 40: {
        [self setCrsEndTime:[input readInt64]];
        break;
      }
      case 48: {
        [self setCrsDmgDone:[input readInt32]];
        break;
      }
      case 56: {
        [self setStageHp:[input readInt32]];
        break;
      }
    }
  }
}
- (NSMutableArray *)rewardsList {
  return result.mutableRewardsList;
}
- (PersistentClanEventUserRewardProto*)rewardsAtIndex:(NSUInteger)index {
  return [result rewardsAtIndex:index];
}
- (PersistentClanEventRaidStageHistoryProto_Builder *)addRewards:(PersistentClanEventUserRewardProto*)value {
  if (result.mutableRewardsList == nil) {
    result.mutableRewardsList = [[NSMutableArray alloc]init];
  }
  [result.mutableRewardsList addObject:value];
  return self;
}
- (PersistentClanEventRaidStageHistoryProto_Builder *)addAllRewards:(NSArray *)array {
  if (result.mutableRewardsList == nil) {
    result.mutableRewardsList = [NSMutableArray array];
  }
  [result.mutableRewardsList addObjectsFromArray:array];
  return self;
}
- (PersistentClanEventRaidStageHistoryProto_Builder *)clearRewards {
  result.mutableRewardsList = nil;
  return self;
}
- (BOOL) hasEventId {
  return result.hasEventId;
}
- (int32_t) eventId {
  return result.eventId;
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) setEventId:(int32_t) value {
  result.hasEventId = YES;
  result.eventId = value;
  return self;
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) clearEventId {
  result.hasEventId = NO;
  result.eventId = 0;
  return self;
}
- (BOOL) hasClanRaidId {
  return result.hasClanRaidId;
}
- (int32_t) clanRaidId {
  return result.clanRaidId;
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) setClanRaidId:(int32_t) value {
  result.hasClanRaidId = YES;
  result.clanRaidId = value;
  return self;
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) clearClanRaidId {
  result.hasClanRaidId = NO;
  result.clanRaidId = 0;
  return self;
}
- (BOOL) hasClanRaidStageId {
  return result.hasClanRaidStageId;
}
- (int32_t) clanRaidStageId {
  return result.clanRaidStageId;
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) setClanRaidStageId:(int32_t) value {
  result.hasClanRaidStageId = YES;
  result.clanRaidStageId = value;
  return self;
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) clearClanRaidStageId {
  result.hasClanRaidStageId = NO;
  result.clanRaidStageId = 0;
  return self;
}
- (BOOL) hasCrsEndTime {
  return result.hasCrsEndTime;
}
- (int64_t) crsEndTime {
  return result.crsEndTime;
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) setCrsEndTime:(int64_t) value {
  result.hasCrsEndTime = YES;
  result.crsEndTime = value;
  return self;
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) clearCrsEndTime {
  result.hasCrsEndTime = NO;
  result.crsEndTime = 0L;
  return self;
}
- (BOOL) hasCrsDmgDone {
  return result.hasCrsDmgDone;
}
- (int32_t) crsDmgDone {
  return result.crsDmgDone;
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) setCrsDmgDone:(int32_t) value {
  result.hasCrsDmgDone = YES;
  result.crsDmgDone = value;
  return self;
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) clearCrsDmgDone {
  result.hasCrsDmgDone = NO;
  result.crsDmgDone = 0;
  return self;
}
- (BOOL) hasStageHp {
  return result.hasStageHp;
}
- (int32_t) stageHp {
  return result.stageHp;
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) setStageHp:(int32_t) value {
  result.hasStageHp = YES;
  result.stageHp = value;
  return self;
}
- (PersistentClanEventRaidStageHistoryProto_Builder*) clearStageHp {
  result.hasStageHp = NO;
  result.stageHp = 0;
  return self;
}
@end

@interface PersistentClanEventRaidHistoryProto ()
@property (strong) NSString* userUuid;
@property int32_t crDmg;
@property int32_t clanCrDmg;
@end

@implementation PersistentClanEventRaidHistoryProto

- (BOOL) hasUserUuid {
  return !!hasUserUuid_;
}
- (void) setHasUserUuid:(BOOL) value_ {
  hasUserUuid_ = !!value_;
}
@synthesize userUuid;
- (BOOL) hasCrDmg {
  return !!hasCrDmg_;
}
- (void) setHasCrDmg:(BOOL) value_ {
  hasCrDmg_ = !!value_;
}
@synthesize crDmg;
- (BOOL) hasClanCrDmg {
  return !!hasClanCrDmg_;
}
- (void) setHasClanCrDmg:(BOOL) value_ {
  hasClanCrDmg_ = !!value_;
}
@synthesize clanCrDmg;
- (id) init {
  if ((self = [super init])) {
    self.userUuid = @"";
    self.crDmg = 0;
    self.clanCrDmg = 0;
  }
  return self;
}
static PersistentClanEventRaidHistoryProto* defaultPersistentClanEventRaidHistoryProtoInstance = nil;
+ (void) initialize {
  if (self == [PersistentClanEventRaidHistoryProto class]) {
    defaultPersistentClanEventRaidHistoryProtoInstance = [[PersistentClanEventRaidHistoryProto alloc] init];
  }
}
+ (PersistentClanEventRaidHistoryProto*) defaultInstance {
  return defaultPersistentClanEventRaidHistoryProtoInstance;
}
- (PersistentClanEventRaidHistoryProto*) defaultInstance {
  return defaultPersistentClanEventRaidHistoryProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserUuid) {
    [output writeString:1 value:self.userUuid];
  }
  if (self.hasCrDmg) {
    [output writeInt32:2 value:self.crDmg];
  }
  if (self.hasClanCrDmg) {
    [output writeInt32:3 value:self.clanCrDmg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserUuid) {
    size_ += computeStringSize(1, self.userUuid);
  }
  if (self.hasCrDmg) {
    size_ += computeInt32Size(2, self.crDmg);
  }
  if (self.hasClanCrDmg) {
    size_ += computeInt32Size(3, self.clanCrDmg);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PersistentClanEventRaidHistoryProto*) parseFromData:(NSData*) data {
  return (PersistentClanEventRaidHistoryProto*)[[[PersistentClanEventRaidHistoryProto builder] mergeFromData:data] build];
}
+ (PersistentClanEventRaidHistoryProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventRaidHistoryProto*)[[[PersistentClanEventRaidHistoryProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventRaidHistoryProto*) parseFromInputStream:(NSInputStream*) input {
  return (PersistentClanEventRaidHistoryProto*)[[[PersistentClanEventRaidHistoryProto builder] mergeFromInputStream:input] build];
}
+ (PersistentClanEventRaidHistoryProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventRaidHistoryProto*)[[[PersistentClanEventRaidHistoryProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventRaidHistoryProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PersistentClanEventRaidHistoryProto*)[[[PersistentClanEventRaidHistoryProto builder] mergeFromCodedInputStream:input] build];
}
+ (PersistentClanEventRaidHistoryProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentClanEventRaidHistoryProto*)[[[PersistentClanEventRaidHistoryProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PersistentClanEventRaidHistoryProto_Builder*) builder {
  return [[PersistentClanEventRaidHistoryProto_Builder alloc] init];
}
+ (PersistentClanEventRaidHistoryProto_Builder*) builderWithPrototype:(PersistentClanEventRaidHistoryProto*) prototype {
  return [[PersistentClanEventRaidHistoryProto builder] mergeFrom:prototype];
}
- (PersistentClanEventRaidHistoryProto_Builder*) builder {
  return [PersistentClanEventRaidHistoryProto builder];
}
- (PersistentClanEventRaidHistoryProto_Builder*) toBuilder {
  return [PersistentClanEventRaidHistoryProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userUuid", self.userUuid];
  }
  if (self.hasCrDmg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"crDmg", [NSNumber numberWithInteger:self.crDmg]];
  }
  if (self.hasClanCrDmg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanCrDmg", [NSNumber numberWithInteger:self.clanCrDmg]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PersistentClanEventRaidHistoryProto class]]) {
    return NO;
  }
  PersistentClanEventRaidHistoryProto *otherMessage = other;
  return
      self.hasUserUuid == otherMessage.hasUserUuid &&
      (!self.hasUserUuid || [self.userUuid isEqual:otherMessage.userUuid]) &&
      self.hasCrDmg == otherMessage.hasCrDmg &&
      (!self.hasCrDmg || self.crDmg == otherMessage.crDmg) &&
      self.hasClanCrDmg == otherMessage.hasClanCrDmg &&
      (!self.hasClanCrDmg || self.clanCrDmg == otherMessage.clanCrDmg) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserUuid) {
    hashCode = hashCode * 31 + [self.userUuid hash];
  }
  if (self.hasCrDmg) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.crDmg] hash];
  }
  if (self.hasClanCrDmg) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clanCrDmg] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PersistentClanEventRaidHistoryProto_Builder()
@property (strong) PersistentClanEventRaidHistoryProto* result;
@end

@implementation PersistentClanEventRaidHistoryProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PersistentClanEventRaidHistoryProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PersistentClanEventRaidHistoryProto_Builder*) clear {
  self.result = [[PersistentClanEventRaidHistoryProto alloc] init];
  return self;
}
- (PersistentClanEventRaidHistoryProto_Builder*) clone {
  return [PersistentClanEventRaidHistoryProto builderWithPrototype:result];
}
- (PersistentClanEventRaidHistoryProto*) defaultInstance {
  return [PersistentClanEventRaidHistoryProto defaultInstance];
}
- (PersistentClanEventRaidHistoryProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PersistentClanEventRaidHistoryProto*) buildPartial {
  PersistentClanEventRaidHistoryProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PersistentClanEventRaidHistoryProto_Builder*) mergeFrom:(PersistentClanEventRaidHistoryProto*) other {
  if (other == [PersistentClanEventRaidHistoryProto defaultInstance]) {
    return self;
  }
  if (other.hasUserUuid) {
    [self setUserUuid:other.userUuid];
  }
  if (other.hasCrDmg) {
    [self setCrDmg:other.crDmg];
  }
  if (other.hasClanCrDmg) {
    [self setClanCrDmg:other.clanCrDmg];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PersistentClanEventRaidHistoryProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PersistentClanEventRaidHistoryProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserUuid:[input readString]];
        break;
      }
      case 16: {
        [self setCrDmg:[input readInt32]];
        break;
      }
      case 24: {
        [self setClanCrDmg:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserUuid {
  return result.hasUserUuid;
}
- (NSString*) userUuid {
  return result.userUuid;
}
- (PersistentClanEventRaidHistoryProto_Builder*) setUserUuid:(NSString*) value {
  result.hasUserUuid = YES;
  result.userUuid = value;
  return self;
}
- (PersistentClanEventRaidHistoryProto_Builder*) clearUserUuid {
  result.hasUserUuid = NO;
  result.userUuid = @"";
  return self;
}
- (BOOL) hasCrDmg {
  return result.hasCrDmg;
}
- (int32_t) crDmg {
  return result.crDmg;
}
- (PersistentClanEventRaidHistoryProto_Builder*) setCrDmg:(int32_t) value {
  result.hasCrDmg = YES;
  result.crDmg = value;
  return self;
}
- (PersistentClanEventRaidHistoryProto_Builder*) clearCrDmg {
  result.hasCrDmg = NO;
  result.crDmg = 0;
  return self;
}
- (BOOL) hasClanCrDmg {
  return result.hasClanCrDmg;
}
- (int32_t) clanCrDmg {
  return result.clanCrDmg;
}
- (PersistentClanEventRaidHistoryProto_Builder*) setClanCrDmg:(int32_t) value {
  result.hasClanCrDmg = YES;
  result.clanCrDmg = value;
  return self;
}
- (PersistentClanEventRaidHistoryProto_Builder*) clearClanCrDmg {
  result.hasClanCrDmg = NO;
  result.clanCrDmg = 0;
  return self;
}
@end

@interface ClanIconProto ()
@property int32_t clanIconId;
@property (strong) NSString* imgName;
@property BOOL isAvailable;
@end

@implementation ClanIconProto

- (BOOL) hasClanIconId {
  return !!hasClanIconId_;
}
- (void) setHasClanIconId:(BOOL) value_ {
  hasClanIconId_ = !!value_;
}
@synthesize clanIconId;
- (BOOL) hasImgName {
  return !!hasImgName_;
}
- (void) setHasImgName:(BOOL) value_ {
  hasImgName_ = !!value_;
}
@synthesize imgName;
- (BOOL) hasIsAvailable {
  return !!hasIsAvailable_;
}
- (void) setHasIsAvailable:(BOOL) value_ {
  hasIsAvailable_ = !!value_;
}
- (BOOL) isAvailable {
  return !!isAvailable_;
}
- (void) setIsAvailable:(BOOL) value_ {
  isAvailable_ = !!value_;
}
- (id) init {
  if ((self = [super init])) {
    self.clanIconId = 0;
    self.imgName = @"";
    self.isAvailable = NO;
  }
  return self;
}
static ClanIconProto* defaultClanIconProtoInstance = nil;
+ (void) initialize {
  if (self == [ClanIconProto class]) {
    defaultClanIconProtoInstance = [[ClanIconProto alloc] init];
  }
}
+ (ClanIconProto*) defaultInstance {
  return defaultClanIconProtoInstance;
}
- (ClanIconProto*) defaultInstance {
  return defaultClanIconProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasClanIconId) {
    [output writeInt32:1 value:self.clanIconId];
  }
  if (self.hasImgName) {
    [output writeString:2 value:self.imgName];
  }
  if (self.hasIsAvailable) {
    [output writeBool:3 value:self.isAvailable];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasClanIconId) {
    size_ += computeInt32Size(1, self.clanIconId);
  }
  if (self.hasImgName) {
    size_ += computeStringSize(2, self.imgName);
  }
  if (self.hasIsAvailable) {
    size_ += computeBoolSize(3, self.isAvailable);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ClanIconProto*) parseFromData:(NSData*) data {
  return (ClanIconProto*)[[[ClanIconProto builder] mergeFromData:data] build];
}
+ (ClanIconProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanIconProto*)[[[ClanIconProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClanIconProto*) parseFromInputStream:(NSInputStream*) input {
  return (ClanIconProto*)[[[ClanIconProto builder] mergeFromInputStream:input] build];
}
+ (ClanIconProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanIconProto*)[[[ClanIconProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanIconProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClanIconProto*)[[[ClanIconProto builder] mergeFromCodedInputStream:input] build];
}
+ (ClanIconProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanIconProto*)[[[ClanIconProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanIconProto_Builder*) builder {
  return [[ClanIconProto_Builder alloc] init];
}
+ (ClanIconProto_Builder*) builderWithPrototype:(ClanIconProto*) prototype {
  return [[ClanIconProto builder] mergeFrom:prototype];
}
- (ClanIconProto_Builder*) builder {
  return [ClanIconProto builder];
}
- (ClanIconProto_Builder*) toBuilder {
  return [ClanIconProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasClanIconId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanIconId", [NSNumber numberWithInteger:self.clanIconId]];
  }
  if (self.hasImgName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imgName", self.imgName];
  }
  if (self.hasIsAvailable) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isAvailable", [NSNumber numberWithBool:self.isAvailable]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ClanIconProto class]]) {
    return NO;
  }
  ClanIconProto *otherMessage = other;
  return
      self.hasClanIconId == otherMessage.hasClanIconId &&
      (!self.hasClanIconId || self.clanIconId == otherMessage.clanIconId) &&
      self.hasImgName == otherMessage.hasImgName &&
      (!self.hasImgName || [self.imgName isEqual:otherMessage.imgName]) &&
      self.hasIsAvailable == otherMessage.hasIsAvailable &&
      (!self.hasIsAvailable || self.isAvailable == otherMessage.isAvailable) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasClanIconId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clanIconId] hash];
  }
  if (self.hasImgName) {
    hashCode = hashCode * 31 + [self.imgName hash];
  }
  if (self.hasIsAvailable) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isAvailable] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ClanIconProto_Builder()
@property (strong) ClanIconProto* result;
@end

@implementation ClanIconProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ClanIconProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClanIconProto_Builder*) clear {
  self.result = [[ClanIconProto alloc] init];
  return self;
}
- (ClanIconProto_Builder*) clone {
  return [ClanIconProto builderWithPrototype:result];
}
- (ClanIconProto*) defaultInstance {
  return [ClanIconProto defaultInstance];
}
- (ClanIconProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClanIconProto*) buildPartial {
  ClanIconProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ClanIconProto_Builder*) mergeFrom:(ClanIconProto*) other {
  if (other == [ClanIconProto defaultInstance]) {
    return self;
  }
  if (other.hasClanIconId) {
    [self setClanIconId:other.clanIconId];
  }
  if (other.hasImgName) {
    [self setImgName:other.imgName];
  }
  if (other.hasIsAvailable) {
    [self setIsAvailable:other.isAvailable];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClanIconProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClanIconProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setClanIconId:[input readInt32]];
        break;
      }
      case 18: {
        [self setImgName:[input readString]];
        break;
      }
      case 24: {
        [self setIsAvailable:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasClanIconId {
  return result.hasClanIconId;
}
- (int32_t) clanIconId {
  return result.clanIconId;
}
- (ClanIconProto_Builder*) setClanIconId:(int32_t) value {
  result.hasClanIconId = YES;
  result.clanIconId = value;
  return self;
}
- (ClanIconProto_Builder*) clearClanIconId {
  result.hasClanIconId = NO;
  result.clanIconId = 0;
  return self;
}
- (BOOL) hasImgName {
  return result.hasImgName;
}
- (NSString*) imgName {
  return result.imgName;
}
- (ClanIconProto_Builder*) setImgName:(NSString*) value {
  result.hasImgName = YES;
  result.imgName = value;
  return self;
}
- (ClanIconProto_Builder*) clearImgName {
  result.hasImgName = NO;
  result.imgName = @"";
  return self;
}
- (BOOL) hasIsAvailable {
  return result.hasIsAvailable;
}
- (BOOL) isAvailable {
  return result.isAvailable;
}
- (ClanIconProto_Builder*) setIsAvailable:(BOOL) value {
  result.hasIsAvailable = YES;
  result.isAvailable = value;
  return self;
}
- (ClanIconProto_Builder*) clearIsAvailable {
  result.hasIsAvailable = NO;
  result.isAvailable = NO;
  return self;
}
@end

@interface ClanHelpProto ()
@property (strong) NSString* clanHelpUuid;
@property (strong) NSString* clanUuid;
@property (strong) MinimumUserProto* mup;
@property (strong) NSString* userDataUuid;
@property GameActionType helpType;
@property int64_t timeRequested;
@property int32_t maxHelpers;
@property (strong) NSMutableArray * mutableHelperUuidsList;
@property BOOL open;
@property int32_t staticDataId;
@end

@implementation ClanHelpProto

- (BOOL) hasClanHelpUuid {
  return !!hasClanHelpUuid_;
}
- (void) setHasClanHelpUuid:(BOOL) value_ {
  hasClanHelpUuid_ = !!value_;
}
@synthesize clanHelpUuid;
- (BOOL) hasClanUuid {
  return !!hasClanUuid_;
}
- (void) setHasClanUuid:(BOOL) value_ {
  hasClanUuid_ = !!value_;
}
@synthesize clanUuid;
- (BOOL) hasMup {
  return !!hasMup_;
}
- (void) setHasMup:(BOOL) value_ {
  hasMup_ = !!value_;
}
@synthesize mup;
- (BOOL) hasUserDataUuid {
  return !!hasUserDataUuid_;
}
- (void) setHasUserDataUuid:(BOOL) value_ {
  hasUserDataUuid_ = !!value_;
}
@synthesize userDataUuid;
- (BOOL) hasHelpType {
  return !!hasHelpType_;
}
- (void) setHasHelpType:(BOOL) value_ {
  hasHelpType_ = !!value_;
}
@synthesize helpType;
- (BOOL) hasTimeRequested {
  return !!hasTimeRequested_;
}
- (void) setHasTimeRequested:(BOOL) value_ {
  hasTimeRequested_ = !!value_;
}
@synthesize timeRequested;
- (BOOL) hasMaxHelpers {
  return !!hasMaxHelpers_;
}
- (void) setHasMaxHelpers:(BOOL) value_ {
  hasMaxHelpers_ = !!value_;
}
@synthesize maxHelpers;
@synthesize mutableHelperUuidsList;
@dynamic helperUuidsList;
- (BOOL) hasOpen {
  return !!hasOpen_;
}
- (void) setHasOpen:(BOOL) value_ {
  hasOpen_ = !!value_;
}
- (BOOL) open {
  return !!open_;
}
- (void) setOpen:(BOOL) value_ {
  open_ = !!value_;
}
- (BOOL) hasStaticDataId {
  return !!hasStaticDataId_;
}
- (void) setHasStaticDataId:(BOOL) value_ {
  hasStaticDataId_ = !!value_;
}
@synthesize staticDataId;
- (id) init {
  if ((self = [super init])) {
    self.clanHelpUuid = @"";
    self.clanUuid = @"";
    self.mup = [MinimumUserProto defaultInstance];
    self.userDataUuid = @"";
    self.helpType = GameActionTypeNoHelp;
    self.timeRequested = 0L;
    self.maxHelpers = 0;
    self.open = NO;
    self.staticDataId = 0;
  }
  return self;
}
static ClanHelpProto* defaultClanHelpProtoInstance = nil;
+ (void) initialize {
  if (self == [ClanHelpProto class]) {
    defaultClanHelpProtoInstance = [[ClanHelpProto alloc] init];
  }
}
+ (ClanHelpProto*) defaultInstance {
  return defaultClanHelpProtoInstance;
}
- (ClanHelpProto*) defaultInstance {
  return defaultClanHelpProtoInstance;
}
- (NSArray *)helperUuidsList {
  return mutableHelperUuidsList;
}
- (NSString*)helperUuidsAtIndex:(NSUInteger)index {
  return [mutableHelperUuidsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasClanHelpUuid) {
    [output writeString:1 value:self.clanHelpUuid];
  }
  if (self.hasClanUuid) {
    [output writeString:2 value:self.clanUuid];
  }
  if (self.hasMup) {
    [output writeMessage:3 value:self.mup];
  }
  if (self.hasUserDataUuid) {
    [output writeString:4 value:self.userDataUuid];
  }
  if (self.hasHelpType) {
    [output writeEnum:5 value:self.helpType];
  }
  if (self.hasTimeRequested) {
    [output writeInt64:6 value:self.timeRequested];
  }
  if (self.hasMaxHelpers) {
    [output writeInt32:7 value:self.maxHelpers];
  }
  [self.helperUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:8 value:element];
  }];
  if (self.hasOpen) {
    [output writeBool:9 value:self.open];
  }
  if (self.hasStaticDataId) {
    [output writeInt32:10 value:self.staticDataId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasClanHelpUuid) {
    size_ += computeStringSize(1, self.clanHelpUuid);
  }
  if (self.hasClanUuid) {
    size_ += computeStringSize(2, self.clanUuid);
  }
  if (self.hasMup) {
    size_ += computeMessageSize(3, self.mup);
  }
  if (self.hasUserDataUuid) {
    size_ += computeStringSize(4, self.userDataUuid);
  }
  if (self.hasHelpType) {
    size_ += computeEnumSize(5, self.helpType);
  }
  if (self.hasTimeRequested) {
    size_ += computeInt64Size(6, self.timeRequested);
  }
  if (self.hasMaxHelpers) {
    size_ += computeInt32Size(7, self.maxHelpers);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.helperUuidsList.count;
    [self.helperUuidsList enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasOpen) {
    size_ += computeBoolSize(9, self.open);
  }
  if (self.hasStaticDataId) {
    size_ += computeInt32Size(10, self.staticDataId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ClanHelpProto*) parseFromData:(NSData*) data {
  return (ClanHelpProto*)[[[ClanHelpProto builder] mergeFromData:data] build];
}
+ (ClanHelpProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanHelpProto*)[[[ClanHelpProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClanHelpProto*) parseFromInputStream:(NSInputStream*) input {
  return (ClanHelpProto*)[[[ClanHelpProto builder] mergeFromInputStream:input] build];
}
+ (ClanHelpProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanHelpProto*)[[[ClanHelpProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanHelpProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClanHelpProto*)[[[ClanHelpProto builder] mergeFromCodedInputStream:input] build];
}
+ (ClanHelpProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanHelpProto*)[[[ClanHelpProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanHelpProto_Builder*) builder {
  return [[ClanHelpProto_Builder alloc] init];
}
+ (ClanHelpProto_Builder*) builderWithPrototype:(ClanHelpProto*) prototype {
  return [[ClanHelpProto builder] mergeFrom:prototype];
}
- (ClanHelpProto_Builder*) builder {
  return [ClanHelpProto builder];
}
- (ClanHelpProto_Builder*) toBuilder {
  return [ClanHelpProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasClanHelpUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanHelpUuid", self.clanHelpUuid];
  }
  if (self.hasClanUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanUuid", self.clanUuid];
  }
  if (self.hasMup) {
    [output appendFormat:@"%@%@ {\n", indent, @"mup"];
    [self.mup writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasUserDataUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userDataUuid", self.userDataUuid];
  }
  if (self.hasHelpType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"helpType", [NSNumber numberWithInteger:self.helpType]];
  }
  if (self.hasTimeRequested) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timeRequested", [NSNumber numberWithLongLong:self.timeRequested]];
  }
  if (self.hasMaxHelpers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxHelpers", [NSNumber numberWithInteger:self.maxHelpers]];
  }
  [self.helperUuidsList enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"helperUuids", obj];
  }];
  if (self.hasOpen) {
    [output appendFormat:@"%@%@: %@\n", indent, @"open", [NSNumber numberWithBool:self.open]];
  }
  if (self.hasStaticDataId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"staticDataId", [NSNumber numberWithInteger:self.staticDataId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ClanHelpProto class]]) {
    return NO;
  }
  ClanHelpProto *otherMessage = other;
  return
      self.hasClanHelpUuid == otherMessage.hasClanHelpUuid &&
      (!self.hasClanHelpUuid || [self.clanHelpUuid isEqual:otherMessage.clanHelpUuid]) &&
      self.hasClanUuid == otherMessage.hasClanUuid &&
      (!self.hasClanUuid || [self.clanUuid isEqual:otherMessage.clanUuid]) &&
      self.hasMup == otherMessage.hasMup &&
      (!self.hasMup || [self.mup isEqual:otherMessage.mup]) &&
      self.hasUserDataUuid == otherMessage.hasUserDataUuid &&
      (!self.hasUserDataUuid || [self.userDataUuid isEqual:otherMessage.userDataUuid]) &&
      self.hasHelpType == otherMessage.hasHelpType &&
      (!self.hasHelpType || self.helpType == otherMessage.helpType) &&
      self.hasTimeRequested == otherMessage.hasTimeRequested &&
      (!self.hasTimeRequested || self.timeRequested == otherMessage.timeRequested) &&
      self.hasMaxHelpers == otherMessage.hasMaxHelpers &&
      (!self.hasMaxHelpers || self.maxHelpers == otherMessage.maxHelpers) &&
      [self.helperUuidsList isEqualToArray:otherMessage.helperUuidsList] &&
      self.hasOpen == otherMessage.hasOpen &&
      (!self.hasOpen || self.open == otherMessage.open) &&
      self.hasStaticDataId == otherMessage.hasStaticDataId &&
      (!self.hasStaticDataId || self.staticDataId == otherMessage.staticDataId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasClanHelpUuid) {
    hashCode = hashCode * 31 + [self.clanHelpUuid hash];
  }
  if (self.hasClanUuid) {
    hashCode = hashCode * 31 + [self.clanUuid hash];
  }
  if (self.hasMup) {
    hashCode = hashCode * 31 + [self.mup hash];
  }
  if (self.hasUserDataUuid) {
    hashCode = hashCode * 31 + [self.userDataUuid hash];
  }
  if (self.hasHelpType) {
    hashCode = hashCode * 31 + self.helpType;
  }
  if (self.hasTimeRequested) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.timeRequested] hash];
  }
  if (self.hasMaxHelpers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.maxHelpers] hash];
  }
  [self.helperUuidsList enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasOpen) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.open] hash];
  }
  if (self.hasStaticDataId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.staticDataId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ClanHelpProto_Builder()
@property (strong) ClanHelpProto* result;
@end

@implementation ClanHelpProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ClanHelpProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClanHelpProto_Builder*) clear {
  self.result = [[ClanHelpProto alloc] init];
  return self;
}
- (ClanHelpProto_Builder*) clone {
  return [ClanHelpProto builderWithPrototype:result];
}
- (ClanHelpProto*) defaultInstance {
  return [ClanHelpProto defaultInstance];
}
- (ClanHelpProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClanHelpProto*) buildPartial {
  ClanHelpProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ClanHelpProto_Builder*) mergeFrom:(ClanHelpProto*) other {
  if (other == [ClanHelpProto defaultInstance]) {
    return self;
  }
  if (other.hasClanHelpUuid) {
    [self setClanHelpUuid:other.clanHelpUuid];
  }
  if (other.hasClanUuid) {
    [self setClanUuid:other.clanUuid];
  }
  if (other.hasMup) {
    [self mergeMup:other.mup];
  }
  if (other.hasUserDataUuid) {
    [self setUserDataUuid:other.userDataUuid];
  }
  if (other.hasHelpType) {
    [self setHelpType:other.helpType];
  }
  if (other.hasTimeRequested) {
    [self setTimeRequested:other.timeRequested];
  }
  if (other.hasMaxHelpers) {
    [self setMaxHelpers:other.maxHelpers];
  }
  if (other.mutableHelperUuidsList.count > 0) {
    if (result.mutableHelperUuidsList == nil) {
      result.mutableHelperUuidsList = [[NSMutableArray alloc] initWithArray:other.mutableHelperUuidsList];
    } else {
      [result.mutableHelperUuidsList addObjectsFromArray:other.mutableHelperUuidsList];
    }
  }
  if (other.hasOpen) {
    [self setOpen:other.open];
  }
  if (other.hasStaticDataId) {
    [self setStaticDataId:other.staticDataId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClanHelpProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClanHelpProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setClanHelpUuid:[input readString]];
        break;
      }
      case 18: {
        [self setClanUuid:[input readString]];
        break;
      }
      case 26: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasMup) {
          [subBuilder mergeFrom:self.mup];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMup:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        [self setUserDataUuid:[input readString]];
        break;
      }
      case 40: {
        GameActionType value = (GameActionType)[input readEnum];
        if (GameActionTypeIsValidValue(value)) {
          [self setHelpType:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 48: {
        [self setTimeRequested:[input readInt64]];
        break;
      }
      case 56: {
        [self setMaxHelpers:[input readInt32]];
        break;
      }
      case 66: {
        [self addHelperUuids:[input readString]];
        break;
      }
      case 72: {
        [self setOpen:[input readBool]];
        break;
      }
      case 80: {
        [self setStaticDataId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasClanHelpUuid {
  return result.hasClanHelpUuid;
}
- (NSString*) clanHelpUuid {
  return result.clanHelpUuid;
}
- (ClanHelpProto_Builder*) setClanHelpUuid:(NSString*) value {
  result.hasClanHelpUuid = YES;
  result.clanHelpUuid = value;
  return self;
}
- (ClanHelpProto_Builder*) clearClanHelpUuid {
  result.hasClanHelpUuid = NO;
  result.clanHelpUuid = @"";
  return self;
}
- (BOOL) hasClanUuid {
  return result.hasClanUuid;
}
- (NSString*) clanUuid {
  return result.clanUuid;
}
- (ClanHelpProto_Builder*) setClanUuid:(NSString*) value {
  result.hasClanUuid = YES;
  result.clanUuid = value;
  return self;
}
- (ClanHelpProto_Builder*) clearClanUuid {
  result.hasClanUuid = NO;
  result.clanUuid = @"";
  return self;
}
- (BOOL) hasMup {
  return result.hasMup;
}
- (MinimumUserProto*) mup {
  return result.mup;
}
- (ClanHelpProto_Builder*) setMup:(MinimumUserProto*) value {
  result.hasMup = YES;
  result.mup = value;
  return self;
}
- (ClanHelpProto_Builder*) setMup_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setMup:[builderForValue build]];
}
- (ClanHelpProto_Builder*) mergeMup:(MinimumUserProto*) value {
  if (result.hasMup &&
      result.mup != [MinimumUserProto defaultInstance]) {
    result.mup =
      [[[MinimumUserProto builderWithPrototype:result.mup] mergeFrom:value] buildPartial];
  } else {
    result.mup = value;
  }
  result.hasMup = YES;
  return self;
}
- (ClanHelpProto_Builder*) clearMup {
  result.hasMup = NO;
  result.mup = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasUserDataUuid {
  return result.hasUserDataUuid;
}
- (NSString*) userDataUuid {
  return result.userDataUuid;
}
- (ClanHelpProto_Builder*) setUserDataUuid:(NSString*) value {
  result.hasUserDataUuid = YES;
  result.userDataUuid = value;
  return self;
}
- (ClanHelpProto_Builder*) clearUserDataUuid {
  result.hasUserDataUuid = NO;
  result.userDataUuid = @"";
  return self;
}
- (BOOL) hasHelpType {
  return result.hasHelpType;
}
- (GameActionType) helpType {
  return result.helpType;
}
- (ClanHelpProto_Builder*) setHelpType:(GameActionType) value {
  result.hasHelpType = YES;
  result.helpType = value;
  return self;
}
- (ClanHelpProto_Builder*) clearHelpType {
  result.hasHelpType = NO;
  result.helpType = GameActionTypeNoHelp;
  return self;
}
- (BOOL) hasTimeRequested {
  return result.hasTimeRequested;
}
- (int64_t) timeRequested {
  return result.timeRequested;
}
- (ClanHelpProto_Builder*) setTimeRequested:(int64_t) value {
  result.hasTimeRequested = YES;
  result.timeRequested = value;
  return self;
}
- (ClanHelpProto_Builder*) clearTimeRequested {
  result.hasTimeRequested = NO;
  result.timeRequested = 0L;
  return self;
}
- (BOOL) hasMaxHelpers {
  return result.hasMaxHelpers;
}
- (int32_t) maxHelpers {
  return result.maxHelpers;
}
- (ClanHelpProto_Builder*) setMaxHelpers:(int32_t) value {
  result.hasMaxHelpers = YES;
  result.maxHelpers = value;
  return self;
}
- (ClanHelpProto_Builder*) clearMaxHelpers {
  result.hasMaxHelpers = NO;
  result.maxHelpers = 0;
  return self;
}
- (NSMutableArray *)helperUuidsList {
  return result.mutableHelperUuidsList;
}
- (NSString*)helperUuidsAtIndex:(NSUInteger)index {
  return [result helperUuidsAtIndex:index];
}
- (ClanHelpProto_Builder *)addHelperUuids:(NSString*)value {
  if (result.mutableHelperUuidsList == nil) {
    result.mutableHelperUuidsList = [[NSMutableArray alloc]init];
  }
  [result.mutableHelperUuidsList addObject:value];
  return self;
}
- (ClanHelpProto_Builder *)addAllHelperUuids:(NSArray *)array {
  if (result.mutableHelperUuidsList == nil) {
    result.mutableHelperUuidsList = [NSMutableArray array];
  }
  [result.mutableHelperUuidsList addObjectsFromArray:array];
  return self;
}
- (ClanHelpProto_Builder *)clearHelperUuids {
  result.mutableHelperUuidsList = nil;
  return self;
}
- (BOOL) hasOpen {
  return result.hasOpen;
}
- (BOOL) open {
  return result.open;
}
- (ClanHelpProto_Builder*) setOpen:(BOOL) value {
  result.hasOpen = YES;
  result.open = value;
  return self;
}
- (ClanHelpProto_Builder*) clearOpen {
  result.hasOpen = NO;
  result.open = NO;
  return self;
}
- (BOOL) hasStaticDataId {
  return result.hasStaticDataId;
}
- (int32_t) staticDataId {
  return result.staticDataId;
}
- (ClanHelpProto_Builder*) setStaticDataId:(int32_t) value {
  result.hasStaticDataId = YES;
  result.staticDataId = value;
  return self;
}
- (ClanHelpProto_Builder*) clearStaticDataId {
  result.hasStaticDataId = NO;
  result.staticDataId = 0;
  return self;
}
@end

@interface ClanHelpNoticeProto ()
@property GameActionType helpType;
@property (strong) NSString* userDataUuid;
@property int32_t staticDataId;
@end

@implementation ClanHelpNoticeProto

- (BOOL) hasHelpType {
  return !!hasHelpType_;
}
- (void) setHasHelpType:(BOOL) value_ {
  hasHelpType_ = !!value_;
}
@synthesize helpType;
- (BOOL) hasUserDataUuid {
  return !!hasUserDataUuid_;
}
- (void) setHasUserDataUuid:(BOOL) value_ {
  hasUserDataUuid_ = !!value_;
}
@synthesize userDataUuid;
- (BOOL) hasStaticDataId {
  return !!hasStaticDataId_;
}
- (void) setHasStaticDataId:(BOOL) value_ {
  hasStaticDataId_ = !!value_;
}
@synthesize staticDataId;
- (id) init {
  if ((self = [super init])) {
    self.helpType = GameActionTypeNoHelp;
    self.userDataUuid = @"";
    self.staticDataId = 0;
  }
  return self;
}
static ClanHelpNoticeProto* defaultClanHelpNoticeProtoInstance = nil;
+ (void) initialize {
  if (self == [ClanHelpNoticeProto class]) {
    defaultClanHelpNoticeProtoInstance = [[ClanHelpNoticeProto alloc] init];
  }
}
+ (ClanHelpNoticeProto*) defaultInstance {
  return defaultClanHelpNoticeProtoInstance;
}
- (ClanHelpNoticeProto*) defaultInstance {
  return defaultClanHelpNoticeProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasHelpType) {
    [output writeEnum:1 value:self.helpType];
  }
  if (self.hasUserDataUuid) {
    [output writeString:2 value:self.userDataUuid];
  }
  if (self.hasStaticDataId) {
    [output writeInt32:3 value:self.staticDataId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasHelpType) {
    size_ += computeEnumSize(1, self.helpType);
  }
  if (self.hasUserDataUuid) {
    size_ += computeStringSize(2, self.userDataUuid);
  }
  if (self.hasStaticDataId) {
    size_ += computeInt32Size(3, self.staticDataId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ClanHelpNoticeProto*) parseFromData:(NSData*) data {
  return (ClanHelpNoticeProto*)[[[ClanHelpNoticeProto builder] mergeFromData:data] build];
}
+ (ClanHelpNoticeProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanHelpNoticeProto*)[[[ClanHelpNoticeProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClanHelpNoticeProto*) parseFromInputStream:(NSInputStream*) input {
  return (ClanHelpNoticeProto*)[[[ClanHelpNoticeProto builder] mergeFromInputStream:input] build];
}
+ (ClanHelpNoticeProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanHelpNoticeProto*)[[[ClanHelpNoticeProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanHelpNoticeProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClanHelpNoticeProto*)[[[ClanHelpNoticeProto builder] mergeFromCodedInputStream:input] build];
}
+ (ClanHelpNoticeProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanHelpNoticeProto*)[[[ClanHelpNoticeProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanHelpNoticeProto_Builder*) builder {
  return [[ClanHelpNoticeProto_Builder alloc] init];
}
+ (ClanHelpNoticeProto_Builder*) builderWithPrototype:(ClanHelpNoticeProto*) prototype {
  return [[ClanHelpNoticeProto builder] mergeFrom:prototype];
}
- (ClanHelpNoticeProto_Builder*) builder {
  return [ClanHelpNoticeProto builder];
}
- (ClanHelpNoticeProto_Builder*) toBuilder {
  return [ClanHelpNoticeProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasHelpType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"helpType", [NSNumber numberWithInteger:self.helpType]];
  }
  if (self.hasUserDataUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userDataUuid", self.userDataUuid];
  }
  if (self.hasStaticDataId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"staticDataId", [NSNumber numberWithInteger:self.staticDataId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ClanHelpNoticeProto class]]) {
    return NO;
  }
  ClanHelpNoticeProto *otherMessage = other;
  return
      self.hasHelpType == otherMessage.hasHelpType &&
      (!self.hasHelpType || self.helpType == otherMessage.helpType) &&
      self.hasUserDataUuid == otherMessage.hasUserDataUuid &&
      (!self.hasUserDataUuid || [self.userDataUuid isEqual:otherMessage.userDataUuid]) &&
      self.hasStaticDataId == otherMessage.hasStaticDataId &&
      (!self.hasStaticDataId || self.staticDataId == otherMessage.staticDataId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasHelpType) {
    hashCode = hashCode * 31 + self.helpType;
  }
  if (self.hasUserDataUuid) {
    hashCode = hashCode * 31 + [self.userDataUuid hash];
  }
  if (self.hasStaticDataId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.staticDataId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ClanHelpNoticeProto_Builder()
@property (strong) ClanHelpNoticeProto* result;
@end

@implementation ClanHelpNoticeProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ClanHelpNoticeProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClanHelpNoticeProto_Builder*) clear {
  self.result = [[ClanHelpNoticeProto alloc] init];
  return self;
}
- (ClanHelpNoticeProto_Builder*) clone {
  return [ClanHelpNoticeProto builderWithPrototype:result];
}
- (ClanHelpNoticeProto*) defaultInstance {
  return [ClanHelpNoticeProto defaultInstance];
}
- (ClanHelpNoticeProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClanHelpNoticeProto*) buildPartial {
  ClanHelpNoticeProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ClanHelpNoticeProto_Builder*) mergeFrom:(ClanHelpNoticeProto*) other {
  if (other == [ClanHelpNoticeProto defaultInstance]) {
    return self;
  }
  if (other.hasHelpType) {
    [self setHelpType:other.helpType];
  }
  if (other.hasUserDataUuid) {
    [self setUserDataUuid:other.userDataUuid];
  }
  if (other.hasStaticDataId) {
    [self setStaticDataId:other.staticDataId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClanHelpNoticeProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClanHelpNoticeProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        GameActionType value = (GameActionType)[input readEnum];
        if (GameActionTypeIsValidValue(value)) {
          [self setHelpType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setUserDataUuid:[input readString]];
        break;
      }
      case 24: {
        [self setStaticDataId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasHelpType {
  return result.hasHelpType;
}
- (GameActionType) helpType {
  return result.helpType;
}
- (ClanHelpNoticeProto_Builder*) setHelpType:(GameActionType) value {
  result.hasHelpType = YES;
  result.helpType = value;
  return self;
}
- (ClanHelpNoticeProto_Builder*) clearHelpType {
  result.hasHelpType = NO;
  result.helpType = GameActionTypeNoHelp;
  return self;
}
- (BOOL) hasUserDataUuid {
  return result.hasUserDataUuid;
}
- (NSString*) userDataUuid {
  return result.userDataUuid;
}
- (ClanHelpNoticeProto_Builder*) setUserDataUuid:(NSString*) value {
  result.hasUserDataUuid = YES;
  result.userDataUuid = value;
  return self;
}
- (ClanHelpNoticeProto_Builder*) clearUserDataUuid {
  result.hasUserDataUuid = NO;
  result.userDataUuid = @"";
  return self;
}
- (BOOL) hasStaticDataId {
  return result.hasStaticDataId;
}
- (int32_t) staticDataId {
  return result.staticDataId;
}
- (ClanHelpNoticeProto_Builder*) setStaticDataId:(int32_t) value {
  result.hasStaticDataId = YES;
  result.staticDataId = value;
  return self;
}
- (ClanHelpNoticeProto_Builder*) clearStaticDataId {
  result.hasStaticDataId = NO;
  result.staticDataId = 0;
  return self;
}
@end

@interface ClanInviteProto ()
@property (strong) NSString* inviteUuid;
@property (strong) NSString* userUuid;
@property (strong) NSString* inviterUuid;
@property (strong) MinimumUserProto* inviter;
@property (strong) NSString* clanUuid;
@property (strong) MinimumClanProto* inviterClan;
@property int64_t timeOfInvite;
@end

@implementation ClanInviteProto

- (BOOL) hasInviteUuid {
  return !!hasInviteUuid_;
}
- (void) setHasInviteUuid:(BOOL) value_ {
  hasInviteUuid_ = !!value_;
}
@synthesize inviteUuid;
- (BOOL) hasUserUuid {
  return !!hasUserUuid_;
}
- (void) setHasUserUuid:(BOOL) value_ {
  hasUserUuid_ = !!value_;
}
@synthesize userUuid;
- (BOOL) hasInviterUuid {
  return !!hasInviterUuid_;
}
- (void) setHasInviterUuid:(BOOL) value_ {
  hasInviterUuid_ = !!value_;
}
@synthesize inviterUuid;
- (BOOL) hasInviter {
  return !!hasInviter_;
}
- (void) setHasInviter:(BOOL) value_ {
  hasInviter_ = !!value_;
}
@synthesize inviter;
- (BOOL) hasClanUuid {
  return !!hasClanUuid_;
}
- (void) setHasClanUuid:(BOOL) value_ {
  hasClanUuid_ = !!value_;
}
@synthesize clanUuid;
- (BOOL) hasInviterClan {
  return !!hasInviterClan_;
}
- (void) setHasInviterClan:(BOOL) value_ {
  hasInviterClan_ = !!value_;
}
@synthesize inviterClan;
- (BOOL) hasTimeOfInvite {
  return !!hasTimeOfInvite_;
}
- (void) setHasTimeOfInvite:(BOOL) value_ {
  hasTimeOfInvite_ = !!value_;
}
@synthesize timeOfInvite;
- (id) init {
  if ((self = [super init])) {
    self.inviteUuid = @"";
    self.userUuid = @"";
    self.inviterUuid = @"";
    self.inviter = [MinimumUserProto defaultInstance];
    self.clanUuid = @"";
    self.inviterClan = [MinimumClanProto defaultInstance];
    self.timeOfInvite = 0L;
  }
  return self;
}
static ClanInviteProto* defaultClanInviteProtoInstance = nil;
+ (void) initialize {
  if (self == [ClanInviteProto class]) {
    defaultClanInviteProtoInstance = [[ClanInviteProto alloc] init];
  }
}
+ (ClanInviteProto*) defaultInstance {
  return defaultClanInviteProtoInstance;
}
- (ClanInviteProto*) defaultInstance {
  return defaultClanInviteProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasInviteUuid) {
    [output writeString:1 value:self.inviteUuid];
  }
  if (self.hasUserUuid) {
    [output writeString:2 value:self.userUuid];
  }
  if (self.hasInviterUuid) {
    [output writeString:3 value:self.inviterUuid];
  }
  if (self.hasClanUuid) {
    [output writeString:4 value:self.clanUuid];
  }
  if (self.hasTimeOfInvite) {
    [output writeInt64:5 value:self.timeOfInvite];
  }
  if (self.hasInviter) {
    [output writeMessage:6 value:self.inviter];
  }
  if (self.hasInviterClan) {
    [output writeMessage:7 value:self.inviterClan];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasInviteUuid) {
    size_ += computeStringSize(1, self.inviteUuid);
  }
  if (self.hasUserUuid) {
    size_ += computeStringSize(2, self.userUuid);
  }
  if (self.hasInviterUuid) {
    size_ += computeStringSize(3, self.inviterUuid);
  }
  if (self.hasClanUuid) {
    size_ += computeStringSize(4, self.clanUuid);
  }
  if (self.hasTimeOfInvite) {
    size_ += computeInt64Size(5, self.timeOfInvite);
  }
  if (self.hasInviter) {
    size_ += computeMessageSize(6, self.inviter);
  }
  if (self.hasInviterClan) {
    size_ += computeMessageSize(7, self.inviterClan);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ClanInviteProto*) parseFromData:(NSData*) data {
  return (ClanInviteProto*)[[[ClanInviteProto builder] mergeFromData:data] build];
}
+ (ClanInviteProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanInviteProto*)[[[ClanInviteProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClanInviteProto*) parseFromInputStream:(NSInputStream*) input {
  return (ClanInviteProto*)[[[ClanInviteProto builder] mergeFromInputStream:input] build];
}
+ (ClanInviteProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanInviteProto*)[[[ClanInviteProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanInviteProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClanInviteProto*)[[[ClanInviteProto builder] mergeFromCodedInputStream:input] build];
}
+ (ClanInviteProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanInviteProto*)[[[ClanInviteProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanInviteProto_Builder*) builder {
  return [[ClanInviteProto_Builder alloc] init];
}
+ (ClanInviteProto_Builder*) builderWithPrototype:(ClanInviteProto*) prototype {
  return [[ClanInviteProto builder] mergeFrom:prototype];
}
- (ClanInviteProto_Builder*) builder {
  return [ClanInviteProto builder];
}
- (ClanInviteProto_Builder*) toBuilder {
  return [ClanInviteProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasInviteUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"inviteUuid", self.inviteUuid];
  }
  if (self.hasUserUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userUuid", self.userUuid];
  }
  if (self.hasInviterUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"inviterUuid", self.inviterUuid];
  }
  if (self.hasClanUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanUuid", self.clanUuid];
  }
  if (self.hasTimeOfInvite) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timeOfInvite", [NSNumber numberWithLongLong:self.timeOfInvite]];
  }
  if (self.hasInviter) {
    [output appendFormat:@"%@%@ {\n", indent, @"inviter"];
    [self.inviter writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasInviterClan) {
    [output appendFormat:@"%@%@ {\n", indent, @"inviterClan"];
    [self.inviterClan writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ClanInviteProto class]]) {
    return NO;
  }
  ClanInviteProto *otherMessage = other;
  return
      self.hasInviteUuid == otherMessage.hasInviteUuid &&
      (!self.hasInviteUuid || [self.inviteUuid isEqual:otherMessage.inviteUuid]) &&
      self.hasUserUuid == otherMessage.hasUserUuid &&
      (!self.hasUserUuid || [self.userUuid isEqual:otherMessage.userUuid]) &&
      self.hasInviterUuid == otherMessage.hasInviterUuid &&
      (!self.hasInviterUuid || [self.inviterUuid isEqual:otherMessage.inviterUuid]) &&
      self.hasClanUuid == otherMessage.hasClanUuid &&
      (!self.hasClanUuid || [self.clanUuid isEqual:otherMessage.clanUuid]) &&
      self.hasTimeOfInvite == otherMessage.hasTimeOfInvite &&
      (!self.hasTimeOfInvite || self.timeOfInvite == otherMessage.timeOfInvite) &&
      self.hasInviter == otherMessage.hasInviter &&
      (!self.hasInviter || [self.inviter isEqual:otherMessage.inviter]) &&
      self.hasInviterClan == otherMessage.hasInviterClan &&
      (!self.hasInviterClan || [self.inviterClan isEqual:otherMessage.inviterClan]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasInviteUuid) {
    hashCode = hashCode * 31 + [self.inviteUuid hash];
  }
  if (self.hasUserUuid) {
    hashCode = hashCode * 31 + [self.userUuid hash];
  }
  if (self.hasInviterUuid) {
    hashCode = hashCode * 31 + [self.inviterUuid hash];
  }
  if (self.hasClanUuid) {
    hashCode = hashCode * 31 + [self.clanUuid hash];
  }
  if (self.hasTimeOfInvite) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.timeOfInvite] hash];
  }
  if (self.hasInviter) {
    hashCode = hashCode * 31 + [self.inviter hash];
  }
  if (self.hasInviterClan) {
    hashCode = hashCode * 31 + [self.inviterClan hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ClanInviteProto_Builder()
@property (strong) ClanInviteProto* result;
@end

@implementation ClanInviteProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ClanInviteProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClanInviteProto_Builder*) clear {
  self.result = [[ClanInviteProto alloc] init];
  return self;
}
- (ClanInviteProto_Builder*) clone {
  return [ClanInviteProto builderWithPrototype:result];
}
- (ClanInviteProto*) defaultInstance {
  return [ClanInviteProto defaultInstance];
}
- (ClanInviteProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClanInviteProto*) buildPartial {
  ClanInviteProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ClanInviteProto_Builder*) mergeFrom:(ClanInviteProto*) other {
  if (other == [ClanInviteProto defaultInstance]) {
    return self;
  }
  if (other.hasInviteUuid) {
    [self setInviteUuid:other.inviteUuid];
  }
  if (other.hasUserUuid) {
    [self setUserUuid:other.userUuid];
  }
  if (other.hasInviterUuid) {
    [self setInviterUuid:other.inviterUuid];
  }
  if (other.hasInviter) {
    [self mergeInviter:other.inviter];
  }
  if (other.hasClanUuid) {
    [self setClanUuid:other.clanUuid];
  }
  if (other.hasInviterClan) {
    [self mergeInviterClan:other.inviterClan];
  }
  if (other.hasTimeOfInvite) {
    [self setTimeOfInvite:other.timeOfInvite];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClanInviteProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClanInviteProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setInviteUuid:[input readString]];
        break;
      }
      case 18: {
        [self setUserUuid:[input readString]];
        break;
      }
      case 26: {
        [self setInviterUuid:[input readString]];
        break;
      }
      case 34: {
        [self setClanUuid:[input readString]];
        break;
      }
      case 40: {
        [self setTimeOfInvite:[input readInt64]];
        break;
      }
      case 50: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasInviter) {
          [subBuilder mergeFrom:self.inviter];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setInviter:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasInviterClan) {
          [subBuilder mergeFrom:self.inviterClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setInviterClan:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasInviteUuid {
  return result.hasInviteUuid;
}
- (NSString*) inviteUuid {
  return result.inviteUuid;
}
- (ClanInviteProto_Builder*) setInviteUuid:(NSString*) value {
  result.hasInviteUuid = YES;
  result.inviteUuid = value;
  return self;
}
- (ClanInviteProto_Builder*) clearInviteUuid {
  result.hasInviteUuid = NO;
  result.inviteUuid = @"";
  return self;
}
- (BOOL) hasUserUuid {
  return result.hasUserUuid;
}
- (NSString*) userUuid {
  return result.userUuid;
}
- (ClanInviteProto_Builder*) setUserUuid:(NSString*) value {
  result.hasUserUuid = YES;
  result.userUuid = value;
  return self;
}
- (ClanInviteProto_Builder*) clearUserUuid {
  result.hasUserUuid = NO;
  result.userUuid = @"";
  return self;
}
- (BOOL) hasInviterUuid {
  return result.hasInviterUuid;
}
- (NSString*) inviterUuid {
  return result.inviterUuid;
}
- (ClanInviteProto_Builder*) setInviterUuid:(NSString*) value {
  result.hasInviterUuid = YES;
  result.inviterUuid = value;
  return self;
}
- (ClanInviteProto_Builder*) clearInviterUuid {
  result.hasInviterUuid = NO;
  result.inviterUuid = @"";
  return self;
}
- (BOOL) hasInviter {
  return result.hasInviter;
}
- (MinimumUserProto*) inviter {
  return result.inviter;
}
- (ClanInviteProto_Builder*) setInviter:(MinimumUserProto*) value {
  result.hasInviter = YES;
  result.inviter = value;
  return self;
}
- (ClanInviteProto_Builder*) setInviter_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setInviter:[builderForValue build]];
}
- (ClanInviteProto_Builder*) mergeInviter:(MinimumUserProto*) value {
  if (result.hasInviter &&
      result.inviter != [MinimumUserProto defaultInstance]) {
    result.inviter =
      [[[MinimumUserProto builderWithPrototype:result.inviter] mergeFrom:value] buildPartial];
  } else {
    result.inviter = value;
  }
  result.hasInviter = YES;
  return self;
}
- (ClanInviteProto_Builder*) clearInviter {
  result.hasInviter = NO;
  result.inviter = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanUuid {
  return result.hasClanUuid;
}
- (NSString*) clanUuid {
  return result.clanUuid;
}
- (ClanInviteProto_Builder*) setClanUuid:(NSString*) value {
  result.hasClanUuid = YES;
  result.clanUuid = value;
  return self;
}
- (ClanInviteProto_Builder*) clearClanUuid {
  result.hasClanUuid = NO;
  result.clanUuid = @"";
  return self;
}
- (BOOL) hasInviterClan {
  return result.hasInviterClan;
}
- (MinimumClanProto*) inviterClan {
  return result.inviterClan;
}
- (ClanInviteProto_Builder*) setInviterClan:(MinimumClanProto*) value {
  result.hasInviterClan = YES;
  result.inviterClan = value;
  return self;
}
- (ClanInviteProto_Builder*) setInviterClan_Builder:(MinimumClanProto_Builder*) builderForValue {
  return [self setInviterClan:[builderForValue build]];
}
- (ClanInviteProto_Builder*) mergeInviterClan:(MinimumClanProto*) value {
  if (result.hasInviterClan &&
      result.inviterClan != [MinimumClanProto defaultInstance]) {
    result.inviterClan =
      [[[MinimumClanProto builderWithPrototype:result.inviterClan] mergeFrom:value] buildPartial];
  } else {
    result.inviterClan = value;
  }
  result.hasInviterClan = YES;
  return self;
}
- (ClanInviteProto_Builder*) clearInviterClan {
  result.hasInviterClan = NO;
  result.inviterClan = [MinimumClanProto defaultInstance];
  return self;
}
- (BOOL) hasTimeOfInvite {
  return result.hasTimeOfInvite;
}
- (int64_t) timeOfInvite {
  return result.timeOfInvite;
}
- (ClanInviteProto_Builder*) setTimeOfInvite:(int64_t) value {
  result.hasTimeOfInvite = YES;
  result.timeOfInvite = value;
  return self;
}
- (ClanInviteProto_Builder*) clearTimeOfInvite {
  result.hasTimeOfInvite = NO;
  result.timeOfInvite = 0L;
  return self;
}
@end

@interface ClanDataProto ()
@property (strong) NSMutableArray * mutableClanChatsList;
@property (strong) NSMutableArray * mutableClanHelpingsList;
@property (strong) NSMutableArray * mutableClanAvengingsList;
@property (strong) NSMutableArray * mutableClanDonationSolicitationsList;
@end

@implementation ClanDataProto

@synthesize mutableClanChatsList;
@dynamic clanChatsList;
@synthesize mutableClanHelpingsList;
@dynamic clanHelpingsList;
@synthesize mutableClanAvengingsList;
@dynamic clanAvengingsList;
@synthesize mutableClanDonationSolicitationsList;
@dynamic clanDonationSolicitationsList;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static ClanDataProto* defaultClanDataProtoInstance = nil;
+ (void) initialize {
  if (self == [ClanDataProto class]) {
    defaultClanDataProtoInstance = [[ClanDataProto alloc] init];
  }
}
+ (ClanDataProto*) defaultInstance {
  return defaultClanDataProtoInstance;
}
- (ClanDataProto*) defaultInstance {
  return defaultClanDataProtoInstance;
}
- (NSArray *)clanChatsList {
  return mutableClanChatsList;
}
- (GroupChatMessageProto*)clanChatsAtIndex:(NSUInteger)index {
  return [mutableClanChatsList objectAtIndex:index];
}
- (NSArray *)clanHelpingsList {
  return mutableClanHelpingsList;
}
- (ClanHelpProto*)clanHelpingsAtIndex:(NSUInteger)index {
  return [mutableClanHelpingsList objectAtIndex:index];
}
- (NSArray *)clanAvengingsList {
  return mutableClanAvengingsList;
}
- (PvpClanAvengeProto*)clanAvengingsAtIndex:(NSUInteger)index {
  return [mutableClanAvengingsList objectAtIndex:index];
}
- (NSArray *)clanDonationSolicitationsList {
  return mutableClanDonationSolicitationsList;
}
- (ClanMemberTeamDonationProto*)clanDonationSolicitationsAtIndex:(NSUInteger)index {
  return [mutableClanDonationSolicitationsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.clanChatsList enumerateObjectsUsingBlock:^(GroupChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.clanHelpingsList enumerateObjectsUsingBlock:^(ClanHelpProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.clanAvengingsList enumerateObjectsUsingBlock:^(PvpClanAvengeProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.clanDonationSolicitationsList enumerateObjectsUsingBlock:^(ClanMemberTeamDonationProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.clanChatsList enumerateObjectsUsingBlock:^(GroupChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  [self.clanHelpingsList enumerateObjectsUsingBlock:^(ClanHelpProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  [self.clanAvengingsList enumerateObjectsUsingBlock:^(PvpClanAvengeProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  [self.clanDonationSolicitationsList enumerateObjectsUsingBlock:^(ClanMemberTeamDonationProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ClanDataProto*) parseFromData:(NSData*) data {
  return (ClanDataProto*)[[[ClanDataProto builder] mergeFromData:data] build];
}
+ (ClanDataProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanDataProto*)[[[ClanDataProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClanDataProto*) parseFromInputStream:(NSInputStream*) input {
  return (ClanDataProto*)[[[ClanDataProto builder] mergeFromInputStream:input] build];
}
+ (ClanDataProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanDataProto*)[[[ClanDataProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanDataProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClanDataProto*)[[[ClanDataProto builder] mergeFromCodedInputStream:input] build];
}
+ (ClanDataProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanDataProto*)[[[ClanDataProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanDataProto_Builder*) builder {
  return [[ClanDataProto_Builder alloc] init];
}
+ (ClanDataProto_Builder*) builderWithPrototype:(ClanDataProto*) prototype {
  return [[ClanDataProto builder] mergeFrom:prototype];
}
- (ClanDataProto_Builder*) builder {
  return [ClanDataProto builder];
}
- (ClanDataProto_Builder*) toBuilder {
  return [ClanDataProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.clanChatsList enumerateObjectsUsingBlock:^(GroupChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanChats"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.clanHelpingsList enumerateObjectsUsingBlock:^(ClanHelpProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanHelpings"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.clanAvengingsList enumerateObjectsUsingBlock:^(PvpClanAvengeProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanAvengings"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.clanDonationSolicitationsList enumerateObjectsUsingBlock:^(ClanMemberTeamDonationProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"clanDonationSolicitations"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ClanDataProto class]]) {
    return NO;
  }
  ClanDataProto *otherMessage = other;
  return
      [self.clanChatsList isEqualToArray:otherMessage.clanChatsList] &&
      [self.clanHelpingsList isEqualToArray:otherMessage.clanHelpingsList] &&
      [self.clanAvengingsList isEqualToArray:otherMessage.clanAvengingsList] &&
      [self.clanDonationSolicitationsList isEqualToArray:otherMessage.clanDonationSolicitationsList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.clanChatsList enumerateObjectsUsingBlock:^(GroupChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.clanHelpingsList enumerateObjectsUsingBlock:^(ClanHelpProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.clanAvengingsList enumerateObjectsUsingBlock:^(PvpClanAvengeProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.clanDonationSolicitationsList enumerateObjectsUsingBlock:^(ClanMemberTeamDonationProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ClanDataProto_Builder()
@property (strong) ClanDataProto* result;
@end

@implementation ClanDataProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ClanDataProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClanDataProto_Builder*) clear {
  self.result = [[ClanDataProto alloc] init];
  return self;
}
- (ClanDataProto_Builder*) clone {
  return [ClanDataProto builderWithPrototype:result];
}
- (ClanDataProto*) defaultInstance {
  return [ClanDataProto defaultInstance];
}
- (ClanDataProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClanDataProto*) buildPartial {
  ClanDataProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ClanDataProto_Builder*) mergeFrom:(ClanDataProto*) other {
  if (other == [ClanDataProto defaultInstance]) {
    return self;
  }
  if (other.mutableClanChatsList.count > 0) {
    if (result.mutableClanChatsList == nil) {
      result.mutableClanChatsList = [[NSMutableArray alloc] initWithArray:other.mutableClanChatsList];
    } else {
      [result.mutableClanChatsList addObjectsFromArray:other.mutableClanChatsList];
    }
  }
  if (other.mutableClanHelpingsList.count > 0) {
    if (result.mutableClanHelpingsList == nil) {
      result.mutableClanHelpingsList = [[NSMutableArray alloc] initWithArray:other.mutableClanHelpingsList];
    } else {
      [result.mutableClanHelpingsList addObjectsFromArray:other.mutableClanHelpingsList];
    }
  }
  if (other.mutableClanAvengingsList.count > 0) {
    if (result.mutableClanAvengingsList == nil) {
      result.mutableClanAvengingsList = [[NSMutableArray alloc] initWithArray:other.mutableClanAvengingsList];
    } else {
      [result.mutableClanAvengingsList addObjectsFromArray:other.mutableClanAvengingsList];
    }
  }
  if (other.mutableClanDonationSolicitationsList.count > 0) {
    if (result.mutableClanDonationSolicitationsList == nil) {
      result.mutableClanDonationSolicitationsList = [[NSMutableArray alloc] initWithArray:other.mutableClanDonationSolicitationsList];
    } else {
      [result.mutableClanDonationSolicitationsList addObjectsFromArray:other.mutableClanDonationSolicitationsList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClanDataProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClanDataProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        GroupChatMessageProto_Builder* subBuilder = [GroupChatMessageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanChats:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        ClanHelpProto_Builder* subBuilder = [ClanHelpProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanHelpings:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PvpClanAvengeProto_Builder* subBuilder = [PvpClanAvengeProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanAvengings:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        ClanMemberTeamDonationProto_Builder* subBuilder = [ClanMemberTeamDonationProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanDonationSolicitations:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)clanChatsList {
  return result.mutableClanChatsList;
}
- (GroupChatMessageProto*)clanChatsAtIndex:(NSUInteger)index {
  return [result clanChatsAtIndex:index];
}
- (ClanDataProto_Builder *)addClanChats:(GroupChatMessageProto*)value {
  if (result.mutableClanChatsList == nil) {
    result.mutableClanChatsList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanChatsList addObject:value];
  return self;
}
- (ClanDataProto_Builder *)addAllClanChats:(NSArray *)array {
  if (result.mutableClanChatsList == nil) {
    result.mutableClanChatsList = [NSMutableArray array];
  }
  [result.mutableClanChatsList addObjectsFromArray:array];
  return self;
}
- (ClanDataProto_Builder *)clearClanChats {
  result.mutableClanChatsList = nil;
  return self;
}
- (NSMutableArray *)clanHelpingsList {
  return result.mutableClanHelpingsList;
}
- (ClanHelpProto*)clanHelpingsAtIndex:(NSUInteger)index {
  return [result clanHelpingsAtIndex:index];
}
- (ClanDataProto_Builder *)addClanHelpings:(ClanHelpProto*)value {
  if (result.mutableClanHelpingsList == nil) {
    result.mutableClanHelpingsList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanHelpingsList addObject:value];
  return self;
}
- (ClanDataProto_Builder *)addAllClanHelpings:(NSArray *)array {
  if (result.mutableClanHelpingsList == nil) {
    result.mutableClanHelpingsList = [NSMutableArray array];
  }
  [result.mutableClanHelpingsList addObjectsFromArray:array];
  return self;
}
- (ClanDataProto_Builder *)clearClanHelpings {
  result.mutableClanHelpingsList = nil;
  return self;
}
- (NSMutableArray *)clanAvengingsList {
  return result.mutableClanAvengingsList;
}
- (PvpClanAvengeProto*)clanAvengingsAtIndex:(NSUInteger)index {
  return [result clanAvengingsAtIndex:index];
}
- (ClanDataProto_Builder *)addClanAvengings:(PvpClanAvengeProto*)value {
  if (result.mutableClanAvengingsList == nil) {
    result.mutableClanAvengingsList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanAvengingsList addObject:value];
  return self;
}
- (ClanDataProto_Builder *)addAllClanAvengings:(NSArray *)array {
  if (result.mutableClanAvengingsList == nil) {
    result.mutableClanAvengingsList = [NSMutableArray array];
  }
  [result.mutableClanAvengingsList addObjectsFromArray:array];
  return self;
}
- (ClanDataProto_Builder *)clearClanAvengings {
  result.mutableClanAvengingsList = nil;
  return self;
}
- (NSMutableArray *)clanDonationSolicitationsList {
  return result.mutableClanDonationSolicitationsList;
}
- (ClanMemberTeamDonationProto*)clanDonationSolicitationsAtIndex:(NSUInteger)index {
  return [result clanDonationSolicitationsAtIndex:index];
}
- (ClanDataProto_Builder *)addClanDonationSolicitations:(ClanMemberTeamDonationProto*)value {
  if (result.mutableClanDonationSolicitationsList == nil) {
    result.mutableClanDonationSolicitationsList = [[NSMutableArray alloc]init];
  }
  [result.mutableClanDonationSolicitationsList addObject:value];
  return self;
}
- (ClanDataProto_Builder *)addAllClanDonationSolicitations:(NSArray *)array {
  if (result.mutableClanDonationSolicitationsList == nil) {
    result.mutableClanDonationSolicitationsList = [NSMutableArray array];
  }
  [result.mutableClanDonationSolicitationsList addObjectsFromArray:array];
  return self;
}
- (ClanDataProto_Builder *)clearClanDonationSolicitations {
  result.mutableClanDonationSolicitationsList = nil;
  return self;
}
@end

@interface ClanMemberTeamDonationProto ()
@property (strong) NSString* donationUuid;
@property (strong) MinimumUserProto* solicitor;
@property (strong) NSString* clanUuid;
@property int32_t powerAvailability;
@property BOOL isFulfilled;
@property (strong) NSString* msg;
@property int64_t timeOfSolicitation;
@property (strong) NSMutableArray * mutableDonationsList;
@end

@implementation ClanMemberTeamDonationProto

- (BOOL) hasDonationUuid {
  return !!hasDonationUuid_;
}
- (void) setHasDonationUuid:(BOOL) value_ {
  hasDonationUuid_ = !!value_;
}
@synthesize donationUuid;
- (BOOL) hasSolicitor {
  return !!hasSolicitor_;
}
- (void) setHasSolicitor:(BOOL) value_ {
  hasSolicitor_ = !!value_;
}
@synthesize solicitor;
- (BOOL) hasClanUuid {
  return !!hasClanUuid_;
}
- (void) setHasClanUuid:(BOOL) value_ {
  hasClanUuid_ = !!value_;
}
@synthesize clanUuid;
- (BOOL) hasPowerAvailability {
  return !!hasPowerAvailability_;
}
- (void) setHasPowerAvailability:(BOOL) value_ {
  hasPowerAvailability_ = !!value_;
}
@synthesize powerAvailability;
- (BOOL) hasIsFulfilled {
  return !!hasIsFulfilled_;
}
- (void) setHasIsFulfilled:(BOOL) value_ {
  hasIsFulfilled_ = !!value_;
}
- (BOOL) isFulfilled {
  return !!isFulfilled_;
}
- (void) setIsFulfilled:(BOOL) value_ {
  isFulfilled_ = !!value_;
}
- (BOOL) hasMsg {
  return !!hasMsg_;
}
- (void) setHasMsg:(BOOL) value_ {
  hasMsg_ = !!value_;
}
@synthesize msg;
- (BOOL) hasTimeOfSolicitation {
  return !!hasTimeOfSolicitation_;
}
- (void) setHasTimeOfSolicitation:(BOOL) value_ {
  hasTimeOfSolicitation_ = !!value_;
}
@synthesize timeOfSolicitation;
@synthesize mutableDonationsList;
@dynamic donationsList;
- (id) init {
  if ((self = [super init])) {
    self.donationUuid = @"";
    self.solicitor = [MinimumUserProto defaultInstance];
    self.clanUuid = @"";
    self.powerAvailability = 0;
    self.isFulfilled = NO;
    self.msg = @"";
    self.timeOfSolicitation = 0L;
  }
  return self;
}
static ClanMemberTeamDonationProto* defaultClanMemberTeamDonationProtoInstance = nil;
+ (void) initialize {
  if (self == [ClanMemberTeamDonationProto class]) {
    defaultClanMemberTeamDonationProtoInstance = [[ClanMemberTeamDonationProto alloc] init];
  }
}
+ (ClanMemberTeamDonationProto*) defaultInstance {
  return defaultClanMemberTeamDonationProtoInstance;
}
- (ClanMemberTeamDonationProto*) defaultInstance {
  return defaultClanMemberTeamDonationProtoInstance;
}
- (NSArray *)donationsList {
  return mutableDonationsList;
}
- (UserMonsterSnapshotProto*)donationsAtIndex:(NSUInteger)index {
  return [mutableDonationsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDonationUuid) {
    [output writeString:1 value:self.donationUuid];
  }
  if (self.hasSolicitor) {
    [output writeMessage:2 value:self.solicitor];
  }
  if (self.hasClanUuid) {
    [output writeString:3 value:self.clanUuid];
  }
  if (self.hasPowerAvailability) {
    [output writeInt32:4 value:self.powerAvailability];
  }
  if (self.hasIsFulfilled) {
    [output writeBool:5 value:self.isFulfilled];
  }
  if (self.hasMsg) {
    [output writeString:6 value:self.msg];
  }
  if (self.hasTimeOfSolicitation) {
    [output writeInt64:7 value:self.timeOfSolicitation];
  }
  [self.donationsList enumerateObjectsUsingBlock:^(UserMonsterSnapshotProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:8 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDonationUuid) {
    size_ += computeStringSize(1, self.donationUuid);
  }
  if (self.hasSolicitor) {
    size_ += computeMessageSize(2, self.solicitor);
  }
  if (self.hasClanUuid) {
    size_ += computeStringSize(3, self.clanUuid);
  }
  if (self.hasPowerAvailability) {
    size_ += computeInt32Size(4, self.powerAvailability);
  }
  if (self.hasIsFulfilled) {
    size_ += computeBoolSize(5, self.isFulfilled);
  }
  if (self.hasMsg) {
    size_ += computeStringSize(6, self.msg);
  }
  if (self.hasTimeOfSolicitation) {
    size_ += computeInt64Size(7, self.timeOfSolicitation);
  }
  [self.donationsList enumerateObjectsUsingBlock:^(UserMonsterSnapshotProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(8, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ClanMemberTeamDonationProto*) parseFromData:(NSData*) data {
  return (ClanMemberTeamDonationProto*)[[[ClanMemberTeamDonationProto builder] mergeFromData:data] build];
}
+ (ClanMemberTeamDonationProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanMemberTeamDonationProto*)[[[ClanMemberTeamDonationProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClanMemberTeamDonationProto*) parseFromInputStream:(NSInputStream*) input {
  return (ClanMemberTeamDonationProto*)[[[ClanMemberTeamDonationProto builder] mergeFromInputStream:input] build];
}
+ (ClanMemberTeamDonationProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanMemberTeamDonationProto*)[[[ClanMemberTeamDonationProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanMemberTeamDonationProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClanMemberTeamDonationProto*)[[[ClanMemberTeamDonationProto builder] mergeFromCodedInputStream:input] build];
}
+ (ClanMemberTeamDonationProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClanMemberTeamDonationProto*)[[[ClanMemberTeamDonationProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClanMemberTeamDonationProto_Builder*) builder {
  return [[ClanMemberTeamDonationProto_Builder alloc] init];
}
+ (ClanMemberTeamDonationProto_Builder*) builderWithPrototype:(ClanMemberTeamDonationProto*) prototype {
  return [[ClanMemberTeamDonationProto builder] mergeFrom:prototype];
}
- (ClanMemberTeamDonationProto_Builder*) builder {
  return [ClanMemberTeamDonationProto builder];
}
- (ClanMemberTeamDonationProto_Builder*) toBuilder {
  return [ClanMemberTeamDonationProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDonationUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"donationUuid", self.donationUuid];
  }
  if (self.hasSolicitor) {
    [output appendFormat:@"%@%@ {\n", indent, @"solicitor"];
    [self.solicitor writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClanUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clanUuid", self.clanUuid];
  }
  if (self.hasPowerAvailability) {
    [output appendFormat:@"%@%@: %@\n", indent, @"powerAvailability", [NSNumber numberWithInteger:self.powerAvailability]];
  }
  if (self.hasIsFulfilled) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isFulfilled", [NSNumber numberWithBool:self.isFulfilled]];
  }
  if (self.hasMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msg", self.msg];
  }
  if (self.hasTimeOfSolicitation) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timeOfSolicitation", [NSNumber numberWithLongLong:self.timeOfSolicitation]];
  }
  [self.donationsList enumerateObjectsUsingBlock:^(UserMonsterSnapshotProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"donations"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ClanMemberTeamDonationProto class]]) {
    return NO;
  }
  ClanMemberTeamDonationProto *otherMessage = other;
  return
      self.hasDonationUuid == otherMessage.hasDonationUuid &&
      (!self.hasDonationUuid || [self.donationUuid isEqual:otherMessage.donationUuid]) &&
      self.hasSolicitor == otherMessage.hasSolicitor &&
      (!self.hasSolicitor || [self.solicitor isEqual:otherMessage.solicitor]) &&
      self.hasClanUuid == otherMessage.hasClanUuid &&
      (!self.hasClanUuid || [self.clanUuid isEqual:otherMessage.clanUuid]) &&
      self.hasPowerAvailability == otherMessage.hasPowerAvailability &&
      (!self.hasPowerAvailability || self.powerAvailability == otherMessage.powerAvailability) &&
      self.hasIsFulfilled == otherMessage.hasIsFulfilled &&
      (!self.hasIsFulfilled || self.isFulfilled == otherMessage.isFulfilled) &&
      self.hasMsg == otherMessage.hasMsg &&
      (!self.hasMsg || [self.msg isEqual:otherMessage.msg]) &&
      self.hasTimeOfSolicitation == otherMessage.hasTimeOfSolicitation &&
      (!self.hasTimeOfSolicitation || self.timeOfSolicitation == otherMessage.timeOfSolicitation) &&
      [self.donationsList isEqualToArray:otherMessage.donationsList] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDonationUuid) {
    hashCode = hashCode * 31 + [self.donationUuid hash];
  }
  if (self.hasSolicitor) {
    hashCode = hashCode * 31 + [self.solicitor hash];
  }
  if (self.hasClanUuid) {
    hashCode = hashCode * 31 + [self.clanUuid hash];
  }
  if (self.hasPowerAvailability) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.powerAvailability] hash];
  }
  if (self.hasIsFulfilled) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isFulfilled] hash];
  }
  if (self.hasMsg) {
    hashCode = hashCode * 31 + [self.msg hash];
  }
  if (self.hasTimeOfSolicitation) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.timeOfSolicitation] hash];
  }
  [self.donationsList enumerateObjectsUsingBlock:^(UserMonsterSnapshotProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ClanMemberTeamDonationProto_Builder()
@property (strong) ClanMemberTeamDonationProto* result;
@end

@implementation ClanMemberTeamDonationProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ClanMemberTeamDonationProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClanMemberTeamDonationProto_Builder*) clear {
  self.result = [[ClanMemberTeamDonationProto alloc] init];
  return self;
}
- (ClanMemberTeamDonationProto_Builder*) clone {
  return [ClanMemberTeamDonationProto builderWithPrototype:result];
}
- (ClanMemberTeamDonationProto*) defaultInstance {
  return [ClanMemberTeamDonationProto defaultInstance];
}
- (ClanMemberTeamDonationProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClanMemberTeamDonationProto*) buildPartial {
  ClanMemberTeamDonationProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ClanMemberTeamDonationProto_Builder*) mergeFrom:(ClanMemberTeamDonationProto*) other {
  if (other == [ClanMemberTeamDonationProto defaultInstance]) {
    return self;
  }
  if (other.hasDonationUuid) {
    [self setDonationUuid:other.donationUuid];
  }
  if (other.hasSolicitor) {
    [self mergeSolicitor:other.solicitor];
  }
  if (other.hasClanUuid) {
    [self setClanUuid:other.clanUuid];
  }
  if (other.hasPowerAvailability) {
    [self setPowerAvailability:other.powerAvailability];
  }
  if (other.hasIsFulfilled) {
    [self setIsFulfilled:other.isFulfilled];
  }
  if (other.hasMsg) {
    [self setMsg:other.msg];
  }
  if (other.hasTimeOfSolicitation) {
    [self setTimeOfSolicitation:other.timeOfSolicitation];
  }
  if (other.mutableDonationsList.count > 0) {
    if (result.mutableDonationsList == nil) {
      result.mutableDonationsList = [[NSMutableArray alloc] initWithArray:other.mutableDonationsList];
    } else {
      [result.mutableDonationsList addObjectsFromArray:other.mutableDonationsList];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClanMemberTeamDonationProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClanMemberTeamDonationProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setDonationUuid:[input readString]];
        break;
      }
      case 18: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSolicitor) {
          [subBuilder mergeFrom:self.solicitor];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSolicitor:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setClanUuid:[input readString]];
        break;
      }
      case 32: {
        [self setPowerAvailability:[input readInt32]];
        break;
      }
      case 40: {
        [self setIsFulfilled:[input readBool]];
        break;
      }
      case 50: {
        [self setMsg:[input readString]];
        break;
      }
      case 56: {
        [self setTimeOfSolicitation:[input readInt64]];
        break;
      }
      case 66: {
        UserMonsterSnapshotProto_Builder* subBuilder = [UserMonsterSnapshotProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDonations:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasDonationUuid {
  return result.hasDonationUuid;
}
- (NSString*) donationUuid {
  return result.donationUuid;
}
- (ClanMemberTeamDonationProto_Builder*) setDonationUuid:(NSString*) value {
  result.hasDonationUuid = YES;
  result.donationUuid = value;
  return self;
}
- (ClanMemberTeamDonationProto_Builder*) clearDonationUuid {
  result.hasDonationUuid = NO;
  result.donationUuid = @"";
  return self;
}
- (BOOL) hasSolicitor {
  return result.hasSolicitor;
}
- (MinimumUserProto*) solicitor {
  return result.solicitor;
}
- (ClanMemberTeamDonationProto_Builder*) setSolicitor:(MinimumUserProto*) value {
  result.hasSolicitor = YES;
  result.solicitor = value;
  return self;
}
- (ClanMemberTeamDonationProto_Builder*) setSolicitor_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSolicitor:[builderForValue build]];
}
- (ClanMemberTeamDonationProto_Builder*) mergeSolicitor:(MinimumUserProto*) value {
  if (result.hasSolicitor &&
      result.solicitor != [MinimumUserProto defaultInstance]) {
    result.solicitor =
      [[[MinimumUserProto builderWithPrototype:result.solicitor] mergeFrom:value] buildPartial];
  } else {
    result.solicitor = value;
  }
  result.hasSolicitor = YES;
  return self;
}
- (ClanMemberTeamDonationProto_Builder*) clearSolicitor {
  result.hasSolicitor = NO;
  result.solicitor = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanUuid {
  return result.hasClanUuid;
}
- (NSString*) clanUuid {
  return result.clanUuid;
}
- (ClanMemberTeamDonationProto_Builder*) setClanUuid:(NSString*) value {
  result.hasClanUuid = YES;
  result.clanUuid = value;
  return self;
}
- (ClanMemberTeamDonationProto_Builder*) clearClanUuid {
  result.hasClanUuid = NO;
  result.clanUuid = @"";
  return self;
}
- (BOOL) hasPowerAvailability {
  return result.hasPowerAvailability;
}
- (int32_t) powerAvailability {
  return result.powerAvailability;
}
- (ClanMemberTeamDonationProto_Builder*) setPowerAvailability:(int32_t) value {
  result.hasPowerAvailability = YES;
  result.powerAvailability = value;
  return self;
}
- (ClanMemberTeamDonationProto_Builder*) clearPowerAvailability {
  result.hasPowerAvailability = NO;
  result.powerAvailability = 0;
  return self;
}
- (BOOL) hasIsFulfilled {
  return result.hasIsFulfilled;
}
- (BOOL) isFulfilled {
  return result.isFulfilled;
}
- (ClanMemberTeamDonationProto_Builder*) setIsFulfilled:(BOOL) value {
  result.hasIsFulfilled = YES;
  result.isFulfilled = value;
  return self;
}
- (ClanMemberTeamDonationProto_Builder*) clearIsFulfilled {
  result.hasIsFulfilled = NO;
  result.isFulfilled = NO;
  return self;
}
- (BOOL) hasMsg {
  return result.hasMsg;
}
- (NSString*) msg {
  return result.msg;
}
- (ClanMemberTeamDonationProto_Builder*) setMsg:(NSString*) value {
  result.hasMsg = YES;
  result.msg = value;
  return self;
}
- (ClanMemberTeamDonationProto_Builder*) clearMsg {
  result.hasMsg = NO;
  result.msg = @"";
  return self;
}
- (BOOL) hasTimeOfSolicitation {
  return result.hasTimeOfSolicitation;
}
- (int64_t) timeOfSolicitation {
  return result.timeOfSolicitation;
}
- (ClanMemberTeamDonationProto_Builder*) setTimeOfSolicitation:(int64_t) value {
  result.hasTimeOfSolicitation = YES;
  result.timeOfSolicitation = value;
  return self;
}
- (ClanMemberTeamDonationProto_Builder*) clearTimeOfSolicitation {
  result.hasTimeOfSolicitation = NO;
  result.timeOfSolicitation = 0L;
  return self;
}
- (NSMutableArray *)donationsList {
  return result.mutableDonationsList;
}
- (UserMonsterSnapshotProto*)donationsAtIndex:(NSUInteger)index {
  return [result donationsAtIndex:index];
}
- (ClanMemberTeamDonationProto_Builder *)addDonations:(UserMonsterSnapshotProto*)value {
  if (result.mutableDonationsList == nil) {
    result.mutableDonationsList = [[NSMutableArray alloc]init];
  }
  [result.mutableDonationsList addObject:value];
  return self;
}
- (ClanMemberTeamDonationProto_Builder *)addAllDonations:(NSArray *)array {
  if (result.mutableDonationsList == nil) {
    result.mutableDonationsList = [NSMutableArray array];
  }
  [result.mutableDonationsList addObjectsFromArray:array];
  return self;
}
- (ClanMemberTeamDonationProto_Builder *)clearDonations {
  result.mutableDonationsList = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
