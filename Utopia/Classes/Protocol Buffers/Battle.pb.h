// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "MonsterStuff.pb.h"
#import "User.pb.h"

@class FullUserMonsterProto;
@class FullUserMonsterProto_Builder;
@class FullUserProto;
@class FullUserProto_Builder;
@class MinimumClanProto;
@class MinimumClanProto_Builder;
@class MinimumUserMonsterProto;
@class MinimumUserMonsterProto_Builder;
@class MinimumUserMonsterSellProto;
@class MinimumUserMonsterSellProto_Builder;
@class MinimumUserProto;
@class MinimumUserProtoWithBattleHistory;
@class MinimumUserProtoWithBattleHistory_Builder;
@class MinimumUserProtoWithFacebookId;
@class MinimumUserProtoWithFacebookId_Builder;
@class MinimumUserProtoWithLevel;
@class MinimumUserProtoWithLevel_Builder;
@class MinimumUserProtoWithMaxResources;
@class MinimumUserProtoWithMaxResources_Builder;
@class MinimumUserProto_Builder;
@class MonsterBattleDialogueProto;
@class MonsterBattleDialogueProto_Builder;
@class MonsterLevelInfoProto;
@class MonsterLevelInfoProto_Builder;
@class MonsterProto;
@class MonsterProto_Builder;
@class PvpHistoryProto;
@class PvpHistoryProto_Builder;
@class PvpProto;
@class PvpProto_Builder;
@class StaticUserLevelInfoProto;
@class StaticUserLevelInfoProto_Builder;
@class UserCurrentMonsterTeamProto;
@class UserCurrentMonsterTeamProto_Builder;
@class UserEnhancementItemProto;
@class UserEnhancementItemProto_Builder;
@class UserEnhancementProto;
@class UserEnhancementProto_Builder;
@class UserFacebookInviteForSlotProto;
@class UserFacebookInviteForSlotProto_Builder;
@class UserMonsterCurrentExpProto;
@class UserMonsterCurrentExpProto_Builder;
@class UserMonsterCurrentHealthProto;
@class UserMonsterCurrentHealthProto_Builder;
@class UserMonsterEvolutionProto;
@class UserMonsterEvolutionProto_Builder;
@class UserMonsterHealingProto;
@class UserMonsterHealingProto_Builder;
typedef enum {
  BattleResultAttackerWin = 1,
  BattleResultDefenderWin = 2,
  BattleResultAttackerFlee = 3,
} BattleResult;

BOOL BattleResultIsValidValue(BattleResult value);


@interface BattleRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface MinimumUserProtoWithBattleHistory : PBGeneratedMessage {
@private
  BOOL hasBattlesWon_:1;
  BOOL hasBattlesLost_:1;
  BOOL hasBattlesFled_:1;
  BOOL hasMinUserProtoWithLevel_:1;
  int32_t battlesWon;
  int32_t battlesLost;
  int32_t battlesFled;
  MinimumUserProtoWithLevel* minUserProtoWithLevel;
}
- (BOOL) hasMinUserProtoWithLevel;
- (BOOL) hasBattlesWon;
- (BOOL) hasBattlesLost;
- (BOOL) hasBattlesFled;
@property (readonly, retain) MinimumUserProtoWithLevel* minUserProtoWithLevel;
@property (readonly) int32_t battlesWon;
@property (readonly) int32_t battlesLost;
@property (readonly) int32_t battlesFled;

+ (MinimumUserProtoWithBattleHistory*) defaultInstance;
- (MinimumUserProtoWithBattleHistory*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MinimumUserProtoWithBattleHistory_Builder*) builder;
+ (MinimumUserProtoWithBattleHistory_Builder*) builder;
+ (MinimumUserProtoWithBattleHistory_Builder*) builderWithPrototype:(MinimumUserProtoWithBattleHistory*) prototype;

+ (MinimumUserProtoWithBattleHistory*) parseFromData:(NSData*) data;
+ (MinimumUserProtoWithBattleHistory*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MinimumUserProtoWithBattleHistory*) parseFromInputStream:(NSInputStream*) input;
+ (MinimumUserProtoWithBattleHistory*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MinimumUserProtoWithBattleHistory*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MinimumUserProtoWithBattleHistory*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MinimumUserProtoWithBattleHistory_Builder : PBGeneratedMessage_Builder {
@private
  MinimumUserProtoWithBattleHistory* result;
}

- (MinimumUserProtoWithBattleHistory*) defaultInstance;

- (MinimumUserProtoWithBattleHistory_Builder*) clear;
- (MinimumUserProtoWithBattleHistory_Builder*) clone;

- (MinimumUserProtoWithBattleHistory*) build;
- (MinimumUserProtoWithBattleHistory*) buildPartial;

- (MinimumUserProtoWithBattleHistory_Builder*) mergeFrom:(MinimumUserProtoWithBattleHistory*) other;
- (MinimumUserProtoWithBattleHistory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MinimumUserProtoWithBattleHistory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMinUserProtoWithLevel;
- (MinimumUserProtoWithLevel*) minUserProtoWithLevel;
- (MinimumUserProtoWithBattleHistory_Builder*) setMinUserProtoWithLevel:(MinimumUserProtoWithLevel*) value;
- (MinimumUserProtoWithBattleHistory_Builder*) setMinUserProtoWithLevelBuilder:(MinimumUserProtoWithLevel_Builder*) builderForValue;
- (MinimumUserProtoWithBattleHistory_Builder*) mergeMinUserProtoWithLevel:(MinimumUserProtoWithLevel*) value;
- (MinimumUserProtoWithBattleHistory_Builder*) clearMinUserProtoWithLevel;

- (BOOL) hasBattlesWon;
- (int32_t) battlesWon;
- (MinimumUserProtoWithBattleHistory_Builder*) setBattlesWon:(int32_t) value;
- (MinimumUserProtoWithBattleHistory_Builder*) clearBattlesWon;

- (BOOL) hasBattlesLost;
- (int32_t) battlesLost;
- (MinimumUserProtoWithBattleHistory_Builder*) setBattlesLost:(int32_t) value;
- (MinimumUserProtoWithBattleHistory_Builder*) clearBattlesLost;

- (BOOL) hasBattlesFled;
- (int32_t) battlesFled;
- (MinimumUserProtoWithBattleHistory_Builder*) setBattlesFled:(int32_t) value;
- (MinimumUserProtoWithBattleHistory_Builder*) clearBattlesFled;
@end

@interface PvpProto : PBGeneratedMessage {
@private
  BOOL hasCurElo_:1;
  BOOL hasProspectiveCashWinnings_:1;
  BOOL hasProspectiveOilWinnings_:1;
  BOOL hasDefender_:1;
  int32_t curElo;
  int32_t prospectiveCashWinnings;
  int32_t prospectiveOilWinnings;
  MinimumUserProtoWithLevel* defender;
  NSMutableArray* mutableDefenderMonstersList;
}
- (BOOL) hasDefender;
- (BOOL) hasCurElo;
- (BOOL) hasProspectiveCashWinnings;
- (BOOL) hasProspectiveOilWinnings;
@property (readonly, retain) MinimumUserProtoWithLevel* defender;
@property (readonly) int32_t curElo;
@property (readonly) int32_t prospectiveCashWinnings;
@property (readonly) int32_t prospectiveOilWinnings;
- (NSArray*) defenderMonstersList;
- (MinimumUserMonsterProto*) defenderMonstersAtIndex:(int32_t) index;

+ (PvpProto*) defaultInstance;
- (PvpProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PvpProto_Builder*) builder;
+ (PvpProto_Builder*) builder;
+ (PvpProto_Builder*) builderWithPrototype:(PvpProto*) prototype;

+ (PvpProto*) parseFromData:(NSData*) data;
+ (PvpProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PvpProto*) parseFromInputStream:(NSInputStream*) input;
+ (PvpProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PvpProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PvpProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PvpProto_Builder : PBGeneratedMessage_Builder {
@private
  PvpProto* result;
}

- (PvpProto*) defaultInstance;

- (PvpProto_Builder*) clear;
- (PvpProto_Builder*) clone;

- (PvpProto*) build;
- (PvpProto*) buildPartial;

- (PvpProto_Builder*) mergeFrom:(PvpProto*) other;
- (PvpProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PvpProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDefender;
- (MinimumUserProtoWithLevel*) defender;
- (PvpProto_Builder*) setDefender:(MinimumUserProtoWithLevel*) value;
- (PvpProto_Builder*) setDefenderBuilder:(MinimumUserProtoWithLevel_Builder*) builderForValue;
- (PvpProto_Builder*) mergeDefender:(MinimumUserProtoWithLevel*) value;
- (PvpProto_Builder*) clearDefender;

- (BOOL) hasCurElo;
- (int32_t) curElo;
- (PvpProto_Builder*) setCurElo:(int32_t) value;
- (PvpProto_Builder*) clearCurElo;

- (NSArray*) defenderMonstersList;
- (MinimumUserMonsterProto*) defenderMonstersAtIndex:(int32_t) index;
- (PvpProto_Builder*) replaceDefenderMonstersAtIndex:(int32_t) index with:(MinimumUserMonsterProto*) value;
- (PvpProto_Builder*) addDefenderMonsters:(MinimumUserMonsterProto*) value;
- (PvpProto_Builder*) addAllDefenderMonsters:(NSArray*) values;
- (PvpProto_Builder*) clearDefenderMonstersList;

- (BOOL) hasProspectiveCashWinnings;
- (int32_t) prospectiveCashWinnings;
- (PvpProto_Builder*) setProspectiveCashWinnings:(int32_t) value;
- (PvpProto_Builder*) clearProspectiveCashWinnings;

- (BOOL) hasProspectiveOilWinnings;
- (int32_t) prospectiveOilWinnings;
- (PvpProto_Builder*) setProspectiveOilWinnings:(int32_t) value;
- (PvpProto_Builder*) clearProspectiveOilWinnings;
@end

@interface PvpHistoryProto : PBGeneratedMessage {
@private
  BOOL hasAttackerWon_:1;
  BOOL hasExactedRevenge_:1;
  BOOL hasBattleEndTime_:1;
  BOOL hasProspectiveCashWinnings_:1;
  BOOL hasProspectiveOilWinnings_:1;
  BOOL hasAttacker_:1;
  BOOL hasDefenderCashChange_:1;
  BOOL hasDefenderOilChange_:1;
  BOOL attackerWon_:1;
  BOOL exactedRevenge_:1;
  int64_t battleEndTime;
  int32_t prospectiveCashWinnings;
  int32_t prospectiveOilWinnings;
  FullUserProto* attacker;
  int32_t defenderCashChange;
  int32_t defenderOilChange;
  NSMutableArray* mutableAttackersMonstersList;
}
- (BOOL) hasBattleEndTime;
- (BOOL) hasAttacker;
- (BOOL) hasAttackerWon;
- (BOOL) hasDefenderCashChange;
- (BOOL) hasDefenderOilChange;
- (BOOL) hasExactedRevenge;
- (BOOL) hasProspectiveCashWinnings;
- (BOOL) hasProspectiveOilWinnings;
@property (readonly) int64_t battleEndTime;
@property (readonly, retain) FullUserProto* attacker;
- (BOOL) attackerWon;
@property (readonly) int32_t defenderCashChange;
@property (readonly) int32_t defenderOilChange;
- (BOOL) exactedRevenge;
@property (readonly) int32_t prospectiveCashWinnings;
@property (readonly) int32_t prospectiveOilWinnings;
- (NSArray*) attackersMonstersList;
- (MinimumUserMonsterProto*) attackersMonstersAtIndex:(int32_t) index;

+ (PvpHistoryProto*) defaultInstance;
- (PvpHistoryProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PvpHistoryProto_Builder*) builder;
+ (PvpHistoryProto_Builder*) builder;
+ (PvpHistoryProto_Builder*) builderWithPrototype:(PvpHistoryProto*) prototype;

+ (PvpHistoryProto*) parseFromData:(NSData*) data;
+ (PvpHistoryProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PvpHistoryProto*) parseFromInputStream:(NSInputStream*) input;
+ (PvpHistoryProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PvpHistoryProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PvpHistoryProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PvpHistoryProto_Builder : PBGeneratedMessage_Builder {
@private
  PvpHistoryProto* result;
}

- (PvpHistoryProto*) defaultInstance;

- (PvpHistoryProto_Builder*) clear;
- (PvpHistoryProto_Builder*) clone;

- (PvpHistoryProto*) build;
- (PvpHistoryProto*) buildPartial;

- (PvpHistoryProto_Builder*) mergeFrom:(PvpHistoryProto*) other;
- (PvpHistoryProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PvpHistoryProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBattleEndTime;
- (int64_t) battleEndTime;
- (PvpHistoryProto_Builder*) setBattleEndTime:(int64_t) value;
- (PvpHistoryProto_Builder*) clearBattleEndTime;

- (BOOL) hasAttacker;
- (FullUserProto*) attacker;
- (PvpHistoryProto_Builder*) setAttacker:(FullUserProto*) value;
- (PvpHistoryProto_Builder*) setAttackerBuilder:(FullUserProto_Builder*) builderForValue;
- (PvpHistoryProto_Builder*) mergeAttacker:(FullUserProto*) value;
- (PvpHistoryProto_Builder*) clearAttacker;

- (NSArray*) attackersMonstersList;
- (MinimumUserMonsterProto*) attackersMonstersAtIndex:(int32_t) index;
- (PvpHistoryProto_Builder*) replaceAttackersMonstersAtIndex:(int32_t) index with:(MinimumUserMonsterProto*) value;
- (PvpHistoryProto_Builder*) addAttackersMonsters:(MinimumUserMonsterProto*) value;
- (PvpHistoryProto_Builder*) addAllAttackersMonsters:(NSArray*) values;
- (PvpHistoryProto_Builder*) clearAttackersMonstersList;

- (BOOL) hasAttackerWon;
- (BOOL) attackerWon;
- (PvpHistoryProto_Builder*) setAttackerWon:(BOOL) value;
- (PvpHistoryProto_Builder*) clearAttackerWon;

- (BOOL) hasDefenderCashChange;
- (int32_t) defenderCashChange;
- (PvpHistoryProto_Builder*) setDefenderCashChange:(int32_t) value;
- (PvpHistoryProto_Builder*) clearDefenderCashChange;

- (BOOL) hasDefenderOilChange;
- (int32_t) defenderOilChange;
- (PvpHistoryProto_Builder*) setDefenderOilChange:(int32_t) value;
- (PvpHistoryProto_Builder*) clearDefenderOilChange;

- (BOOL) hasExactedRevenge;
- (BOOL) exactedRevenge;
- (PvpHistoryProto_Builder*) setExactedRevenge:(BOOL) value;
- (PvpHistoryProto_Builder*) clearExactedRevenge;

- (BOOL) hasProspectiveCashWinnings;
- (int32_t) prospectiveCashWinnings;
- (PvpHistoryProto_Builder*) setProspectiveCashWinnings:(int32_t) value;
- (PvpHistoryProto_Builder*) clearProspectiveCashWinnings;

- (BOOL) hasProspectiveOilWinnings;
- (int32_t) prospectiveOilWinnings;
- (PvpHistoryProto_Builder*) setProspectiveOilWinnings:(int32_t) value;
- (PvpHistoryProto_Builder*) clearProspectiveOilWinnings;
@end

