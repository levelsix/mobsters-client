// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventChat.pb.h"
// @@protoc_insertion_point(imports)

@implementation EventChatRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventChatRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ChatRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface SendAdminMessageResponseProto ()
@property (strong) NSString* senderUuid;
@property (strong) NSString* message;
@end

@implementation SendAdminMessageResponseProto

- (BOOL) hasSenderUuid {
  return !!hasSenderUuid_;
}
- (void) setHasSenderUuid:(BOOL) value_ {
  hasSenderUuid_ = !!value_;
}
@synthesize senderUuid;
- (BOOL) hasMessage {
  return !!hasMessage_;
}
- (void) setHasMessage:(BOOL) value_ {
  hasMessage_ = !!value_;
}
@synthesize message;
- (id) init {
  if ((self = [super init])) {
    self.senderUuid = @"";
    self.message = @"";
  }
  return self;
}
static SendAdminMessageResponseProto* defaultSendAdminMessageResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [SendAdminMessageResponseProto class]) {
    defaultSendAdminMessageResponseProtoInstance = [[SendAdminMessageResponseProto alloc] init];
  }
}
+ (SendAdminMessageResponseProto*) defaultInstance {
  return defaultSendAdminMessageResponseProtoInstance;
}
- (SendAdminMessageResponseProto*) defaultInstance {
  return defaultSendAdminMessageResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSenderUuid) {
    [output writeString:1 value:self.senderUuid];
  }
  if (self.hasMessage) {
    [output writeString:2 value:self.message];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSenderUuid) {
    size_ += computeStringSize(1, self.senderUuid);
  }
  if (self.hasMessage) {
    size_ += computeStringSize(2, self.message);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SendAdminMessageResponseProto*) parseFromData:(NSData*) data {
  return (SendAdminMessageResponseProto*)[[[SendAdminMessageResponseProto builder] mergeFromData:data] build];
}
+ (SendAdminMessageResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendAdminMessageResponseProto*)[[[SendAdminMessageResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SendAdminMessageResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (SendAdminMessageResponseProto*)[[[SendAdminMessageResponseProto builder] mergeFromInputStream:input] build];
}
+ (SendAdminMessageResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendAdminMessageResponseProto*)[[[SendAdminMessageResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendAdminMessageResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SendAdminMessageResponseProto*)[[[SendAdminMessageResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (SendAdminMessageResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendAdminMessageResponseProto*)[[[SendAdminMessageResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendAdminMessageResponseProto_Builder*) builder {
  return [[SendAdminMessageResponseProto_Builder alloc] init];
}
+ (SendAdminMessageResponseProto_Builder*) builderWithPrototype:(SendAdminMessageResponseProto*) prototype {
  return [[SendAdminMessageResponseProto builder] mergeFrom:prototype];
}
- (SendAdminMessageResponseProto_Builder*) builder {
  return [SendAdminMessageResponseProto builder];
}
- (SendAdminMessageResponseProto_Builder*) toBuilder {
  return [SendAdminMessageResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSenderUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderUuid", self.senderUuid];
  }
  if (self.hasMessage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"message", self.message];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SendAdminMessageResponseProto class]]) {
    return NO;
  }
  SendAdminMessageResponseProto *otherMessage = other;
  return
      self.hasSenderUuid == otherMessage.hasSenderUuid &&
      (!self.hasSenderUuid || [self.senderUuid isEqual:otherMessage.senderUuid]) &&
      self.hasMessage == otherMessage.hasMessage &&
      (!self.hasMessage || [self.message isEqual:otherMessage.message]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSenderUuid) {
    hashCode = hashCode * 31 + [self.senderUuid hash];
  }
  if (self.hasMessage) {
    hashCode = hashCode * 31 + [self.message hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SendAdminMessageResponseProto_Builder()
@property (strong) SendAdminMessageResponseProto* result;
@end

@implementation SendAdminMessageResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[SendAdminMessageResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SendAdminMessageResponseProto_Builder*) clear {
  self.result = [[SendAdminMessageResponseProto alloc] init];
  return self;
}
- (SendAdminMessageResponseProto_Builder*) clone {
  return [SendAdminMessageResponseProto builderWithPrototype:result];
}
- (SendAdminMessageResponseProto*) defaultInstance {
  return [SendAdminMessageResponseProto defaultInstance];
}
- (SendAdminMessageResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SendAdminMessageResponseProto*) buildPartial {
  SendAdminMessageResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (SendAdminMessageResponseProto_Builder*) mergeFrom:(SendAdminMessageResponseProto*) other {
  if (other == [SendAdminMessageResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSenderUuid) {
    [self setSenderUuid:other.senderUuid];
  }
  if (other.hasMessage) {
    [self setMessage:other.message];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SendAdminMessageResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SendAdminMessageResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSenderUuid:[input readString]];
        break;
      }
      case 18: {
        [self setMessage:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSenderUuid {
  return result.hasSenderUuid;
}
- (NSString*) senderUuid {
  return result.senderUuid;
}
- (SendAdminMessageResponseProto_Builder*) setSenderUuid:(NSString*) value {
  result.hasSenderUuid = YES;
  result.senderUuid = value;
  return self;
}
- (SendAdminMessageResponseProto_Builder*) clearSenderUuid {
  result.hasSenderUuid = NO;
  result.senderUuid = @"";
  return self;
}
- (BOOL) hasMessage {
  return result.hasMessage;
}
- (NSString*) message {
  return result.message;
}
- (SendAdminMessageResponseProto_Builder*) setMessage:(NSString*) value {
  result.hasMessage = YES;
  result.message = value;
  return self;
}
- (SendAdminMessageResponseProto_Builder*) clearMessage {
  result.hasMessage = NO;
  result.message = @"";
  return self;
}
@end

@interface GeneralNotificationResponseProto ()
@property (strong) NSString* title;
@property (strong) NSString* subtitle;
@property (strong) ColorProto* rgb;
@end

@implementation GeneralNotificationResponseProto

- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) value_ {
  hasTitle_ = !!value_;
}
@synthesize title;
- (BOOL) hasSubtitle {
  return !!hasSubtitle_;
}
- (void) setHasSubtitle:(BOOL) value_ {
  hasSubtitle_ = !!value_;
}
@synthesize subtitle;
- (BOOL) hasRgb {
  return !!hasRgb_;
}
- (void) setHasRgb:(BOOL) value_ {
  hasRgb_ = !!value_;
}
@synthesize rgb;
- (id) init {
  if ((self = [super init])) {
    self.title = @"";
    self.subtitle = @"";
    self.rgb = [ColorProto defaultInstance];
  }
  return self;
}
static GeneralNotificationResponseProto* defaultGeneralNotificationResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [GeneralNotificationResponseProto class]) {
    defaultGeneralNotificationResponseProtoInstance = [[GeneralNotificationResponseProto alloc] init];
  }
}
+ (GeneralNotificationResponseProto*) defaultInstance {
  return defaultGeneralNotificationResponseProtoInstance;
}
- (GeneralNotificationResponseProto*) defaultInstance {
  return defaultGeneralNotificationResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTitle) {
    [output writeString:1 value:self.title];
  }
  if (self.hasSubtitle) {
    [output writeString:2 value:self.subtitle];
  }
  if (self.hasRgb) {
    [output writeMessage:3 value:self.rgb];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTitle) {
    size_ += computeStringSize(1, self.title);
  }
  if (self.hasSubtitle) {
    size_ += computeStringSize(2, self.subtitle);
  }
  if (self.hasRgb) {
    size_ += computeMessageSize(3, self.rgb);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GeneralNotificationResponseProto*) parseFromData:(NSData*) data {
  return (GeneralNotificationResponseProto*)[[[GeneralNotificationResponseProto builder] mergeFromData:data] build];
}
+ (GeneralNotificationResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GeneralNotificationResponseProto*)[[[GeneralNotificationResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GeneralNotificationResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (GeneralNotificationResponseProto*)[[[GeneralNotificationResponseProto builder] mergeFromInputStream:input] build];
}
+ (GeneralNotificationResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GeneralNotificationResponseProto*)[[[GeneralNotificationResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GeneralNotificationResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GeneralNotificationResponseProto*)[[[GeneralNotificationResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (GeneralNotificationResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GeneralNotificationResponseProto*)[[[GeneralNotificationResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GeneralNotificationResponseProto_Builder*) builder {
  return [[GeneralNotificationResponseProto_Builder alloc] init];
}
+ (GeneralNotificationResponseProto_Builder*) builderWithPrototype:(GeneralNotificationResponseProto*) prototype {
  return [[GeneralNotificationResponseProto builder] mergeFrom:prototype];
}
- (GeneralNotificationResponseProto_Builder*) builder {
  return [GeneralNotificationResponseProto builder];
}
- (GeneralNotificationResponseProto_Builder*) toBuilder {
  return [GeneralNotificationResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasSubtitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"subtitle", self.subtitle];
  }
  if (self.hasRgb) {
    [output appendFormat:@"%@%@ {\n", indent, @"rgb"];
    [self.rgb writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GeneralNotificationResponseProto class]]) {
    return NO;
  }
  GeneralNotificationResponseProto *otherMessage = other;
  return
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasSubtitle == otherMessage.hasSubtitle &&
      (!self.hasSubtitle || [self.subtitle isEqual:otherMessage.subtitle]) &&
      self.hasRgb == otherMessage.hasRgb &&
      (!self.hasRgb || [self.rgb isEqual:otherMessage.rgb]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasSubtitle) {
    hashCode = hashCode * 31 + [self.subtitle hash];
  }
  if (self.hasRgb) {
    hashCode = hashCode * 31 + [self.rgb hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GeneralNotificationResponseProto_Builder()
@property (strong) GeneralNotificationResponseProto* result;
@end

@implementation GeneralNotificationResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[GeneralNotificationResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GeneralNotificationResponseProto_Builder*) clear {
  self.result = [[GeneralNotificationResponseProto alloc] init];
  return self;
}
- (GeneralNotificationResponseProto_Builder*) clone {
  return [GeneralNotificationResponseProto builderWithPrototype:result];
}
- (GeneralNotificationResponseProto*) defaultInstance {
  return [GeneralNotificationResponseProto defaultInstance];
}
- (GeneralNotificationResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GeneralNotificationResponseProto*) buildPartial {
  GeneralNotificationResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (GeneralNotificationResponseProto_Builder*) mergeFrom:(GeneralNotificationResponseProto*) other {
  if (other == [GeneralNotificationResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasSubtitle) {
    [self setSubtitle:other.subtitle];
  }
  if (other.hasRgb) {
    [self mergeRgb:other.rgb];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GeneralNotificationResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GeneralNotificationResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setTitle:[input readString]];
        break;
      }
      case 18: {
        [self setSubtitle:[input readString]];
        break;
      }
      case 26: {
        ColorProto_Builder* subBuilder = [ColorProto builder];
        if (self.hasRgb) {
          [subBuilder mergeFrom:self.rgb];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRgb:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasTitle {
  return result.hasTitle;
}
- (NSString*) title {
  return result.title;
}
- (GeneralNotificationResponseProto_Builder*) setTitle:(NSString*) value {
  result.hasTitle = YES;
  result.title = value;
  return self;
}
- (GeneralNotificationResponseProto_Builder*) clearTitle {
  result.hasTitle = NO;
  result.title = @"";
  return self;
}
- (BOOL) hasSubtitle {
  return result.hasSubtitle;
}
- (NSString*) subtitle {
  return result.subtitle;
}
- (GeneralNotificationResponseProto_Builder*) setSubtitle:(NSString*) value {
  result.hasSubtitle = YES;
  result.subtitle = value;
  return self;
}
- (GeneralNotificationResponseProto_Builder*) clearSubtitle {
  result.hasSubtitle = NO;
  result.subtitle = @"";
  return self;
}
- (BOOL) hasRgb {
  return result.hasRgb;
}
- (ColorProto*) rgb {
  return result.rgb;
}
- (GeneralNotificationResponseProto_Builder*) setRgb:(ColorProto*) value {
  result.hasRgb = YES;
  result.rgb = value;
  return self;
}
- (GeneralNotificationResponseProto_Builder*) setRgb_Builder:(ColorProto_Builder*) builderForValue {
  return [self setRgb:[builderForValue build]];
}
- (GeneralNotificationResponseProto_Builder*) mergeRgb:(ColorProto*) value {
  if (result.hasRgb &&
      result.rgb != [ColorProto defaultInstance]) {
    result.rgb =
      [[[ColorProto builderWithPrototype:result.rgb] mergeFrom:value] buildPartial];
  } else {
    result.rgb = value;
  }
  result.hasRgb = YES;
  return self;
}
- (GeneralNotificationResponseProto_Builder*) clearRgb {
  result.hasRgb = NO;
  result.rgb = [ColorProto defaultInstance];
  return self;
}
@end

@interface SendGroupChatRequestProto ()
@property (strong) MinimumUserProto* sender;
@property GroupChatScope scope;
@property (strong) NSString* chatMessage;
@property int64_t clientTime;
@end

@implementation SendGroupChatRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasScope {
  return !!hasScope_;
}
- (void) setHasScope:(BOOL) value_ {
  hasScope_ = !!value_;
}
@synthesize scope;
- (BOOL) hasChatMessage {
  return !!hasChatMessage_;
}
- (void) setHasChatMessage:(BOOL) value_ {
  hasChatMessage_ = !!value_;
}
@synthesize chatMessage;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value_ {
  hasClientTime_ = !!value_;
}
@synthesize clientTime;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.scope = GroupChatScopeClan;
    self.chatMessage = @"";
    self.clientTime = 0L;
  }
  return self;
}
static SendGroupChatRequestProto* defaultSendGroupChatRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [SendGroupChatRequestProto class]) {
    defaultSendGroupChatRequestProtoInstance = [[SendGroupChatRequestProto alloc] init];
  }
}
+ (SendGroupChatRequestProto*) defaultInstance {
  return defaultSendGroupChatRequestProtoInstance;
}
- (SendGroupChatRequestProto*) defaultInstance {
  return defaultSendGroupChatRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasScope) {
    [output writeEnum:2 value:self.scope];
  }
  if (self.hasChatMessage) {
    [output writeString:3 value:self.chatMessage];
  }
  if (self.hasClientTime) {
    [output writeInt64:4 value:self.clientTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasScope) {
    size_ += computeEnumSize(2, self.scope);
  }
  if (self.hasChatMessage) {
    size_ += computeStringSize(3, self.chatMessage);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(4, self.clientTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SendGroupChatRequestProto*) parseFromData:(NSData*) data {
  return (SendGroupChatRequestProto*)[[[SendGroupChatRequestProto builder] mergeFromData:data] build];
}
+ (SendGroupChatRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendGroupChatRequestProto*)[[[SendGroupChatRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SendGroupChatRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (SendGroupChatRequestProto*)[[[SendGroupChatRequestProto builder] mergeFromInputStream:input] build];
}
+ (SendGroupChatRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendGroupChatRequestProto*)[[[SendGroupChatRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendGroupChatRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SendGroupChatRequestProto*)[[[SendGroupChatRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (SendGroupChatRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendGroupChatRequestProto*)[[[SendGroupChatRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendGroupChatRequestProto_Builder*) builder {
  return [[SendGroupChatRequestProto_Builder alloc] init];
}
+ (SendGroupChatRequestProto_Builder*) builderWithPrototype:(SendGroupChatRequestProto*) prototype {
  return [[SendGroupChatRequestProto builder] mergeFrom:prototype];
}
- (SendGroupChatRequestProto_Builder*) builder {
  return [SendGroupChatRequestProto builder];
}
- (SendGroupChatRequestProto_Builder*) toBuilder {
  return [SendGroupChatRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasScope) {
    [output appendFormat:@"%@%@: %@\n", indent, @"scope", [NSNumber numberWithInteger:self.scope]];
  }
  if (self.hasChatMessage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"chatMessage", self.chatMessage];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SendGroupChatRequestProto class]]) {
    return NO;
  }
  SendGroupChatRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasScope == otherMessage.hasScope &&
      (!self.hasScope || self.scope == otherMessage.scope) &&
      self.hasChatMessage == otherMessage.hasChatMessage &&
      (!self.hasChatMessage || [self.chatMessage isEqual:otherMessage.chatMessage]) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasScope) {
    hashCode = hashCode * 31 + self.scope;
  }
  if (self.hasChatMessage) {
    hashCode = hashCode * 31 + [self.chatMessage hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SendGroupChatRequestProto_Builder()
@property (strong) SendGroupChatRequestProto* result;
@end

@implementation SendGroupChatRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[SendGroupChatRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SendGroupChatRequestProto_Builder*) clear {
  self.result = [[SendGroupChatRequestProto alloc] init];
  return self;
}
- (SendGroupChatRequestProto_Builder*) clone {
  return [SendGroupChatRequestProto builderWithPrototype:result];
}
- (SendGroupChatRequestProto*) defaultInstance {
  return [SendGroupChatRequestProto defaultInstance];
}
- (SendGroupChatRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SendGroupChatRequestProto*) buildPartial {
  SendGroupChatRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (SendGroupChatRequestProto_Builder*) mergeFrom:(SendGroupChatRequestProto*) other {
  if (other == [SendGroupChatRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasScope) {
    [self setScope:other.scope];
  }
  if (other.hasChatMessage) {
    [self setChatMessage:other.chatMessage];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SendGroupChatRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SendGroupChatRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        GroupChatScope value = (GroupChatScope)[input readEnum];
        if (GroupChatScopeIsValidValue(value)) {
          [self setScope:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setChatMessage:[input readString]];
        break;
      }
      case 32: {
        [self setClientTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (SendGroupChatRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SendGroupChatRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SendGroupChatRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SendGroupChatRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasScope {
  return result.hasScope;
}
- (GroupChatScope) scope {
  return result.scope;
}
- (SendGroupChatRequestProto_Builder*) setScope:(GroupChatScope) value {
  result.hasScope = YES;
  result.scope = value;
  return self;
}
- (SendGroupChatRequestProto_Builder*) clearScopeList {
  result.hasScope = NO;
  result.scope = GroupChatScopeClan;
  return self;
}
- (BOOL) hasChatMessage {
  return result.hasChatMessage;
}
- (NSString*) chatMessage {
  return result.chatMessage;
}
- (SendGroupChatRequestProto_Builder*) setChatMessage:(NSString*) value {
  result.hasChatMessage = YES;
  result.chatMessage = value;
  return self;
}
- (SendGroupChatRequestProto_Builder*) clearChatMessage {
  result.hasChatMessage = NO;
  result.chatMessage = @"";
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (SendGroupChatRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (SendGroupChatRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
@end

@interface SendGroupChatResponseProto ()
@property (strong) MinimumUserProto* sender;
@property SendGroupChatResponseProto_SendGroupChatStatus status;
@end

@implementation SendGroupChatResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = SendGroupChatResponseProto_SendGroupChatStatusSuccess;
  }
  return self;
}
static SendGroupChatResponseProto* defaultSendGroupChatResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [SendGroupChatResponseProto class]) {
    defaultSendGroupChatResponseProtoInstance = [[SendGroupChatResponseProto alloc] init];
  }
}
+ (SendGroupChatResponseProto*) defaultInstance {
  return defaultSendGroupChatResponseProtoInstance;
}
- (SendGroupChatResponseProto*) defaultInstance {
  return defaultSendGroupChatResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SendGroupChatResponseProto*) parseFromData:(NSData*) data {
  return (SendGroupChatResponseProto*)[[[SendGroupChatResponseProto builder] mergeFromData:data] build];
}
+ (SendGroupChatResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendGroupChatResponseProto*)[[[SendGroupChatResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SendGroupChatResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (SendGroupChatResponseProto*)[[[SendGroupChatResponseProto builder] mergeFromInputStream:input] build];
}
+ (SendGroupChatResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendGroupChatResponseProto*)[[[SendGroupChatResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendGroupChatResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SendGroupChatResponseProto*)[[[SendGroupChatResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (SendGroupChatResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendGroupChatResponseProto*)[[[SendGroupChatResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendGroupChatResponseProto_Builder*) builder {
  return [[SendGroupChatResponseProto_Builder alloc] init];
}
+ (SendGroupChatResponseProto_Builder*) builderWithPrototype:(SendGroupChatResponseProto*) prototype {
  return [[SendGroupChatResponseProto builder] mergeFrom:prototype];
}
- (SendGroupChatResponseProto_Builder*) builder {
  return [SendGroupChatResponseProto builder];
}
- (SendGroupChatResponseProto_Builder*) toBuilder {
  return [SendGroupChatResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SendGroupChatResponseProto class]]) {
    return NO;
  }
  SendGroupChatResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL SendGroupChatResponseProto_SendGroupChatStatusIsValidValue(SendGroupChatResponseProto_SendGroupChatStatus value) {
  switch (value) {
    case SendGroupChatResponseProto_SendGroupChatStatusSuccess:
    case SendGroupChatResponseProto_SendGroupChatStatusTooLong:
    case SendGroupChatResponseProto_SendGroupChatStatusOtherFail:
    case SendGroupChatResponseProto_SendGroupChatStatusBanned:
      return YES;
    default:
      return NO;
  }
}
@interface SendGroupChatResponseProto_Builder()
@property (strong) SendGroupChatResponseProto* result;
@end

@implementation SendGroupChatResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[SendGroupChatResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SendGroupChatResponseProto_Builder*) clear {
  self.result = [[SendGroupChatResponseProto alloc] init];
  return self;
}
- (SendGroupChatResponseProto_Builder*) clone {
  return [SendGroupChatResponseProto builderWithPrototype:result];
}
- (SendGroupChatResponseProto*) defaultInstance {
  return [SendGroupChatResponseProto defaultInstance];
}
- (SendGroupChatResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SendGroupChatResponseProto*) buildPartial {
  SendGroupChatResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (SendGroupChatResponseProto_Builder*) mergeFrom:(SendGroupChatResponseProto*) other {
  if (other == [SendGroupChatResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SendGroupChatResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SendGroupChatResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        SendGroupChatResponseProto_SendGroupChatStatus value = (SendGroupChatResponseProto_SendGroupChatStatus)[input readEnum];
        if (SendGroupChatResponseProto_SendGroupChatStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (SendGroupChatResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SendGroupChatResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SendGroupChatResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SendGroupChatResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (SendGroupChatResponseProto_SendGroupChatStatus) status {
  return result.status;
}
- (SendGroupChatResponseProto_Builder*) setStatus:(SendGroupChatResponseProto_SendGroupChatStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (SendGroupChatResponseProto_Builder*) clearStatusList {
  result.hasStatus = NO;
  result.status = SendGroupChatResponseProto_SendGroupChatStatusSuccess;
  return self;
}
@end

@interface ReceivedGroupChatResponseProto ()
@property (strong) MinimumUserProtoWithLevel* sender;
@property (strong) NSString* chatMessage;
@property GroupChatScope scope;
@property BOOL isAdmin;
@end

@implementation ReceivedGroupChatResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasChatMessage {
  return !!hasChatMessage_;
}
- (void) setHasChatMessage:(BOOL) value_ {
  hasChatMessage_ = !!value_;
}
@synthesize chatMessage;
- (BOOL) hasScope {
  return !!hasScope_;
}
- (void) setHasScope:(BOOL) value_ {
  hasScope_ = !!value_;
}
@synthesize scope;
- (BOOL) hasIsAdmin {
  return !!hasIsAdmin_;
}
- (void) setHasIsAdmin:(BOOL) value_ {
  hasIsAdmin_ = !!value_;
}
- (BOOL) isAdmin {
  return !!isAdmin_;
}
- (void) setIsAdmin:(BOOL) value_ {
  isAdmin_ = !!value_;
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithLevel defaultInstance];
    self.chatMessage = @"";
    self.scope = GroupChatScopeClan;
    self.isAdmin = NO;
  }
  return self;
}
static ReceivedGroupChatResponseProto* defaultReceivedGroupChatResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [ReceivedGroupChatResponseProto class]) {
    defaultReceivedGroupChatResponseProtoInstance = [[ReceivedGroupChatResponseProto alloc] init];
  }
}
+ (ReceivedGroupChatResponseProto*) defaultInstance {
  return defaultReceivedGroupChatResponseProtoInstance;
}
- (ReceivedGroupChatResponseProto*) defaultInstance {
  return defaultReceivedGroupChatResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasChatMessage) {
    [output writeString:2 value:self.chatMessage];
  }
  if (self.hasScope) {
    [output writeEnum:3 value:self.scope];
  }
  if (self.hasIsAdmin) {
    [output writeBool:4 value:self.isAdmin];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasChatMessage) {
    size_ += computeStringSize(2, self.chatMessage);
  }
  if (self.hasScope) {
    size_ += computeEnumSize(3, self.scope);
  }
  if (self.hasIsAdmin) {
    size_ += computeBoolSize(4, self.isAdmin);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ReceivedGroupChatResponseProto*) parseFromData:(NSData*) data {
  return (ReceivedGroupChatResponseProto*)[[[ReceivedGroupChatResponseProto builder] mergeFromData:data] build];
}
+ (ReceivedGroupChatResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReceivedGroupChatResponseProto*)[[[ReceivedGroupChatResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ReceivedGroupChatResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (ReceivedGroupChatResponseProto*)[[[ReceivedGroupChatResponseProto builder] mergeFromInputStream:input] build];
}
+ (ReceivedGroupChatResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReceivedGroupChatResponseProto*)[[[ReceivedGroupChatResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReceivedGroupChatResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ReceivedGroupChatResponseProto*)[[[ReceivedGroupChatResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (ReceivedGroupChatResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReceivedGroupChatResponseProto*)[[[ReceivedGroupChatResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReceivedGroupChatResponseProto_Builder*) builder {
  return [[ReceivedGroupChatResponseProto_Builder alloc] init];
}
+ (ReceivedGroupChatResponseProto_Builder*) builderWithPrototype:(ReceivedGroupChatResponseProto*) prototype {
  return [[ReceivedGroupChatResponseProto builder] mergeFrom:prototype];
}
- (ReceivedGroupChatResponseProto_Builder*) builder {
  return [ReceivedGroupChatResponseProto builder];
}
- (ReceivedGroupChatResponseProto_Builder*) toBuilder {
  return [ReceivedGroupChatResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasChatMessage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"chatMessage", self.chatMessage];
  }
  if (self.hasScope) {
    [output appendFormat:@"%@%@: %@\n", indent, @"scope", [NSNumber numberWithInteger:self.scope]];
  }
  if (self.hasIsAdmin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isAdmin", [NSNumber numberWithBool:self.isAdmin]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ReceivedGroupChatResponseProto class]]) {
    return NO;
  }
  ReceivedGroupChatResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasChatMessage == otherMessage.hasChatMessage &&
      (!self.hasChatMessage || [self.chatMessage isEqual:otherMessage.chatMessage]) &&
      self.hasScope == otherMessage.hasScope &&
      (!self.hasScope || self.scope == otherMessage.scope) &&
      self.hasIsAdmin == otherMessage.hasIsAdmin &&
      (!self.hasIsAdmin || self.isAdmin == otherMessage.isAdmin) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasChatMessage) {
    hashCode = hashCode * 31 + [self.chatMessage hash];
  }
  if (self.hasScope) {
    hashCode = hashCode * 31 + self.scope;
  }
  if (self.hasIsAdmin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isAdmin] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ReceivedGroupChatResponseProto_Builder()
@property (strong) ReceivedGroupChatResponseProto* result;
@end

@implementation ReceivedGroupChatResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ReceivedGroupChatResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ReceivedGroupChatResponseProto_Builder*) clear {
  self.result = [[ReceivedGroupChatResponseProto alloc] init];
  return self;
}
- (ReceivedGroupChatResponseProto_Builder*) clone {
  return [ReceivedGroupChatResponseProto builderWithPrototype:result];
}
- (ReceivedGroupChatResponseProto*) defaultInstance {
  return [ReceivedGroupChatResponseProto defaultInstance];
}
- (ReceivedGroupChatResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ReceivedGroupChatResponseProto*) buildPartial {
  ReceivedGroupChatResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ReceivedGroupChatResponseProto_Builder*) mergeFrom:(ReceivedGroupChatResponseProto*) other {
  if (other == [ReceivedGroupChatResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasChatMessage) {
    [self setChatMessage:other.chatMessage];
  }
  if (other.hasScope) {
    [self setScope:other.scope];
  }
  if (other.hasIsAdmin) {
    [self setIsAdmin:other.isAdmin];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ReceivedGroupChatResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ReceivedGroupChatResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithLevel_Builder* subBuilder = [MinimumUserProtoWithLevel builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setChatMessage:[input readString]];
        break;
      }
      case 24: {
        GroupChatScope value = (GroupChatScope)[input readEnum];
        if (GroupChatScopeIsValidValue(value)) {
          [self setScope:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        [self setIsAdmin:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithLevel*) sender {
  return result.sender;
}
- (ReceivedGroupChatResponseProto_Builder*) setSender:(MinimumUserProtoWithLevel*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ReceivedGroupChatResponseProto_Builder*) setSender_Builder:(MinimumUserProtoWithLevel_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ReceivedGroupChatResponseProto_Builder*) mergeSender:(MinimumUserProtoWithLevel*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithLevel defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithLevel builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ReceivedGroupChatResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithLevel defaultInstance];
  return self;
}
- (BOOL) hasChatMessage {
  return result.hasChatMessage;
}
- (NSString*) chatMessage {
  return result.chatMessage;
}
- (ReceivedGroupChatResponseProto_Builder*) setChatMessage:(NSString*) value {
  result.hasChatMessage = YES;
  result.chatMessage = value;
  return self;
}
- (ReceivedGroupChatResponseProto_Builder*) clearChatMessage {
  result.hasChatMessage = NO;
  result.chatMessage = @"";
  return self;
}
- (BOOL) hasScope {
  return result.hasScope;
}
- (GroupChatScope) scope {
  return result.scope;
}
- (ReceivedGroupChatResponseProto_Builder*) setScope:(GroupChatScope) value {
  result.hasScope = YES;
  result.scope = value;
  return self;
}
- (ReceivedGroupChatResponseProto_Builder*) clearScopeList {
  result.hasScope = NO;
  result.scope = GroupChatScopeClan;
  return self;
}
- (BOOL) hasIsAdmin {
  return result.hasIsAdmin;
}
- (BOOL) isAdmin {
  return result.isAdmin;
}
- (ReceivedGroupChatResponseProto_Builder*) setIsAdmin:(BOOL) value {
  result.hasIsAdmin = YES;
  result.isAdmin = value;
  return self;
}
- (ReceivedGroupChatResponseProto_Builder*) clearIsAdmin {
  result.hasIsAdmin = NO;
  result.isAdmin = NO;
  return self;
}
@end

@interface PrivateChatPostRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSString* recipientUuid;
@property (strong) NSString* content;
@end

@implementation PrivateChatPostRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasRecipientUuid {
  return !!hasRecipientUuid_;
}
- (void) setHasRecipientUuid:(BOOL) value_ {
  hasRecipientUuid_ = !!value_;
}
@synthesize recipientUuid;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.recipientUuid = @"";
    self.content = @"";
  }
  return self;
}
static PrivateChatPostRequestProto* defaultPrivateChatPostRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [PrivateChatPostRequestProto class]) {
    defaultPrivateChatPostRequestProtoInstance = [[PrivateChatPostRequestProto alloc] init];
  }
}
+ (PrivateChatPostRequestProto*) defaultInstance {
  return defaultPrivateChatPostRequestProtoInstance;
}
- (PrivateChatPostRequestProto*) defaultInstance {
  return defaultPrivateChatPostRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasRecipientUuid) {
    [output writeString:2 value:self.recipientUuid];
  }
  if (self.hasContent) {
    [output writeString:3 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasRecipientUuid) {
    size_ += computeStringSize(2, self.recipientUuid);
  }
  if (self.hasContent) {
    size_ += computeStringSize(3, self.content);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PrivateChatPostRequestProto*) parseFromData:(NSData*) data {
  return (PrivateChatPostRequestProto*)[[[PrivateChatPostRequestProto builder] mergeFromData:data] build];
}
+ (PrivateChatPostRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrivateChatPostRequestProto*)[[[PrivateChatPostRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PrivateChatPostRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (PrivateChatPostRequestProto*)[[[PrivateChatPostRequestProto builder] mergeFromInputStream:input] build];
}
+ (PrivateChatPostRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrivateChatPostRequestProto*)[[[PrivateChatPostRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PrivateChatPostRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PrivateChatPostRequestProto*)[[[PrivateChatPostRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (PrivateChatPostRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrivateChatPostRequestProto*)[[[PrivateChatPostRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PrivateChatPostRequestProto_Builder*) builder {
  return [[PrivateChatPostRequestProto_Builder alloc] init];
}
+ (PrivateChatPostRequestProto_Builder*) builderWithPrototype:(PrivateChatPostRequestProto*) prototype {
  return [[PrivateChatPostRequestProto builder] mergeFrom:prototype];
}
- (PrivateChatPostRequestProto_Builder*) builder {
  return [PrivateChatPostRequestProto builder];
}
- (PrivateChatPostRequestProto_Builder*) toBuilder {
  return [PrivateChatPostRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasRecipientUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"recipientUuid", self.recipientUuid];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PrivateChatPostRequestProto class]]) {
    return NO;
  }
  PrivateChatPostRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasRecipientUuid == otherMessage.hasRecipientUuid &&
      (!self.hasRecipientUuid || [self.recipientUuid isEqual:otherMessage.recipientUuid]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasRecipientUuid) {
    hashCode = hashCode * 31 + [self.recipientUuid hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PrivateChatPostRequestProto_Builder()
@property (strong) PrivateChatPostRequestProto* result;
@end

@implementation PrivateChatPostRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PrivateChatPostRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PrivateChatPostRequestProto_Builder*) clear {
  self.result = [[PrivateChatPostRequestProto alloc] init];
  return self;
}
- (PrivateChatPostRequestProto_Builder*) clone {
  return [PrivateChatPostRequestProto builderWithPrototype:result];
}
- (PrivateChatPostRequestProto*) defaultInstance {
  return [PrivateChatPostRequestProto defaultInstance];
}
- (PrivateChatPostRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PrivateChatPostRequestProto*) buildPartial {
  PrivateChatPostRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PrivateChatPostRequestProto_Builder*) mergeFrom:(PrivateChatPostRequestProto*) other {
  if (other == [PrivateChatPostRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasRecipientUuid) {
    [self setRecipientUuid:other.recipientUuid];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PrivateChatPostRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PrivateChatPostRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setRecipientUuid:[input readString]];
        break;
      }
      case 26: {
        [self setContent:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (PrivateChatPostRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (PrivateChatPostRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (PrivateChatPostRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (PrivateChatPostRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasRecipientUuid {
  return result.hasRecipientUuid;
}
- (NSString*) recipientUuid {
  return result.recipientUuid;
}
- (PrivateChatPostRequestProto_Builder*) setRecipientUuid:(NSString*) value {
  result.hasRecipientUuid = YES;
  result.recipientUuid = value;
  return self;
}
- (PrivateChatPostRequestProto_Builder*) clearRecipientUuid {
  result.hasRecipientUuid = NO;
  result.recipientUuid = @"";
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (PrivateChatPostRequestProto_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (PrivateChatPostRequestProto_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
@end

@interface PrivateChatPostResponseProto ()
@property (strong) MinimumUserProto* sender;
@property PrivateChatPostResponseProto_PrivateChatPostStatus status;
@property (strong) PrivateChatPostProto* post;
@end

@implementation PrivateChatPostResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasPost {
  return !!hasPost_;
}
- (void) setHasPost:(BOOL) value_ {
  hasPost_ = !!value_;
}
@synthesize post;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = PrivateChatPostResponseProto_PrivateChatPostStatusSuccess;
    self.post = [PrivateChatPostProto defaultInstance];
  }
  return self;
}
static PrivateChatPostResponseProto* defaultPrivateChatPostResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [PrivateChatPostResponseProto class]) {
    defaultPrivateChatPostResponseProtoInstance = [[PrivateChatPostResponseProto alloc] init];
  }
}
+ (PrivateChatPostResponseProto*) defaultInstance {
  return defaultPrivateChatPostResponseProtoInstance;
}
- (PrivateChatPostResponseProto*) defaultInstance {
  return defaultPrivateChatPostResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasPost) {
    [output writeMessage:3 value:self.post];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(2, self.status);
  }
  if (self.hasPost) {
    size_ += computeMessageSize(3, self.post);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PrivateChatPostResponseProto*) parseFromData:(NSData*) data {
  return (PrivateChatPostResponseProto*)[[[PrivateChatPostResponseProto builder] mergeFromData:data] build];
}
+ (PrivateChatPostResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrivateChatPostResponseProto*)[[[PrivateChatPostResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PrivateChatPostResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (PrivateChatPostResponseProto*)[[[PrivateChatPostResponseProto builder] mergeFromInputStream:input] build];
}
+ (PrivateChatPostResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrivateChatPostResponseProto*)[[[PrivateChatPostResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PrivateChatPostResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PrivateChatPostResponseProto*)[[[PrivateChatPostResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (PrivateChatPostResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PrivateChatPostResponseProto*)[[[PrivateChatPostResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PrivateChatPostResponseProto_Builder*) builder {
  return [[PrivateChatPostResponseProto_Builder alloc] init];
}
+ (PrivateChatPostResponseProto_Builder*) builderWithPrototype:(PrivateChatPostResponseProto*) prototype {
  return [[PrivateChatPostResponseProto builder] mergeFrom:prototype];
}
- (PrivateChatPostResponseProto_Builder*) builder {
  return [PrivateChatPostResponseProto builder];
}
- (PrivateChatPostResponseProto_Builder*) toBuilder {
  return [PrivateChatPostResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasPost) {
    [output appendFormat:@"%@%@ {\n", indent, @"post"];
    [self.post writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PrivateChatPostResponseProto class]]) {
    return NO;
  }
  PrivateChatPostResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasPost == otherMessage.hasPost &&
      (!self.hasPost || [self.post isEqual:otherMessage.post]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasPost) {
    hashCode = hashCode * 31 + [self.post hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL PrivateChatPostResponseProto_PrivateChatPostStatusIsValidValue(PrivateChatPostResponseProto_PrivateChatPostStatus value) {
  switch (value) {
    case PrivateChatPostResponseProto_PrivateChatPostStatusSuccess:
    case PrivateChatPostResponseProto_PrivateChatPostStatusNoContentSent:
    case PrivateChatPostResponseProto_PrivateChatPostStatusPostTooLarge:
    case PrivateChatPostResponseProto_PrivateChatPostStatusOtherFail:
    case PrivateChatPostResponseProto_PrivateChatPostStatusBanned:
      return YES;
    default:
      return NO;
  }
}
@interface PrivateChatPostResponseProto_Builder()
@property (strong) PrivateChatPostResponseProto* result;
@end

@implementation PrivateChatPostResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PrivateChatPostResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PrivateChatPostResponseProto_Builder*) clear {
  self.result = [[PrivateChatPostResponseProto alloc] init];
  return self;
}
- (PrivateChatPostResponseProto_Builder*) clone {
  return [PrivateChatPostResponseProto builderWithPrototype:result];
}
- (PrivateChatPostResponseProto*) defaultInstance {
  return [PrivateChatPostResponseProto defaultInstance];
}
- (PrivateChatPostResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PrivateChatPostResponseProto*) buildPartial {
  PrivateChatPostResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PrivateChatPostResponseProto_Builder*) mergeFrom:(PrivateChatPostResponseProto*) other {
  if (other == [PrivateChatPostResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasPost) {
    [self mergePost:other.post];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PrivateChatPostResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PrivateChatPostResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        PrivateChatPostResponseProto_PrivateChatPostStatus value = (PrivateChatPostResponseProto_PrivateChatPostStatus)[input readEnum];
        if (PrivateChatPostResponseProto_PrivateChatPostStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        PrivateChatPostProto_Builder* subBuilder = [PrivateChatPostProto builder];
        if (self.hasPost) {
          [subBuilder mergeFrom:self.post];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPost:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (PrivateChatPostResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (PrivateChatPostResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (PrivateChatPostResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (PrivateChatPostResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (PrivateChatPostResponseProto_PrivateChatPostStatus) status {
  return result.status;
}
- (PrivateChatPostResponseProto_Builder*) setStatus:(PrivateChatPostResponseProto_PrivateChatPostStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PrivateChatPostResponseProto_Builder*) clearStatusList {
  result.hasStatus = NO;
  result.status = PrivateChatPostResponseProto_PrivateChatPostStatusSuccess;
  return self;
}
- (BOOL) hasPost {
  return result.hasPost;
}
- (PrivateChatPostProto*) post {
  return result.post;
}
- (PrivateChatPostResponseProto_Builder*) setPost:(PrivateChatPostProto*) value {
  result.hasPost = YES;
  result.post = value;
  return self;
}
- (PrivateChatPostResponseProto_Builder*) setPost_Builder:(PrivateChatPostProto_Builder*) builderForValue {
  return [self setPost:[builderForValue build]];
}
- (PrivateChatPostResponseProto_Builder*) mergePost:(PrivateChatPostProto*) value {
  if (result.hasPost &&
      result.post != [PrivateChatPostProto defaultInstance]) {
    result.post =
      [[[PrivateChatPostProto builderWithPrototype:result.post] mergeFrom:value] buildPartial];
  } else {
    result.post = value;
  }
  result.hasPost = YES;
  return self;
}
- (PrivateChatPostResponseProto_Builder*) clearPost {
  result.hasPost = NO;
  result.post = [PrivateChatPostProto defaultInstance];
  return self;
}
@end

@interface RetrievePrivateChatPostsRequestProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSString* otherUserUuid;
@property int32_t beforePrivateChatId;
@end

@implementation RetrievePrivateChatPostsRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
- (BOOL) hasOtherUserUuid {
  return !!hasOtherUserUuid_;
}
- (void) setHasOtherUserUuid:(BOOL) value_ {
  hasOtherUserUuid_ = !!value_;
}
@synthesize otherUserUuid;
- (BOOL) hasBeforePrivateChatId {
  return !!hasBeforePrivateChatId_;
}
- (void) setHasBeforePrivateChatId:(BOOL) value_ {
  hasBeforePrivateChatId_ = !!value_;
}
@synthesize beforePrivateChatId;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.otherUserUuid = @"";
    self.beforePrivateChatId = 0;
  }
  return self;
}
static RetrievePrivateChatPostsRequestProto* defaultRetrievePrivateChatPostsRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrievePrivateChatPostsRequestProto class]) {
    defaultRetrievePrivateChatPostsRequestProtoInstance = [[RetrievePrivateChatPostsRequestProto alloc] init];
  }
}
+ (RetrievePrivateChatPostsRequestProto*) defaultInstance {
  return defaultRetrievePrivateChatPostsRequestProtoInstance;
}
- (RetrievePrivateChatPostsRequestProto*) defaultInstance {
  return defaultRetrievePrivateChatPostsRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasOtherUserUuid) {
    [output writeString:2 value:self.otherUserUuid];
  }
  if (self.hasBeforePrivateChatId) {
    [output writeInt32:3 value:self.beforePrivateChatId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  if (self.hasOtherUserUuid) {
    size_ += computeStringSize(2, self.otherUserUuid);
  }
  if (self.hasBeforePrivateChatId) {
    size_ += computeInt32Size(3, self.beforePrivateChatId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RetrievePrivateChatPostsRequestProto*) parseFromData:(NSData*) data {
  return (RetrievePrivateChatPostsRequestProto*)[[[RetrievePrivateChatPostsRequestProto builder] mergeFromData:data] build];
}
+ (RetrievePrivateChatPostsRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrievePrivateChatPostsRequestProto*)[[[RetrievePrivateChatPostsRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrievePrivateChatPostsRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrievePrivateChatPostsRequestProto*)[[[RetrievePrivateChatPostsRequestProto builder] mergeFromInputStream:input] build];
}
+ (RetrievePrivateChatPostsRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrievePrivateChatPostsRequestProto*)[[[RetrievePrivateChatPostsRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrievePrivateChatPostsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrievePrivateChatPostsRequestProto*)[[[RetrievePrivateChatPostsRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrievePrivateChatPostsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrievePrivateChatPostsRequestProto*)[[[RetrievePrivateChatPostsRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrievePrivateChatPostsRequestProto_Builder*) builder {
  return [[RetrievePrivateChatPostsRequestProto_Builder alloc] init];
}
+ (RetrievePrivateChatPostsRequestProto_Builder*) builderWithPrototype:(RetrievePrivateChatPostsRequestProto*) prototype {
  return [[RetrievePrivateChatPostsRequestProto builder] mergeFrom:prototype];
}
- (RetrievePrivateChatPostsRequestProto_Builder*) builder {
  return [RetrievePrivateChatPostsRequestProto builder];
}
- (RetrievePrivateChatPostsRequestProto_Builder*) toBuilder {
  return [RetrievePrivateChatPostsRequestProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasOtherUserUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"otherUserUuid", self.otherUserUuid];
  }
  if (self.hasBeforePrivateChatId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"beforePrivateChatId", [NSNumber numberWithInteger:self.beforePrivateChatId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RetrievePrivateChatPostsRequestProto class]]) {
    return NO;
  }
  RetrievePrivateChatPostsRequestProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      self.hasOtherUserUuid == otherMessage.hasOtherUserUuid &&
      (!self.hasOtherUserUuid || [self.otherUserUuid isEqual:otherMessage.otherUserUuid]) &&
      self.hasBeforePrivateChatId == otherMessage.hasBeforePrivateChatId &&
      (!self.hasBeforePrivateChatId || self.beforePrivateChatId == otherMessage.beforePrivateChatId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  if (self.hasOtherUserUuid) {
    hashCode = hashCode * 31 + [self.otherUserUuid hash];
  }
  if (self.hasBeforePrivateChatId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.beforePrivateChatId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RetrievePrivateChatPostsRequestProto_Builder()
@property (strong) RetrievePrivateChatPostsRequestProto* result;
@end

@implementation RetrievePrivateChatPostsRequestProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RetrievePrivateChatPostsRequestProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrievePrivateChatPostsRequestProto_Builder*) clear {
  self.result = [[RetrievePrivateChatPostsRequestProto alloc] init];
  return self;
}
- (RetrievePrivateChatPostsRequestProto_Builder*) clone {
  return [RetrievePrivateChatPostsRequestProto builderWithPrototype:result];
}
- (RetrievePrivateChatPostsRequestProto*) defaultInstance {
  return [RetrievePrivateChatPostsRequestProto defaultInstance];
}
- (RetrievePrivateChatPostsRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrievePrivateChatPostsRequestProto*) buildPartial {
  RetrievePrivateChatPostsRequestProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RetrievePrivateChatPostsRequestProto_Builder*) mergeFrom:(RetrievePrivateChatPostsRequestProto*) other {
  if (other == [RetrievePrivateChatPostsRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasOtherUserUuid) {
    [self setOtherUserUuid:other.otherUserUuid];
  }
  if (other.hasBeforePrivateChatId) {
    [self setBeforePrivateChatId:other.beforePrivateChatId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrievePrivateChatPostsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrievePrivateChatPostsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setOtherUserUuid:[input readString]];
        break;
      }
      case 24: {
        [self setBeforePrivateChatId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RetrievePrivateChatPostsRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetrievePrivateChatPostsRequestProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetrievePrivateChatPostsRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetrievePrivateChatPostsRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasOtherUserUuid {
  return result.hasOtherUserUuid;
}
- (NSString*) otherUserUuid {
  return result.otherUserUuid;
}
- (RetrievePrivateChatPostsRequestProto_Builder*) setOtherUserUuid:(NSString*) value {
  result.hasOtherUserUuid = YES;
  result.otherUserUuid = value;
  return self;
}
- (RetrievePrivateChatPostsRequestProto_Builder*) clearOtherUserUuid {
  result.hasOtherUserUuid = NO;
  result.otherUserUuid = @"";
  return self;
}
- (BOOL) hasBeforePrivateChatId {
  return result.hasBeforePrivateChatId;
}
- (int32_t) beforePrivateChatId {
  return result.beforePrivateChatId;
}
- (RetrievePrivateChatPostsRequestProto_Builder*) setBeforePrivateChatId:(int32_t) value {
  result.hasBeforePrivateChatId = YES;
  result.beforePrivateChatId = value;
  return self;
}
- (RetrievePrivateChatPostsRequestProto_Builder*) clearBeforePrivateChatId {
  result.hasBeforePrivateChatId = NO;
  result.beforePrivateChatId = 0;
  return self;
}
@end

@interface RetrievePrivateChatPostsResponseProto ()
@property (strong) MinimumUserProto* sender;
@property (strong) NSMutableArray * mutablePostsList;
@property int32_t beforePrivateChatId;
@property RetrievePrivateChatPostsResponseProto_RetrievePrivateChatPostsStatus status;
@property (strong) NSString* otherUserUuid;
@end

@implementation RetrievePrivateChatPostsResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value_ {
  hasSender_ = !!value_;
}
@synthesize sender;
@synthesize mutablePostsList;
@dynamic postsList;
- (BOOL) hasBeforePrivateChatId {
  return !!hasBeforePrivateChatId_;
}
- (void) setHasBeforePrivateChatId:(BOOL) value_ {
  hasBeforePrivateChatId_ = !!value_;
}
@synthesize beforePrivateChatId;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasOtherUserUuid {
  return !!hasOtherUserUuid_;
}
- (void) setHasOtherUserUuid:(BOOL) value_ {
  hasOtherUserUuid_ = !!value_;
}
@synthesize otherUserUuid;
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.beforePrivateChatId = 0;
    self.status = RetrievePrivateChatPostsResponseProto_RetrievePrivateChatPostsStatusSuccess;
    self.otherUserUuid = @"";
  }
  return self;
}
static RetrievePrivateChatPostsResponseProto* defaultRetrievePrivateChatPostsResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrievePrivateChatPostsResponseProto class]) {
    defaultRetrievePrivateChatPostsResponseProtoInstance = [[RetrievePrivateChatPostsResponseProto alloc] init];
  }
}
+ (RetrievePrivateChatPostsResponseProto*) defaultInstance {
  return defaultRetrievePrivateChatPostsResponseProtoInstance;
}
- (RetrievePrivateChatPostsResponseProto*) defaultInstance {
  return defaultRetrievePrivateChatPostsResponseProtoInstance;
}
- (NSArray *)postsList {
  return mutablePostsList;
}
- (GroupChatMessageProto*)postsAtIndex:(NSUInteger)index {
  return [mutablePostsList objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.postsList enumerateObjectsUsingBlock:^(GroupChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasBeforePrivateChatId) {
    [output writeInt32:3 value:self.beforePrivateChatId];
  }
  if (self.hasStatus) {
    [output writeEnum:4 value:self.status];
  }
  if (self.hasOtherUserUuid) {
    [output writeString:5 value:self.otherUserUuid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSender) {
    size_ += computeMessageSize(1, self.sender);
  }
  [self.postsList enumerateObjectsUsingBlock:^(GroupChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasBeforePrivateChatId) {
    size_ += computeInt32Size(3, self.beforePrivateChatId);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(4, self.status);
  }
  if (self.hasOtherUserUuid) {
    size_ += computeStringSize(5, self.otherUserUuid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RetrievePrivateChatPostsResponseProto*) parseFromData:(NSData*) data {
  return (RetrievePrivateChatPostsResponseProto*)[[[RetrievePrivateChatPostsResponseProto builder] mergeFromData:data] build];
}
+ (RetrievePrivateChatPostsResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrievePrivateChatPostsResponseProto*)[[[RetrievePrivateChatPostsResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrievePrivateChatPostsResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrievePrivateChatPostsResponseProto*)[[[RetrievePrivateChatPostsResponseProto builder] mergeFromInputStream:input] build];
}
+ (RetrievePrivateChatPostsResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrievePrivateChatPostsResponseProto*)[[[RetrievePrivateChatPostsResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrievePrivateChatPostsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrievePrivateChatPostsResponseProto*)[[[RetrievePrivateChatPostsResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrievePrivateChatPostsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrievePrivateChatPostsResponseProto*)[[[RetrievePrivateChatPostsResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrievePrivateChatPostsResponseProto_Builder*) builder {
  return [[RetrievePrivateChatPostsResponseProto_Builder alloc] init];
}
+ (RetrievePrivateChatPostsResponseProto_Builder*) builderWithPrototype:(RetrievePrivateChatPostsResponseProto*) prototype {
  return [[RetrievePrivateChatPostsResponseProto builder] mergeFrom:prototype];
}
- (RetrievePrivateChatPostsResponseProto_Builder*) builder {
  return [RetrievePrivateChatPostsResponseProto builder];
}
- (RetrievePrivateChatPostsResponseProto_Builder*) toBuilder {
  return [RetrievePrivateChatPostsResponseProto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSender) {
    [output appendFormat:@"%@%@ {\n", indent, @"sender"];
    [self.sender writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.postsList enumerateObjectsUsingBlock:^(GroupChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"posts"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasBeforePrivateChatId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"beforePrivateChatId", [NSNumber numberWithInteger:self.beforePrivateChatId]];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasOtherUserUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"otherUserUuid", self.otherUserUuid];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RetrievePrivateChatPostsResponseProto class]]) {
    return NO;
  }
  RetrievePrivateChatPostsResponseProto *otherMessage = other;
  return
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || [self.sender isEqual:otherMessage.sender]) &&
      [self.postsList isEqualToArray:otherMessage.postsList] &&
      self.hasBeforePrivateChatId == otherMessage.hasBeforePrivateChatId &&
      (!self.hasBeforePrivateChatId || self.beforePrivateChatId == otherMessage.beforePrivateChatId) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasOtherUserUuid == otherMessage.hasOtherUserUuid &&
      (!self.hasOtherUserUuid || [self.otherUserUuid isEqual:otherMessage.otherUserUuid]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSender) {
    hashCode = hashCode * 31 + [self.sender hash];
  }
  [self.postsList enumerateObjectsUsingBlock:^(GroupChatMessageProto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasBeforePrivateChatId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.beforePrivateChatId] hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasOtherUserUuid) {
    hashCode = hashCode * 31 + [self.otherUserUuid hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL RetrievePrivateChatPostsResponseProto_RetrievePrivateChatPostsStatusIsValidValue(RetrievePrivateChatPostsResponseProto_RetrievePrivateChatPostsStatus value) {
  switch (value) {
    case RetrievePrivateChatPostsResponseProto_RetrievePrivateChatPostsStatusSuccess:
    case RetrievePrivateChatPostsResponseProto_RetrievePrivateChatPostsStatusFail:
      return YES;
    default:
      return NO;
  }
}
@interface RetrievePrivateChatPostsResponseProto_Builder()
@property (strong) RetrievePrivateChatPostsResponseProto* result;
@end

@implementation RetrievePrivateChatPostsResponseProto_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RetrievePrivateChatPostsResponseProto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrievePrivateChatPostsResponseProto_Builder*) clear {
  self.result = [[RetrievePrivateChatPostsResponseProto alloc] init];
  return self;
}
- (RetrievePrivateChatPostsResponseProto_Builder*) clone {
  return [RetrievePrivateChatPostsResponseProto builderWithPrototype:result];
}
- (RetrievePrivateChatPostsResponseProto*) defaultInstance {
  return [RetrievePrivateChatPostsResponseProto defaultInstance];
}
- (RetrievePrivateChatPostsResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrievePrivateChatPostsResponseProto*) buildPartial {
  RetrievePrivateChatPostsResponseProto* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RetrievePrivateChatPostsResponseProto_Builder*) mergeFrom:(RetrievePrivateChatPostsResponseProto*) other {
  if (other == [RetrievePrivateChatPostsResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutablePostsList.count > 0) {
    if (result.mutablePostsList == nil) {
      result.mutablePostsList = [[NSMutableArray alloc] initWithArray:other.mutablePostsList];
    } else {
      [result.mutablePostsList addObjectsFromArray:other.mutablePostsList];
    }
  }
  if (other.hasBeforePrivateChatId) {
    [self setBeforePrivateChatId:other.beforePrivateChatId];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasOtherUserUuid) {
    [self setOtherUserUuid:other.otherUserUuid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrievePrivateChatPostsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrievePrivateChatPostsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        GroupChatMessageProto_Builder* subBuilder = [GroupChatMessageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPosts:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setBeforePrivateChatId:[input readInt32]];
        break;
      }
      case 32: {
        RetrievePrivateChatPostsResponseProto_RetrievePrivateChatPostsStatus value = (RetrievePrivateChatPostsResponseProto_RetrievePrivateChatPostsStatus)[input readEnum];
        if (RetrievePrivateChatPostsResponseProto_RetrievePrivateChatPostsStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 42: {
        [self setOtherUserUuid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RetrievePrivateChatPostsResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetrievePrivateChatPostsResponseProto_Builder*) setSender_Builder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetrievePrivateChatPostsResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetrievePrivateChatPostsResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSMutableArray *)postsList {
  return result.mutablePostsList;
}
- (GroupChatMessageProto*)postsAtIndex:(NSUInteger)index {
  return [result postsAtIndex:index];
}
- (RetrievePrivateChatPostsResponseProto_Builder *)addPosts:(GroupChatMessageProto*)value {
  if (result.mutablePostsList == nil) {
    result.mutablePostsList = [[NSMutableArray alloc]init];
  }
  [result.mutablePostsList addObject:value];
  return self;
}
- (RetrievePrivateChatPostsResponseProto_Builder *)addAllPosts:(NSArray *)array {
  if (result.mutablePostsList == nil) {
    result.mutablePostsList = [NSMutableArray array];
  }
  [result.mutablePostsList addObjectsFromArray:array];
  return self;
}
- (RetrievePrivateChatPostsResponseProto_Builder *)clearPosts {
  result.mutablePostsList = nil;
  return self;
}
- (BOOL) hasBeforePrivateChatId {
  return result.hasBeforePrivateChatId;
}
- (int32_t) beforePrivateChatId {
  return result.beforePrivateChatId;
}
- (RetrievePrivateChatPostsResponseProto_Builder*) setBeforePrivateChatId:(int32_t) value {
  result.hasBeforePrivateChatId = YES;
  result.beforePrivateChatId = value;
  return self;
}
- (RetrievePrivateChatPostsResponseProto_Builder*) clearBeforePrivateChatId {
  result.hasBeforePrivateChatId = NO;
  result.beforePrivateChatId = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RetrievePrivateChatPostsResponseProto_RetrievePrivateChatPostsStatus) status {
  return result.status;
}
- (RetrievePrivateChatPostsResponseProto_Builder*) setStatus:(RetrievePrivateChatPostsResponseProto_RetrievePrivateChatPostsStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RetrievePrivateChatPostsResponseProto_Builder*) clearStatusList {
  result.hasStatus = NO;
  result.status = RetrievePrivateChatPostsResponseProto_RetrievePrivateChatPostsStatusSuccess;
  return self;
}
- (BOOL) hasOtherUserUuid {
  return result.hasOtherUserUuid;
}
- (NSString*) otherUserUuid {
  return result.otherUserUuid;
}
- (RetrievePrivateChatPostsResponseProto_Builder*) setOtherUserUuid:(NSString*) value {
  result.hasOtherUserUuid = YES;
  result.otherUserUuid = value;
  return self;
}
- (RetrievePrivateChatPostsResponseProto_Builder*) clearOtherUserUuid {
  result.hasOtherUserUuid = NO;
  result.otherUserUuid = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
